{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { Browser, EventHandler, createElement, isBlazor } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, isUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { remove, closest, select } from '@syncfusion/ej2-base';\nimport { Query } from '@syncfusion/ej2-data';\nimport { setCssInGridPopUp, getPosition, isGroupAdaptive, addRemoveActiveClasses, removeAddCboxClasses } from '../base/util';\nimport { getCellsByTableName, getCellByColAndRowIndex, parentsUntil, gridActionHandler } from '../base/util';\nimport * as events from '../base/constant';\nimport { RenderType } from '../base/enum';\nimport { iterateExtend, setChecked } from '../base/util';\n/**\n * The `Selection` module is used to handle cell and row selection.\n */\n\nvar Selection =\n/** @class */\nfunction () {\n  /**\n   * Constructor for the Grid selection module\n   * @hidden\n   */\n  function Selection(parent, selectionSettings, locator) {\n    //Internal letiables       \n\n    /**\n     * @hidden\n     */\n    this.selectedRowIndexes = [];\n    /**\n     * @hidden\n     */\n\n    this.selectedRowCellIndexes = [];\n    /**\n     * @hidden\n     */\n\n    this.selectedRecords = [];\n    /**\n     * @hidden\n     */\n\n    this.preventFocus = false;\n    /**\n     *  @hidden\n     */\n\n    this.selectedColumnsIndexes = [];\n    this.checkBoxState = false;\n    this.isMultiShiftRequest = false;\n    this.isMultiCtrlRequest = false;\n    this.enableSelectMultiTouch = false;\n    this.clearRowCheck = false;\n    this.selectRowCheck = false;\n    this.selectedRowState = {};\n    this.totalRecordsCount = 0;\n    this.chkAllCollec = [];\n    this.isCheckedOnAdd = false;\n    this.persistSelectedData = [];\n    this.needColumnSelection = false;\n    this.isCancelDeSelect = false;\n    this.isPreventCellSelect = false;\n    this.disableUI = false;\n    this.isPersisted = false;\n    this.cmdKeyPressed = false;\n    this.cellselected = false;\n    this.isMultiSelection = false;\n    this.isAddRowsToSelection = false;\n    this.initialRowSelection = false;\n    /**\n     * @hidden\n     */\n\n    this.autoFillRLselection = true;\n    this.parent = parent;\n    this.selectionSettings = selectionSettings;\n    this.factory = locator.getService('rendererFactory');\n    this.focus = locator.getService('focus');\n    this.addEventListener();\n    this.wireEvents();\n  }\n\n  Selection.prototype.initializeSelection = function () {\n    this.parent.log('selection_key_missing');\n    this.render();\n  };\n  /**\n   * The function used to trigger onActionBegin\n   * @return {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.onActionBegin = function (args, type) {\n    this.parent.trigger(type, this.fDataUpdate(args));\n  };\n\n  Selection.prototype.fDataUpdate = function (args) {\n    if (!this.isMultiSelection && (!isNullOrUndefined(args.cellIndex) || !isNullOrUndefined(args.rowIndex))) {\n      var rowObj = this.getRowObj(isNullOrUndefined(args.rowIndex) ? isNullOrUndefined(args.cellIndex) ? this.currentIndex : args.cellIndex.rowIndex : args.rowIndex);\n      args.foreignKeyData = rowObj.foreignKeyData;\n    }\n\n    return args;\n  };\n  /**\n   * The function used to trigger onActionComplete\n   * @return {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.onActionComplete = function (args, type) {\n    this.parent.trigger(type, this.fDataUpdate(args));\n    this.isMultiSelection = false;\n  };\n  /**\n   * For internal use only - Get the module name.\n   * @private\n   */\n\n\n  Selection.prototype.getModuleName = function () {\n    return 'selection';\n  };\n  /**\n   * To destroy the selection\n   * @return {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.destroy = function () {\n    var gridElement = this.parent.element;\n\n    if (!gridElement || !gridElement.querySelector('.e-gridheader') && !gridElement.querySelector('.e-gridcontent')) {\n      return;\n    }\n\n    this.hidePopUp();\n    this.clearSelection();\n    this.removeEventListener();\n    this.unWireEvents();\n    EventHandler.remove(this.parent.getContent(), 'mousedown', this.mouseDownHandler);\n    EventHandler.remove(this.parent.getHeaderContent(), 'mousedown', this.mouseDownHandler);\n  };\n\n  Selection.prototype.isEditing = function () {\n    return (this.parent.editSettings.mode === 'Normal' || this.parent.editSettings.mode === 'Batch' && this.parent.editModule && this.parent.editModule.formObj && !this.parent.editModule.formObj.validate()) && this.parent.isEdit && !this.parent.isPersistSelection;\n  };\n\n  Selection.prototype.getSelectedMovableRow = function (index) {\n    var gObj = this.parent;\n\n    if (gObj.isFrozenGrid() && this.parent.getContent().querySelector('.e-movablecontent')) {\n      return gObj.getMovableRowByIndex(index);\n    }\n\n    return null;\n  };\n\n  Selection.prototype.getSelectedFrozenRightRow = function (index) {\n    var gObj = this.parent;\n\n    if (gObj.isFrozenGrid() && gObj.getFrozenMode() === 'Left-Right' && gObj.getFrozenRightContent()) {\n      return gObj.getFrozenRightRowByIndex(index);\n    }\n\n    return null;\n  };\n\n  Selection.prototype.getCurrentBatchRecordChanges = function () {\n    var gObj = this.parent;\n    var added = 'addedRecords';\n    var deleted = 'deletedRecords';\n\n    if (gObj.editSettings.mode === 'Batch' && gObj.editModule) {\n      var currentRecords = iterateExtend(this.parent.getCurrentViewRecords());\n      currentRecords = gObj.editSettings.newRowPosition === 'Bottom' ? currentRecords.concat(this.parent.editModule.getBatchChanges()[added]) : this.parent.editModule.getBatchChanges()[added].concat(currentRecords);\n      var deletedRecords = this.parent.editModule.getBatchChanges()[deleted];\n      var primaryKey = this.parent.getPrimaryKeyFieldNames()[0];\n\n      for (var i = 0; i < deletedRecords.length; i++) {\n        for (var j = 0; j < currentRecords.length; j++) {\n          if (deletedRecords[i][primaryKey] === currentRecords[j][primaryKey]) {\n            currentRecords.splice(j, 1);\n            break;\n          }\n        }\n      }\n\n      return currentRecords;\n    } else {\n      return gObj.getCurrentViewRecords();\n    }\n  };\n  /**\n   * Selects a row by the given index.\n   * @param  {number} index - Defines the row index.\n   * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n   * @return {void}\n   */\n\n\n  Selection.prototype.selectRow = function (index, isToggle) {\n    if (this.selectedRowIndexes.length && this.selectionSettings.enableSimpleMultiRowSelection) {\n      this.addRowsToSelection([index]);\n      return;\n    }\n\n    var gObj = this.parent;\n    var selectedRow = gObj.getRowByIndex(index);\n    var selectedMovableRow = this.getSelectedMovableRow(index);\n    var selectedFrozenRightRow = this.getSelectedFrozenRightRow(index);\n    var selectData;\n    var isRemoved = false;\n\n    if (gObj.enableVirtualization && index > -1) {\n      this.parent.notify(events.selectVirtualRow, {\n        selectedIndex: index\n      });\n      var frozenData = gObj.isFrozenGrid() ? gObj.contentModule.getRowObjectByIndex(index) : null;\n\n      if (selectedRow && (gObj.getRowObjectFromUID(selectedRow.getAttribute('data-uid')) || frozenData)) {\n        selectData = frozenData ? frozenData : gObj.getRowObjectFromUID(selectedRow.getAttribute('data-uid')).data;\n      } else {\n        var prevSelectedData = this.parent.getSelectedRecords();\n\n        if (prevSelectedData.length > 0) {\n          this.clearRowSelection();\n        }\n\n        return;\n      }\n    } else {\n      selectData = this.getCurrentBatchRecordChanges()[index];\n    }\n\n    if (!this.isRowType() || !selectedRow || this.isEditing()) {\n      // if (this.isEditing()) {\n      //     gObj.selectedRowIndex = index;\n      // }\n      return;\n    }\n\n    var isRowSelected = selectedRow.hasAttribute('aria-selected');\n    this.activeTarget();\n    isToggle = !isToggle ? isToggle : !this.selectedRowIndexes.length ? false : this.selectedRowIndexes.length === 1 ? index === this.selectedRowIndexes[0] : false;\n    var args;\n    var can = 'cancel';\n\n    if (!isToggle) {\n      var isHybrid = 'isHybrid';\n\n      if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n        args = {\n          data: selectData,\n          rowIndex: index,\n          isCtrlPressed: this.isMultiCtrlRequest,\n          isShiftPressed: this.isMultiShiftRequest,\n          row: selectedRow,\n          previousRow: gObj.getRowByIndex(this.prevRowIndex),\n          previousRowIndex: this.prevRowIndex,\n          target: this.actualTarget,\n          cancel: false,\n          isInteracted: this.isInteracted,\n          isHeaderCheckboxClicked: this.isHeaderCheckboxClicked\n        };\n        args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n      } else {\n        args = {\n          data: selectData,\n          rowIndex: index,\n          isCtrlPressed: this.isMultiCtrlRequest,\n          isShiftPressed: this.isMultiShiftRequest,\n          previousRowIndex: this.prevRowIndex,\n          cancel: false,\n          isInteracted: this.isInteracted,\n          isHeaderCheckboxClicked: this.isHeaderCheckboxClicked\n        };\n      }\n\n      this.parent.trigger(events.rowSelecting, this.fDataUpdate(args), this.rowSelectingCallBack(args, isToggle, index, selectData, isRemoved, isRowSelected, can));\n    } else {\n      this.rowSelectingCallBack(args, isToggle, index, selectData, isRemoved, isRowSelected, can)(args);\n    }\n  };\n\n  Selection.prototype.rowSelectingCallBack = function (args, isToggle, index, selectData, isRemoved, isRowSelected, can) {\n    var _this = this;\n\n    return function (args) {\n      if (!isNullOrUndefined(args) && args[can] === true) {\n        _this.disableInteracted();\n\n        return;\n      }\n\n      _this.index = index;\n      _this.toggle = isToggle;\n      _this.data = selectData;\n      _this.removed = isRemoved;\n\n      if (isRowSelected && _this.selectionSettings.persistSelection && !(_this.selectionSettings.checkboxMode === 'ResetOnRowClick')) {\n        _this.clearSelectedRow(index);\n\n        _this.selectRowCallBack();\n      } else if (!isRowSelected && _this.selectionSettings.persistSelection && _this.selectionSettings.checkboxMode !== 'ResetOnRowClick') {\n        _this.selectRowCallBack();\n      }\n\n      if (_this.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n        _this.clearSelection();\n      }\n\n      if (!_this.selectionSettings.persistSelection || _this.selectionSettings.checkboxMode === 'ResetOnRowClick' || !_this.parent.isCheckBoxSelection && _this.selectionSettings.persistSelection) {\n        _this.selectRowCheck = true;\n\n        _this.clearRow();\n      }\n    };\n  };\n\n  Selection.prototype.selectRowCallBack = function () {\n    var gObj = this.parent;\n    var args;\n    var index = this.index;\n    var isToggle = this.toggle;\n    var selectData = this.data;\n    var isRemoved = this.removed;\n    var selectedRow = gObj.getRowByIndex(index);\n    var selectedMovableRow = this.getSelectedMovableRow(index);\n    var selectedFrozenRightRow = this.getSelectedFrozenRightRow(index);\n\n    if (!isToggle && !isRemoved) {\n      if (this.selectedRowIndexes.indexOf(index) <= -1) {\n        this.updateRowSelection(selectedRow, index);\n        this.selectMovableRow(selectedMovableRow, selectedFrozenRightRow, index);\n      }\n\n      this.selectRowIndex(index);\n    }\n\n    if (!isToggle) {\n      var isHybrid = 'isHybrid';\n\n      if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n        args = {\n          data: selectData,\n          rowIndex: index,\n          row: selectedRow,\n          previousRow: gObj.getRowByIndex(this.prevRowIndex),\n          previousRowIndex: this.prevRowIndex,\n          target: this.actualTarget,\n          isInteracted: this.isInteracted,\n          isHeaderCheckBoxClicked: this.isHeaderCheckboxClicked\n        };\n        args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n      } else {\n        args = {\n          data: selectData,\n          rowIndex: index,\n          row: selectedRow,\n          previousRow: gObj.getRowByIndex(this.prevRowIndex),\n          previousRowIndex: this.prevRowIndex,\n          isInteracted: this.isInteracted,\n          isHeaderCheckBoxClicked: this.isHeaderCheckboxClicked\n        };\n      }\n\n      this.onActionComplete(args, events.rowSelected);\n    }\n\n    if (isBlazor() && this.parent.isServerRendered && this.parent.enableVirtualization) {\n      var interopAdaptor = 'interopAdaptor';\n      var invokeMethodAsync = 'invokeMethodAsync';\n      this.parent[interopAdaptor][invokeMethodAsync]('MaintainSelection', true, 'normal', [index]);\n    }\n\n    this.isInteracted = false;\n    this.updateRowProps(index);\n  };\n\n  Selection.prototype.selectMovableRow = function (selectedMovableRow, selectedFrozenRightRow, index) {\n    if (this.parent.isFrozenGrid()) {\n      this.updateRowSelection(selectedMovableRow, index);\n\n      if (this.parent.getFrozenMode() === 'Left-Right' && selectedFrozenRightRow) {\n        this.updateRowSelection(selectedFrozenRightRow, index);\n      }\n    }\n  };\n\n  Selection.prototype.addMovableArgs = function (targetObj, mRow, frRow) {\n    if (this.parent.isFrozenGrid()) {\n      var mObj = {\n        mRow: mRow,\n        previousMovRow: this.parent.getMovableRows()[this.prevRowIndex]\n      };\n      var frozenRightRow = 'frozenRightRow';\n      var previousFrozenRightRow = 'previousFrozenRightRow';\n\n      if (this.parent.getFrozenMode() === 'Left-Right' && frRow) {\n        mObj[frozenRightRow] = frRow;\n        mObj[previousFrozenRightRow] = this.parent.getFrozenRightDataRows()[this.prevRowIndex];\n      }\n\n      targetObj = __assign({}, targetObj, mObj);\n    }\n\n    return targetObj;\n  };\n  /**\n   * Selects a range of rows from start and end row indexes.\n   * @param  {number} startIndex - Specifies the start row index.\n   * @param  {number} endIndex - Specifies the end row index.\n   * @return {void}\n   */\n\n\n  Selection.prototype.selectRowsByRange = function (startIndex, endIndex) {\n    this.selectRows(this.getCollectionFromIndexes(startIndex, endIndex));\n    this.selectRowIndex(endIndex);\n  };\n  /**\n   * Selects a collection of rows by index.\n   * @param  {number[]} rowIndexes - Specifies an array of row indexes.\n   * @return {void}\n   */\n\n\n  Selection.prototype.selectRows = function (rowIndexes) {\n    var _this = this;\n\n    var gObj = this.parent;\n    var rowIndex = !this.isSingleSel() ? rowIndexes[0] : rowIndexes[rowIndexes.length - 1];\n    this.isMultiSelection = true;\n    var selectedRows = [];\n    var foreignKeyData = [];\n    var selectedMovableRow = this.getSelectedMovableRow(rowIndex);\n    var selectedFrozenRightRow = this.getSelectedFrozenRightRow(rowIndex);\n    var can = 'cancel';\n    var selectedData = [];\n\n    if (!this.isRowType() || this.isEditing()) {\n      return;\n    }\n\n    for (var i = 0, len = rowIndexes.length; i < len; i++) {\n      var currentRow = this.parent.getDataRows()[rowIndexes[i]];\n      var rowObj = this.getRowObj(currentRow);\n\n      if (rowObj) {\n        selectedData.push(rowObj.data);\n        selectedRows.push(currentRow);\n        foreignKeyData.push(rowObj.foreignKeyData);\n      }\n    }\n\n    var isHybrid = 'isHybrid';\n    this.activeTarget();\n    var args;\n\n    if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n      args = {\n        cancel: false,\n        rowIndexes: rowIndexes,\n        row: selectedRows,\n        rowIndex: rowIndex,\n        target: this.actualTarget,\n        prevRow: gObj.getRows()[this.prevRowIndex],\n        previousRowIndex: this.prevRowIndex,\n        isInteracted: this.isInteracted,\n        isCtrlPressed: this.isMultiCtrlRequest,\n        isShiftPressed: this.isMultiShiftRequest,\n        data: selectedData,\n        isHeaderCheckboxClicked: this.isHeaderCheckboxClicked,\n        foreignKeyData: foreignKeyData\n      };\n      args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n    } else {\n      args = {\n        cancel: false,\n        rowIndexes: rowIndexes,\n        rowIndex: rowIndex,\n        previousRowIndex: this.prevRowIndex,\n        isCtrlPressed: this.isMultiCtrlRequest,\n        isShiftPressed: this.isMultiShiftRequest,\n        data: selectedData,\n        isHeaderCheckboxClicked: this.isHeaderCheckboxClicked,\n        foreignKeyData: foreignKeyData\n      };\n    }\n\n    this.parent.trigger(events.rowSelecting, this.fDataUpdate(args), function (args) {\n      if (!isNullOrUndefined(args) && args[can] === true) {\n        _this.disableInteracted();\n\n        return;\n      }\n\n      _this.clearRow();\n\n      _this.selectRowIndex(rowIndexes.slice(-1)[0]);\n\n      var selectRowFn = function (index) {\n        _this.updateRowSelection(gObj.getRowByIndex(index), index);\n\n        if (gObj.isFrozenGrid()) {\n          var rightEle = _this.parent.getFrozenMode() === 'Left-Right' ? gObj.getFrozenRightRowByIndex(index) : undefined;\n\n          _this.selectMovableRow(gObj.getMovableRowByIndex(index), rightEle, index);\n        }\n\n        _this.updateRowProps(rowIndex);\n      };\n\n      if (!_this.isSingleSel()) {\n        for (var _i = 0, rowIndexes_1 = rowIndexes; _i < rowIndexes_1.length; _i++) {\n          var rowIdx = rowIndexes_1[_i];\n          selectRowFn(rowIdx);\n        }\n      } else {\n        selectRowFn(rowIndex);\n      }\n\n      var isHybrid = 'isHybrid';\n\n      if (!isBlazor() || _this.parent.isJsComponent || _this.parent[isHybrid]) {\n        args = {\n          rowIndexes: rowIndexes,\n          row: selectedRows,\n          rowIndex: rowIndex,\n          target: _this.actualTarget,\n          prevRow: gObj.getRows()[_this.prevRowIndex],\n          previousRowIndex: _this.prevRowIndex,\n          data: isBlazor() ? selectedData : _this.getSelectedRecords(),\n          isInteracted: _this.isInteracted,\n          isHeaderCheckboxClicked: _this.isHeaderCheckboxClicked,\n          foreignKeyData: foreignKeyData\n        };\n        args = _this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n      } else {\n        args = {\n          rowIndexes: rowIndexes,\n          rowIndex: rowIndex,\n          previousRowIndex: _this.prevRowIndex,\n          row: selectedRows,\n          prevRow: gObj.getRows()[_this.prevRowIndex],\n          data: isBlazor() ? selectedData : _this.getSelectedRecords(),\n          isInteracted: _this.isInteracted,\n          isHeaderCheckboxClicked: _this.isHeaderCheckboxClicked,\n          foreignKeyData: foreignKeyData\n        };\n      }\n\n      if (_this.isRowSelected) {\n        _this.onActionComplete(args, events.rowSelected);\n      }\n    });\n  };\n  /**\n   * Select rows with existing row selection by passing row indexes.\n   * @param  {number} startIndex - Specifies the row indexes.\n   * @return {void}\n   * @hidden\n   */\n  // tslint:disable-next-line:max-func-body-length\n\n\n  Selection.prototype.addRowsToSelection = function (rowIndexes) {\n    var _this = this;\n\n    var gObj = this.parent;\n    var can = 'cancel';\n    var target = this.target;\n    this.isMultiSelection = true;\n    var indexes = gObj.getSelectedRowIndexes().concat(rowIndexes);\n    var selectedRow = !this.isSingleSel() ? gObj.getRowByIndex(rowIndexes[0]) : gObj.getRowByIndex(rowIndexes[rowIndexes.length - 1]);\n    var selectedMovableRow = !this.isSingleSel() ? this.getSelectedMovableRow(rowIndexes[0]) : this.getSelectedMovableRow(rowIndexes[rowIndexes.length - 1]);\n    var selectedFrozenRightRow = !this.isSingleSel() ? this.getSelectedFrozenRightRow(rowIndexes[0]) : this.getSelectedFrozenRightRow(rowIndexes[rowIndexes.length - 1]);\n\n    if ((!this.isRowType() || this.isEditing()) && !this.selectionSettings.checkboxOnly) {\n      return;\n    }\n\n    var args;\n    var checkboxColumn = this.parent.getColumns().filter(function (col) {\n      return col.type === 'checkbox';\n    });\n\n    var _loop_1 = function (rowIndex) {\n      var rowObj = this_1.getRowObj(rowIndex);\n      var isUnSelected = this_1.selectedRowIndexes.indexOf(rowIndex) > -1;\n      this_1.selectRowIndex(rowIndex);\n\n      if (isUnSelected && ((checkboxColumn.length ? true : this_1.selectionSettings.enableToggle) || this_1.isMultiCtrlRequest)) {\n        this_1.isAddRowsToSelection = true;\n        this_1.rowDeselect(events.rowDeselecting, [rowIndex], [rowObj.data], [selectedRow], [rowObj.foreignKeyData], target);\n\n        if (this_1.isCancelDeSelect) {\n          return {\n            value: void 0\n          };\n        }\n\n        this_1.selectedRowIndexes.splice(this_1.selectedRowIndexes.indexOf(rowIndex), 1);\n        this_1.selectedRecords.splice(this_1.selectedRecords.indexOf(selectedRow), 1);\n        selectedRow.removeAttribute('aria-selected');\n        this_1.addRemoveClassesForRow(selectedRow, false, null, 'e-selectionbackground', 'e-active');\n\n        if (selectedMovableRow) {\n          this_1.selectedRecords.splice(this_1.selectedRecords.indexOf(selectedMovableRow), 1);\n          selectedMovableRow.removeAttribute('aria-selected');\n          this_1.addRemoveClassesForRow(selectedMovableRow, false, null, 'e-selectionbackground', 'e-active');\n        }\n\n        this_1.rowDeselect(events.rowDeselected, [rowIndex], [rowObj.data], [selectedRow], [rowObj.foreignKeyData], target, [selectedMovableRow]);\n        this_1.isInteracted = false;\n        this_1.isMultiSelection = false;\n        this_1.isAddRowsToSelection = false;\n      } else {\n        var isHybrid = 'isHybrid';\n        this_1.activeTarget();\n\n        if (!isBlazor() || this_1.parent.isJsComponent || this_1.parent[isHybrid]) {\n          args = {\n            cancel: false,\n            data: rowObj.data,\n            rowIndex: rowIndex,\n            row: selectedRow,\n            target: this_1.actualTarget,\n            prevRow: gObj.getRows()[this_1.prevRowIndex],\n            previousRowIndex: this_1.prevRowIndex,\n            isCtrlPressed: this_1.isMultiCtrlRequest,\n            isShiftPressed: this_1.isMultiShiftRequest,\n            foreignKeyData: rowObj.foreignKeyData,\n            isInteracted: this_1.isInteracted,\n            isHeaderCheckboxClicked: this_1.isHeaderCheckboxClicked,\n            rowIndexes: indexes\n          };\n          args = this_1.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n        } else {\n          args = {\n            cancel: false,\n            data: rowObj.data,\n            rowIndex: rowIndex,\n            previousRowIndex: this_1.prevRowIndex,\n            isCtrlPressed: this_1.isMultiCtrlRequest,\n            isShiftPressed: this_1.isMultiShiftRequest,\n            foreignKeyData: rowObj.foreignKeyData,\n            isInteracted: this_1.isInteracted,\n            isHeaderCheckboxClicked: this_1.isHeaderCheckboxClicked,\n            rowIndexes: indexes\n          };\n        }\n\n        this_1.parent.trigger(events.rowSelecting, this_1.fDataUpdate(args), function (args) {\n          if (!isNullOrUndefined(args) && args[can] === true) {\n            _this.disableInteracted();\n\n            return;\n          }\n\n          if (_this.isSingleSel()) {\n            _this.clearRow();\n          }\n\n          _this.updateRowSelection(selectedRow, rowIndex);\n\n          _this.selectMovableRow(selectedMovableRow, selectedFrozenRightRow, rowIndex);\n        });\n      }\n\n      if (!isUnSelected) {\n        var isHybrid = 'isHybrid';\n\n        if (!isBlazor() || this_1.parent.isJsComponent || this_1.parent[isHybrid]) {\n          args = {\n            data: rowObj.data,\n            rowIndex: rowIndex,\n            row: selectedRow,\n            target: this_1.actualTarget,\n            prevRow: gObj.getRows()[this_1.prevRowIndex],\n            previousRowIndex: this_1.prevRowIndex,\n            foreignKeyData: rowObj.foreignKeyData,\n            isInteracted: this_1.isInteracted,\n            isHeaderCheckboxClicked: this_1.isHeaderCheckboxClicked,\n            rowIndexes: indexes\n          };\n          args = this_1.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n        } else {\n          args = {\n            data: rowObj.data,\n            rowIndex: rowIndex,\n            previousRowIndex: this_1.prevRowIndex,\n            row: selectedRow,\n            prevRow: gObj.getRows()[this_1.prevRowIndex],\n            foreignKeyData: rowObj.foreignKeyData,\n            isInteracted: this_1.isInteracted,\n            isHeaderCheckboxClicked: this_1.isHeaderCheckboxClicked,\n            rowIndexes: indexes\n          };\n        }\n\n        this_1.onActionComplete(args, events.rowSelected);\n      }\n\n      this_1.isInteracted = false;\n      this_1.updateRowProps(rowIndex);\n\n      if (this_1.isSingleSel()) {\n        return \"break\";\n      }\n    };\n\n    var this_1 = this;\n\n    for (var _i = 0, rowIndexes_2 = rowIndexes; _i < rowIndexes_2.length; _i++) {\n      var rowIndex = rowIndexes_2[_i];\n\n      var state_1 = _loop_1(rowIndex);\n\n      if (typeof state_1 === \"object\") return state_1.value;\n      if (state_1 === \"break\") break;\n    }\n  };\n\n  Selection.prototype.getCollectionFromIndexes = function (startIndex, endIndex) {\n    var indexes = [];\n\n    var _a = startIndex <= endIndex ? {\n      i: startIndex,\n      max: endIndex\n    } : {\n      i: endIndex,\n      max: startIndex\n    },\n        i = _a.i,\n        max = _a.max;\n\n    for (; i <= max; i++) {\n      indexes.push(i);\n    }\n\n    if (startIndex > endIndex) {\n      indexes.reverse();\n    }\n\n    return indexes;\n  };\n\n  Selection.prototype.clearRow = function () {\n    this.clearRowCheck = true;\n    this.clearRowSelection();\n  };\n\n  Selection.prototype.clearRowCallBack = function () {\n    if (this.isCancelDeSelect && this.parent.checkAllRows !== 'Check') {\n      return;\n    }\n\n    this.selectedRowIndexes = [];\n    this.selectedRecords = [];\n    this.selectRowIndex(-1);\n\n    if (this.isSingleSel() && this.parent.isPersistSelection) {\n      this.selectedRowState = {};\n    }\n  };\n\n  Selection.prototype.clearSelectedRow = function (index) {\n    if (this.toggle) {\n      var selectedEle = this.parent.getRowByIndex(index);\n\n      if (!this.disableUI) {\n        selectedEle.removeAttribute('aria-selected');\n        this.addRemoveClassesForRow(selectedEle, false, true, 'e-selectionbackground', 'e-active');\n      }\n\n      this.removed = true;\n      this.updatePersistCollection(selectedEle, false);\n      this.updateCheckBoxes(selectedEle);\n      this.selectedRowIndexes.splice(this.selectedRowIndexes.indexOf(index), 1);\n      this.selectedRecords.splice(this.selectedRecords.indexOf(this.parent.getRowByIndex(index)), 1);\n    }\n  };\n\n  Selection.prototype.updateRowProps = function (startIndex) {\n    this.prevRowIndex = startIndex;\n    this.isRowSelected = this.selectedRowIndexes.length && true;\n  };\n\n  Selection.prototype.updatePersistCollection = function (selectedRow, chkState) {\n    var _this = this;\n\n    if ((this.parent.isPersistSelection || this.parent.selectionSettings.persistSelection && this.parent.getPrimaryKeyFieldNames().length > 0) && !isNullOrUndefined(selectedRow)) {\n      if (!this.parent.isPersistSelection) {\n        this.ensureCheckboxFieldSelection();\n      }\n\n      var rowObj = this.getRowObj(selectedRow);\n      var pKey_1 = rowObj.data ? rowObj.data[this.primaryKey] : null;\n\n      if (pKey_1 === null) {\n        return;\n      }\n\n      rowObj.isSelected = chkState;\n\n      if (chkState) {\n        this.selectedRowState[pKey_1] = chkState;\n\n        if (!this.persistSelectedData.some(function (data) {\n          return data[_this.primaryKey] === pKey_1;\n        })) {\n          this.persistSelectedData.push(rowObj.data);\n        }\n      } else {\n        this.updatePersistDelete(pKey_1);\n      }\n    }\n  };\n\n  Selection.prototype.updatePersistDelete = function (pKey) {\n    var _this = this;\n\n    delete this.selectedRowState[pKey];\n    var index;\n    var isPresent = this.persistSelectedData.some(function (data, i) {\n      index = i;\n      return data[_this.primaryKey] === pKey;\n    });\n\n    if (isPresent) {\n      this.persistSelectedData.splice(index, 1);\n    }\n  };\n\n  Selection.prototype.updateCheckBoxes = function (row, chkState, rowIndex) {\n    if (!isNullOrUndefined(row)) {\n      var chkBox = row.querySelector('.e-checkselect');\n\n      if (!isNullOrUndefined(chkBox)) {\n        removeAddCboxClasses(chkBox.nextElementSibling, chkState);\n        setChecked(chkBox, chkState);\n\n        if (isNullOrUndefined(this.checkedTarget) || !isNullOrUndefined(this.checkedTarget) && !this.checkedTarget.classList.contains('e-checkselectall')) {\n          this.setCheckAllState(rowIndex);\n        }\n      }\n    }\n  };\n\n  Selection.prototype.updateRowSelection = function (selectedRow, startIndex) {\n    if (!selectedRow) {\n      return;\n    }\n\n    this.selectedRowIndexes.push(startIndex);\n    var len = this.selectedRowIndexes.length;\n\n    if (this.parent.isFrozenGrid() && len > 1) {\n      if (this.selectedRowIndexes[len - 2] === this.selectedRowIndexes[len - 1]) {\n        this.selectedRowIndexes.pop();\n      }\n    }\n\n    this.selectedRecords.push(selectedRow);\n    selectedRow.setAttribute('aria-selected', 'true');\n    this.updatePersistCollection(selectedRow, true);\n    this.updateCheckBoxes(selectedRow, true);\n    this.addRemoveClassesForRow(selectedRow, true, null, 'e-selectionbackground', 'e-active');\n\n    if (!this.preventFocus) {\n      var target = this.focus.getPrevIndexes().cellIndex ? selectedRow.cells[this.focus.getPrevIndexes().cellIndex] : selectedRow.querySelector('.e-selectionbackground:not(.e-hide):not(.e-detailrowcollapse):not(.e-detailrowexpand)');\n\n      if (this.parent.contextMenuModule && this.mouseButton === 2) {\n        target = this.parent.contextMenuModule.cell;\n      }\n\n      if (!target) {\n        return;\n      }\n\n      this.focus.onClick({\n        target: target\n      }, true);\n    }\n  };\n  /**\n   * Deselects the currently selected rows and cells.\n   * @return {void}\n   */\n\n\n  Selection.prototype.clearSelection = function () {\n    if (!this.parent.isPersistSelection || this.parent.isPersistSelection && !this.parent.isEdit || !isNullOrUndefined(this.checkedTarget) && this.checkedTarget.classList.contains('e-checkselectall')) {\n      var span = this.parent.element.querySelector('.e-gridpopup').querySelector('span');\n\n      if (span.classList.contains('e-rowselect')) {\n        span.classList.remove('e-spanclicked');\n      }\n\n      if (this.parent.isPersistSelection) {\n        this.persistSelectedData = [];\n        this.selectedRowState = {};\n      }\n\n      this.clearRowSelection();\n      this.clearCellSelection();\n      this.clearColumnSelection();\n      this.prevRowIndex = undefined;\n      this.enableSelectMultiTouch = false;\n      this.isInteracted = false;\n    }\n  };\n  /**\n   * Deselects the currently selected rows.\n   * @return {void}\n   */\n  // tslint:disable-next-line:max-func-body-length\n\n\n  Selection.prototype.clearRowSelection = function () {\n    var _this = this;\n\n    if (this.isRowSelected) {\n      var gObj = this.parent;\n      var rows_1 = this.parent.getDataRows();\n      var data_1 = [];\n      var row_1 = [];\n      var mRow_1 = [];\n      var fRightRow_1 = [];\n      var rowIndex_1 = [];\n      var foreignKeyData_1 = [];\n      var target_1 = this.target;\n      var currentViewData = this.parent.getCurrentViewRecords();\n\n      for (var i = 0, len = this.selectedRowIndexes.length; i < len; i++) {\n        var currentRow = this.parent.editSettings.mode === 'Batch' ? this.parent.getRows()[this.selectedRowIndexes[i]] : this.parent.getDataRows()[this.selectedRowIndexes[i]];\n        var rowObj = this.getRowObj(currentRow);\n\n        if (rowObj) {\n          data_1.push(rowObj.data);\n          row_1.push(currentRow);\n          rowIndex_1.push(this.selectedRowIndexes[i]);\n          foreignKeyData_1.push(rowObj.foreignKeyData);\n        }\n\n        if (gObj.isFrozenGrid()) {\n          mRow_1.push(gObj.getMovableRows()[this.selectedRowIndexes[i]]);\n\n          if (gObj.getFrozenMode() === 'Left-Right') {\n            fRightRow_1.push(gObj.getFrozenRightRows()[this.selectedRowIndexes[i]]);\n          }\n        }\n      }\n\n      if (this.selectionSettings.persistSelection && this.selectionSettings.checkboxMode !== 'ResetOnRowClick') {\n        this.isInteracted = this.checkSelectAllClicked ? true : false;\n      }\n\n      this.rowDeselect(events.rowDeselecting, rowIndex_1, data_1, row_1, foreignKeyData_1, target_1, mRow_1, function () {\n        if (_this.isCancelDeSelect && (_this.isInteracted || _this.checkSelectAllClicked)) {\n          if (_this.parent.isPersistSelection) {\n            if (_this.getCheckAllStatus(_this.parent.element.querySelector('.e-checkselectall')) === 'Intermediate') {\n              for (var i = 0; i < _this.selectedRecords.length; i++) {\n                _this.updatePersistCollection(_this.selectedRecords[i], true);\n              }\n            } else {\n              _this.parent.checkAllRows = 'Check';\n\n              _this.updatePersistSelectedData(true);\n            }\n          }\n\n          if (_this.clearRowCheck) {\n            _this.clearRowCallBack();\n\n            _this.clearRowCheck = false;\n\n            if (_this.selectRowCheck) {\n              _this.selectRowCallBack();\n\n              _this.selectRowCheck = false;\n            }\n          }\n\n          return;\n        }\n\n        var element = [].slice.call(rows_1.filter(function (record) {\n          return record.hasAttribute('aria-selected');\n        }));\n\n        for (var j = 0; j < element.length; j++) {\n          if (!_this.disableUI || isBlazor()) {\n            element[j].removeAttribute('aria-selected');\n\n            _this.addRemoveClassesForRow(element[j], false, true, 'e-selectionbackground', 'e-active');\n          } // tslint:disable-next-line:align\n\n\n          _this.updatePersistCollection(element[j], false);\n\n          _this.updateCheckBoxes(element[j]);\n        }\n\n        if (isBlazor() && _this.parent.isServerRendered && _this.parent.enableVirtualization) {\n          _this.getRenderer().setSelection(null, false, true);\n        }\n\n        for (var i = 0, len = _this.selectedRowIndexes.length; i < len; i++) {\n          var movableRow = _this.getSelectedMovableRow(_this.selectedRowIndexes[i]);\n\n          if (movableRow) {\n            if (!_this.disableUI || isBlazor()) {\n              movableRow.removeAttribute('aria-selected');\n\n              _this.addRemoveClassesForRow(movableRow, false, true, 'e-selectionbackground', 'e-active');\n            }\n\n            _this.updateCheckBoxes(movableRow);\n\n            _this.updatePersistCollection(movableRow, false);\n          }\n\n          var frRow = _this.getSelectedFrozenRightRow(_this.selectedRowIndexes[i]);\n\n          if (frRow) {\n            if (!_this.disableUI) {\n              frRow.removeAttribute('aria-selected');\n\n              _this.addRemoveClassesForRow(frRow, false, true, 'e-selectionbackground', 'e-active');\n            }\n\n            _this.updateCheckBoxes(frRow);\n\n            _this.updatePersistCollection(frRow, false);\n          }\n        }\n\n        _this.selectedRowIndexes = [];\n        _this.selectedRecords = [];\n        _this.isRowSelected = false;\n\n        _this.selectRowIndex(-1);\n\n        _this.rowDeselect(events.rowDeselected, rowIndex_1, data_1, row_1, foreignKeyData_1, target_1, mRow_1, undefined, fRightRow_1);\n\n        if (_this.clearRowCheck) {\n          _this.clearRowCallBack();\n\n          _this.clearRowCheck = false;\n\n          if (_this.selectRowCheck) {\n            _this.selectRowCallBack();\n\n            _this.selectRowCheck = false;\n          }\n        }\n      }, fRightRow_1);\n    } else {\n      if (this.clearRowCheck) {\n        this.clearRowCallBack();\n        this.clearRowCheck = false;\n\n        if (this.selectRowCheck) {\n          this.selectRowCallBack();\n          this.selectRowCheck = false;\n        }\n      }\n    }\n  };\n\n  Selection.prototype.rowDeselect = function (type, rowIndex, data, row, foreignKeyData, target, mRow, rowDeselectCallBack, frozenRightRow) {\n    var _this = this;\n\n    if (this.selectionSettings.persistSelection && this.isInteracted || !this.selectionSettings.persistSelection) {\n      var cancl_1 = 'cancel';\n      var rowDeselectObj = {\n        rowIndex: rowIndex[0],\n        data: this.selectionSettings.persistSelection && this.parent.checkAllRows === 'Uncheck' && this.selectionSettings.checkboxMode !== 'ResetOnRowClick' ? this.persistSelectedData : data,\n        foreignKeyData: foreignKeyData,\n        cancel: false,\n        isInteracted: this.isInteracted,\n        isHeaderCheckboxClicked: this.isHeaderCheckboxClicked\n      };\n\n      if (type === 'rowDeselected') {\n        delete rowDeselectObj.cancel;\n      }\n\n      var isHybrid = 'isHybrid';\n\n      if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n        var rowInString = 'row';\n        var target_2 = 'target';\n        var rowidx = 'rowIndex';\n        var rowidxex = 'rowIndexes';\n        var data_2 = 'data';\n        var foreignKey = 'foreignKeyData';\n        rowDeselectObj[rowInString] = row;\n        rowDeselectObj[target_2] = this.actualTarget;\n        var isHeaderCheckBxClick = this.actualTarget && !isNullOrUndefined(closest(this.actualTarget, 'thead'));\n\n        if (isHeaderCheckBxClick || rowIndex.length > 1) {\n          rowDeselectObj[rowidx] = rowIndex[0];\n          rowDeselectObj[rowidxex] = rowIndex;\n        } else if (rowIndex.length === 1) {\n          rowDeselectObj[data_2] = rowDeselectObj[data_2][0];\n          rowDeselectObj[rowInString] = rowDeselectObj[rowInString][0];\n          rowDeselectObj[foreignKey] = rowDeselectObj[foreignKey][0];\n\n          if (this.isAddRowsToSelection) {\n            rowDeselectObj[rowidxex] = rowIndex;\n          }\n        }\n      } else {\n        var rowIndex_2 = 'rowIndex';\n        var data_3 = 'data';\n        rowDeselectObj[rowIndex_2] = rowDeselectObj[rowIndex_2][rowDeselectObj[rowIndex_2].length - 1];\n        rowDeselectObj[data_3] = rowDeselectObj[data_3][rowDeselectObj[data_3].length - 1];\n      }\n\n      this.parent.trigger(type, (!isBlazor() || this.parent.isJsComponent) && this.parent.isFrozenGrid() ? __assign({}, rowDeselectObj, {\n        mRow: mRow,\n        frozenRightRow: frozenRightRow\n      }) : rowDeselectObj, function (args) {\n        _this.isCancelDeSelect = args[cancl_1];\n\n        if (!_this.isCancelDeSelect || !_this.isInteracted && !_this.checkSelectAllClicked) {\n          _this.updatePersistCollection(row[0], false);\n\n          _this.updateCheckBoxes(row[0], undefined, rowIndex[0]);\n        }\n\n        if (rowDeselectCallBack !== undefined) {\n          rowDeselectCallBack();\n        }\n      });\n    } else if (this.selectionSettings.persistSelection && !this.isInteracted) {\n      if (rowDeselectCallBack !== undefined) {\n        rowDeselectCallBack();\n      }\n    }\n  };\n\n  Selection.prototype.getRowObj = function (row) {\n    if (row === void 0) {\n      row = this.currentIndex;\n    }\n\n    if (isNullOrUndefined(row)) {\n      return {};\n    }\n\n    if (typeof row === 'number') {\n      row = this.parent.getRowByIndex(row);\n    }\n\n    if (row) {\n      return this.parent.getRowObjectFromUID(row.getAttribute('data-uid')) || {};\n    }\n\n    return {};\n  };\n\n  Selection.prototype.getSelectedMovableCell = function (cellIndex) {\n    var gObj = this.parent;\n    var col = gObj.getColumnByIndex(cellIndex.cellIndex);\n    var frzCols = gObj.isFrozenGrid();\n\n    if (frzCols) {\n      if (col.getFreezeTableName() === 'movable') {\n        return gObj.getMovableCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n      }\n\n      return null;\n    }\n\n    return null;\n  };\n  /**\n   * Selects a cell by the given index.\n   * @param  {IIndex} cellIndex - Defines the row and column indexes.\n   * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n   * @return {void}\n   */\n\n\n  Selection.prototype.selectCell = function (cellIndex, isToggle) {\n    if (!this.isCellType()) {\n      return;\n    }\n\n    var gObj = this.parent;\n    var selectedCell = this.getSelectedMovableCell(cellIndex);\n    var args;\n\n    if (!selectedCell) {\n      selectedCell = gObj.getCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n    }\n\n    var selectedTable;\n    var cIdx;\n    this.currentIndex = cellIndex.rowIndex;\n    var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n\n    if (!this.isCellType() || !selectedCell || this.isEditing()) {\n      return;\n    }\n\n    var isCellSelected = selectedCell.classList.contains('e-cellselectionbackground');\n    isToggle = !isToggle ? isToggle : !isUndefined(this.prevCIdxs) && cellIndex.rowIndex === this.prevCIdxs.rowIndex && cellIndex.cellIndex === this.prevCIdxs.cellIndex && isCellSelected;\n\n    if (!isToggle) {\n      args = {\n        data: selectedData,\n        cellIndex: cellIndex,\n        isCtrlPressed: this.isMultiCtrlRequest,\n        isShiftPressed: this.isMultiShiftRequest,\n        previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined,\n        cancel: false\n      };\n\n      if (!isBlazor() || this.parent.isJsComponent) {\n        var currentCell = 'currentCell';\n        args[currentCell] = selectedCell;\n        var previousRowCellIndex = 'previousRowCellIndex';\n        args[previousRowCellIndex] = this.prevECIdxs;\n      }\n\n      this.parent.trigger(events.cellSelecting, this.fDataUpdate(args), this.successCallBack(args, isToggle, cellIndex, selectedCell, selectedData));\n      this.cellselected = true;\n    } else {\n      this.successCallBack(args, isToggle, cellIndex, selectedCell, selectedData)(args);\n    }\n  };\n\n  Selection.prototype.successCallBack = function (cellSelectingArgs, isToggle, cellIndex, selectedCell, selectedData) {\n    var _this = this;\n\n    return function (cellSelectingArgs) {\n      var cncl = 'cancel';\n      var currentCell = 'currentCell';\n\n      if (!isNullOrUndefined(cellSelectingArgs) && cellSelectingArgs[cncl] === true) {\n        return;\n      }\n\n      if (!isToggle) {\n        cellSelectingArgs[currentCell] = cellSelectingArgs[currentCell] ? cellSelectingArgs[currentCell] : selectedCell;\n      }\n\n      _this.clearCell();\n\n      if (!isToggle) {\n        _this.updateCellSelection(selectedCell, cellIndex.rowIndex, cellIndex.cellIndex);\n      }\n\n      if (!isToggle) {\n        var args = void 0;\n        var isHybrid = 'isHybrid';\n\n        if (!isBlazor() || _this.parent.isJsComponent || _this.parent[isHybrid]) {\n          args = {\n            data: selectedData,\n            cellIndex: cellIndex,\n            currentCell: selectedCell,\n            selectedRowCellIndex: _this.selectedRowCellIndexes,\n            previousRowCell: _this.prevECIdxs ? _this.getCellIndex(_this.prevECIdxs.rowIndex, _this.prevECIdxs.cellIndex) : undefined\n          };\n          var previousRowCellIndex = 'previousRowCellIndex';\n          args[previousRowCellIndex] = _this.prevECIdxs;\n        } else {\n          args = {\n            data: selectedData,\n            cellIndex: cellIndex,\n            selectedRowCellIndex: _this.selectedRowCellIndexes\n          };\n        }\n\n        _this.updateCellProps(cellIndex, cellIndex);\n\n        _this.onActionComplete(args, events.cellSelected);\n      }\n    };\n  };\n\n  Selection.prototype.getCellIndex = function (rIdx, cIdx) {\n    return this.parent.getFrozenColumns() ? cIdx >= this.parent.getFrozenColumns() ? this.parent.getMovableCellFromIndex(rIdx, cIdx) : this.parent.getCellFromIndex(rIdx, cIdx) : this.parent.getCellFromIndex(rIdx, cIdx);\n  };\n  /**\n   * Selects a range of cells from start and end indexes.\n   * @param  {IIndex} startIndex - Specifies the row and column's start index.\n   * @param  {IIndex} endIndex - Specifies the row and column's end index.\n   * @return {void}\n   */\n\n\n  Selection.prototype.selectCellsByRange = function (startIndex, endIndex) {\n    var _this = this;\n\n    if (!this.isCellType()) {\n      return;\n    }\n\n    var gObj = this.parent;\n    var selectedCell = this.getSelectedMovableCell(startIndex);\n    var frzCols = gObj.getFrozenColumns();\n\n    if (!selectedCell) {\n      selectedCell = gObj.getCellFromIndex(startIndex.rowIndex, startIndex.cellIndex);\n    }\n\n    var min;\n    var max;\n    var stIndex = startIndex;\n    var edIndex = endIndex = endIndex ? endIndex : startIndex;\n    var cellIndexes;\n    this.currentIndex = startIndex.rowIndex;\n    var cncl = 'cancel';\n    var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n\n    if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n      return;\n    }\n\n    var args = {\n      data: selectedData,\n      cellIndex: startIndex,\n      currentCell: selectedCell,\n      isCtrlPressed: this.isMultiCtrlRequest,\n      isShiftPressed: this.isMultiShiftRequest,\n      previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n    };\n\n    if (!isBlazor()) {\n      var previousRowCellIndex = 'previousRowCellIndex';\n      args[previousRowCellIndex] = this.prevECIdxs;\n    }\n\n    this.parent.trigger(events.cellSelecting, this.fDataUpdate(args), function (cellSelectingArgs) {\n      if (!isNullOrUndefined(cellSelectingArgs) && cellSelectingArgs[cncl] === true) {\n        return;\n      }\n\n      _this.clearCell();\n\n      if (startIndex.rowIndex > endIndex.rowIndex) {\n        var temp = startIndex;\n        startIndex = endIndex;\n        endIndex = temp;\n      }\n\n      for (var i = startIndex.rowIndex; i <= endIndex.rowIndex; i++) {\n        if (_this.selectionSettings.cellSelectionMode.indexOf('Box') < 0) {\n          min = i === startIndex.rowIndex ? startIndex.cellIndex : 0;\n          max = i === endIndex.rowIndex ? endIndex.cellIndex : _this.getLastColIndex(i);\n        } else {\n          min = startIndex.cellIndex;\n          max = endIndex.cellIndex;\n        }\n\n        cellIndexes = [];\n\n        for (var j = min < max ? min : max, len = min > max ? min : max; j <= len; j++) {\n          if (frzCols) {\n            if (j < frzCols) {\n              selectedCell = gObj.getCellFromIndex(i, j);\n            } else {\n              selectedCell = gObj.getMovableCellFromIndex(i, j);\n            }\n          } else {\n            selectedCell = gObj.getCellFromIndex(i, j);\n          }\n\n          if (!selectedCell) {\n            continue;\n          }\n\n          cellIndexes.push(j);\n\n          _this.updateCellSelection(selectedCell);\n\n          _this.addAttribute(selectedCell);\n        }\n\n        _this.selectedRowCellIndexes.push({\n          rowIndex: i,\n          cellIndexes: cellIndexes\n        });\n      }\n\n      var cellSelectedArgs;\n      var isHybrid = 'isHybrid';\n\n      if (!isBlazor() || _this.parent.isJsComponent || _this.parent[isHybrid]) {\n        cellSelectedArgs = {\n          data: selectedData,\n          cellIndex: edIndex,\n          currentCell: gObj.getCellFromIndex(edIndex.rowIndex, edIndex.cellIndex),\n          selectedRowCellIndex: _this.selectedRowCellIndexes,\n          previousRowCell: _this.prevECIdxs ? _this.getCellIndex(_this.prevECIdxs.rowIndex, _this.prevECIdxs.cellIndex) : undefined\n        };\n        var previousRowCellIndex = 'previousRowCellIndex';\n        cellSelectedArgs[previousRowCellIndex] = _this.prevECIdxs;\n      } else {\n        cellSelectedArgs = {\n          data: selectedData,\n          cellIndex: edIndex,\n          selectedRowCellIndex: _this.selectedRowCellIndexes\n        };\n      }\n\n      if (!_this.isDragged) {\n        _this.onActionComplete(cellSelectedArgs, events.cellSelected);\n\n        _this.cellselected = true;\n      }\n\n      _this.updateCellProps(stIndex, edIndex);\n    });\n  };\n  /**\n   * Selects a collection of cells by row and column indexes.\n   * @param  {ISelectedCell[]} rowCellIndexes - Specifies the row and column indexes.\n   * @return {void}\n   */\n\n\n  Selection.prototype.selectCells = function (rowCellIndexes) {\n    if (!this.isCellType()) {\n      return;\n    }\n\n    var gObj = this.parent;\n    var selectedCell = this.getSelectedMovableCell(rowCellIndexes[0]);\n    var frzCols = gObj.getFrozenColumns();\n\n    if (!selectedCell) {\n      selectedCell = gObj.getCellFromIndex(rowCellIndexes[0].rowIndex, rowCellIndexes[0].cellIndexes[0]);\n    }\n\n    this.currentIndex = rowCellIndexes[0].rowIndex;\n    var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n\n    if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n      return;\n    }\n\n    var cellSelectArgs;\n    var isHybrid = 'isHybrid';\n\n    if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n      cellSelectArgs = {\n        data: selectedData,\n        cellIndex: rowCellIndexes[0].cellIndexes[0],\n        currentCell: selectedCell,\n        isCtrlPressed: this.isMultiCtrlRequest,\n        isShiftPressed: this.isMultiShiftRequest,\n        previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n      };\n      var previousRowCellIndex = 'previousRowCellIndex';\n      cellSelectArgs[previousRowCellIndex] = this.prevECIdxs;\n    } else {\n      cellSelectArgs = {\n        data: selectedData,\n        cellIndex: rowCellIndexes[0].cellIndexes[0],\n        isCtrlPressed: this.isMultiCtrlRequest,\n        isShiftPressed: this.isMultiShiftRequest\n      };\n    }\n\n    this.onActionBegin(cellSelectArgs, events.cellSelecting);\n\n    for (var i = 0, len = rowCellIndexes.length; i < len; i++) {\n      for (var j = 0, cellLen = rowCellIndexes[i].cellIndexes.length; j < cellLen; j++) {\n        if (frzCols) {\n          if (rowCellIndexes[i].cellIndexes[j] < frzCols) {\n            selectedCell = gObj.getCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n          } else {\n            selectedCell = gObj.getMovableCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n          }\n        } else {\n          selectedCell = gObj.getCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n        }\n\n        if (!selectedCell) {\n          continue;\n        }\n\n        this.updateCellSelection(selectedCell);\n        this.addAttribute(selectedCell);\n        this.addRowCellIndex({\n          rowIndex: rowCellIndexes[i].rowIndex,\n          cellIndex: rowCellIndexes[i].cellIndexes[j]\n        });\n      }\n    }\n\n    this.updateCellProps({\n      rowIndex: rowCellIndexes[0].rowIndex,\n      cellIndex: rowCellIndexes[0].cellIndexes[0]\n    }, {\n      rowIndex: rowCellIndexes[0].rowIndex,\n      cellIndex: rowCellIndexes[0].cellIndexes[0]\n    });\n    var cellSelectedArgs;\n\n    if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n      cellSelectedArgs = {\n        data: selectedData,\n        cellIndex: rowCellIndexes[0].cellIndexes[0],\n        currentCell: selectedCell,\n        selectedRowCellIndex: this.selectedRowCellIndexes,\n        previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n      };\n      var previousRowCellIndex = 'previousRowCellIndex';\n      cellSelectedArgs[previousRowCellIndex] = this.prevECIdxs;\n    } else {\n      cellSelectedArgs = {\n        data: selectedData,\n        cellIndex: rowCellIndexes[0].cellIndexes[0],\n        selectedRowCellIndex: this.selectedRowCellIndexes\n      };\n    }\n\n    this.onActionComplete(cellSelectedArgs, events.cellSelected);\n  };\n  /**\n   * Select cells with existing cell selection by passing row and column index.\n   * @param  {IIndex} startIndex - Defines the collection of row and column index.\n   * @return {void}\n   * @hidden\n   */\n  // tslint:disable-next-line:max-func-body-length\n\n\n  Selection.prototype.addCellsToSelection = function (cellIndexes) {\n    if (!this.isCellType()) {\n      return;\n    }\n\n    var gObj = this.parent;\n    var selectedCell;\n    var index;\n    this.currentIndex = cellIndexes[0].rowIndex;\n    var cncl = 'cancel';\n    var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n    var isHybrid = 'isHybrid';\n    var left = gObj.getFrozenLeftCount();\n    var movable = gObj.getMovableColumnsCount();\n\n    if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n      return;\n    }\n\n    this.hideAutoFill();\n    var col = gObj.getColumnByIndex(cellIndexes[0].cellIndex);\n    var rowObj;\n    gridActionHandler(this.parent, function (tableName, rows) {\n      rowObj = rows[cellIndexes[0].rowIndex];\n    }, [!col.getFreezeTableName() || col.getFreezeTableName() === 'frozen-left' ? gObj.getRowsObject() : [], col.getFreezeTableName() === 'movable' ? gObj.getMovableRowsObject() : [], col.getFreezeTableName() === 'frozen-right' ? gObj.getFrozenRightRowsObject() : []]);\n    var foreignKeyData = [];\n\n    for (var _i = 0, cellIndexes_1 = cellIndexes; _i < cellIndexes_1.length; _i++) {\n      var cellIndex = cellIndexes_1[_i];\n\n      for (var i = 0, len = this.selectedRowCellIndexes.length; i < len; i++) {\n        if (this.selectedRowCellIndexes[i].rowIndex === cellIndex.rowIndex) {\n          index = i;\n          break;\n        }\n      }\n\n      selectedCell = this.getSelectedMovableCell(cellIndex);\n\n      if (!selectedCell) {\n        selectedCell = gObj.getCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n      }\n\n      var idx = col.getFreezeTableName() === 'movable' ? cellIndex.cellIndex - left : col.getFreezeTableName() === 'frozen-right' ? cellIndex.cellIndex - (left + movable) : cellIndex.cellIndex;\n      foreignKeyData.push(rowObj.cells[idx].foreignKeyData);\n      var args = void 0;\n\n      if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n        args = {\n          cancel: false,\n          data: selectedData,\n          cellIndex: cellIndexes[0],\n          isShiftPressed: this.isMultiShiftRequest,\n          currentCell: selectedCell,\n          isCtrlPressed: this.isMultiCtrlRequest,\n          previousRowCell: this.prevECIdxs ? gObj.getCellFromIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n        };\n        var previousRowCellIndex = 'previousRowCellIndex';\n        args[previousRowCellIndex] = this.prevECIdxs;\n      } else {\n        args = {\n          cancel: false,\n          data: selectedData,\n          cellIndex: cellIndexes[0],\n          isShiftPressed: this.isMultiShiftRequest,\n          isCtrlPressed: this.isMultiCtrlRequest\n        };\n      }\n\n      var isUnSelected = index > -1;\n\n      if (isUnSelected) {\n        var selectedCellIdx = this.selectedRowCellIndexes[index].cellIndexes;\n\n        if (selectedCellIdx.indexOf(cellIndex.cellIndex) > -1) {\n          this.cellDeselect(events.cellDeselecting, [{\n            rowIndex: cellIndex.rowIndex,\n            cellIndexes: [cellIndex.cellIndex]\n          }], selectedData, [selectedCell], foreignKeyData);\n          selectedCellIdx.splice(selectedCellIdx.indexOf(cellIndex.cellIndex), 1);\n\n          if (selectedCellIdx.length === 0) {\n            this.selectedRowCellIndexes.splice(index, 1);\n          }\n\n          selectedCell.classList.remove('e-cellselectionbackground');\n          selectedCell.removeAttribute('aria-selected');\n          this.cellDeselect(events.cellDeselected, [{\n            rowIndex: cellIndex.rowIndex,\n            cellIndexes: [cellIndex.cellIndex]\n          }], selectedData, [selectedCell], foreignKeyData);\n        } else {\n          isUnSelected = false;\n          this.onActionBegin(args, events.cellSelecting);\n          this.addRowCellIndex({\n            rowIndex: cellIndex.rowIndex,\n            cellIndex: cellIndex.cellIndex\n          });\n          this.updateCellSelection(selectedCell);\n          this.addAttribute(selectedCell);\n        }\n      } else {\n        this.onActionBegin(args, events.cellSelecting);\n\n        if (!isNullOrUndefined(args) && args[cncl] === true) {\n          return;\n        }\n\n        this.updateCellSelection(selectedCell, cellIndex.rowIndex, cellIndex.cellIndex);\n      }\n\n      if (!isUnSelected) {\n        var cellSelectedArgs = void 0;\n\n        if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n          cellSelectedArgs = {\n            data: selectedData,\n            cellIndex: cellIndexes[0],\n            currentCell: selectedCell,\n            previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined,\n            selectedRowCellIndex: this.selectedRowCellIndexes\n          };\n          var previousRowCellIndex = 'previousRowCellIndex';\n          cellSelectedArgs[previousRowCellIndex] = this.prevECIdxs;\n        } else {\n          cellSelectedArgs = {\n            data: selectedData,\n            cellIndex: cellIndexes[0],\n            selectedRowCellIndex: this.selectedRowCellIndexes\n          };\n        }\n\n        this.onActionComplete(cellSelectedArgs, events.cellSelected);\n        this.cellselected = true;\n      }\n\n      this.updateCellProps(cellIndex, cellIndex);\n    }\n  };\n\n  Selection.prototype.getColIndex = function (rowIndex, index) {\n    var frzCols = this.parent.isFrozenGrid();\n    var col = this.parent.getColumnByIndex(index);\n    var cells = getCellsByTableName(this.parent, col, rowIndex);\n\n    if (cells) {\n      for (var m = 0; m < cells.length; m++) {\n        var colIndex = parseInt(cells[m].getAttribute('aria-colindex'), 10);\n\n        if (colIndex === index) {\n          if (frzCols) {\n            if (col.getFreezeTableName() === 'movable') {\n              m += this.parent.getFrozenLeftCount();\n            } else if (col.getFreezeTableName() === 'frozen-right') {\n              m += this.parent.getFrozenLeftColumnsCount() + this.parent.getMovableColumnsCount();\n            }\n          }\n\n          return m;\n        }\n      }\n    }\n\n    return -1;\n  };\n\n  Selection.prototype.getLastColIndex = function (rowIndex) {\n    var cells = this.parent.getFrozenColumns() ? this.parent.getMovableDataRows()[rowIndex].querySelectorAll('td.e-rowcell') : this.parent.getDataRows()[rowIndex].querySelectorAll('td.e-rowcell');\n    return parseInt(cells[cells.length - 1].getAttribute('aria-colindex'), 10);\n  };\n\n  Selection.prototype.clearCell = function () {\n    this.clearCellSelection();\n  };\n\n  Selection.prototype.cellDeselect = function (type, cellIndexes, data, cells, foreignKeyData) {\n    var cancl = 'cancel';\n\n    if (cells[0] && cells[0].classList.contains('e-gridchkbox')) {\n      this.updateCheckBoxes(closest(cells[0], 'tr'));\n    }\n\n    var args = {\n      cells: cells,\n      data: data,\n      cellIndexes: cellIndexes,\n      foreignKeyData: foreignKeyData,\n      cancel: false\n    };\n    this.parent.trigger(type, args);\n    this.isPreventCellSelect = args[cancl];\n  };\n\n  Selection.prototype.updateCellSelection = function (selectedCell, rowIndex, cellIndex) {\n    if (!isNullOrUndefined(rowIndex)) {\n      this.addRowCellIndex({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n    }\n\n    selectedCell.classList.add('e-cellselectionbackground');\n\n    if (selectedCell.classList.contains('e-gridchkbox')) {\n      this.updateCheckBoxes(closest(selectedCell, 'tr'), true);\n    }\n\n    this.addAttribute(selectedCell);\n  };\n\n  Selection.prototype.addAttribute = function (cell) {\n    this.target = cell;\n\n    if (!isNullOrUndefined(cell)) {\n      cell.setAttribute('aria-selected', 'true');\n\n      if (!this.preventFocus) {\n        this.focus.onClick({\n          target: cell\n        }, true);\n      }\n    }\n  };\n\n  Selection.prototype.updateCellProps = function (startIndex, endIndex) {\n    this.prevCIdxs = startIndex;\n    this.prevECIdxs = endIndex;\n    this.isCellSelected = this.selectedRowCellIndexes.length && true;\n  };\n\n  Selection.prototype.addRowCellIndex = function (rowCellIndex) {\n    var isRowAvail;\n    var index;\n\n    for (var i = 0, len = this.selectedRowCellIndexes.length; i < len; i++) {\n      if (this.selectedRowCellIndexes[i].rowIndex === rowCellIndex.rowIndex) {\n        isRowAvail = true;\n        index = i;\n        break;\n      }\n    }\n\n    if (isRowAvail) {\n      if (this.selectedRowCellIndexes[index].cellIndexes.indexOf(rowCellIndex.cellIndex) < 0) {\n        this.selectedRowCellIndexes[index].cellIndexes.push(rowCellIndex.cellIndex);\n      }\n    } else {\n      this.selectedRowCellIndexes.push({\n        rowIndex: rowCellIndex.rowIndex,\n        cellIndexes: [rowCellIndex.cellIndex]\n      });\n    }\n  };\n  /**\n   * Deselects the currently selected cells.\n   * @return {void}\n   */\n\n\n  Selection.prototype.clearCellSelection = function () {\n    if (this.isCellSelected) {\n      var gObj = this.parent;\n      var selectedCells = this.getSelectedCellsElement();\n      var rowCell = this.selectedRowCellIndexes;\n      var data = [];\n      var cells = [];\n      var foreignKeyData = [];\n      var currentViewData = this.getCurrentBatchRecordChanges();\n      var selectedTable = void 0;\n      var frzCols = gObj.isFrozenGrid();\n      this.hideAutoFill();\n\n      for (var i = 0, len = rowCell.length; i < len; i++) {\n        data.push(currentViewData[rowCell[i].rowIndex]);\n        var rowObj = this.getRowObj(rowCell[i].rowIndex);\n\n        for (var j = 0, cLen = rowCell[i].cellIndexes.length; j < cLen; j++) {\n          if (frzCols) {\n            var col = gObj.getColumnByIndex(rowCell[i].cellIndexes[j]);\n            cells.push(getCellByColAndRowIndex(this.parent, col, rowCell[i].rowIndex, rowCell[i].cellIndexes[j]));\n          } else {\n            if (rowObj.cells) {\n              foreignKeyData.push(rowObj.cells[rowCell[i].cellIndexes[j]].foreignKeyData);\n            }\n\n            cells.push(gObj.getCellFromIndex(rowCell[i].rowIndex, rowCell[i].cellIndexes[j]));\n          }\n        }\n      }\n\n      this.cellDeselect(events.cellDeselecting, rowCell, data, cells, foreignKeyData);\n\n      if (this.isPreventCellSelect === true) {\n        return;\n      }\n\n      for (var i = 0, len = selectedCells.length; i < len; i++) {\n        selectedCells[i].classList.remove('e-cellselectionbackground');\n        selectedCells[i].removeAttribute('aria-selected');\n      }\n\n      if (this.bdrElement) {\n        this.showHideBorders('none');\n      }\n\n      this.selectedRowCellIndexes = [];\n      this.isCellSelected = false;\n\n      if (!this.isDragged && this.cellselected) {\n        this.cellDeselect(events.cellDeselected, rowCell, data, cells, foreignKeyData);\n      }\n    }\n  };\n\n  Selection.prototype.getSelectedCellsElement = function () {\n    var gObj = this.parent;\n    var rows = gObj.getDataRows();\n    var mRows;\n\n    if (gObj.isFrozenGrid()) {\n      mRows = gObj.getMovableDataRows();\n      rows = gObj.addMovableRows(rows, mRows);\n\n      if (gObj.getFrozenMode() === 'Left-Right') {\n        rows = gObj.addMovableRows(rows, gObj.getFrozenRightDataRows());\n      }\n    }\n\n    var cells = [];\n\n    for (var i = 0, len = rows.length; i < len; i++) {\n      cells = cells.concat([].slice.call(rows[i].querySelectorAll('.e-cellselectionbackground')));\n    }\n\n    return cells;\n  };\n\n  Selection.prototype.mouseMoveHandler = function (e) {\n    e.preventDefault();\n    var gBRect = this.parent.element.getBoundingClientRect();\n    var x1 = this.x;\n    var y1 = this.y;\n    var position = getPosition(e);\n    var x2 = position.x - gBRect.left;\n    var y2 = position.y - gBRect.top;\n    var tmp;\n    var target = closest(e.target, 'tr');\n    this.isDragged = true;\n\n    if (!this.isCellDrag) {\n      if (!target) {\n        target = closest(document.elementFromPoint(this.parent.element.offsetLeft + 2, e.clientY), 'tr');\n      }\n\n      if (x1 > x2) {\n        tmp = x2;\n        x2 = x1;\n        x1 = tmp;\n      }\n\n      if (y1 > y2) {\n        tmp = y2;\n        y2 = y1;\n        y1 = tmp;\n      }\n\n      this.element.style.left = x1 + 'px';\n      this.element.style.top = y1 + 'px';\n      this.element.style.width = x2 - x1 + 'px';\n      this.element.style.height = y2 - y1 + 'px';\n    }\n\n    if (target && !e.ctrlKey && !e.shiftKey) {\n      var rowIndex = parseInt(target.getAttribute('aria-rowindex'), 10);\n\n      if (!this.isCellDrag) {\n        this.hideAutoFill();\n        this.selectRowsByRange(this.startDIndex, rowIndex);\n      } else {\n        var td = parentsUntil(e.target, 'e-rowcell');\n\n        if (td) {\n          this.startAFCell = this.startCell;\n          this.endAFCell = parentsUntil(e.target, 'e-rowcell');\n          this.selectLikeExcel(e, rowIndex, parseInt(td.getAttribute('aria-colindex'), 10));\n        }\n      }\n    }\n  };\n\n  Selection.prototype.selectLikeExcel = function (e, rowIndex, cellIndex) {\n    if (!this.isAutoFillSel) {\n      this.clearCellSelection();\n      this.selectCellsByRange({\n        rowIndex: this.startDIndex,\n        cellIndex: this.startDCellIndex\n      }, {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n      this.drawBorders();\n    } else {\n      //Autofill\n      this.showAFBorders();\n      this.selectLikeAutoFill(e);\n    }\n  };\n\n  Selection.prototype.drawBorders = function () {\n    if (this.selectionSettings.cellSelectionMode === 'BoxWithBorder' && this.selectedRowCellIndexes.length && !this.parent.isEdit) {\n      this.parent.element.classList.add('e-enabledboxbdr');\n\n      if (!this.bdrElement) {\n        this.createBorders();\n      }\n\n      this.positionBorders();\n    } else {\n      this.showHideBorders('none');\n    }\n  };\n\n  Selection.prototype.isLastCell = function (cell) {\n    var cells = [].slice.call(cell.parentElement.querySelectorAll('.e-rowcell:not(.e-hide)'));\n    return cells[cells.length - 1] === cell;\n  };\n\n  Selection.prototype.isLastRow = function (cell) {\n    var rows = [].slice.call(closest(cell, 'tbody').querySelectorAll('.e-row:not(.e-hiddenrow)'));\n    return cell.parentElement === rows[rows.length - 1];\n  };\n\n  Selection.prototype.isFirstRow = function (cell) {\n    var rows = [].slice.call(closest(cell, 'tbody').querySelectorAll('.e-row:not(.e-hiddenrow)'));\n    return cell.parentElement === rows[0];\n  };\n\n  Selection.prototype.isFirstCell = function (cell) {\n    var cells = [].slice.call(cell.parentElement.querySelectorAll('.e-rowcell:not(.e-hide)'));\n    return cells[0] === cell;\n  };\n\n  Selection.prototype.setBorders = function (parentEle, border, bdrStr) {\n    var cells = [].slice.call(parentEle.querySelectorAll('.e-cellselectionbackground')).filter(function (ele) {\n      return ele.style.display === '';\n    });\n\n    if (cells.length) {\n      var isFrozen = this.parent.isFrozenGrid();\n      var start = cells[0];\n      var end = cells[cells.length - 1];\n      var stOff = start.getBoundingClientRect();\n      var endOff = end.getBoundingClientRect();\n      var parentOff = start.offsetParent.getBoundingClientRect();\n      var rowHeight = this.isLastRow(end) && (bdrStr === '1' || bdrStr === '2' || bdrStr === '5') ? 2 : 0;\n      var topOffSet = this.parent.frozenRows && (bdrStr === '1' || bdrStr === '2') && this.isFirstRow(start) ? 1.5 : 0;\n      var leftOffset = isFrozen && (bdrStr === '2' || bdrStr === '4') && this.isFirstCell(start) ? 1 : 0;\n      var rightOffset = (this.parent.getFrozenMode() === 'Right' && (bdrStr === '1' || bdrStr === '3') || this.parent.getFrozenMode() === 'Left-Right' && (bdrStr === '5' || bdrStr === '6')) && this.isFirstCell(start) ? 1 : 0;\n\n      if (this.parent.enableRtl) {\n        border.style.right = parentOff.right - stOff.right - leftOffset + 'px';\n        border.style.width = stOff.right - endOff.left + leftOffset + 1 + 'px';\n      } else {\n        border.style.left = stOff.left - parentOff.left - leftOffset - rightOffset + 'px';\n        border.style.width = endOff.right - stOff.left + leftOffset - rightOffset + 1 + 'px';\n      }\n\n      border.style.top = stOff.top - parentOff.top - topOffSet + 'px';\n      border.style.height = endOff.top - stOff.top > 0 ? endOff.top - parentOff.top + endOff.height + 1 - (stOff.top - parentOff.top) - rowHeight + topOffSet + 'px' : endOff.height + topOffSet - rowHeight + 1 + 'px';\n      this.selectDirection += bdrStr;\n    } else {\n      border.style.display = 'none';\n    }\n  };\n\n  Selection.prototype.positionBorders = function () {\n    this.updateStartEndCells();\n\n    if (!this.startCell || !this.bdrElement || !this.selectedRowCellIndexes.length) {\n      return;\n    }\n\n    this.selectDirection = '';\n    this.showHideBorders('');\n    this.setBorders(this.parent.getContentTable(), this.bdrElement, '1');\n\n    if (this.parent.isFrozenGrid()) {\n      this.setBorders(this.parent.contentModule.getMovableContent(), this.mcBdrElement, '2');\n\n      if (this.parent.getFrozenMode() === 'Left-Right') {\n        this.setBorders(this.parent.contentModule.getFrozenRightContent(), this.frcBdrElement, '5');\n      }\n    }\n\n    if (this.parent.frozenRows) {\n      this.setBorders(this.parent.getHeaderTable(), this.fhBdrElement, '3');\n\n      if (this.parent.isFrozenGrid()) {\n        this.setBorders(this.parent.headerModule.getMovableHeader(), this.mhBdrElement, '4');\n\n        if (this.parent.getFrozenMode() === 'Left-Right') {\n          this.setBorders(this.parent.headerModule.getFrozenRightHeader(), this.frhBdrElement, '6');\n        }\n      }\n    }\n\n    this.applyBorders(this.selectDirection);\n  };\n\n  Selection.prototype.applyBothFrozenBorders = function (str) {\n    var rtl = this.parent.enableRtl;\n\n    switch (str.length) {\n      case 6:\n        {\n          this.bdrElement.style.borderWidth = rtl ? '0 2px 2px 0' : '0 0 2px 2px';\n          this.mcBdrElement.style.borderWidth = '0 0 2px 0';\n          this.fhBdrElement.style.borderWidth = rtl ? '2px 2px 0 0' : '2px 0 0 2px';\n          this.mhBdrElement.style.borderWidth = '2px 0 0 0';\n          this.frcBdrElement.style.borderWidth = rtl ? '0 0 2px 2px' : '0 2px 2px 0';\n          this.frhBdrElement.style.borderWidth = rtl ? '2px 0 0 2px' : '2px 2px 0 0';\n        }\n        break;\n\n      case 4:\n        {\n          if (str.includes('1') && str.includes('2') && str.includes('3') && str.includes('4')) {\n            this.bdrElement.style.borderWidth = rtl ? '0 2px 2px 0' : '0 0 2px 2px';\n            this.mcBdrElement.style.borderWidth = rtl ? '0 0 2px 2px' : '0 2px 2px 0';\n            this.fhBdrElement.style.borderWidth = rtl ? '2px 2px 0 0' : '2px 0 0 2px';\n            this.mhBdrElement.style.borderWidth = rtl ? '2px 0 0 2px' : '2px 2px 0 0';\n          }\n\n          if (str.includes('2') && str.includes('4') && str.includes('5') && str.includes('6')) {\n            this.mcBdrElement.style.borderWidth = rtl ? '0 2px 2px 0' : '0 0 2px 2px';\n            this.mhBdrElement.style.borderWidth = rtl ? '2px 2px 0 0' : '2px 0 0 2px';\n            this.frcBdrElement.style.borderWidth = rtl ? '0 0 2px 2px' : '0 2px 2px 0';\n            this.frhBdrElement.style.borderWidth = rtl ? '2px 0 0 2px' : '2px 2px 0 0';\n          }\n        }\n        break;\n\n      case 3:\n        {\n          this.bdrElement.style.borderWidth = rtl ? '2px 2px 2px 0' : '2px 0 2px 2px';\n          this.mcBdrElement.style.borderWidth = '2p 0 2px 0';\n          this.frcBdrElement.style.borderWidth = rtl ? '2px 0 2px 2px' : '2px 2px 2px 0';\n\n          if (this.parent.frozenRows) {\n            this.fhBdrElement.style.borderWidth = rtl ? '2px 2px 2px 0' : '2px 0 2px 2px';\n            this.mhBdrElement.style.borderWidth = '2px 0 2px 0';\n            this.frcBdrElement.style.borderWidth = rtl ? '2px 0 2px 2px' : '2px 2px 2px 0';\n          }\n        }\n        break;\n\n      case 2:\n        {\n          if (str.includes('1')) {\n            this.mcBdrElement.style.borderWidth = rtl ? '2px 0 2px 2px' : '2px 2px 2px 0';\n\n            if (this.parent.frozenRows) {\n              this.fhBdrElement.style.borderWidth = '2px 2px 0 2px';\n            }\n          }\n\n          if (str.includes('2')) {\n            this.bdrElement.style.borderWidth = rtl ? '2px 2px 2px 0' : '2px 0 2px 2px';\n            this.frcBdrElement.style.borderWidth = rtl ? '2px 0 2px 2px' : '2px 2px 2px 0';\n\n            if (this.parent.frozenRows) {\n              this.mhBdrElement.style.borderWidth = '2px 2px 0 2px';\n            }\n          }\n\n          if (str.includes('3')) {\n            this.mhBdrElement.style.borderWidth = rtl ? '2px 0 2px 2px' : '2px 2px 2px 0';\n            this.bdrElement.style.borderWidth = '0 2px 2px 2px';\n          }\n\n          if (str.includes('4')) {\n            this.fhBdrElement.style.borderWidth = rtl ? '2px 2px 2px 0' : '2px 0 2px 2px';\n            this.frhBdrElement.style.borderWidth = rtl ? '2px 0 2px 2px' : '2px 2px 2px 0';\n            this.mcBdrElement.style.borderWidth = '0 2px 2px 2px';\n          }\n\n          if (str.includes('5')) {\n            this.mcBdrElement.style.borderWidth = rtl ? '2px 2px 2px 0' : '2px 0 2px 2px';\n\n            if (this.parent.frozenRows) {\n              this.frhBdrElement.style.borderWidth = '2px 2px 0 2px';\n            }\n          }\n\n          if (str.includes('6')) {\n            this.mhBdrElement.style.borderWidth = rtl ? '2px 2px 2px 0' : '2px 0 2px 2px';\n            this.frcBdrElement.style.borderWidth = '0 2px 2px 2px';\n          }\n        }\n        break;\n\n      default:\n        this.bdrElement.style.borderWidth = '2px';\n        this.mcBdrElement.style.borderWidth = '2px';\n        this.frcBdrElement.style.borderWidth = '2px';\n\n        if (this.parent.frozenRows) {\n          this.fhBdrElement.style.borderWidth = '2px';\n          this.mhBdrElement.style.borderWidth = '2px';\n          this.frhBdrElement.style.borderWidth = '2px';\n        }\n\n        break;\n    }\n  };\n\n  Selection.prototype.applyBorders = function (str) {\n    var rtl = this.parent.enableRtl;\n\n    if (this.parent.getFrozenMode() === 'Left-Right') {\n      this.applyBothFrozenBorders(str);\n    } else {\n      switch (str.length) {\n        case 4:\n          {\n            if (this.parent.getFrozenMode() === 'Right') {\n              this.bdrElement.style.borderWidth = rtl ? '0 0 2px 2px' : '0 2px 2px 0';\n              this.mcBdrElement.style.borderWidth = rtl ? '0 2px 2px 0' : '0 0 2px 2px';\n              this.fhBdrElement.style.borderWidth = rtl ? '2px 0 0 2px' : '2px 2px 0 0';\n              this.mhBdrElement.style.borderWidth = rtl ? '2px 2px 0 0' : '2px 0 0 2px';\n            } else {\n              this.bdrElement.style.borderWidth = rtl ? '0 2px 2px 0' : '0 0 2px 2px';\n              this.mcBdrElement.style.borderWidth = rtl ? '0 0 2px 2px' : '0 2px 2px 0';\n              this.fhBdrElement.style.borderWidth = rtl ? '2px 2px 0 0' : '2px 0 0 2px';\n              this.mhBdrElement.style.borderWidth = rtl ? '2px 0 0 2px' : '2px 2px 0 0';\n            }\n          }\n          break;\n\n        case 2:\n          {\n            if (this.parent.getFrozenMode() === 'Right') {\n              this.bdrElement.style.borderWidth = str.includes('2') ? rtl ? '2px 0 2px 2px' : '2px 2px 2px 0' : '0 2px 2px 2px';\n              this.mcBdrElement.style.borderWidth = str.includes('1') ? rtl ? '2px 2px 2px 0' : '2px 0 2px 2px' : '0 2px 2px 2px';\n\n              if (this.parent.frozenRows) {\n                this.fhBdrElement.style.borderWidth = str.includes('1') ? '2px 2px 0 2px' : rtl ? '2px 0 2px 2px' : '2px 2px 2px 0';\n                this.mhBdrElement.style.borderWidth = str.includes('2') ? '2px 2px 0 2px' : rtl ? '2px 2px 2px 0' : '2px 0 2px 2px';\n              }\n            } else {\n              this.bdrElement.style.borderWidth = str.includes('2') ? rtl ? '2px 2px 2px 0' : '2px 0 2px 2px' : '0 2px 2px 2px';\n\n              if (this.parent.isFrozenGrid()) {\n                this.mcBdrElement.style.borderWidth = str.includes('1') ? rtl ? '2px 0 2px 2px' : '2px 2px 2px 0' : '0 2px 2px 2px';\n              }\n\n              if (this.parent.frozenRows) {\n                this.fhBdrElement.style.borderWidth = str.includes('1') ? '2px 2px 0 2px' : rtl ? '2px 2px 2px 0' : '2px 0 2px 2px';\n\n                if (this.parent.isFrozenGrid()) {\n                  this.mhBdrElement.style.borderWidth = str.includes('2') ? '2px 2px 0 2px' : rtl ? '2px 0 2px 2px' : '2px 2px 2px 0';\n                }\n              }\n            }\n          }\n          break;\n\n        default:\n          this.bdrElement.style.borderWidth = '2px';\n\n          if (this.parent.isFrozenGrid()) {\n            this.mcBdrElement.style.borderWidth = '2px';\n          }\n\n          if (this.parent.frozenRows) {\n            this.fhBdrElement.style.borderWidth = '2px';\n\n            if (this.parent.isFrozenGrid()) {\n              this.mhBdrElement.style.borderWidth = '2px';\n            }\n          }\n\n          break;\n      }\n    }\n  };\n\n  Selection.prototype.createBorders = function () {\n    if (!this.bdrElement) {\n      this.bdrElement = this.parent.getContentTable().parentElement.appendChild(createElement('div', {\n        className: 'e-xlsel',\n        id: this.parent.element.id + '_bdr',\n        styles: 'width: 2px; border-width: 0;'\n      }));\n\n      if (this.parent.isFrozenGrid()) {\n        this.mcBdrElement = this.parent.contentModule.getMovableContent().appendChild(createElement('div', {\n          className: 'e-xlsel',\n          id: this.parent.element.id + '_mcbdr',\n          styles: 'height: 2px; border-width: 0;'\n        }));\n\n        if (this.parent.getFrozenMode() === 'Left-Right') {\n          this.frcBdrElement = this.parent.contentModule.getFrozenRightContent().appendChild(createElement('div', {\n            className: 'e-xlsel',\n            id: this.parent.element.id + '_frcbdr',\n            styles: 'height: 2px; border-width: 0;'\n          }));\n        }\n      }\n\n      if (this.parent.frozenRows) {\n        this.fhBdrElement = this.parent.getHeaderTable().parentElement.appendChild(createElement('div', {\n          className: 'e-xlsel',\n          id: this.parent.element.id + '_fhbdr',\n          styles: 'height: 2px;'\n        }));\n      }\n\n      if (this.parent.frozenRows && this.parent.isFrozenGrid()) {\n        this.mhBdrElement = this.parent.headerModule.getMovableHeader().appendChild(createElement('div', {\n          className: 'e-xlsel',\n          id: this.parent.element.id + '_mhbdr',\n          styles: 'height: 2px;'\n        }));\n\n        if (this.parent.getFrozenMode() === 'Left-Right') {\n          this.frhBdrElement = this.parent.headerModule.getFrozenRightHeader().appendChild(createElement('div', {\n            className: 'e-xlsel',\n            id: this.parent.element.id + '_frhbdr',\n            styles: 'height: 2px;'\n          }));\n        }\n      }\n    }\n  };\n\n  Selection.prototype.showHideBorders = function (display) {\n    if (this.bdrElement) {\n      this.bdrElement.style.display = display;\n\n      if (this.parent.isFrozenGrid()) {\n        this.mcBdrElement.style.display = display;\n\n        if (this.parent.getFrozenMode() === 'Left-Right') {\n          this.frcBdrElement.style.display = display;\n        }\n      }\n\n      if (this.parent.frozenRows) {\n        this.fhBdrElement.style.display = display;\n      }\n\n      if (this.parent.frozenRows && this.parent.isFrozenGrid()) {\n        this.mhBdrElement.style.display = display;\n\n        if (this.parent.getFrozenMode() === 'Left-Right') {\n          this.frhBdrElement.style.display = display;\n        }\n      }\n    }\n  };\n\n  Selection.prototype.drawAFBorders = function () {\n    if (!this.bdrAFBottom) {\n      this.createAFBorders();\n    }\n\n    this.positionAFBorders();\n  };\n\n  Selection.prototype.positionAFBorders = function () {\n    if (!this.startCell || !this.bdrAFLeft) {\n      return;\n    }\n\n    var stOff = this.startAFCell.getBoundingClientRect();\n    var endOff = this.endAFCell.getBoundingClientRect();\n    var top = endOff.top - stOff.top > 0 ? 1 : 0;\n    var firstCellTop = endOff.top - stOff.top >= 0 && (parentsUntil(this.startAFCell, 'e-movablecontent') || parentsUntil(this.startAFCell, 'e-frozencontent')) && this.isFirstRow(this.startAFCell) ? 1.5 : 0;\n    var firstCellLeft = (parentsUntil(this.startAFCell, 'e-movablecontent') || parentsUntil(this.startAFCell, 'e-movableheader')) && this.isFirstCell(this.startAFCell) ? 1 : 0;\n    var rowHeight = this.isLastRow(this.endAFCell) && (parentsUntil(this.endAFCell, 'e-movablecontent') || parentsUntil(this.endAFCell, 'e-frozencontent')) ? 2 : 0;\n    var parentOff = this.startAFCell.offsetParent.getBoundingClientRect();\n    var parentRect = this.parent.element.getBoundingClientRect();\n    var sTop = this.startAFCell.offsetParent.parentElement.scrollTop;\n    var sLeft = this.startAFCell.offsetParent.parentElement.scrollLeft;\n    var scrollTop = sTop - this.startAFCell.offsetTop;\n    var scrollLeft = sLeft - this.startAFCell.offsetLeft;\n    var totalHeight = this.parent.element.clientHeight;\n    var totalWidth = this.parent.element.clientWidth;\n    scrollTop = scrollTop > 0 ? Math.floor(scrollTop) - 1 : 0;\n    scrollLeft = scrollLeft > 0 ? scrollLeft : 0;\n    var left = stOff.left - parentRect.left;\n\n    if (!this.parent.enableRtl) {\n      this.bdrAFLeft.style.left = left - firstCellLeft + scrollLeft - 1 + 'px';\n      this.bdrAFRight.style.left = endOff.left - parentRect.left - 2 + endOff.width + 'px';\n      this.bdrAFRight.style.width = totalWidth <= parseInt(this.bdrAFRight.style.left, 10) ? '0px' : '2px';\n      this.bdrAFTop.style.left = left + scrollLeft - 0.5 + 'px';\n      this.bdrAFTop.style.width = parseInt(this.bdrAFRight.style.left, 10) - parseInt(this.bdrAFLeft.style.left, 10) - firstCellLeft + 1 + 'px';\n\n      if (totalWidth <= parseInt(this.bdrAFTop.style.width, 10) + parseInt(this.bdrAFTop.style.left, 10)) {\n        var leftRemove = parseInt(this.bdrAFTop.style.width, 10) + parseInt(this.bdrAFTop.style.left, 10) - totalWidth;\n        this.bdrAFTop.style.width = parseInt(this.bdrAFTop.style.width, 10) - leftRemove + 'px';\n      }\n    } else {\n      var scrolloffSet = parentsUntil(this.startAFCell, 'e-movablecontent') || parentsUntil(this.startAFCell, 'e-movableheader') ? stOff.right - this.startAFCell.offsetParent.parentElement.getBoundingClientRect().width - parentRect.left : 0;\n      this.bdrAFLeft.style.right = parentRect.right - endOff.right - 2 + endOff.width + 'px';\n      this.bdrAFLeft.style.width = totalWidth <= parseInt(this.bdrAFLeft.style.right, 10) ? '0px' : '2px';\n      this.bdrAFRight.style.right = parentRect.right - stOff.right - firstCellLeft + scrolloffSet - 1 + 'px';\n      this.bdrAFTop.style.left = endOff.left - parentRect.left - 0.5 + 'px';\n      this.bdrAFTop.style.width = parseInt(this.bdrAFLeft.style.right, 10) - parseInt(this.bdrAFRight.style.right, 10) - firstCellLeft + 1 + 'px';\n\n      if (parseInt(this.bdrAFTop.style.left, 10) < 0) {\n        this.bdrAFTop.style.width = parseInt(this.bdrAFTop.style.width, 10) + parseInt(this.bdrAFTop.style.left, 10) + 'px';\n        this.bdrAFTop.style.left = '0px';\n      }\n    }\n\n    this.bdrAFLeft.style.top = stOff.top - parentRect.top - firstCellTop + scrollTop + 'px';\n    this.bdrAFLeft.style.height = endOff.top - stOff.top > 0 ? endOff.top - parentOff.top + endOff.height + 1 - (stOff.top - parentOff.top) + firstCellTop - rowHeight - scrollTop + 'px' : endOff.height + firstCellTop - rowHeight - scrollTop + 'px';\n    this.bdrAFRight.style.top = this.bdrAFLeft.style.top;\n    this.bdrAFRight.style.height = parseInt(this.bdrAFLeft.style.height, 10) + 'px';\n    this.bdrAFTop.style.top = this.bdrAFRight.style.top;\n    this.bdrAFBottom.style.left = this.bdrAFTop.style.left;\n    this.bdrAFBottom.style.top = parseFloat(this.bdrAFLeft.style.top) + parseFloat(this.bdrAFLeft.style.height) - top - 1 + 'px';\n    this.bdrAFBottom.style.width = totalHeight <= parseFloat(this.bdrAFBottom.style.top) ? '0px' : this.bdrAFTop.style.width;\n\n    if (totalHeight <= parseInt(this.bdrAFLeft.style.height, 10) + parseInt(this.bdrAFLeft.style.top, 10)) {\n      var topRemove = parseInt(this.bdrAFLeft.style.height, 10) + parseInt(this.bdrAFLeft.style.top, 10) - totalHeight;\n      this.bdrAFLeft.style.height = parseInt(this.bdrAFLeft.style.height, 10) - topRemove + 'px';\n      this.bdrAFRight.style.height = parseInt(this.bdrAFLeft.style.height, 10) + 'px';\n    }\n  };\n\n  Selection.prototype.createAFBorders = function () {\n    if (!this.bdrAFLeft) {\n      this.bdrAFLeft = this.parent.element.appendChild(createElement('div', {\n        className: 'e-xlselaf',\n        id: this.parent.element.id + '_bdrafleft',\n        styles: 'width: 2px;'\n      }));\n      this.bdrAFRight = this.parent.element.appendChild(createElement('div', {\n        className: 'e-xlselaf',\n        id: this.parent.element.id + '_bdrafright',\n        styles: 'width: 2px;'\n      }));\n      this.bdrAFBottom = this.parent.element.appendChild(createElement('div', {\n        className: 'e-xlselaf',\n        id: this.parent.element.id + '_bdrafbottom',\n        styles: 'height: 2px;'\n      }));\n      this.bdrAFTop = this.parent.element.appendChild(createElement('div', {\n        className: 'e-xlselaf',\n        id: this.parent.element.id + '_bdraftop',\n        styles: 'height: 2px;'\n      }));\n    }\n  };\n\n  Selection.prototype.showAFBorders = function () {\n    if (this.bdrAFLeft) {\n      this.bdrAFLeft.style.display = '';\n      this.bdrAFRight.style.display = '';\n      this.bdrAFBottom.style.display = '';\n      this.bdrAFTop.style.display = '';\n    }\n  };\n\n  Selection.prototype.hideAFBorders = function () {\n    if (this.bdrAFLeft) {\n      this.bdrAFLeft.style.display = 'none';\n      this.bdrAFRight.style.display = 'none';\n      this.bdrAFBottom.style.display = 'none';\n      this.bdrAFTop.style.display = 'none';\n    }\n  };\n\n  Selection.prototype.updateValue = function (rIdx, cIdx, cell) {\n    var args = this.createBeforeAutoFill(rIdx, cIdx, cell);\n\n    if (!args.cancel) {\n      var col = this.parent.getColumnByIndex(cIdx);\n\n      if (this.parent.editModule && cell) {\n        if (col.type === 'number') {\n          this.parent.editModule.updateCell(rIdx, col.field, parseInt(args.value, 10));\n        } else {\n          this.parent.editModule.updateCell(rIdx, col.field, args.value);\n        }\n      }\n    }\n  };\n\n  Selection.prototype.createBeforeAutoFill = function (rowIndex, colIndex, cell) {\n    var col = this.parent.getColumnByIndex(colIndex);\n    var args = {\n      column: col,\n      value: cell.innerText\n    };\n    this.parent.trigger(events.beforeAutoFill, args);\n    return args;\n  };\n\n  Selection.prototype.getAutoFillCells = function (rowIndex, startCellIdx) {\n    var cls = '.e-cellselectionbackground';\n    var cells = [].slice.call(this.parent.getDataRows()[rowIndex].querySelectorAll(cls));\n\n    if (this.parent.isFrozenGrid()) {\n      cells = cells.concat([].slice.call(this.parent.getMovableDataRows()[rowIndex].querySelectorAll(cls)));\n\n      if (this.parent.getFrozenMode() === 'Left-Right') {\n        cells = cells.concat([].slice.call(this.parent.getFrozenRightDataRows()[rowIndex].querySelectorAll(cls)));\n      }\n    }\n\n    return cells;\n  };\n  /* tslint:disable-next-line:max-func-body-length */\n\n\n  Selection.prototype.selectLikeAutoFill = function (e, isApply) {\n    var startrowIdx = parseInt(parentsUntil(this.startAFCell, 'e-row').getAttribute('aria-rowindex'), 10);\n    var startCellIdx = parseInt(this.startAFCell.getAttribute('aria-colindex'), 10);\n    var endrowIdx = parseInt(parentsUntil(this.endAFCell, 'e-row').getAttribute('aria-rowindex'), 10);\n    var endCellIdx = parseInt(this.endAFCell.getAttribute('aria-colindex'), 10);\n    var rowLen = this.selectedRowCellIndexes.length - 1;\n    var colLen = this.selectedRowCellIndexes[0].cellIndexes.length - 1;\n    var col;\n\n    switch (true) {\n      //direction         \n      case !isApply && this.endAFCell.classList.contains('e-cellselectionbackground') && !!parentsUntil(e.target, 'e-rowcell'):\n        this.startAFCell = this.parent.getCellFromIndex(startrowIdx, startCellIdx);\n        this.endAFCell = this.parent.getCellFromIndex(startrowIdx + rowLen, startCellIdx + colLen);\n        this.drawAFBorders();\n        break;\n\n      case this.autoFillRLselection && startCellIdx + colLen < endCellIdx && //right\n      endCellIdx - startCellIdx - colLen + 1 > endrowIdx - startrowIdx - rowLen // right bottom\n      && endCellIdx - startCellIdx - colLen + 1 > startrowIdx - endrowIdx:\n        //right top\n        this.endAFCell = this.parent.getCellFromIndex(startrowIdx + rowLen, endCellIdx);\n        endrowIdx = parseInt(parentsUntil(this.endAFCell, 'e-row').getAttribute('aria-rowindex'), 10);\n        endCellIdx = parseInt(this.endAFCell.getAttribute('aria-colindex'), 10);\n\n        if (!isApply) {\n          this.drawAFBorders();\n        } else {\n          var cellIdx = parseInt(this.endCell.getAttribute('aria-colindex'), 10);\n\n          for (var i = startrowIdx; i <= endrowIdx; i++) {\n            var cells = this.getAutoFillCells(i, startCellIdx);\n            var c = 0;\n\n            for (var j = cellIdx + 1; j <= endCellIdx; j++) {\n              if (c > colLen) {\n                c = 0;\n              }\n\n              this.updateValue(i, j, cells[c]);\n              c++;\n            }\n          }\n\n          this.selectCellsByRange({\n            rowIndex: startrowIdx,\n            cellIndex: this.startCellIndex\n          }, {\n            rowIndex: endrowIdx,\n            cellIndex: endCellIdx\n          });\n        }\n\n        break;\n\n      case this.autoFillRLselection && startCellIdx > endCellIdx && // left\n      startCellIdx - endCellIdx + 1 > endrowIdx - startrowIdx - rowLen && //left top\n      startCellIdx - endCellIdx + 1 > startrowIdx - endrowIdx:\n        // left bottom\n        this.startAFCell = this.parent.getCellFromIndex(startrowIdx, endCellIdx);\n        this.endAFCell = this.endCell;\n\n        if (!isApply) {\n          this.drawAFBorders();\n        } else {\n          for (var i = startrowIdx; i <= startrowIdx + rowLen; i++) {\n            var cells = this.getAutoFillCells(i, startCellIdx);\n            cells.reverse();\n            var c = 0;\n\n            for (var j = this.startCellIndex - 1; j >= endCellIdx; j--) {\n              if (c > colLen) {\n                c = 0;\n              }\n\n              this.updateValue(i, j, cells[c]);\n              c++;\n            }\n          }\n\n          this.selectCellsByRange({\n            rowIndex: startrowIdx,\n            cellIndex: endCellIdx\n          }, {\n            rowIndex: startrowIdx + rowLen,\n            cellIndex: this.startCellIndex + colLen\n          });\n        }\n\n        break;\n\n      case startrowIdx > endrowIdx:\n        //up\n        this.startAFCell = this.parent.getCellFromIndex(endrowIdx, startCellIdx);\n        this.endAFCell = this.endCell;\n\n        if (!isApply) {\n          this.drawAFBorders();\n        } else {\n          var trIdx = parseInt(this.endCell.parentElement.getAttribute('aria-rowindex'), 10);\n          var r = trIdx;\n\n          for (var i = startrowIdx - 1; i >= endrowIdx; i--) {\n            if (r === this.startIndex - 1) {\n              r = trIdx;\n            }\n\n            var cells = this.getAutoFillCells(r, startCellIdx);\n            var c = 0;\n            r--;\n\n            for (var j = this.startCellIndex; j <= this.startCellIndex + colLen; j++) {\n              this.updateValue(i, j, cells[c]);\n              c++;\n            }\n          }\n\n          this.selectCellsByRange({\n            rowIndex: endrowIdx,\n            cellIndex: startCellIdx + colLen\n          }, {\n            rowIndex: startrowIdx + rowLen,\n            cellIndex: startCellIdx\n          });\n        }\n\n        break;\n\n      default:\n        //down\n        this.endAFCell = this.parent.getCellFromIndex(endrowIdx, startCellIdx + colLen);\n\n        if (!isApply) {\n          this.drawAFBorders();\n        } else {\n          var trIdx = parseInt(this.endCell.parentElement.getAttribute('aria-rowindex'), 10);\n          var r = this.startIndex;\n\n          for (var i = trIdx + 1; i <= endrowIdx; i++) {\n            if (r === trIdx + 1) {\n              r = this.startIndex;\n            }\n\n            var cells = this.getAutoFillCells(r, startCellIdx);\n            r++;\n            var c = 0;\n\n            for (var m = this.startCellIndex; m <= this.startCellIndex + colLen; m++) {\n              this.updateValue(i, m, cells[c]);\n              c++;\n            }\n          }\n\n          this.selectCellsByRange({\n            rowIndex: trIdx - rowLen,\n            cellIndex: startCellIdx\n          }, {\n            rowIndex: endrowIdx,\n            cellIndex: startCellIdx + colLen\n          });\n        }\n\n        break;\n    }\n  };\n\n  Selection.prototype.mouseUpHandler = function (e) {\n    document.body.classList.remove('e-disableuserselect');\n\n    if (this.element) {\n      remove(this.element);\n    }\n\n    if (this.isDragged && this.selectedRowCellIndexes.length === 1 && this.selectedRowCellIndexes[0].cellIndexes.length === 1) {\n      this.mUPTarget = parentsUntil(e.target, 'e-rowcell');\n    } else {\n      this.mUPTarget = null;\n    }\n\n    if (this.isDragged && !this.isAutoFillSel && this.selectionSettings.mode === 'Cell') {\n      var target = e.target;\n      var rowIndex = parseInt(target.parentElement.getAttribute('aria-rowindex'), 10);\n      var cellIndex = parseInt(target.getAttribute('aria-colindex'), 10);\n      this.isDragged = false;\n      this.clearCellSelection();\n      this.selectCellsByRange({\n        rowIndex: this.startDIndex,\n        cellIndex: this.startDCellIndex\n      }, {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n    }\n\n    this.isDragged = false;\n    this.updateAutoFillPosition();\n\n    if (this.isAutoFillSel) {\n      var lastCell = parentsUntil(e.target, 'e-rowcell');\n      this.endAFCell = lastCell ? lastCell : this.endCell === this.endAFCell ? this.startAFCell : this.endAFCell;\n      this.startAFCell = this.startCell;\n      this.updateStartCellsIndex();\n      this.selectLikeAutoFill(e, true);\n      this.updateAutoFillPosition();\n      this.hideAFBorders();\n      this.positionBorders();\n      this.isAutoFillSel = false;\n    }\n\n    EventHandler.remove(this.parent.getContent(), 'mousemove', this.mouseMoveHandler);\n\n    if (this.parent.frozenRows) {\n      EventHandler.remove(this.parent.getHeaderContent(), 'mousemove', this.mouseMoveHandler);\n    }\n\n    EventHandler.remove(document.body, 'mouseup', this.mouseUpHandler);\n  };\n\n  Selection.prototype.hideAutoFill = function () {\n    if (this.autofill) {\n      this.autofill.style.display = 'none';\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Selection.prototype.updateAutoFillPosition = function () {\n    if (this.parent.enableAutoFill && !this.parent.isEdit && this.selectionSettings.cellSelectionMode.indexOf('Box') > -1 && !this.isRowType() && !this.isSingleSel() && this.selectedRowCellIndexes.length) {\n      var index = parseInt(this.target.getAttribute('aria-colindex'), 10);\n      var rindex = parseInt(this.target.getAttribute('index'), 10);\n      var rowIndex = this.selectedRowCellIndexes[this.selectedRowCellIndexes.length - 1].rowIndex;\n      var cells = this.getAutoFillCells(rowIndex, index).filter(function (ele) {\n        return ele.style.display === '';\n      });\n      var col = this.parent.getColumnByIndex(index);\n      var isFrozenCol = col.getFreezeTableName() === 'movable';\n      var isFrozenRow = rindex < this.parent.frozenRows;\n      var isFrozenRight = this.parent.getFrozenMode() === 'Left-Right' && col.getFreezeTableName() === 'frozen-right';\n\n      if (!select('#' + this.parent.element.id + '_autofill', parentsUntil(this.target, 'e-table'))) {\n        if (select('#' + this.parent.element.id + '_autofill', this.parent.element)) {\n          select('#' + this.parent.element.id + '_autofill', this.parent.element).remove();\n        }\n\n        this.autofill = createElement('div', {\n          className: 'e-autofill',\n          id: this.parent.element.id + '_autofill'\n        });\n        this.autofill.style.display = 'none';\n        !isFrozenRow ? !isFrozenCol ? this.parent.getContentTable().parentElement.appendChild(this.autofill) : this.parent.contentModule.getMovableContent().appendChild(this.autofill) : !isFrozenCol ? this.parent.getHeaderTable().parentElement.appendChild(this.autofill) : this.parent.headerModule.getMovableHeader().appendChild(this.autofill);\n\n        if (isFrozenRight) {\n          isFrozenRow ? this.parent.getFrozenRightHeader().appendChild(this.autofill) : this.parent.getFrozenRightContent().appendChild(this.autofill);\n        }\n      }\n\n      var cell = cells[cells.length - 1];\n\n      if (cell && cell.offsetParent) {\n        var clientRect = cell.getBoundingClientRect();\n        var parentOff = cell.offsetParent.getBoundingClientRect();\n        var colWidth = this.isLastCell(cell) ? 4 : 0;\n        var rowHeight = this.isLastRow(cell) ? 3 : 0;\n\n        if (!this.parent.enableRtl) {\n          this.autofill.style.left = clientRect.left - parentOff.left + clientRect.width - 4 - colWidth + 'px';\n        } else {\n          this.autofill.style.right = parentOff.right - clientRect.right + clientRect.width - 4 - colWidth + 'px';\n        }\n\n        this.autofill.style.top = clientRect.top - parentOff.top + clientRect.height - 5 - rowHeight + 'px';\n      }\n\n      this.autofill.style.display = '';\n    } else {\n      this.hideAutoFill();\n    }\n  };\n\n  Selection.prototype.mouseDownHandler = function (e) {\n    this.mouseButton = e.button;\n    var target = e.target;\n    var gObj = this.parent;\n    var isDrag;\n    var gridElement = parentsUntil(target, 'e-grid');\n\n    if (gridElement && gridElement.id !== gObj.element.id || parentsUntil(target, 'e-headercontent') && !this.parent.frozenRows || parentsUntil(target, 'e-editedbatchcell') || parentsUntil(target, 'e-editedrow')) {\n      return;\n    }\n\n    if (e.shiftKey || e.ctrlKey) {\n      e.preventDefault();\n    }\n\n    if (parentsUntil(target, 'e-rowcell') && !e.shiftKey && !e.ctrlKey) {\n      if (gObj.selectionSettings.cellSelectionMode.indexOf('Box') > -1 && !this.isRowType() && !this.isSingleSel()) {\n        this.isCellDrag = true;\n        isDrag = true;\n      } else if (gObj.allowRowDragAndDrop && !gObj.isEdit) {\n        if (!this.isRowType() || this.isSingleSel() || closest(target, 'td').classList.contains('e-selectionbackground')) {\n          this.isDragged = false;\n          return;\n        }\n\n        isDrag = true;\n        this.element = this.parent.createElement('div', {\n          className: 'e-griddragarea'\n        });\n        gObj.getContent().appendChild(this.element);\n      }\n\n      if (isDrag) {\n        this.enableDrag(e, true);\n      }\n    }\n\n    this.updateStartEndCells();\n\n    if (target.classList.contains('e-autofill') || target.classList.contains('e-xlsel')) {\n      this.isCellDrag = true;\n      this.isAutoFillSel = true;\n      this.enableDrag(e);\n    }\n  };\n\n  Selection.prototype.updateStartEndCells = function () {\n    var cells = [].slice.call(this.parent.element.querySelectorAll('.e-cellselectionbackground'));\n    this.startCell = cells[0];\n    this.endCell = cells[cells.length - 1];\n\n    if (this.startCell) {\n      this.startIndex = parseInt(this.startCell.parentElement.getAttribute('aria-rowindex'), 10);\n      this.startCellIndex = parseInt(parentsUntil(this.startCell, 'e-rowcell').getAttribute('aria-colindex'), 10);\n    }\n  };\n\n  Selection.prototype.updateStartCellsIndex = function () {\n    if (this.startCell) {\n      this.startIndex = parseInt(this.startCell.parentElement.getAttribute('aria-rowindex'), 10);\n      this.startCellIndex = parseInt(parentsUntil(this.startCell, 'e-rowcell').getAttribute('aria-colindex'), 10);\n    }\n  };\n\n  Selection.prototype.enableDrag = function (e, isUpdate) {\n    var gObj = this.parent;\n\n    if (isUpdate) {\n      var tr = closest(e.target, 'tr');\n      this.startDIndex = parseInt(tr.getAttribute('aria-rowindex'), 10);\n      this.startDCellIndex = parseInt(parentsUntil(e.target, 'e-rowcell').getAttribute('aria-colindex'), 10);\n    }\n\n    document.body.classList.add('e-disableuserselect');\n    var gBRect = gObj.element.getBoundingClientRect();\n    var postion = getPosition(e);\n    this.x = postion.x - gBRect.left;\n    this.y = postion.y - gBRect.top;\n    EventHandler.add(gObj.getContent(), 'mousemove', this.mouseMoveHandler, this);\n\n    if (this.parent.frozenRows) {\n      EventHandler.add(gObj.getHeaderContent(), 'mousemove', this.mouseMoveHandler, this);\n    }\n\n    EventHandler.add(document.body, 'mouseup', this.mouseUpHandler, this);\n  };\n\n  Selection.prototype.clearSelAfterRefresh = function (e) {\n    var isInfiniteScroll = this.parent.enableInfiniteScrolling && e.requestType === 'infiniteScroll';\n\n    if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection && !isInfiniteScroll) {\n      this.clearSelection();\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Selection.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.on(events.uiUpdate, this.enableAfterRender, this);\n    this.parent.on(events.initialEnd, this.initializeSelection, this);\n    this.parent.on(events.rowSelectionComplete, this.onActionComplete, this);\n    this.parent.on(events.cellSelectionComplete, this.onActionComplete, this);\n    this.parent.on(events.inBoundModelChanged, this.onPropertyChanged, this);\n    this.parent.on(events.cellFocused, this.onCellFocused, this);\n    this.parent.on(events.beforeFragAppend, this.clearSelAfterRefresh, this);\n    this.parent.on(events.columnPositionChanged, this.columnPositionChanged, this);\n    this.parent.on(events.contentReady, this.initialEnd, this);\n    this.actionBeginFunction = this.actionBegin.bind(this);\n    this.actionCompleteFunction = this.actionComplete.bind(this);\n    this.parent.addEventListener(events.actionBegin, this.actionBeginFunction);\n    this.parent.addEventListener(events.actionComplete, this.actionCompleteFunction);\n    this.parent.on(events.rowsRemoved, this.rowsRemoved, this);\n    this.parent.on(events.headerRefreshed, this.refreshHeader, this);\n    this.addEventListener_checkbox();\n  };\n  /**\n   * @hidden\n   */\n\n\n  Selection.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off(events.uiUpdate, this.enableAfterRender);\n    this.parent.off(events.initialEnd, this.initializeSelection);\n    this.parent.off(events.rowSelectionComplete, this.onActionComplete);\n    this.parent.off(events.cellSelectionComplete, this.onActionComplete);\n    this.parent.off(events.inBoundModelChanged, this.onPropertyChanged);\n    this.parent.off(events.cellFocused, this.onCellFocused);\n    this.parent.off(events.beforeFragAppend, this.clearSelAfterRefresh);\n    this.parent.off(events.columnPositionChanged, this.columnPositionChanged);\n    this.parent.removeEventListener(events.actionBegin, this.actionBeginFunction);\n    this.parent.removeEventListener(events.actionComplete, this.actionCompleteFunction);\n    this.parent.off(events.rowsRemoved, this.rowsRemoved);\n    this.parent.off(events.headerRefreshed, this.refreshHeader);\n    this.removeEventListener_checkbox();\n  };\n\n  Selection.prototype.wireEvents = function () {\n    this.isMacOS = navigator.userAgent.indexOf('Mac OS') !== -1;\n\n    if (this.isMacOS) {\n      EventHandler.add(this.parent.element, 'keydown', this.keyDownHandler, this);\n      EventHandler.add(this.parent.element, 'keyup', this.keyUpHandler, this);\n    }\n  };\n\n  Selection.prototype.unWireEvents = function () {\n    if (this.isMacOS) {\n      EventHandler.remove(this.parent.element, 'keydown', this.keyDownHandler);\n      EventHandler.remove(this.parent.element, 'keyup', this.keyUpHandler);\n    }\n  };\n\n  Selection.prototype.columnPositionChanged = function () {\n    if (!this.parent.isPersistSelection) {\n      this.clearSelection();\n    }\n  };\n\n  Selection.prototype.refreshHeader = function () {\n    this.setCheckAllState();\n  };\n\n  Selection.prototype.rowsRemoved = function (e) {\n    for (var i = 0; i < e.records.length; i++) {\n      delete this.selectedRowState[e.records[i][this.primaryKey]];\n      --this.totalRecordsCount;\n    }\n\n    this.setCheckAllState();\n  };\n\n  ;\n\n  Selection.prototype.beforeFragAppend = function (e) {\n    if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection) {\n      this.clearSelection();\n    }\n  };\n\n  ;\n\n  Selection.prototype.getCheckAllBox = function () {\n    return this.parent.getHeaderContent().querySelector('.e-checkselectall');\n  };\n\n  Selection.prototype.enableAfterRender = function (e) {\n    if (e.module === this.getModuleName() && e.enable) {\n      this.render();\n      this.initPerisistSelection();\n    }\n  };\n\n  Selection.prototype.render = function (e) {\n    EventHandler.add(this.parent.getContent(), 'mousedown', this.mouseDownHandler, this);\n    EventHandler.add(this.parent.getHeaderContent(), 'mousedown', this.mouseDownHandler, this);\n  };\n\n  Selection.prototype.onPropertyChanged = function (e) {\n    if (e.module !== this.getModuleName()) {\n      return;\n    }\n\n    var gObj = this.parent;\n\n    if (!isNullOrUndefined(e.properties.type) && this.selectionSettings.type === 'Single') {\n      if (this.selectedRowCellIndexes.length > 1) {\n        this.clearCellSelection();\n        this.prevCIdxs = undefined;\n      }\n\n      if (this.selectedRowIndexes.length > 1) {\n        this.clearRowSelection();\n        this.prevRowIndex = undefined;\n      }\n\n      if (this.selectedColumnsIndexes.length > 1) {\n        this.clearColumnSelection();\n        this.prevColIndex = undefined;\n      }\n\n      this.enableSelectMultiTouch = false;\n      this.hidePopUp();\n    }\n\n    if (!isNullOrUndefined(e.properties.mode) || !isNullOrUndefined(e.properties.cellSelectionMode)) {\n      this.clearSelection();\n      this.prevRowIndex = undefined;\n      this.prevCIdxs = undefined;\n      this.prevColIndex = undefined;\n    }\n\n    this.isPersisted = true;\n    this.checkBoxSelectionChanged();\n    this.isPersisted = false;\n    this.initPerisistSelection();\n    var checkboxColumn = this.parent.getColumns().filter(function (col) {\n      return col.type === 'checkbox';\n    });\n\n    if (checkboxColumn.length) {\n      gObj.isCheckBoxSelection = !(this.selectionSettings.checkboxMode === 'ResetOnRowClick');\n    }\n\n    this.drawBorders();\n  };\n\n  Selection.prototype.hidePopUp = function () {\n    if (this.parent.element.querySelector('.e-gridpopup').querySelectorAll('.e-rowselect').length) {\n      this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n    }\n  };\n\n  Selection.prototype.initialEnd = function (e) {\n    var isFrozen = this.parent.isFrozenGrid();\n    var isLeftRightFrozen = this.parent.getFrozenMode() === 'Left-Right';\n\n    if (!isFrozen || isFrozen && !isLeftRightFrozen && !e.args.isFrozen || isLeftRightFrozen && e.args.renderFrozenRightContent) {\n      this.parent.off(events.contentReady, this.initialEnd);\n      this.selectRow(this.parent.selectedRowIndex);\n    }\n  };\n\n  Selection.prototype.checkBoxSelectionChanged = function () {\n    this.parent.off(events.contentReady, this.checkBoxSelectionChanged);\n    var gobj = this.parent;\n    var checkboxColumn = gobj.getColumns().filter(function (col) {\n      return col.type === 'checkbox';\n    });\n\n    if (checkboxColumn.length > 0) {\n      gobj.isCheckBoxSelection = true;\n      this.chkField = checkboxColumn[0].field;\n      this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n\n      if (isNullOrUndefined(this.totalRecordsCount)) {\n        this.totalRecordsCount = this.getCurrentBatchRecordChanges().length;\n      }\n\n      if (this.isSingleSel()) {\n        gobj.selectionSettings.type = 'Multiple';\n        gobj.dataBind();\n      } else {\n        this.initPerisistSelection();\n      }\n    }\n\n    if (!gobj.isCheckBoxSelection && !this.isPersisted) {\n      this.chkField = null;\n      this.initPerisistSelection();\n    }\n  };\n\n  Selection.prototype.initPerisistSelection = function () {\n    var gobj = this.parent;\n\n    if (this.parent.selectionSettings.persistSelection && this.parent.getPrimaryKeyFieldNames().length > 0) {\n      gobj.isPersistSelection = true;\n      this.ensureCheckboxFieldSelection();\n    } else if (this.parent.getPrimaryKeyFieldNames().length > 0) {\n      gobj.isPersistSelection = false;\n      this.ensureCheckboxFieldSelection();\n    } else {\n      gobj.isPersistSelection = false;\n      this.selectedRowState = {};\n    }\n  };\n\n  Selection.prototype.ensureCheckboxFieldSelection = function () {\n    var gobj = this.parent;\n    this.primaryKey = this.parent.getPrimaryKeyFieldNames()[0];\n\n    if (!gobj.enableVirtualization && this.chkField && (gobj.isPersistSelection && Object.keys(this.selectedRowState).length === 0 || !gobj.isPersistSelection)) {\n      var data = this.parent.getDataModule();\n      var query = new Query().where(this.chkField, 'equal', true);\n\n      if (!query.params) {\n        query.params = this.parent.query.params;\n      }\n\n      var dataManager = data.getData({}, query);\n      var proxy_1 = this;\n      this.parent.showSpinner();\n      dataManager.then(function (e) {\n        proxy_1.dataSuccess(e.result);\n        proxy_1.refreshPersistSelection();\n        proxy_1.parent.hideSpinner();\n      });\n    }\n  };\n\n  Selection.prototype.dataSuccess = function (res) {\n    for (var i = 0; i < res.length; i++) {\n      if (isNullOrUndefined(this.selectedRowState[res[i][this.primaryKey]]) && res[i][this.chkField]) {\n        this.selectedRowState[res[i][this.primaryKey]] = res[i][this.chkField];\n      }\n    }\n\n    this.persistSelectedData = res;\n  };\n\n  Selection.prototype.setRowSelection = function (state) {\n    if (!this.parent.getDataModule().isRemote() && !isBlazor()) {\n      if (state) {\n        if (this.parent.groupSettings.columns.length) {\n          for (var _i = 0, _a = this.getData().records; _i < _a.length; _i++) {\n            var data = _a[_i];\n            this.selectedRowState[data[this.primaryKey]] = true;\n          }\n        } else {\n          for (var _b = 0, _c = this.getData(); _b < _c.length; _b++) {\n            var data = _c[_b];\n            this.selectedRowState[data[this.primaryKey]] = true;\n          }\n        }\n      } else {\n        this.selectedRowState = {};\n      } // (this.getData()).forEach(function (data) {\n      //     this.selectedRowState[data[this.primaryKey]] = true;\n      // })\n\n    }\n  };\n\n  Selection.prototype.getData = function () {\n    return this.parent.getDataModule().dataManager.executeLocal(this.parent.getDataModule().generateQuery(true));\n  };\n\n  Selection.prototype.refreshPersistSelection = function () {\n    var rows = this.parent.getRows();\n    this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n\n    if (rows !== null && rows.length > 0 && (this.parent.isPersistSelection || this.chkField)) {\n      var indexes = [];\n\n      for (var j = 0; j < rows.length; j++) {\n        var rowObj = this.getRowObj(rows[j]);\n        var pKey = rowObj ? rowObj.data ? rowObj.data[this.primaryKey] : null : null;\n\n        if (pKey === null) {\n          return;\n        }\n\n        var checkState = void 0;\n        var chkBox = rows[j].querySelector('.e-checkselect');\n\n        if (this.selectedRowState[pKey] || this.parent.checkAllRows === 'Check' && this.totalRecordsCount === Object.keys(this.selectedRowState).length && this.chkAllCollec.indexOf(pKey) < 0 || this.parent.checkAllRows === 'Uncheck' && this.chkAllCollec.indexOf(pKey) > 0 || this.parent.checkAllRows === 'Intermediate' && !isNullOrUndefined(this.chkField) && rowObj.data[this.chkField]) {\n          indexes.push(parseInt(rows[j].getAttribute('aria-rowindex'), 10));\n          checkState = true;\n        } else {\n          checkState = false;\n\n          if (this.checkedTarget !== chkBox && this.parent.isCheckBoxSelection) {\n            removeAddCboxClasses(chkBox.nextElementSibling, checkState);\n          }\n        }\n\n        this.updatePersistCollection(rows[j], checkState);\n      }\n\n      this.isSingleSel() && indexes.length > 0 ? this.selectRow(indexes[0], true) : this.selectRows(indexes);\n    }\n\n    if (this.parent.isCheckBoxSelection && this.getCurrentBatchRecordChanges().length > 0) {\n      this.setCheckAllState();\n    }\n  };\n\n  Selection.prototype.actionBegin = function (e) {\n    if (e.requestType === 'save' && this.parent.isPersistSelection) {\n      var editChkBox = this.parent.element.querySelector('.e-edit-checkselect');\n\n      if (!isNullOrUndefined(editChkBox)) {\n        var row = closest(editChkBox, '.e-editedrow');\n\n        if (row) {\n          if (this.parent.editSettings.mode === 'Dialog') {\n            row = this.parent.element.querySelector('.e-dlgeditrow');\n          }\n\n          var rowObj = this.getRowObj(row);\n\n          if (!rowObj) {\n            return;\n          }\n\n          this.selectedRowState[rowObj.data[this.primaryKey]] = rowObj.isSelected = editChkBox.checked;\n        } else {\n          this.isCheckedOnAdd = editChkBox.checked;\n        }\n      }\n    }\n  };\n\n  Selection.prototype.actionComplete = function (e) {\n    if (e.requestType === 'save' && this.parent.isPersistSelection) {\n      if (e.action === 'add' && this.isCheckedOnAdd) {\n        var rowObj = this.parent.getRowObjectFromUID(this.parent.getRows()[e.selectedRow].getAttribute('data-uid'));\n        this.selectedRowState[rowObj.data[this.primaryKey]] = rowObj.isSelected = this.isCheckedOnAdd;\n      }\n\n      this.refreshPersistSelection();\n    }\n\n    if (e.requestType === 'delete' && this.parent.isPersistSelection) {\n      var records = [];\n\n      if (!isBlazor()) {\n        records = e.data;\n      } else {\n        records = this.getSelectedRecords();\n      }\n\n      var data = records.slice();\n\n      for (var i = 0; i < data.length; i++) {\n        if (!isNullOrUndefined(data[i][this.primaryKey])) {\n          this.updatePersistDelete(data[i][this.primaryKey]);\n        }\n      }\n\n      this.setCheckAllState();\n      this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n    }\n\n    if (e.requestType === 'paging') {\n      this.prevRowIndex = undefined;\n      this.prevCIdxs = undefined;\n      this.prevECIdxs = undefined;\n    }\n  };\n\n  Selection.prototype.onDataBound = function () {\n    if (!this.parent.enableVirtualization && this.parent.isPersistSelection) {\n      this.refreshPersistSelection();\n    }\n\n    if (this.parent.enableVirtualization) {\n      this.setCheckAllState();\n    }\n\n    if (this.parent.isCheckBoxSelection && !this.initialRowSelection) {\n      var totalRecords = this.parent.getRowsObject();\n      var indexes = [];\n\n      for (var i = 0; i < totalRecords.length; i++) {\n        if (totalRecords[i].isSelected) {\n          indexes.push(i);\n        }\n      }\n\n      if (indexes.length) {\n        this.selectRows(indexes);\n      }\n\n      this.initialRowSelection = true;\n    }\n  };\n\n  Selection.prototype.updatePersistSelectedData = function (checkState) {\n    if (this.parent.isPersistSelection) {\n      var rows = this.parent.getRows();\n\n      for (var i = 0; i < rows.length; i++) {\n        this.updatePersistCollection(rows[i], checkState);\n      }\n\n      if (this.parent.checkAllRows === 'Uncheck') {\n        this.setRowSelection(false);\n        this.persistSelectedData = this.parent.getDataModule().isRemote() ? this.persistSelectedData : [];\n      } else if (this.parent.checkAllRows === 'Check') {\n        this.setRowSelection(true);\n        this.persistSelectedData = !this.parent.getDataModule().isRemote() && !isBlazor() ? this.parent.groupSettings.columns.length ? this.getData().records.slice() : this.getData().slice() : this.persistSelectedData;\n      }\n    }\n  };\n\n  Selection.prototype.checkSelectAllAction = function (checkState) {\n    var cRenderer = this.getRenderer();\n    var editForm = this.parent.element.querySelector('.e-gridform');\n    this.checkedTarget = this.getCheckAllBox();\n\n    if (checkState && this.getCurrentBatchRecordChanges().length) {\n      this.parent.checkAllRows = 'Check';\n      this.updatePersistSelectedData(checkState);\n\n      if (isBlazor() && this.parent.enableVirtualization && !isNullOrUndefined(this.parent.contentModule.currentInfo.endIndex)) {\n        this.selectRowsByRange(this.parent.contentModule.currentInfo.startIndex, this.parent.contentModule.currentInfo.endIndex);\n      } else {\n        this.selectRowsByRange(cRenderer.getVirtualRowIndex(0), cRenderer.getVirtualRowIndex(this.getCurrentBatchRecordChanges().length - 1));\n      }\n    } else {\n      this.parent.checkAllRows = 'Uncheck';\n      this.updatePersistSelectedData(checkState);\n      this.clearSelection();\n    }\n\n    this.chkAllCollec = [];\n\n    if (!isNullOrUndefined(editForm)) {\n      var editChkBox = editForm.querySelector('.e-edit-checkselect');\n\n      if (!isNullOrUndefined(editChkBox)) {\n        removeAddCboxClasses(editChkBox.nextElementSibling, checkState);\n      }\n    }\n  };\n\n  Selection.prototype.checkSelectAll = function (checkBox) {\n    var _this = this;\n\n    var stateStr = this.getCheckAllStatus(checkBox);\n    var state = stateStr === 'Check';\n    this.isHeaderCheckboxClicked = true;\n\n    if (stateStr === 'Intermediate') {\n      state = this.getCurrentBatchRecordChanges().some(function (data) {\n        return data[_this.primaryKey] in _this.selectedRowState;\n      });\n    }\n\n    if (this.parent.isPersistSelection && this.parent.allowPaging) {\n      this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n    }\n\n    this.checkSelectAllAction(!state);\n\n    if (isBlazor() && this.parent.isServerRendered && this.parent.enableVirtualization) {\n      var interopAdaptor = 'interopAdaptor';\n      var invokeMethodAsync = 'invokeMethodAsync';\n      this.parent[interopAdaptor][invokeMethodAsync]('MaintainSelection', !state, 'checkbox', null);\n      this.checkBoxState = !state;\n\n      if (!state) {\n        var values = 'values';\n        var vgenerator = 'vgenerator';\n        var rowCache = this.parent.contentModule[vgenerator].rowCache;\n        Object[values](rowCache).forEach(function (x) {\n          return x.isSelected = true;\n        });\n\n        for (var i = 0; i < Object.keys(rowCache).length; i++) {\n          if (this.parent.selectionModule.selectedRowIndexes.indexOf(Number(Object.keys(rowCache)[i])) === -1) {\n            this.parent.selectionModule.selectedRowIndexes.push(Number(Object.keys(rowCache)[i]));\n          }\n        }\n      }\n    }\n\n    this.target = null;\n\n    if (this.getCurrentBatchRecordChanges().length > 0) {\n      this.setCheckAllState();\n    }\n\n    this.triggerChkChangeEvent(checkBox, !state);\n  };\n\n  Selection.prototype.getCheckAllStatus = function (ele) {\n    var classes = ele ? ele.nextElementSibling.classList : this.getCheckAllBox().nextElementSibling.classList;\n    var status;\n\n    if (classes.contains('e-check')) {\n      status = 'Check';\n    } else if (classes.contains('e-uncheck')) {\n      status = 'Uncheck';\n    } else if (classes.contains('e-stop')) {\n      status = 'Intermediate';\n    } else {\n      status = 'None';\n    }\n\n    return status;\n  };\n\n  Selection.prototype.checkSelect = function (checkBox) {\n    var target = closest(this.checkedTarget, '.e-rowcell');\n    var checkObj = checkBox;\n    var gObj = this.parent;\n    this.isMultiCtrlRequest = true;\n    var rIndex = 0;\n    this.isHeaderCheckboxClicked = false;\n\n    if (isGroupAdaptive(gObj)) {\n      var uid = target.parentElement.getAttribute('data-uid');\n      rIndex = gObj.getRows().map(function (m) {\n        return m.getAttribute('data-uid');\n      }).indexOf(uid);\n    } else {\n      rIndex = parseInt(target.parentElement.getAttribute('aria-rowindex'), 10);\n    }\n\n    if (this.parent.isPersistSelection && this.parent.element.querySelectorAll('.e-addedrow').length > 0 && this.parent.editSettings.newRowPosition === 'Top') {\n      ++rIndex;\n    }\n\n    this.rowCellSelectionHandler(rIndex, parseInt(target.getAttribute('aria-colindex'), 10));\n    this.moveIntoUncheckCollection(closest(target, '.e-row'));\n    this.setCheckAllState();\n    this.isMultiCtrlRequest = false;\n    this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'));\n  };\n\n  Selection.prototype.moveIntoUncheckCollection = function (row) {\n    if (this.parent.checkAllRows === 'Check' || this.parent.checkAllRows === 'Uncheck') {\n      var rowObj = this.getRowObj(row);\n      var pKey = rowObj && rowObj.data ? rowObj.data[this.primaryKey] : null;\n\n      if (!pKey) {\n        return;\n      }\n\n      if (this.chkAllCollec.indexOf(pKey) < 0) {\n        this.chkAllCollec.push(pKey);\n      } else {\n        this.chkAllCollec.splice(this.chkAllCollec.indexOf(pKey), 1);\n      }\n    }\n  };\n\n  Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState) {\n    this.parent.trigger(events.checkBoxChange, {\n      checked: checkState,\n      selectedRowIndexes: this.parent.getSelectedRowIndexes(),\n      target: checkBox\n    });\n\n    if (!this.parent.isEdit) {\n      this.checkedTarget = null;\n    }\n  };\n\n  Selection.prototype.updateSelectedRowIndex = function (index) {\n    if (this.parent.isCheckBoxSelection && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && !this.parent.getDataModule().isRemote() && !(isBlazor() && this.parent.isServerRendered)) {\n      if (this.parent.checkAllRows === 'Check') {\n        this.selectedRowIndexes = [];\n        var dataLength = this.getData().length;\n\n        for (var data = 0; data < dataLength; data++) {\n          this.selectedRowIndexes.push(data);\n        }\n      } else if (this.parent.checkAllRows === 'Uncheck') {\n        this.selectedRowIndexes = [];\n      } else {\n        if (index && this.parent.getRowByIndex(index).getAttribute('aria-selected') === 'false') {\n          var selectedVal = this.selectedRowIndexes.indexOf(index);\n          this.selectedRowIndexes.splice(selectedVal, 1);\n        }\n      }\n    }\n  };\n\n  ;\n\n  Selection.prototype.setCheckAllState = function (index, isInteraction) {\n    if (this.parent.isCheckBoxSelection || this.parent.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n      var checkToSelectAll = void 0;\n      var isServerRenderedVirtualization = isBlazor() && this.parent.isServerRendered && this.parent.enableVirtualization;\n\n      if (isServerRenderedVirtualization) {\n        var values = 'values';\n        var vgenerator = 'vgenerator';\n        checkToSelectAll = !Object[values](this.parent.contentModule[vgenerator].rowCache).filter(function (x) {\n          return x.isSelected === undefined || x.isSelected === false;\n        }).length && Object[values](this.parent.contentModule[vgenerator].rowCache).filter(function (x) {\n          return x.isSelected;\n        }).length === this.selectedRowIndexes.length;\n      }\n\n      var checkedLen = Object.keys(this.selectedRowState).length;\n\n      if (!this.parent.isPersistSelection && !isServerRenderedVirtualization) {\n        checkedLen = this.selectedRowIndexes.length;\n        this.totalRecordsCount = this.getCurrentBatchRecordChanges().length;\n      }\n\n      var input = this.getCheckAllBox();\n\n      if (input) {\n        var spanEle = input.nextElementSibling;\n        removeClass([spanEle], ['e-check', 'e-stop', 'e-uncheck']);\n        setChecked(input, false);\n        input.indeterminate = false;\n\n        if (checkToSelectAll || checkedLen === this.totalRecordsCount && this.totalRecordsCount || (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && !this.parent.allowPaging && !this.parent.getDataModule().isRemote() && !(isBlazor() && this.parent.isServerRendered) && checkedLen === this.getData().length) {\n          addClass([spanEle], ['e-check']);\n          setChecked(input, true);\n\n          if (isInteraction) {\n            this.getRenderer().setSelection(null, true, true);\n          }\n\n          this.parent.checkAllRows = 'Check';\n        } else if (isServerRenderedVirtualization && !this.selectedRowIndexes.length || checkedLen === 0 && !isServerRenderedVirtualization || this.getCurrentBatchRecordChanges().length === 0) {\n          addClass([spanEle], ['e-uncheck']);\n\n          if (isInteraction) {\n            this.getRenderer().setSelection(null, false, true);\n          }\n\n          this.parent.checkAllRows = 'Uncheck';\n\n          if (checkedLen === 0 && this.getCurrentBatchRecordChanges().length === 0) {\n            addClass([spanEle.parentElement], ['e-checkbox-disabled']);\n          } else {\n            removeClass([spanEle.parentElement], ['e-checkbox-disabled']);\n          }\n        } else {\n          addClass([spanEle], ['e-stop']);\n          this.parent.checkAllRows = 'Intermediate';\n          input.indeterminate = true;\n        }\n\n        if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && !this.parent.allowPaging && !this.parent.getDataModule().isRemote()) {\n          this.updateSelectedRowIndex(index);\n        }\n      }\n    }\n  };\n\n  Selection.prototype.keyDownHandler = function (e) {\n    // Below are keyCode for command key in MAC OS. Safari/Chrome(91-Left command, 93-Right Command), Opera(17), FireFox(224)\n    if ((Browser.info.name === 'chrome' || Browser.info.name === 'safari') && (e.keyCode === 91 || e.keyCode === 93) || Browser.info.name === 'opera' && e.keyCode === 17 || Browser.info.name === 'mozilla' && e.keyCode === 224) {\n      this.cmdKeyPressed = true;\n    }\n  };\n\n  Selection.prototype.keyUpHandler = function (e) {\n    if ((Browser.info.name === 'chrome' || Browser.info.name === 'safari') && (e.keyCode === 91 || e.keyCode === 93) || Browser.info.name === 'opera' && e.keyCode === 17 || Browser.info.name === 'mozilla' && e.keyCode === 224) {\n      this.cmdKeyPressed = false;\n    }\n  };\n\n  Selection.prototype.clickHandler = function (e) {\n    var target = e.target;\n    this.actualTarget = target;\n\n    if (parentsUntil(target, 'e-row') || parentsUntil(target, 'e-headerchkcelldiv') || this.selectionSettings.allowColumnSelection && target.classList.contains('e-headercell')) {\n      this.isInteracted = true;\n    }\n\n    this.isMultiCtrlRequest = e.ctrlKey || this.enableSelectMultiTouch || this.isMacOS && this.cmdKeyPressed;\n    this.isMultiShiftRequest = e.shiftKey;\n    this.popUpClickHandler(e);\n    var chkSelect = false;\n    this.preventFocus = true;\n    var checkBox;\n    var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n    this.checkSelectAllClicked = checkWrap && checkWrap.querySelectorAll('.e-checkselectall') ? true : false;\n\n    if (checkWrap && checkWrap.querySelectorAll('.e-checkselect,.e-checkselectall').length > 0) {\n      checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n      chkSelect = true;\n    }\n\n    this.drawBorders();\n    this.updateAutoFillPosition();\n    target = parentsUntil(target, 'e-rowcell');\n\n    if (target && target.parentElement.classList.contains('e-row') && !this.parent.selectionSettings.checkboxOnly || chkSelect) {\n      if (this.parent.isCheckBoxSelection) {\n        this.isMultiCtrlRequest = true;\n      }\n\n      this.target = target;\n\n      if (!isNullOrUndefined(checkBox)) {\n        this.checkedTarget = checkBox;\n\n        if (checkBox.classList.contains('e-checkselectall')) {\n          this.checkSelectAll(checkBox);\n        } else {\n          this.checkSelect(checkBox);\n        }\n      } else {\n        var gObj = this.parent;\n        var rIndex = 0;\n\n        if (isGroupAdaptive(gObj)) {\n          var uid = target.parentElement.getAttribute('data-uid');\n          rIndex = gObj.getRows().map(function (m) {\n            return m.getAttribute('data-uid');\n          }).indexOf(uid);\n        } else {\n          rIndex = parseInt(target.parentElement.getAttribute('aria-rowindex'), 10);\n        }\n\n        if (this.parent.isPersistSelection && this.parent.element.querySelectorAll('.e-addedrow').length > 0) {\n          ++rIndex;\n        }\n\n        if (!this.mUPTarget || !this.mUPTarget.isEqualNode(target)) {\n          this.rowCellSelectionHandler(rIndex, parseInt(target.getAttribute('aria-colindex'), 10));\n        }\n\n        this.parent.hoverFrozenRows(e);\n\n        if (this.parent.isCheckBoxSelection) {\n          this.moveIntoUncheckCollection(closest(target, '.e-row'));\n          this.setCheckAllState();\n        }\n      }\n\n      if (!this.parent.isCheckBoxSelection && Browser.isDevice && !this.isSingleSel()) {\n        this.showPopup(e);\n      }\n    } else if (e.target.classList.contains('e-headercell') && !e.target.classList.contains('e-stackedheadercell')) {\n      var uid = e.target.querySelector('.e-headercelldiv').getAttribute('e-mappinguid');\n      this.headerSelectionHandler(this.parent.getColumnIndexByUid(uid));\n    }\n\n    this.isMultiCtrlRequest = false;\n    this.isMultiShiftRequest = false;\n\n    if (isNullOrUndefined(closest(e.target, '.e-unboundcell'))) {\n      this.preventFocus = false;\n    }\n  };\n\n  Selection.prototype.popUpClickHandler = function (e) {\n    var target = e.target;\n\n    if (closest(target, '.e-headercell') || e.target.classList.contains('e-rowcell') || closest(target, '.e-gridpopup')) {\n      if (target.classList.contains('e-rowselect')) {\n        if (!target.classList.contains('e-spanclicked')) {\n          target.classList.add('e-spanclicked');\n          this.enableSelectMultiTouch = true;\n        } else {\n          target.classList.remove('e-spanclicked');\n          this.enableSelectMultiTouch = false;\n          this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        }\n      }\n    } else {\n      this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n    }\n  };\n\n  Selection.prototype.showPopup = function (e) {\n    if (!this.selectionSettings.enableSimpleMultiRowSelection) {\n      setCssInGridPopUp(this.parent.element.querySelector('.e-gridpopup'), e, 'e-rowselect e-icons e-icon-rowselect' + (!this.isSingleSel() && (this.selectedRecords.length > (this.parent.getFrozenColumns() ? 2 : 1) || this.selectedRowCellIndexes.length > 1) ? ' e-spanclicked' : ''));\n    }\n  };\n\n  Selection.prototype.rowCellSelectionHandler = function (rowIndex, cellIndex) {\n    var gObj = this.parent;\n\n    if (!this.isMultiCtrlRequest && !this.isMultiShiftRequest || this.isSingleSel()) {\n      if (!this.isDragged) {\n        this.selectRow(rowIndex, this.selectionSettings.enableToggle);\n      }\n\n      this.selectCell({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }, this.selectionSettings.enableToggle);\n\n      if (this.selectedRowCellIndexes.length) {\n        this.updateAutoFillPosition();\n      }\n\n      this.drawBorders();\n    } else if (this.isMultiShiftRequest) {\n      if (this.parent.isCheckBoxSelection || !this.parent.isCheckBoxSelection && !closest(this.target, '.e-rowcell').classList.contains('e-gridchkbox')) {\n        this.selectRowsByRange(isUndefined(this.prevRowIndex) ? rowIndex : this.prevRowIndex, rowIndex);\n      } else {\n        this.addRowsToSelection([rowIndex]);\n      }\n\n      this.selectCellsByRange(isUndefined(this.prevCIdxs) ? {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      } : this.prevCIdxs, {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n      this.updateAutoFillPosition();\n      this.drawBorders();\n    } else {\n      this.addRowsToSelection([rowIndex]);\n\n      if (isBlazor() && this.parent.enableVirtualization && this.parent.isServerRendered) {\n        var rowIndexes = this.parent.getSelectedRowIndexes();\n        var interopAdaptor = 'interopAdaptor';\n        var invokeMethodAsync = 'invokeMethodAsync';\n        this.parent[interopAdaptor][invokeMethodAsync]('MaintainSelection', true, 'normal', rowIndexes);\n      }\n\n      this.addCellsToSelection([{\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }]);\n      this.showHideBorders('none');\n    }\n\n    this.isDragged = false;\n  };\n  /* tslint:disable-next-line:max-func-body-length */\n\n\n  Selection.prototype.onCellFocused = function (e) {\n    if (this.parent.frozenRows && e.container.isHeader && e.byKey) {\n      if (e.keyArgs.action === 'upArrow') {\n        if (this.parent.allowFiltering) {\n          e.isJump = e.element.tagName === 'INPUT' ? true : false;\n        } else {\n          e.isJump = e.element.tagName === 'TH' ? true : false;\n        }\n      } else {\n        if (e.keyArgs.action === 'downArrow') {\n          var rIdx = Number(e.element.parentElement.getAttribute('aria-rowindex'));\n          e.isJump = rIdx === 0 ? true : false;\n        } else {\n          if (e.keyArgs.action === 'ctrlHome') {\n            e.isJump = true;\n          }\n        }\n      }\n    }\n\n    var clear = this.parent.isFrozenGrid() ? (e.container.isHeader && e.element.tagName !== 'TD' && e.isJump && !this.selectionSettings.allowColumnSelection || (e.container.isContent || e.element.tagName === 'TD') && !(e.container.isSelectable || e.element.tagName === 'TD')) && !(e.byKey && e.keyArgs.action === 'space') : (e.container.isHeader && e.isJump || e.container.isContent && !e.container.isSelectable) && !(e.byKey && e.keyArgs.action === 'space') && !(e.element.classList.contains('e-detailrowexpand') || e.element.classList.contains('e-detailrowcollapse'));\n    var headerAction = e.container.isHeader && e.element.tagName !== 'TD' && !closest(e.element, '.e-rowcell') && !(e.byKey && e.keyArgs.action === 'space');\n\n    if (!e.byKey || clear) {\n      if (clear && !this.parent.isCheckBoxSelection) {\n        this.clearSelection();\n      }\n\n      return;\n    }\n\n    var _a = e.container.isContent ? e.container.indexes : e.indexes,\n        rowIndex = _a[0],\n        cellIndex = _a[1];\n\n    var prev = this.focus.getPrevIndexes();\n\n    if (this.parent.frozenRows) {\n      if (e.container.isHeader && (e.element.tagName === 'TD' || closest(e.element, '.e-rowcell'))) {\n        var thLen = this.parent.getHeaderTable().querySelector('thead').childElementCount;\n        rowIndex -= thLen;\n        prev.rowIndex = !isNullOrUndefined(prev.rowIndex) ? prev.rowIndex - thLen : null;\n      } else {\n        rowIndex += this.parent.frozenRows;\n        prev.rowIndex = prev.rowIndex === 0 || !isNullOrUndefined(prev.rowIndex) ? prev.rowIndex + this.parent.frozenRows : null;\n      }\n    }\n\n    if (this.parent.isFrozenGrid()) {\n      var cIdx = Number(e.element.getAttribute('aria-colindex'));\n      var selectedIndexes = this.parent.getSelectedRowCellIndexes();\n\n      if (selectedIndexes.length && prev.cellIndex === 0) {\n        prev.cellIndex = selectedIndexes[selectedIndexes.length - 1].cellIndexes[0];\n      }\n\n      prev.cellIndex = !isNullOrUndefined(prev.cellIndex) ? prev.cellIndex === cellIndex ? cIdx : cIdx - 1 : null;\n      cellIndex = cIdx;\n    }\n\n    if ((headerAction || ['ctrlPlusA', 'escape'].indexOf(e.keyArgs.action) === -1 && e.keyArgs.action !== 'space' && rowIndex === prev.rowIndex && cellIndex === prev.cellIndex) && !this.selectionSettings.allowColumnSelection) {\n      return;\n    }\n\n    this.preventFocus = true;\n    var columnIndex = this.getKeyColIndex(e);\n\n    if (this.needColumnSelection) {\n      cellIndex = columnIndex;\n    }\n\n    switch (e.keyArgs.action) {\n      case 'downArrow':\n      case 'upArrow':\n      case 'enter':\n      case 'shiftEnter':\n        this.target = e.element;\n        this.applyDownUpKey(rowIndex, cellIndex);\n        break;\n\n      case 'rightArrow':\n      case 'leftArrow':\n        this.applyRightLeftKey(rowIndex, cellIndex);\n        break;\n\n      case 'shiftDown':\n      case 'shiftUp':\n        this.shiftDownKey(rowIndex, cellIndex);\n        break;\n\n      case 'shiftLeft':\n      case 'shiftRight':\n        this.applyShiftLeftRightKey(rowIndex, cellIndex);\n        break;\n\n      case 'home':\n      case 'end':\n        cellIndex = e.keyArgs.action === 'end' ? this.getLastColIndex(rowIndex) : 0;\n        this.applyHomeEndKey(rowIndex, cellIndex);\n        break;\n\n      case 'ctrlHome':\n      case 'ctrlEnd':\n        this.applyCtrlHomeEndKey(rowIndex, cellIndex);\n        break;\n\n      case 'escape':\n        this.clearSelection();\n        break;\n\n      case 'ctrlPlusA':\n        this.ctrlPlusA();\n        break;\n\n      case 'space':\n        this.applySpaceSelection(e.element);\n        break;\n\n      case 'tab':\n        if (this.parent.editSettings.allowNextRowEdit) {\n          this.selectRow(rowIndex);\n        }\n\n        break;\n    }\n\n    this.needColumnSelection = false;\n    this.preventFocus = false;\n    this.positionBorders();\n    this.updateAutoFillPosition();\n  };\n\n  Selection.prototype.getKeyColIndex = function (e) {\n    var uid;\n    var index = null;\n    var stackedHeader = e.element.querySelector('.e-stackedheadercelldiv');\n\n    if (this.selectionSettings.allowColumnSelection && parentsUntil(e.element, 'e-columnheader')) {\n      this.needColumnSelection = e.container.isHeader ? true : false;\n\n      if (stackedHeader) {\n        if (e.keyArgs.action === 'rightArrow' || e.keyArgs.action === 'leftArrow') {\n          return index;\n        }\n\n        uid = stackedHeader.getAttribute('e-mappinguid');\n        var innerColumn = this.getstackedColumns(this.parent.getColumnByUid(uid).columns);\n        var lastIndex = this.parent.getColumnIndexByUid(innerColumn[innerColumn.length - 1].uid);\n        var firstIndex = this.parent.getColumnIndexByUid(innerColumn[0].uid);\n        index = this.prevColIndex >= lastIndex ? firstIndex : lastIndex;\n      } else {\n        index = this.parent.getColumnIndexByUid(e.element.querySelector('.e-headercelldiv').getAttribute('e-mappinguid'));\n      }\n    }\n\n    return index;\n  };\n  /**\n   * Apply ctrl + A key selection\n   * @return {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.ctrlPlusA = function () {\n    if (this.isRowType() && !this.isSingleSel()) {\n      this.selectRowsByRange(0, this.getCurrentBatchRecordChanges().length - 1);\n    }\n\n    if (this.isCellType() && !this.isSingleSel()) {\n      this.selectCellsByRange({\n        rowIndex: 0,\n        cellIndex: 0\n      }, {\n        rowIndex: this.parent.getRows().length - 1,\n        cellIndex: this.parent.getColumns().length - 1\n      });\n    }\n  };\n\n  Selection.prototype.applySpaceSelection = function (target) {\n    if (target.classList.contains('e-checkselectall')) {\n      this.checkedTarget = target;\n      this.checkSelectAll(this.checkedTarget);\n    } else {\n      if (target.classList.contains('e-checkselect')) {\n        this.checkedTarget = target;\n        this.checkSelect(this.checkedTarget);\n      }\n    }\n  };\n\n  Selection.prototype.applyDownUpKey = function (rowIndex, cellIndex) {\n    var gObj = this.parent;\n\n    if (this.parent.isCheckBoxSelection && this.parent.checkAllRows === 'Check' && !this.selectionSettings.persistSelection) {\n      this.checkSelectAllAction(false);\n      this.checkedTarget = null;\n    }\n\n    if (this.isRowType()) {\n      if (this.parent.frozenRows) {\n        this.selectRow(rowIndex, true);\n        this.applyUpDown(gObj.selectedRowIndex);\n      } else {\n        this.selectRow(rowIndex, true);\n        this.applyUpDown(gObj.selectedRowIndex);\n      }\n    }\n\n    if (this.isCellType()) {\n      this.selectCell({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }, true);\n    }\n\n    if (this.selectionSettings.allowColumnSelection && this.needColumnSelection) {\n      this.selectColumn(cellIndex);\n    }\n  };\n\n  Selection.prototype.applyUpDown = function (rowIndex) {\n    if (rowIndex < 0) {\n      return;\n    }\n\n    if (!this.target) {\n      this.target = this.parent.getRows()[0].children[this.parent.groupSettings.columns.length || 0];\n    }\n\n    var cIndex = parseInt(this.target.getAttribute('aria-colindex'), 10);\n    var frzCols = this.parent.getFrozenColumns();\n\n    if (frzCols) {\n      if (cIndex >= frzCols) {\n        this.target = this.contentRenderer.getMovableRowByIndex(rowIndex).querySelectorAll('.e-rowcell')[cIndex - frzCols];\n      } else {\n        this.target = this.contentRenderer.getRowByIndex(rowIndex).querySelectorAll('.e-rowcell')[cIndex];\n      }\n    } else {\n      this.target = this.contentRenderer.getRowByIndex(rowIndex).querySelectorAll('.e-rowcell')[cIndex];\n    }\n\n    this.addAttribute(this.target);\n  };\n\n  Selection.prototype.applyRightLeftKey = function (rowIndex, cellIndex) {\n    var gObj = this.parent;\n\n    if (this.selectionSettings.allowColumnSelection && this.needColumnSelection) {\n      this.selectColumn(cellIndex);\n    } else if (this.isCellType()) {\n      this.selectCell({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }, true);\n      this.addAttribute(this.target);\n    }\n  };\n\n  Selection.prototype.applyHomeEndKey = function (rowIndex, cellIndex) {\n    if (this.isCellType()) {\n      this.selectCell({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }, true);\n    } else {\n      this.addAttribute(this.parent.getCellFromIndex(rowIndex, cellIndex));\n    }\n  };\n  /**\n   * Apply shift+down key selection\n   * @return {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.shiftDownKey = function (rowIndex, cellIndex) {\n    var gObj = this.parent;\n    this.isMultiShiftRequest = true;\n\n    if (this.isRowType() && !this.isSingleSel()) {\n      if (!isUndefined(this.prevRowIndex)) {\n        this.selectRowsByRange(this.prevRowIndex, rowIndex);\n        this.applyUpDown(rowIndex);\n      } else {\n        this.selectRow(0, true);\n      }\n    }\n\n    if (this.isCellType() && !this.isSingleSel()) {\n      this.selectCellsByRange(this.prevCIdxs || {\n        rowIndex: 0,\n        cellIndex: 0\n      }, {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n    }\n\n    this.isMultiShiftRequest = false;\n  };\n\n  Selection.prototype.applyShiftLeftRightKey = function (rowIndex, cellIndex) {\n    var gObj = this.parent;\n    this.isMultiShiftRequest = true;\n\n    if (this.selectionSettings.allowColumnSelection && this.needColumnSelection) {\n      this.selectColumnsByRange(this.prevColIndex, cellIndex);\n    } else {\n      this.selectCellsByRange(this.prevCIdxs, {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n    }\n\n    this.isMultiShiftRequest = false;\n  };\n\n  Selection.prototype.getstackedColumns = function (column) {\n    var innerColumnIndexes = [];\n\n    for (var i = 0, len = column.length; i < len; i++) {\n      if (column[i].columns) {\n        this.getstackedColumns(column[i].columns);\n      } else {\n        innerColumnIndexes.push(column[i]);\n      }\n    }\n\n    return innerColumnIndexes;\n  };\n\n  Selection.prototype.applyCtrlHomeEndKey = function (rowIndex, cellIndex) {\n    if (this.isRowType()) {\n      this.selectRow(rowIndex, true);\n      this.addAttribute(this.parent.getCellFromIndex(rowIndex, cellIndex));\n    }\n\n    if (this.isCellType()) {\n      this.selectCell({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }, true);\n    }\n  };\n\n  Selection.prototype.addRemoveClassesForRow = function (row, isAdd, clearAll) {\n    var args = [];\n\n    for (var _i = 3; _i < arguments.length; _i++) {\n      args[_i - 3] = arguments[_i];\n    }\n\n    if (row) {\n      var cells = [].slice.call(row.querySelectorAll('.e-rowcell'));\n      var detailIndentCell = row.querySelector('.e-detailrowcollapse') || row.querySelector('.e-detailrowexpand');\n      var dragdropIndentCell = row.querySelector('.e-rowdragdrop');\n\n      if (detailIndentCell) {\n        cells.push(detailIndentCell);\n      }\n\n      if (dragdropIndentCell) {\n        cells.push(dragdropIndentCell);\n      }\n\n      addRemoveActiveClasses.apply(void 0, [cells, isAdd].concat(args));\n    }\n\n    this.getRenderer().setSelection(row ? row.getAttribute('data-uid') : null, isAdd, clearAll);\n  };\n\n  Selection.prototype.isRowType = function () {\n    return this.selectionSettings.mode === 'Row' || this.selectionSettings.mode === 'Both';\n  };\n\n  Selection.prototype.isCellType = function () {\n    return this.selectionSettings.mode === 'Cell' || this.selectionSettings.mode === 'Both';\n  };\n\n  Selection.prototype.isSingleSel = function () {\n    return this.selectionSettings.type === 'Single';\n  };\n\n  Selection.prototype.getRenderer = function () {\n    if (isNullOrUndefined(this.contentRenderer)) {\n      this.contentRenderer = this.factory.getRenderer(RenderType.Content);\n    }\n\n    return this.contentRenderer;\n  };\n  /**\n   * Gets the collection of selected records.\n   * @return {Object[]}\n   */\n\n\n  Selection.prototype.getSelectedRecords = function () {\n    var selectedData = [];\n\n    if (!this.selectionSettings.persistSelection) {\n      selectedData = this.parent.getRowsObject().filter(function (row) {\n        return row.isSelected;\n      }).map(function (m) {\n        return m.data;\n      });\n    } else {\n      selectedData = this.persistSelectedData;\n    }\n\n    return selectedData;\n  };\n  /**\n   * Select the column by passing start column index\n   * @param  {number} startIndex\n   */\n\n\n  Selection.prototype.selectColumn = function (index) {\n    var gObj = this.parent;\n\n    if (isNullOrUndefined(gObj.getColumns()[index])) {\n      return;\n    }\n\n    var column = gObj.getColumnByIndex(index);\n    var selectedCol = gObj.getColumnHeaderByUid(column.uid);\n    var isColSelected = selectedCol.classList.contains('e-columnselection');\n\n    if (!gObj.selectionSettings.allowColumnSelection) {\n      return;\n    }\n\n    var isMultiColumns = this.selectedColumnsIndexes.length > 1 && this.selectedColumnsIndexes.indexOf(index) > -1;\n    this.clearColDependency();\n\n    if (!isColSelected || !this.selectionSettings.enableToggle || isMultiColumns) {\n      var args = {\n        columnIndex: index,\n        headerCell: selectedCol,\n        column: column,\n        cancel: false,\n        target: this.actualTarget,\n        isInteracted: this.isInteracted,\n        previousColumnIndex: this.prevColIndex,\n        isCtrlPressed: this.isMultiCtrlRequest,\n        isShiftPressed: this.isMultiShiftRequest\n      };\n      this.onActionBegin(args, events.columnSelecting);\n\n      if (args.cancel) {\n        this.disableInteracted();\n        return;\n      }\n\n      if (!(gObj.selectionSettings.enableToggle && index === this.prevColIndex && isColSelected) || isMultiColumns) {\n        this.updateColSelection(selectedCol, index);\n      }\n\n      var selectedArgs = {\n        columnIndex: index,\n        headerCell: selectedCol,\n        column: column,\n        target: this.actualTarget,\n        isInteracted: this.isInteracted,\n        previousColumnIndex: this.prevColIndex\n      };\n      this.onActionComplete(selectedArgs, events.columnSelected);\n    }\n\n    this.updateColProps(index);\n  };\n  /**\n   * Select the columns by passing start and end column index\n   * @param  {number} startIndex\n   * @param  {number} endIndex\n   */\n\n\n  Selection.prototype.selectColumnsByRange = function (startIndex, endIndex) {\n    var gObj = this.parent;\n\n    if (isNullOrUndefined(gObj.getColumns()[startIndex])) {\n      return;\n    }\n\n    var indexes = [];\n\n    if (gObj.selectionSettings.type === 'Single' || isNullOrUndefined(endIndex)) {\n      indexes[0] = startIndex;\n    } else {\n      var min = startIndex < endIndex;\n\n      for (var i = startIndex; min ? i <= endIndex : i >= endIndex; min ? i++ : i--) {\n        indexes.push(i);\n      }\n    }\n\n    this.selectColumns(indexes);\n  };\n  /**\n   * Select the columns by passing column indexes\n   * @param  {number[]} columnIndexes\n   */\n\n\n  Selection.prototype.selectColumns = function (columnIndexes) {\n    var gObj = this.parent;\n    var selectedCol = this.getselectedCols();\n\n    if (gObj.selectionSettings.type === 'Single') {\n      columnIndexes = [columnIndexes[0]];\n    }\n\n    if (!gObj.selectionSettings.allowColumnSelection) {\n      return;\n    }\n\n    this.clearColDependency();\n    var selectingArgs = {\n      columnIndex: columnIndexes[0],\n      headerCell: selectedCol,\n      columnIndexes: columnIndexes,\n      column: gObj.getColumnByIndex(columnIndexes[0]),\n      cancel: false,\n      target: this.actualTarget,\n      isInteracted: this.isInteracted,\n      previousColumnIndex: this.prevColIndex,\n      isCtrlPressed: this.isMultiCtrlRequest,\n      isShiftPressed: this.isMultiShiftRequest\n    };\n    this.onActionBegin(selectingArgs, events.columnSelecting);\n\n    if (selectingArgs.cancel) {\n      this.disableInteracted();\n      return;\n    }\n\n    for (var i = 0, len = columnIndexes.length; i < len; i++) {\n      this.updateColSelection(gObj.getColumnHeaderByUid(gObj.getColumnByIndex(columnIndexes[i]).uid), columnIndexes[i]);\n    }\n\n    selectedCol = this.getselectedCols();\n    var selectedArgs = {\n      columnIndex: columnIndexes[0],\n      headerCell: selectedCol,\n      columnIndexes: columnIndexes,\n      column: gObj.getColumnByIndex(columnIndexes[0]),\n      target: this.actualTarget,\n      isInteracted: this.isInteracted,\n      previousColumnIndex: this.prevColIndex\n    };\n    this.onActionComplete(selectedArgs, events.columnSelected);\n    this.updateColProps(columnIndexes[0]);\n  };\n  /**\n   * Select the column with existing column by passing column index\n   * @param  {number} startIndex\n   */\n\n\n  Selection.prototype.selectColumnWithExisting = function (startIndex) {\n    var gObj = this.parent;\n\n    if (isNullOrUndefined(gObj.getColumns()[startIndex])) {\n      return;\n    }\n\n    var frzCols = gObj.getFrozenColumns();\n    var isFreeze = frzCols && startIndex >= frzCols;\n    var newCol = gObj.getColumnHeaderByUid(gObj.getColumnByIndex(startIndex).uid);\n    var selectedCol = this.getselectedCols();\n\n    if (gObj.selectionSettings.type === 'Single') {\n      this.clearColDependency();\n    }\n\n    if (!gObj.selectionSettings.allowColumnSelection) {\n      return;\n    }\n\n    var rows = !isFreeze ? gObj.getDataRows() : gObj.getMovableRows();\n\n    if (this.selectedColumnsIndexes.indexOf(startIndex) > -1) {\n      this.clearColumnSelection(startIndex);\n    } else {\n      var selectingArgs = {\n        columnIndex: startIndex,\n        headerCell: selectedCol,\n        columnIndexes: this.selectedColumnsIndexes,\n        column: gObj.getColumnByIndex(startIndex),\n        cancel: false,\n        target: this.actualTarget,\n        isInteracted: this.isInteracted,\n        previousColumnIndex: this.prevColIndex,\n        isCtrlPressed: this.isMultiCtrlRequest,\n        isShiftPressed: this.isMultiShiftRequest\n      };\n      this.onActionBegin(selectingArgs, events.columnSelecting);\n\n      if (selectingArgs.cancel) {\n        this.disableInteracted();\n        return;\n      }\n\n      this.updateColSelection(newCol, startIndex);\n      selectedCol = this.getselectedCols();\n      var selectedArgs = {\n        columnIndex: startIndex,\n        headerCell: selectedCol,\n        column: gObj.getColumnByIndex(startIndex),\n        columnIndexes: this.selectedColumnsIndexes,\n        target: this.actualTarget,\n        isInteracted: this.isInteracted,\n        previousColumnIndex: this.prevColIndex\n      };\n      this.onActionComplete(selectedArgs, events.columnSelected);\n    }\n\n    this.updateColProps(startIndex);\n  };\n  /**\n   * Clear the column selection\n   */\n\n\n  Selection.prototype.clearColumnSelection = function (clearIndex) {\n    if (this.isColumnSelected) {\n      var gObj = this.parent;\n\n      if (!isNullOrUndefined(clearIndex) && this.selectedColumnsIndexes.indexOf(clearIndex) === -1) {\n        return;\n      }\n\n      var index = !isNullOrUndefined(clearIndex) ? clearIndex : this.selectedColumnsIndexes[this.selectedColumnsIndexes.length - 1];\n      var col = gObj.getColumnByIndex(index);\n      var selectedCol = void 0;\n      var column = gObj.getColumnByIndex(index);\n\n      if (col.getFreezeTableName() === 'frozen-right') {\n        selectedCol = gObj.getFrozenRightColumnHeaderByIndex(index);\n      } else if (col.getFreezeTableName() === 'movable') {\n        selectedCol = gObj.getMovableColumnHeaderByIndex(index);\n      } else {\n        selectedCol = gObj.getColumnHeaderByUid(column.uid);\n      }\n\n      var deselectedArgs = {\n        columnIndex: index,\n        headerCell: selectedCol,\n        columnIndexes: this.selectedColumnsIndexes,\n        column: column,\n        cancel: false,\n        target: this.actualTarget,\n        isInteracted: this.isInteracted\n      };\n      var isCanceled = this.columnDeselect(deselectedArgs, events.columnDeselecting);\n\n      if (isCanceled) {\n        this.disableInteracted();\n        return;\n      }\n\n      var selectedHeader = !isNullOrUndefined(clearIndex) ? [selectedCol] : [].slice.call(gObj.getHeaderContent().querySelectorAll('.e-columnselection'));\n      var selectedCells = this.getSelectedColumnCells(clearIndex);\n\n      for (var i = 0, len = selectedHeader.length; i < len; i++) {\n        addRemoveActiveClasses([selectedHeader[i]], false, 'e-columnselection');\n      }\n\n      for (var i = 0, len = selectedCells.length; i < len; i++) {\n        addRemoveActiveClasses([selectedCells[i]], false, 'e-columnselection');\n      }\n\n      if (!isNullOrUndefined(clearIndex)) {\n        this.selectedColumnsIndexes.splice(this.selectedColumnsIndexes.indexOf(clearIndex), 1);\n        this.parent.getColumns()[clearIndex].isSelected = false;\n      } else {\n        this.columnDeselect(deselectedArgs, events.columnDeselected);\n        this.selectedColumnsIndexes = [];\n        this.isColumnSelected = false;\n        this.parent.getColumns().filter(function (col) {\n          return col.isSelected = false;\n        });\n      }\n    }\n  };\n\n  Selection.prototype.getselectedCols = function () {\n    var gObj = this.parent;\n    var selectedCol;\n\n    if (this.selectedColumnsIndexes.length > 1) {\n      selectedCol = [];\n\n      for (var i = 0; i < this.selectedColumnsIndexes.length; i++) {\n        selectedCol.push(gObj.getColumnHeaderByUid(gObj.getColumnByIndex(this.selectedColumnsIndexes[i]).uid));\n      }\n    } else {\n      selectedCol = gObj.getColumnHeaderByUid(gObj.getColumnByIndex(this.selectedColumnsIndexes[0]).uid);\n    }\n\n    return selectedCol;\n  };\n\n  Selection.prototype.getSelectedColumnCells = function (clearIndex) {\n    var gObj = this.parent;\n    var isRowTemplate = !isNullOrUndefined(this.parent.rowTemplate);\n    var rows = isRowTemplate ? gObj.getRows() : gObj.getDataRows();\n    var movableRows;\n    var frRows;\n\n    if (gObj.isFrozenGrid() && gObj.getContent().querySelector('.e-movablecontent')) {\n      movableRows = isRowTemplate ? gObj.getMovableRows() : gObj.getMovableDataRows();\n      rows = gObj.addMovableRows(rows, movableRows);\n\n      if (gObj.getFrozenMode() === 'Left-Right') {\n        frRows = isRowTemplate ? gObj.getFrozenRightRows() : gObj.getFrozenRightDataRows();\n        rows = gObj.addMovableRows(rows, frRows);\n      }\n    }\n\n    var seletedcells = [];\n    var selectionString = !isNullOrUndefined(clearIndex) ? '[aria-colindex=\"' + clearIndex + '\"]' : '.e-columnselection';\n\n    for (var i = 0, len = rows.length; i < len; i++) {\n      seletedcells = seletedcells.concat([].slice.call(rows[i].querySelectorAll(selectionString)));\n    }\n\n    return seletedcells;\n  };\n\n  Selection.prototype.columnDeselect = function (args, event) {\n    if (event === 'columnDeselected') {\n      delete args.cancel;\n    }\n\n    this.onActionComplete(args, event);\n    return args.cancel;\n  };\n\n  Selection.prototype.updateColProps = function (startIndex) {\n    this.prevColIndex = startIndex;\n    this.isColumnSelected = this.selectedColumnsIndexes.length && true;\n  };\n\n  Selection.prototype.clearColDependency = function () {\n    this.clearColumnSelection();\n    this.selectedColumnsIndexes = [];\n  };\n\n  Selection.prototype.updateColSelection = function (selectedCol, startIndex) {\n    if (isNullOrUndefined(this.parent.getColumns()[startIndex])) {\n      return;\n    }\n\n    var left = this.parent.getFrozenLeftCount();\n    var movable = this.parent.getMovableColumnsCount();\n    var col = this.parent.getColumnByIndex(startIndex);\n    var isRowTemplate = !isNullOrUndefined(this.parent.rowTemplate);\n    var rows;\n    this.selectedColumnsIndexes.push(startIndex);\n    this.parent.getColumns()[startIndex].isSelected = true;\n\n    if (col.getFreezeTableName() === 'frozen-right') {\n      startIndex = startIndex - (left + movable);\n      rows = isRowTemplate ? this.parent.getFrozenRightRows() : this.parent.getFrozenRightDataRows();\n    } else if (col.getFreezeTableName() === 'movable') {\n      startIndex = startIndex - left;\n      rows = isRowTemplate ? this.parent.getMovableRows() : this.parent.getMovableDataRows();\n    } else {\n      startIndex = startIndex + this.parent.getIndentCount();\n      rows = isRowTemplate ? this.parent.getRows() : this.parent.getDataRows();\n    }\n\n    addRemoveActiveClasses([selectedCol], true, 'e-columnselection');\n\n    for (var j = 0, len = rows.length; j < len; j++) {\n      if (rows[j].classList.contains('e-row')) {\n        if ((rows[j].classList.contains('e-editedrow') || rows[j].classList.contains('e-addedrow')) && this.parent.editSettings.mode === 'Normal' && !isNullOrUndefined(rows[j].querySelector('tr').childNodes[startIndex])) {\n          addRemoveActiveClasses([rows[j].querySelector('tr').childNodes[startIndex]], true, 'e-columnselection');\n        } else if (!isNullOrUndefined(rows[j].childNodes[startIndex])) {\n          addRemoveActiveClasses([rows[j].childNodes[startIndex]], true, 'e-columnselection');\n        }\n      }\n    }\n  };\n\n  Selection.prototype.headerSelectionHandler = function (colIndex) {\n    if (!this.isMultiCtrlRequest && !this.isMultiShiftRequest || this.isSingleSel()) {\n      this.selectColumn(colIndex);\n    } else if (this.isMultiShiftRequest) {\n      this.selectColumnsByRange(isUndefined(this.prevColIndex) ? colIndex : this.prevColIndex, colIndex);\n    } else {\n      this.selectColumnWithExisting(colIndex);\n    }\n  };\n\n  Selection.prototype.addEventListener_checkbox = function () {\n    var _this = this;\n\n    this.parent.on(events.dataReady, this.dataReady, this);\n    this.onDataBoundFunction = this.onDataBound.bind(this);\n    this.parent.addEventListener(events.dataBound, this.onDataBoundFunction);\n    this.parent.on(events.contentReady, this.checkBoxSelectionChanged, this);\n    this.parent.on(events.beforeRefreshOnDataChange, this.initPerisistSelection, this);\n    this.parent.on(events.onEmpty, this.setCheckAllForEmptyGrid, this);\n    this.actionCompleteFunc = this.actionCompleteHandler.bind(this);\n    this.parent.addEventListener(events.actionComplete, this.actionCompleteFunc);\n    this.parent.on(events.click, this.clickHandler, this);\n\n    this.resizeEndFn = function () {\n      _this.updateAutoFillPosition();\n\n      _this.drawBorders();\n    };\n\n    this.resizeEndFn.bind(this);\n    this.parent.addEventListener(events.resizeStop, this.resizeEndFn);\n  };\n\n  Selection.prototype.removeEventListener_checkbox = function () {\n    this.parent.off(events.dataReady, this.dataReady);\n    this.parent.removeEventListener(events.dataBound, this.onDataBoundFunction);\n    this.parent.removeEventListener(events.actionComplete, this.actionCompleteFunc);\n    this.parent.off(events.onEmpty, this.setCheckAllForEmptyGrid);\n    this.parent.off(events.click, this.clickHandler);\n    this.parent.off(events.beforeRefreshOnDataChange, this.initPerisistSelection);\n  };\n\n  Selection.prototype.setCheckAllForEmptyGrid = function () {\n    var checkAllBox = this.getCheckAllBox();\n\n    if (checkAllBox) {\n      this.parent.isCheckBoxSelection = true;\n      var spanEle = checkAllBox.nextElementSibling;\n      removeClass([spanEle], ['e-check', 'e-stop', 'e-uncheck']);\n    }\n  };\n\n  Selection.prototype.dataReady = function (e) {\n    this.isHeaderCheckboxClicked = false;\n    var isInfinitecroll = this.parent.enableInfiniteScrolling && e.requestType === 'infiniteScroll';\n\n    if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection && !isInfinitecroll) {\n      this.disableUI = !this.parent.enableImmutableMode;\n      this.clearSelection();\n      this.setCheckAllState();\n      this.disableUI = false;\n    }\n  };\n\n  Selection.prototype.actionCompleteHandler = function (e) {\n    if (e.requestType === 'save' && this.parent.isPersistSelection) {\n      this.refreshPersistSelection();\n    }\n  };\n\n  Selection.prototype.selectRowIndex = function (index) {\n    this.parent.isSelectedRowIndexUpdating = true;\n    this.parent.selectedRowIndex = index;\n  };\n\n  Selection.prototype.disableInteracted = function () {\n    this.isInteracted = false;\n  };\n\n  Selection.prototype.activeTarget = function () {\n    this.actualTarget = this.isInteracted ? this.actualTarget : null;\n  };\n\n  return Selection;\n}();\n\nexport { Selection };","map":{"version":3,"sources":["C:/Users/appsk/Documents/Projects/PredictiveMaintenance/React PDM/env/frontend/node_modules/@syncfusion/ej2-grids/src/grid/actions/selection.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","Browser","EventHandler","createElement","isBlazor","isNullOrUndefined","isUndefined","addClass","removeClass","remove","closest","select","Query","setCssInGridPopUp","getPosition","isGroupAdaptive","addRemoveActiveClasses","removeAddCboxClasses","getCellsByTableName","getCellByColAndRowIndex","parentsUntil","gridActionHandler","events","RenderType","iterateExtend","setChecked","Selection","parent","selectionSettings","locator","selectedRowIndexes","selectedRowCellIndexes","selectedRecords","preventFocus","selectedColumnsIndexes","checkBoxState","isMultiShiftRequest","isMultiCtrlRequest","enableSelectMultiTouch","clearRowCheck","selectRowCheck","selectedRowState","totalRecordsCount","chkAllCollec","isCheckedOnAdd","persistSelectedData","needColumnSelection","isCancelDeSelect","isPreventCellSelect","disableUI","isPersisted","cmdKeyPressed","cellselected","isMultiSelection","isAddRowsToSelection","initialRowSelection","autoFillRLselection","factory","getService","focus","addEventListener","wireEvents","initializeSelection","log","render","onActionBegin","args","type","trigger","fDataUpdate","cellIndex","rowIndex","rowObj","getRowObj","currentIndex","foreignKeyData","onActionComplete","getModuleName","destroy","gridElement","element","querySelector","hidePopUp","clearSelection","removeEventListener","unWireEvents","getContent","mouseDownHandler","getHeaderContent","isEditing","editSettings","mode","editModule","formObj","validate","isEdit","isPersistSelection","getSelectedMovableRow","index","gObj","isFrozenGrid","getMovableRowByIndex","getSelectedFrozenRightRow","getFrozenMode","getFrozenRightContent","getFrozenRightRowByIndex","getCurrentBatchRecordChanges","added","deleted","currentRecords","getCurrentViewRecords","newRowPosition","concat","getBatchChanges","deletedRecords","primaryKey","getPrimaryKeyFieldNames","j","splice","selectRow","isToggle","enableSimpleMultiRowSelection","addRowsToSelection","selectedRow","getRowByIndex","selectedMovableRow","selectedFrozenRightRow","selectData","isRemoved","enableVirtualization","notify","selectVirtualRow","selectedIndex","frozenData","contentModule","getRowObjectByIndex","getRowObjectFromUID","getAttribute","data","prevSelectedData","getSelectedRecords","clearRowSelection","isRowType","isRowSelected","hasAttribute","activeTarget","can","isHybrid","isJsComponent","isCtrlPressed","isShiftPressed","row","previousRow","prevRowIndex","previousRowIndex","target","actualTarget","cancel","isInteracted","isHeaderCheckboxClicked","addMovableArgs","rowSelecting","rowSelectingCallBack","_this","disableInteracted","toggle","removed","persistSelection","checkboxMode","clearSelectedRow","selectRowCallBack","isCheckBoxSelection","clearRow","indexOf","updateRowSelection","selectMovableRow","selectRowIndex","isHeaderCheckBoxClicked","rowSelected","isServerRendered","interopAdaptor","invokeMethodAsync","updateRowProps","targetObj","mRow","frRow","mObj","previousMovRow","getMovableRows","frozenRightRow","previousFrozenRightRow","getFrozenRightDataRows","selectRowsByRange","startIndex","endIndex","selectRows","getCollectionFromIndexes","rowIndexes","isSingleSel","selectedRows","selectedData","len","currentRow","getDataRows","push","prevRow","getRows","slice","selectRowFn","rightEle","undefined","_i","rowIndexes_1","rowIdx","indexes","getSelectedRowIndexes","checkboxOnly","checkboxColumn","getColumns","filter","col","_loop_1","this_1","isUnSelected","enableToggle","rowDeselect","rowDeselecting","value","removeAttribute","addRemoveClassesForRow","rowDeselected","rowIndexes_2","state_1","_a","max","reverse","clearRowCallBack","checkAllRows","selectedEle","updatePersistCollection","updateCheckBoxes","chkState","ensureCheckboxFieldSelection","pKey_1","isSelected","some","updatePersistDelete","pKey","isPresent","chkBox","nextElementSibling","checkedTarget","classList","contains","setCheckAllState","pop","setAttribute","getPrevIndexes","cells","contextMenuModule","mouseButton","cell","onClick","span","clearCellSelection","clearColumnSelection","rows_1","data_1","row_1","mRow_1","fRightRow_1","rowIndex_1","foreignKeyData_1","target_1","currentViewData","getFrozenRightRows","checkSelectAllClicked","getCheckAllStatus","updatePersistSelectedData","record","getRenderer","setSelection","movableRow","rowDeselectCallBack","cancl_1","rowDeselectObj","rowInString","target_2","rowidx","rowidxex","data_2","foreignKey","isHeaderCheckBxClick","rowIndex_2","data_3","getSelectedMovableCell","getColumnByIndex","frzCols","getFreezeTableName","getMovableCellFromIndex","getColIndex","selectCell","isCellType","selectedCell","getCellFromIndex","selectedTable","cIdx","isCellSelected","prevCIdxs","previousRowCell","prevECIdxs","getCellIndex","currentCell","previousRowCellIndex","cellSelecting","successCallBack","cellSelectingArgs","cncl","clearCell","updateCellSelection","selectedRowCellIndex","updateCellProps","cellSelected","rIdx","getFrozenColumns","selectCellsByRange","min","stIndex","edIndex","cellIndexes","temp","cellSelectionMode","getLastColIndex","addAttribute","cellSelectedArgs","isDragged","selectCells","rowCellIndexes","cellSelectArgs","cellLen","addRowCellIndex","addCellsToSelection","left","getFrozenLeftCount","movable","getMovableColumnsCount","hideAutoFill","tableName","rows","getRowsObject","getMovableRowsObject","getFrozenRightRowsObject","cellIndexes_1","idx","selectedCellIdx","cellDeselect","cellDeselecting","cellDeselected","m","colIndex","parseInt","getFrozenLeftColumnsCount","getMovableDataRows","querySelectorAll","cancl","add","rowCellIndex","isRowAvail","selectedCells","getSelectedCellsElement","rowCell","cLen","bdrElement","showHideBorders","mRows","addMovableRows","mouseMoveHandler","e","preventDefault","gBRect","getBoundingClientRect","x1","x","y1","y","position","x2","y2","top","tmp","isCellDrag","document","elementFromPoint","offsetLeft","clientY","style","width","height","ctrlKey","shiftKey","startDIndex","td","startAFCell","startCell","endAFCell","selectLikeExcel","isAutoFillSel","startDCellIndex","drawBorders","showAFBorders","selectLikeAutoFill","createBorders","positionBorders","isLastCell","parentElement","isLastRow","isFirstRow","isFirstCell","setBorders","parentEle","border","bdrStr","ele","display","isFrozen","start","end","stOff","endOff","parentOff","offsetParent","rowHeight","topOffSet","frozenRows","leftOffset","rightOffset","enableRtl","right","selectDirection","updateStartEndCells","getContentTable","getMovableContent","mcBdrElement","frcBdrElement","getHeaderTable","fhBdrElement","headerModule","getMovableHeader","mhBdrElement","getFrozenRightHeader","frhBdrElement","applyBorders","applyBothFrozenBorders","str","rtl","borderWidth","includes","appendChild","className","id","styles","drawAFBorders","bdrAFBottom","createAFBorders","positionAFBorders","bdrAFLeft","firstCellTop","firstCellLeft","parentRect","sTop","scrollTop","sLeft","scrollLeft","offsetTop","totalHeight","clientHeight","totalWidth","clientWidth","Math","floor","bdrAFRight","bdrAFTop","leftRemove","scrolloffSet","parseFloat","topRemove","hideAFBorders","updateValue","createBeforeAutoFill","updateCell","field","column","innerText","beforeAutoFill","getAutoFillCells","startCellIdx","cls","isApply","startrowIdx","endrowIdx","endCellIdx","rowLen","colLen","cellIdx","endCell","c","startCellIndex","trIdx","r","mouseUpHandler","body","mUPTarget","updateAutoFillPosition","lastCell","updateStartCellsIndex","autofill","enableAutoFill","rindex","isFrozenCol","isFrozenRow","isFrozenRight","clientRect","colWidth","button","isDrag","allowRowDragAndDrop","enableDrag","isUpdate","tr","postion","clearSelAfterRefresh","isInfiniteScroll","enableInfiniteScrolling","requestType","isDestroyed","on","uiUpdate","enableAfterRender","initialEnd","rowSelectionComplete","cellSelectionComplete","inBoundModelChanged","onPropertyChanged","cellFocused","onCellFocused","beforeFragAppend","columnPositionChanged","contentReady","actionBeginFunction","actionBegin","bind","actionCompleteFunction","actionComplete","rowsRemoved","headerRefreshed","refreshHeader","addEventListener_checkbox","off","removeEventListener_checkbox","isMacOS","navigator","userAgent","keyDownHandler","keyUpHandler","records","getCheckAllBox","module","enable","initPerisistSelection","properties","prevColIndex","checkBoxSelectionChanged","isLeftRightFrozen","renderFrozenRightContent","selectedRowIndex","gobj","chkField","pageSettings","dataBind","keys","getDataModule","query","where","params","dataManager","getData","proxy_1","showSpinner","then","dataSuccess","result","refreshPersistSelection","hideSpinner","res","setRowSelection","state","isRemote","groupSettings","columns","_b","_c","executeLocal","generateQuery","checkState","editChkBox","checked","action","onDataBound","totalRecords","checkSelectAllAction","cRenderer","editForm","currentInfo","getVirtualRowIndex","checkSelectAll","checkBox","stateStr","allowPaging","values","vgenerator","rowCache","forEach","selectionModule","Number","triggerChkChangeEvent","classes","status","checkSelect","checkObj","rIndex","uid","map","rowCellSelectionHandler","moveIntoUncheckCollection","checkBoxChange","updateSelectedRowIndex","dataLength","selectedVal","isInteraction","checkToSelectAll","isServerRenderedVirtualization","checkedLen","input","spanEle","indeterminate","info","name","keyCode","clickHandler","allowColumnSelection","popUpClickHandler","chkSelect","checkWrap","isEqualNode","hoverFrozenRows","isDevice","showPopup","headerSelectionHandler","getColumnIndexByUid","container","isHeader","byKey","keyArgs","allowFiltering","isJump","tagName","clear","isContent","isSelectable","headerAction","prev","thLen","childElementCount","selectedIndexes","getSelectedRowCellIndexes","columnIndex","getKeyColIndex","applyDownUpKey","applyRightLeftKey","shiftDownKey","applyShiftLeftRightKey","applyHomeEndKey","applyCtrlHomeEndKey","ctrlPlusA","applySpaceSelection","allowNextRowEdit","stackedHeader","innerColumn","getstackedColumns","getColumnByUid","lastIndex","firstIndex","applyUpDown","selectColumn","children","cIndex","contentRenderer","selectColumnsByRange","innerColumnIndexes","isAdd","clearAll","detailIndentCell","dragdropIndentCell","Content","selectedCol","getColumnHeaderByUid","isColSelected","isMultiColumns","clearColDependency","headerCell","previousColumnIndex","columnSelecting","updateColSelection","selectedArgs","columnSelected","updateColProps","selectColumns","columnIndexes","getselectedCols","selectingArgs","selectColumnWithExisting","isFreeze","newCol","clearIndex","isColumnSelected","getFrozenRightColumnHeaderByIndex","getMovableColumnHeaderByIndex","deselectedArgs","isCanceled","columnDeselect","columnDeselecting","selectedHeader","getSelectedColumnCells","columnDeselected","isRowTemplate","rowTemplate","movableRows","frRows","seletedcells","selectionString","event","getIndentCount","childNodes","dataReady","onDataBoundFunction","dataBound","beforeRefreshOnDataChange","onEmpty","setCheckAllForEmptyGrid","actionCompleteFunc","actionCompleteHandler","click","resizeEndFn","resizeStop","checkAllBox","isInfinitecroll","enableImmutableMode","isSelectedRowIndexUpdating"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { Browser, EventHandler, createElement, isBlazor } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, isUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { remove, closest, select } from '@syncfusion/ej2-base';\nimport { Query } from '@syncfusion/ej2-data';\nimport { setCssInGridPopUp, getPosition, isGroupAdaptive, addRemoveActiveClasses, removeAddCboxClasses } from '../base/util';\nimport { getCellsByTableName, getCellByColAndRowIndex, parentsUntil, gridActionHandler } from '../base/util';\nimport * as events from '../base/constant';\nimport { RenderType } from '../base/enum';\nimport { iterateExtend, setChecked } from '../base/util';\n/**\n * The `Selection` module is used to handle cell and row selection.\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for the Grid selection module\n     * @hidden\n     */\n    function Selection(parent, selectionSettings, locator) {\n        //Internal letiables       \n        /**\n         * @hidden\n         */\n        this.selectedRowIndexes = [];\n        /**\n         * @hidden\n         */\n        this.selectedRowCellIndexes = [];\n        /**\n         * @hidden\n         */\n        this.selectedRecords = [];\n        /**\n         * @hidden\n         */\n        this.preventFocus = false;\n        /**\n         *  @hidden\n         */\n        this.selectedColumnsIndexes = [];\n        this.checkBoxState = false;\n        this.isMultiShiftRequest = false;\n        this.isMultiCtrlRequest = false;\n        this.enableSelectMultiTouch = false;\n        this.clearRowCheck = false;\n        this.selectRowCheck = false;\n        this.selectedRowState = {};\n        this.totalRecordsCount = 0;\n        this.chkAllCollec = [];\n        this.isCheckedOnAdd = false;\n        this.persistSelectedData = [];\n        this.needColumnSelection = false;\n        this.isCancelDeSelect = false;\n        this.isPreventCellSelect = false;\n        this.disableUI = false;\n        this.isPersisted = false;\n        this.cmdKeyPressed = false;\n        this.cellselected = false;\n        this.isMultiSelection = false;\n        this.isAddRowsToSelection = false;\n        this.initialRowSelection = false;\n        /**\n         * @hidden\n         */\n        this.autoFillRLselection = true;\n        this.parent = parent;\n        this.selectionSettings = selectionSettings;\n        this.factory = locator.getService('rendererFactory');\n        this.focus = locator.getService('focus');\n        this.addEventListener();\n        this.wireEvents();\n    }\n    Selection.prototype.initializeSelection = function () {\n        this.parent.log('selection_key_missing');\n        this.render();\n    };\n    /**\n     * The function used to trigger onActionBegin\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.onActionBegin = function (args, type) {\n        this.parent.trigger(type, this.fDataUpdate(args));\n    };\n    Selection.prototype.fDataUpdate = function (args) {\n        if (!this.isMultiSelection && (!isNullOrUndefined(args.cellIndex) || !isNullOrUndefined(args.rowIndex))) {\n            var rowObj = this.getRowObj(isNullOrUndefined(args.rowIndex) ? isNullOrUndefined(args.cellIndex) ?\n                this.currentIndex : args.cellIndex.rowIndex : args.rowIndex);\n            args.foreignKeyData = rowObj.foreignKeyData;\n        }\n        return args;\n    };\n    /**\n     * The function used to trigger onActionComplete\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.onActionComplete = function (args, type) {\n        this.parent.trigger(type, this.fDataUpdate(args));\n        this.isMultiSelection = false;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    /**\n     * To destroy the selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        var gridElement = this.parent.element;\n        if (!gridElement || (!gridElement.querySelector('.e-gridheader') && !gridElement.querySelector('.e-gridcontent'))) {\n            return;\n        }\n        this.hidePopUp();\n        this.clearSelection();\n        this.removeEventListener();\n        this.unWireEvents();\n        EventHandler.remove(this.parent.getContent(), 'mousedown', this.mouseDownHandler);\n        EventHandler.remove(this.parent.getHeaderContent(), 'mousedown', this.mouseDownHandler);\n    };\n    Selection.prototype.isEditing = function () {\n        return (this.parent.editSettings.mode === 'Normal' || (this.parent.editSettings.mode === 'Batch' && this.parent.editModule &&\n            this.parent.editModule.formObj && !this.parent.editModule.formObj.validate())) &&\n            this.parent.isEdit && !this.parent.isPersistSelection;\n    };\n    Selection.prototype.getSelectedMovableRow = function (index) {\n        var gObj = this.parent;\n        if (gObj.isFrozenGrid() && this.parent.getContent().querySelector('.e-movablecontent')) {\n            return gObj.getMovableRowByIndex(index);\n        }\n        return null;\n    };\n    Selection.prototype.getSelectedFrozenRightRow = function (index) {\n        var gObj = this.parent;\n        if (gObj.isFrozenGrid() && gObj.getFrozenMode() === 'Left-Right' && gObj.getFrozenRightContent()) {\n            return gObj.getFrozenRightRowByIndex(index);\n        }\n        return null;\n    };\n    Selection.prototype.getCurrentBatchRecordChanges = function () {\n        var gObj = this.parent;\n        var added = 'addedRecords';\n        var deleted = 'deletedRecords';\n        if (gObj.editSettings.mode === 'Batch' && gObj.editModule) {\n            var currentRecords = iterateExtend(this.parent.getCurrentViewRecords());\n            currentRecords = gObj.editSettings.newRowPosition === 'Bottom' ?\n                currentRecords.concat(this.parent.editModule.getBatchChanges()[added]) :\n                this.parent.editModule.getBatchChanges()[added].concat(currentRecords);\n            var deletedRecords = this.parent.editModule.getBatchChanges()[deleted];\n            var primaryKey = this.parent.getPrimaryKeyFieldNames()[0];\n            for (var i = 0; i < (deletedRecords.length); i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (deletedRecords[i][primaryKey] === currentRecords[j][primaryKey]) {\n                        currentRecords.splice(j, 1);\n                        break;\n                    }\n                }\n            }\n            return currentRecords;\n        }\n        else {\n            return gObj.getCurrentViewRecords();\n        }\n    };\n    /**\n     * Selects a row by the given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    Selection.prototype.selectRow = function (index, isToggle) {\n        if (this.selectedRowIndexes.length && this.selectionSettings.enableSimpleMultiRowSelection) {\n            this.addRowsToSelection([index]);\n            return;\n        }\n        var gObj = this.parent;\n        var selectedRow = gObj.getRowByIndex(index);\n        var selectedMovableRow = this.getSelectedMovableRow(index);\n        var selectedFrozenRightRow = this.getSelectedFrozenRightRow(index);\n        var selectData;\n        var isRemoved = false;\n        if (gObj.enableVirtualization && index > -1) {\n            this.parent.notify(events.selectVirtualRow, { selectedIndex: index });\n            var frozenData = gObj.isFrozenGrid() ? gObj.contentModule.getRowObjectByIndex(index)\n                : null;\n            if (selectedRow && (gObj.getRowObjectFromUID(selectedRow.getAttribute('data-uid')) || frozenData)) {\n                selectData = frozenData ? frozenData : gObj.getRowObjectFromUID(selectedRow.getAttribute('data-uid')).data;\n            }\n            else {\n                var prevSelectedData = this.parent.getSelectedRecords();\n                if (prevSelectedData.length > 0) {\n                    this.clearRowSelection();\n                }\n                return;\n            }\n        }\n        else {\n            selectData = this.getCurrentBatchRecordChanges()[index];\n        }\n        if (!this.isRowType() || !selectedRow || this.isEditing()) {\n            // if (this.isEditing()) {\n            //     gObj.selectedRowIndex = index;\n            // }\n            return;\n        }\n        var isRowSelected = selectedRow.hasAttribute('aria-selected');\n        this.activeTarget();\n        isToggle = !isToggle ? isToggle :\n            !this.selectedRowIndexes.length ? false :\n                (this.selectedRowIndexes.length === 1 ? (index === this.selectedRowIndexes[0]) : false);\n        var args;\n        var can = 'cancel';\n        if (!isToggle) {\n            var isHybrid = 'isHybrid';\n            if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n                args = {\n                    data: selectData, rowIndex: index, isCtrlPressed: this.isMultiCtrlRequest,\n                    isShiftPressed: this.isMultiShiftRequest, row: selectedRow,\n                    previousRow: gObj.getRowByIndex(this.prevRowIndex),\n                    previousRowIndex: this.prevRowIndex, target: this.actualTarget, cancel: false, isInteracted: this.isInteracted,\n                    isHeaderCheckboxClicked: this.isHeaderCheckboxClicked\n                };\n                args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n            }\n            else {\n                args = {\n                    data: selectData, rowIndex: index, isCtrlPressed: this.isMultiCtrlRequest,\n                    isShiftPressed: this.isMultiShiftRequest, previousRowIndex: this.prevRowIndex,\n                    cancel: false, isInteracted: this.isInteracted, isHeaderCheckboxClicked: this.isHeaderCheckboxClicked\n                };\n            }\n            this.parent.trigger(events.rowSelecting, this.fDataUpdate(args), this.rowSelectingCallBack(args, isToggle, index, selectData, isRemoved, isRowSelected, can));\n        }\n        else {\n            this.rowSelectingCallBack(args, isToggle, index, selectData, isRemoved, isRowSelected, can)(args);\n        }\n    };\n    Selection.prototype.rowSelectingCallBack = function (args, isToggle, index, selectData, isRemoved, isRowSelected, can) {\n        var _this = this;\n        return function (args) {\n            if (!isNullOrUndefined(args) && args[can] === true) {\n                _this.disableInteracted();\n                return;\n            }\n            _this.index = index;\n            _this.toggle = isToggle;\n            _this.data = selectData;\n            _this.removed = isRemoved;\n            if (isRowSelected && _this.selectionSettings.persistSelection && !(_this.selectionSettings.checkboxMode === 'ResetOnRowClick')) {\n                _this.clearSelectedRow(index);\n                _this.selectRowCallBack();\n            }\n            else if (!isRowSelected && _this.selectionSettings.persistSelection &&\n                _this.selectionSettings.checkboxMode !== 'ResetOnRowClick') {\n                _this.selectRowCallBack();\n            }\n            if (_this.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n                _this.clearSelection();\n            }\n            if (!_this.selectionSettings.persistSelection || _this.selectionSettings.checkboxMode === 'ResetOnRowClick' ||\n                (!_this.parent.isCheckBoxSelection && _this.selectionSettings.persistSelection)) {\n                _this.selectRowCheck = true;\n                _this.clearRow();\n            }\n        };\n    };\n    Selection.prototype.selectRowCallBack = function () {\n        var gObj = this.parent;\n        var args;\n        var index = this.index;\n        var isToggle = this.toggle;\n        var selectData = this.data;\n        var isRemoved = this.removed;\n        var selectedRow = gObj.getRowByIndex(index);\n        var selectedMovableRow = this.getSelectedMovableRow(index);\n        var selectedFrozenRightRow = this.getSelectedFrozenRightRow(index);\n        if (!isToggle && !isRemoved) {\n            if (this.selectedRowIndexes.indexOf(index) <= -1) {\n                this.updateRowSelection(selectedRow, index);\n                this.selectMovableRow(selectedMovableRow, selectedFrozenRightRow, index);\n            }\n            this.selectRowIndex(index);\n        }\n        if (!isToggle) {\n            var isHybrid = 'isHybrid';\n            if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n                args = {\n                    data: selectData, rowIndex: index,\n                    row: selectedRow, previousRow: gObj.getRowByIndex(this.prevRowIndex),\n                    previousRowIndex: this.prevRowIndex, target: this.actualTarget, isInteracted: this.isInteracted,\n                    isHeaderCheckBoxClicked: this.isHeaderCheckboxClicked\n                };\n                args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n            }\n            else {\n                args = {\n                    data: selectData, rowIndex: index,\n                    row: selectedRow, previousRow: gObj.getRowByIndex(this.prevRowIndex),\n                    previousRowIndex: this.prevRowIndex, isInteracted: this.isInteracted,\n                    isHeaderCheckBoxClicked: this.isHeaderCheckboxClicked\n                };\n            }\n            this.onActionComplete(args, events.rowSelected);\n        }\n        if (isBlazor() && this.parent.isServerRendered && this.parent.enableVirtualization) {\n            var interopAdaptor = 'interopAdaptor';\n            var invokeMethodAsync = 'invokeMethodAsync';\n            this.parent[interopAdaptor][invokeMethodAsync]('MaintainSelection', true, 'normal', [index]);\n        }\n        this.isInteracted = false;\n        this.updateRowProps(index);\n    };\n    Selection.prototype.selectMovableRow = function (selectedMovableRow, selectedFrozenRightRow, index) {\n        if (this.parent.isFrozenGrid()) {\n            this.updateRowSelection(selectedMovableRow, index);\n            if (this.parent.getFrozenMode() === 'Left-Right' && selectedFrozenRightRow) {\n                this.updateRowSelection(selectedFrozenRightRow, index);\n            }\n        }\n    };\n    Selection.prototype.addMovableArgs = function (targetObj, mRow, frRow) {\n        if (this.parent.isFrozenGrid()) {\n            var mObj = { mRow: mRow, previousMovRow: this.parent.getMovableRows()[this.prevRowIndex] };\n            var frozenRightRow = 'frozenRightRow';\n            var previousFrozenRightRow = 'previousFrozenRightRow';\n            if (this.parent.getFrozenMode() === 'Left-Right' && frRow) {\n                mObj[frozenRightRow] = frRow;\n                mObj[previousFrozenRightRow] = this.parent.getFrozenRightDataRows()[this.prevRowIndex];\n            }\n            targetObj = __assign({}, targetObj, mObj);\n        }\n        return targetObj;\n    };\n    /**\n     * Selects a range of rows from start and end row indexes.\n     * @param  {number} startIndex - Specifies the start row index.\n     * @param  {number} endIndex - Specifies the end row index.\n     * @return {void}\n     */\n    Selection.prototype.selectRowsByRange = function (startIndex, endIndex) {\n        this.selectRows(this.getCollectionFromIndexes(startIndex, endIndex));\n        this.selectRowIndex(endIndex);\n    };\n    /**\n     * Selects a collection of rows by index.\n     * @param  {number[]} rowIndexes - Specifies an array of row indexes.\n     * @return {void}\n     */\n    Selection.prototype.selectRows = function (rowIndexes) {\n        var _this = this;\n        var gObj = this.parent;\n        var rowIndex = !this.isSingleSel() ? rowIndexes[0] : rowIndexes[rowIndexes.length - 1];\n        this.isMultiSelection = true;\n        var selectedRows = [];\n        var foreignKeyData = [];\n        var selectedMovableRow = this.getSelectedMovableRow(rowIndex);\n        var selectedFrozenRightRow = this.getSelectedFrozenRightRow(rowIndex);\n        var can = 'cancel';\n        var selectedData = [];\n        if (!this.isRowType() || this.isEditing()) {\n            return;\n        }\n        for (var i = 0, len = rowIndexes.length; i < len; i++) {\n            var currentRow = this.parent.getDataRows()[rowIndexes[i]];\n            var rowObj = this.getRowObj(currentRow);\n            if (rowObj) {\n                selectedData.push(rowObj.data);\n                selectedRows.push(currentRow);\n                foreignKeyData.push(rowObj.foreignKeyData);\n            }\n        }\n        var isHybrid = 'isHybrid';\n        this.activeTarget();\n        var args;\n        if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n            args = {\n                cancel: false,\n                rowIndexes: rowIndexes, row: selectedRows, rowIndex: rowIndex, target: this.actualTarget,\n                prevRow: gObj.getRows()[this.prevRowIndex], previousRowIndex: this.prevRowIndex,\n                isInteracted: this.isInteracted, isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest,\n                data: selectedData, isHeaderCheckboxClicked: this.isHeaderCheckboxClicked, foreignKeyData: foreignKeyData\n            };\n            args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n        }\n        else {\n            args = {\n                cancel: false,\n                rowIndexes: rowIndexes, rowIndex: rowIndex, previousRowIndex: this.prevRowIndex,\n                isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest,\n                data: selectedData, isHeaderCheckboxClicked: this.isHeaderCheckboxClicked, foreignKeyData: foreignKeyData\n            };\n        }\n        this.parent.trigger(events.rowSelecting, this.fDataUpdate(args), function (args) {\n            if (!isNullOrUndefined(args) && args[can] === true) {\n                _this.disableInteracted();\n                return;\n            }\n            _this.clearRow();\n            _this.selectRowIndex(rowIndexes.slice(-1)[0]);\n            var selectRowFn = function (index) {\n                _this.updateRowSelection(gObj.getRowByIndex(index), index);\n                if (gObj.isFrozenGrid()) {\n                    var rightEle = _this.parent.getFrozenMode() === 'Left-Right' ? gObj.getFrozenRightRowByIndex(index)\n                        : undefined;\n                    _this.selectMovableRow(gObj.getMovableRowByIndex(index), rightEle, index);\n                }\n                _this.updateRowProps(rowIndex);\n            };\n            if (!_this.isSingleSel()) {\n                for (var _i = 0, rowIndexes_1 = rowIndexes; _i < rowIndexes_1.length; _i++) {\n                    var rowIdx = rowIndexes_1[_i];\n                    selectRowFn(rowIdx);\n                }\n            }\n            else {\n                selectRowFn(rowIndex);\n            }\n            var isHybrid = 'isHybrid';\n            if (!isBlazor() || _this.parent.isJsComponent || _this.parent[isHybrid]) {\n                args = {\n                    rowIndexes: rowIndexes, row: selectedRows, rowIndex: rowIndex, target: _this.actualTarget,\n                    prevRow: gObj.getRows()[_this.prevRowIndex], previousRowIndex: _this.prevRowIndex,\n                    data: isBlazor() ? selectedData : _this.getSelectedRecords(), isInteracted: _this.isInteracted,\n                    isHeaderCheckboxClicked: _this.isHeaderCheckboxClicked, foreignKeyData: foreignKeyData\n                };\n                args = _this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n            }\n            else {\n                args = {\n                    rowIndexes: rowIndexes, rowIndex: rowIndex, previousRowIndex: _this.prevRowIndex,\n                    row: selectedRows, prevRow: gObj.getRows()[_this.prevRowIndex],\n                    data: isBlazor() ? selectedData : _this.getSelectedRecords(), isInteracted: _this.isInteracted,\n                    isHeaderCheckboxClicked: _this.isHeaderCheckboxClicked, foreignKeyData: foreignKeyData\n                };\n            }\n            if (_this.isRowSelected) {\n                _this.onActionComplete(args, events.rowSelected);\n            }\n        });\n    };\n    /**\n     * Select rows with existing row selection by passing row indexes.\n     * @param  {number} startIndex - Specifies the row indexes.\n     * @return {void}\n     * @hidden\n     */\n    // tslint:disable-next-line:max-func-body-length\n    Selection.prototype.addRowsToSelection = function (rowIndexes) {\n        var _this = this;\n        var gObj = this.parent;\n        var can = 'cancel';\n        var target = this.target;\n        this.isMultiSelection = true;\n        var indexes = gObj.getSelectedRowIndexes().concat(rowIndexes);\n        var selectedRow = !this.isSingleSel() ? gObj.getRowByIndex(rowIndexes[0]) :\n            gObj.getRowByIndex(rowIndexes[rowIndexes.length - 1]);\n        var selectedMovableRow = !this.isSingleSel() ? this.getSelectedMovableRow(rowIndexes[0]) :\n            this.getSelectedMovableRow(rowIndexes[rowIndexes.length - 1]);\n        var selectedFrozenRightRow = !this.isSingleSel() ? this.getSelectedFrozenRightRow(rowIndexes[0]) :\n            this.getSelectedFrozenRightRow(rowIndexes[rowIndexes.length - 1]);\n        if ((!this.isRowType() || this.isEditing()) && !this.selectionSettings.checkboxOnly) {\n            return;\n        }\n        var args;\n        var checkboxColumn = this.parent.getColumns().filter(function (col) { return col.type === 'checkbox'; });\n        var _loop_1 = function (rowIndex) {\n            var rowObj = this_1.getRowObj(rowIndex);\n            var isUnSelected = this_1.selectedRowIndexes.indexOf(rowIndex) > -1;\n            this_1.selectRowIndex(rowIndex);\n            if (isUnSelected && ((checkboxColumn.length ? true : this_1.selectionSettings.enableToggle) || this_1.isMultiCtrlRequest)) {\n                this_1.isAddRowsToSelection = true;\n                this_1.rowDeselect(events.rowDeselecting, [rowIndex], [rowObj.data], [selectedRow], [rowObj.foreignKeyData], target);\n                if (this_1.isCancelDeSelect) {\n                    return { value: void 0 };\n                }\n                this_1.selectedRowIndexes.splice(this_1.selectedRowIndexes.indexOf(rowIndex), 1);\n                this_1.selectedRecords.splice(this_1.selectedRecords.indexOf(selectedRow), 1);\n                selectedRow.removeAttribute('aria-selected');\n                this_1.addRemoveClassesForRow(selectedRow, false, null, 'e-selectionbackground', 'e-active');\n                if (selectedMovableRow) {\n                    this_1.selectedRecords.splice(this_1.selectedRecords.indexOf(selectedMovableRow), 1);\n                    selectedMovableRow.removeAttribute('aria-selected');\n                    this_1.addRemoveClassesForRow(selectedMovableRow, false, null, 'e-selectionbackground', 'e-active');\n                }\n                this_1.rowDeselect(events.rowDeselected, [rowIndex], [rowObj.data], [selectedRow], [rowObj.foreignKeyData], target, [selectedMovableRow]);\n                this_1.isInteracted = false;\n                this_1.isMultiSelection = false;\n                this_1.isAddRowsToSelection = false;\n            }\n            else {\n                var isHybrid = 'isHybrid';\n                this_1.activeTarget();\n                if (!isBlazor() || this_1.parent.isJsComponent || this_1.parent[isHybrid]) {\n                    args = {\n                        cancel: false,\n                        data: rowObj.data, rowIndex: rowIndex, row: selectedRow, target: this_1.actualTarget,\n                        prevRow: gObj.getRows()[this_1.prevRowIndex], previousRowIndex: this_1.prevRowIndex,\n                        isCtrlPressed: this_1.isMultiCtrlRequest, isShiftPressed: this_1.isMultiShiftRequest,\n                        foreignKeyData: rowObj.foreignKeyData, isInteracted: this_1.isInteracted,\n                        isHeaderCheckboxClicked: this_1.isHeaderCheckboxClicked, rowIndexes: indexes\n                    };\n                    args = this_1.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n                }\n                else {\n                    args = {\n                        cancel: false,\n                        data: rowObj.data, rowIndex: rowIndex, previousRowIndex: this_1.prevRowIndex,\n                        isCtrlPressed: this_1.isMultiCtrlRequest, isShiftPressed: this_1.isMultiShiftRequest,\n                        foreignKeyData: rowObj.foreignKeyData, isInteracted: this_1.isInteracted,\n                        isHeaderCheckboxClicked: this_1.isHeaderCheckboxClicked, rowIndexes: indexes\n                    };\n                }\n                this_1.parent.trigger(events.rowSelecting, this_1.fDataUpdate(args), function (args) {\n                    if (!isNullOrUndefined(args) && args[can] === true) {\n                        _this.disableInteracted();\n                        return;\n                    }\n                    if (_this.isSingleSel()) {\n                        _this.clearRow();\n                    }\n                    _this.updateRowSelection(selectedRow, rowIndex);\n                    _this.selectMovableRow(selectedMovableRow, selectedFrozenRightRow, rowIndex);\n                });\n            }\n            if (!isUnSelected) {\n                var isHybrid = 'isHybrid';\n                if (!isBlazor() || this_1.parent.isJsComponent || this_1.parent[isHybrid]) {\n                    args = {\n                        data: rowObj.data, rowIndex: rowIndex, row: selectedRow, target: this_1.actualTarget,\n                        prevRow: gObj.getRows()[this_1.prevRowIndex], previousRowIndex: this_1.prevRowIndex,\n                        foreignKeyData: rowObj.foreignKeyData, isInteracted: this_1.isInteracted,\n                        isHeaderCheckboxClicked: this_1.isHeaderCheckboxClicked, rowIndexes: indexes\n                    };\n                    args = this_1.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n                }\n                else {\n                    args = {\n                        data: rowObj.data, rowIndex: rowIndex, previousRowIndex: this_1.prevRowIndex,\n                        row: selectedRow, prevRow: gObj.getRows()[this_1.prevRowIndex],\n                        foreignKeyData: rowObj.foreignKeyData, isInteracted: this_1.isInteracted,\n                        isHeaderCheckboxClicked: this_1.isHeaderCheckboxClicked, rowIndexes: indexes\n                    };\n                }\n                this_1.onActionComplete(args, events.rowSelected);\n            }\n            this_1.isInteracted = false;\n            this_1.updateRowProps(rowIndex);\n            if (this_1.isSingleSel()) {\n                return \"break\";\n            }\n        };\n        var this_1 = this;\n        for (var _i = 0, rowIndexes_2 = rowIndexes; _i < rowIndexes_2.length; _i++) {\n            var rowIndex = rowIndexes_2[_i];\n            var state_1 = _loop_1(rowIndex);\n            if (typeof state_1 === \"object\")\n                return state_1.value;\n            if (state_1 === \"break\")\n                break;\n        }\n    };\n    Selection.prototype.getCollectionFromIndexes = function (startIndex, endIndex) {\n        var indexes = [];\n        var _a = (startIndex <= endIndex) ?\n            { i: startIndex, max: endIndex } : { i: endIndex, max: startIndex }, i = _a.i, max = _a.max;\n        for (; i <= max; i++) {\n            indexes.push(i);\n        }\n        if (startIndex > endIndex) {\n            indexes.reverse();\n        }\n        return indexes;\n    };\n    Selection.prototype.clearRow = function () {\n        this.clearRowCheck = true;\n        this.clearRowSelection();\n    };\n    Selection.prototype.clearRowCallBack = function () {\n        if (this.isCancelDeSelect && this.parent.checkAllRows !== 'Check') {\n            return;\n        }\n        this.selectedRowIndexes = [];\n        this.selectedRecords = [];\n        this.selectRowIndex(-1);\n        if (this.isSingleSel() && this.parent.isPersistSelection) {\n            this.selectedRowState = {};\n        }\n    };\n    Selection.prototype.clearSelectedRow = function (index) {\n        if (this.toggle) {\n            var selectedEle = this.parent.getRowByIndex(index);\n            if (!this.disableUI) {\n                selectedEle.removeAttribute('aria-selected');\n                this.addRemoveClassesForRow(selectedEle, false, true, 'e-selectionbackground', 'e-active');\n            }\n            this.removed = true;\n            this.updatePersistCollection(selectedEle, false);\n            this.updateCheckBoxes(selectedEle);\n            this.selectedRowIndexes.splice(this.selectedRowIndexes.indexOf(index), 1);\n            this.selectedRecords.splice(this.selectedRecords.indexOf(this.parent.getRowByIndex(index)), 1);\n        }\n    };\n    Selection.prototype.updateRowProps = function (startIndex) {\n        this.prevRowIndex = startIndex;\n        this.isRowSelected = this.selectedRowIndexes.length && true;\n    };\n    Selection.prototype.updatePersistCollection = function (selectedRow, chkState) {\n        var _this = this;\n        if ((this.parent.isPersistSelection || this.parent.selectionSettings.persistSelection &&\n            this.parent.getPrimaryKeyFieldNames().length > 0) && !isNullOrUndefined(selectedRow)) {\n            if (!this.parent.isPersistSelection) {\n                this.ensureCheckboxFieldSelection();\n            }\n            var rowObj = this.getRowObj(selectedRow);\n            var pKey_1 = rowObj.data ? rowObj.data[this.primaryKey] : null;\n            if (pKey_1 === null) {\n                return;\n            }\n            rowObj.isSelected = chkState;\n            if (chkState) {\n                this.selectedRowState[pKey_1] = chkState;\n                if (!this.persistSelectedData.some(function (data) { return data[_this.primaryKey] === pKey_1; })) {\n                    this.persistSelectedData.push(rowObj.data);\n                }\n            }\n            else {\n                this.updatePersistDelete(pKey_1);\n            }\n        }\n    };\n    Selection.prototype.updatePersistDelete = function (pKey) {\n        var _this = this;\n        delete (this.selectedRowState[pKey]);\n        var index;\n        var isPresent = this.persistSelectedData.some(function (data, i) {\n            index = i;\n            return data[_this.primaryKey] === pKey;\n        });\n        if (isPresent) {\n            this.persistSelectedData.splice(index, 1);\n        }\n    };\n    Selection.prototype.updateCheckBoxes = function (row, chkState, rowIndex) {\n        if (!isNullOrUndefined(row)) {\n            var chkBox = row.querySelector('.e-checkselect');\n            if (!isNullOrUndefined(chkBox)) {\n                removeAddCboxClasses(chkBox.nextElementSibling, chkState);\n                setChecked(chkBox, chkState);\n                if (isNullOrUndefined(this.checkedTarget) || (!isNullOrUndefined(this.checkedTarget)\n                    && !this.checkedTarget.classList.contains('e-checkselectall'))) {\n                    this.setCheckAllState(rowIndex);\n                }\n            }\n        }\n    };\n    Selection.prototype.updateRowSelection = function (selectedRow, startIndex) {\n        if (!selectedRow) {\n            return;\n        }\n        this.selectedRowIndexes.push(startIndex);\n        var len = this.selectedRowIndexes.length;\n        if (this.parent.isFrozenGrid() && len > 1) {\n            if ((this.selectedRowIndexes[len - 2] === this.selectedRowIndexes[len - 1])) {\n                this.selectedRowIndexes.pop();\n            }\n        }\n        this.selectedRecords.push(selectedRow);\n        selectedRow.setAttribute('aria-selected', 'true');\n        this.updatePersistCollection(selectedRow, true);\n        this.updateCheckBoxes(selectedRow, true);\n        this.addRemoveClassesForRow(selectedRow, true, null, 'e-selectionbackground', 'e-active');\n        if (!this.preventFocus) {\n            var target = this.focus.getPrevIndexes().cellIndex ?\n                selectedRow.cells[this.focus.getPrevIndexes().cellIndex] :\n                selectedRow.querySelector('.e-selectionbackground:not(.e-hide):not(.e-detailrowcollapse):not(.e-detailrowexpand)');\n            if (this.parent.contextMenuModule && this.mouseButton === 2) {\n                target = this.parent.contextMenuModule.cell;\n            }\n            if (!target) {\n                return;\n            }\n            this.focus.onClick({ target: target }, true);\n        }\n    };\n    /**\n     * Deselects the currently selected rows and cells.\n     * @return {void}\n     */\n    Selection.prototype.clearSelection = function () {\n        if (!this.parent.isPersistSelection || (this.parent.isPersistSelection && !this.parent.isEdit) ||\n            (!isNullOrUndefined(this.checkedTarget) && this.checkedTarget.classList.contains('e-checkselectall'))) {\n            var span = this.parent.element.querySelector('.e-gridpopup').querySelector('span');\n            if (span.classList.contains('e-rowselect')) {\n                span.classList.remove('e-spanclicked');\n            }\n            if (this.parent.isPersistSelection) {\n                this.persistSelectedData = [];\n                this.selectedRowState = {};\n            }\n            this.clearRowSelection();\n            this.clearCellSelection();\n            this.clearColumnSelection();\n            this.prevRowIndex = undefined;\n            this.enableSelectMultiTouch = false;\n            this.isInteracted = false;\n        }\n    };\n    /**\n     * Deselects the currently selected rows.\n     * @return {void}\n     */\n    // tslint:disable-next-line:max-func-body-length\n    Selection.prototype.clearRowSelection = function () {\n        var _this = this;\n        if (this.isRowSelected) {\n            var gObj = this.parent;\n            var rows_1 = this.parent.getDataRows();\n            var data_1 = [];\n            var row_1 = [];\n            var mRow_1 = [];\n            var fRightRow_1 = [];\n            var rowIndex_1 = [];\n            var foreignKeyData_1 = [];\n            var target_1 = this.target;\n            var currentViewData = this.parent.getCurrentViewRecords();\n            for (var i = 0, len = this.selectedRowIndexes.length; i < len; i++) {\n                var currentRow = this.parent.editSettings.mode === 'Batch' ?\n                    this.parent.getRows()[this.selectedRowIndexes[i]]\n                    : this.parent.getDataRows()[this.selectedRowIndexes[i]];\n                var rowObj = this.getRowObj(currentRow);\n                if (rowObj) {\n                    data_1.push(rowObj.data);\n                    row_1.push(currentRow);\n                    rowIndex_1.push(this.selectedRowIndexes[i]);\n                    foreignKeyData_1.push(rowObj.foreignKeyData);\n                }\n                if (gObj.isFrozenGrid()) {\n                    mRow_1.push(gObj.getMovableRows()[this.selectedRowIndexes[i]]);\n                    if (gObj.getFrozenMode() === 'Left-Right') {\n                        fRightRow_1.push(gObj.getFrozenRightRows()[this.selectedRowIndexes[i]]);\n                    }\n                }\n            }\n            if (this.selectionSettings.persistSelection && this.selectionSettings.checkboxMode !== 'ResetOnRowClick') {\n                this.isInteracted = this.checkSelectAllClicked ? true : false;\n            }\n            this.rowDeselect(events.rowDeselecting, rowIndex_1, data_1, row_1, foreignKeyData_1, target_1, mRow_1, function () {\n                if (_this.isCancelDeSelect && (_this.isInteracted || _this.checkSelectAllClicked)) {\n                    if (_this.parent.isPersistSelection) {\n                        if (_this.getCheckAllStatus(_this.parent.element.querySelector('.e-checkselectall')) === 'Intermediate') {\n                            for (var i = 0; i < _this.selectedRecords.length; i++) {\n                                _this.updatePersistCollection(_this.selectedRecords[i], true);\n                            }\n                        }\n                        else {\n                            _this.parent.checkAllRows = 'Check';\n                            _this.updatePersistSelectedData(true);\n                        }\n                    }\n                    if (_this.clearRowCheck) {\n                        _this.clearRowCallBack();\n                        _this.clearRowCheck = false;\n                        if (_this.selectRowCheck) {\n                            _this.selectRowCallBack();\n                            _this.selectRowCheck = false;\n                        }\n                    }\n                    return;\n                }\n                var element = [].slice.call(rows_1.filter(function (record) { return record.hasAttribute('aria-selected'); }));\n                for (var j = 0; j < element.length; j++) {\n                    if (!_this.disableUI || isBlazor()) {\n                        element[j].removeAttribute('aria-selected');\n                        _this.addRemoveClassesForRow(element[j], false, true, 'e-selectionbackground', 'e-active');\n                    }\n                    // tslint:disable-next-line:align\n                    _this.updatePersistCollection(element[j], false);\n                    _this.updateCheckBoxes(element[j]);\n                }\n                if (isBlazor() && _this.parent.isServerRendered && _this.parent.enableVirtualization) {\n                    _this.getRenderer().setSelection(null, false, true);\n                }\n                for (var i = 0, len = _this.selectedRowIndexes.length; i < len; i++) {\n                    var movableRow = _this.getSelectedMovableRow(_this.selectedRowIndexes[i]);\n                    if (movableRow) {\n                        if (!_this.disableUI || isBlazor()) {\n                            movableRow.removeAttribute('aria-selected');\n                            _this.addRemoveClassesForRow(movableRow, false, true, 'e-selectionbackground', 'e-active');\n                        }\n                        _this.updateCheckBoxes(movableRow);\n                        _this.updatePersistCollection(movableRow, false);\n                    }\n                    var frRow = _this.getSelectedFrozenRightRow(_this.selectedRowIndexes[i]);\n                    if (frRow) {\n                        if (!_this.disableUI) {\n                            frRow.removeAttribute('aria-selected');\n                            _this.addRemoveClassesForRow(frRow, false, true, 'e-selectionbackground', 'e-active');\n                        }\n                        _this.updateCheckBoxes(frRow);\n                        _this.updatePersistCollection(frRow, false);\n                    }\n                }\n                _this.selectedRowIndexes = [];\n                _this.selectedRecords = [];\n                _this.isRowSelected = false;\n                _this.selectRowIndex(-1);\n                _this.rowDeselect(events.rowDeselected, rowIndex_1, data_1, row_1, foreignKeyData_1, target_1, mRow_1, undefined, fRightRow_1);\n                if (_this.clearRowCheck) {\n                    _this.clearRowCallBack();\n                    _this.clearRowCheck = false;\n                    if (_this.selectRowCheck) {\n                        _this.selectRowCallBack();\n                        _this.selectRowCheck = false;\n                    }\n                }\n            }, fRightRow_1);\n        }\n        else {\n            if (this.clearRowCheck) {\n                this.clearRowCallBack();\n                this.clearRowCheck = false;\n                if (this.selectRowCheck) {\n                    this.selectRowCallBack();\n                    this.selectRowCheck = false;\n                }\n            }\n        }\n    };\n    Selection.prototype.rowDeselect = function (type, rowIndex, data, row, foreignKeyData, target, mRow, rowDeselectCallBack, frozenRightRow) {\n        var _this = this;\n        if ((this.selectionSettings.persistSelection && this.isInteracted) || !this.selectionSettings.persistSelection) {\n            var cancl_1 = 'cancel';\n            var rowDeselectObj = {\n                rowIndex: rowIndex[0], data: this.selectionSettings.persistSelection && this.parent.checkAllRows === 'Uncheck'\n                    && this.selectionSettings.checkboxMode !== 'ResetOnRowClick' ?\n                    this.persistSelectedData : data, foreignKeyData: foreignKeyData,\n                cancel: false, isInteracted: this.isInteracted, isHeaderCheckboxClicked: this.isHeaderCheckboxClicked\n            };\n            if (type === 'rowDeselected') {\n                delete rowDeselectObj.cancel;\n            }\n            var isHybrid = 'isHybrid';\n            if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n                var rowInString = 'row';\n                var target_2 = 'target';\n                var rowidx = 'rowIndex';\n                var rowidxex = 'rowIndexes';\n                var data_2 = 'data';\n                var foreignKey = 'foreignKeyData';\n                rowDeselectObj[rowInString] = row;\n                rowDeselectObj[target_2] = this.actualTarget;\n                var isHeaderCheckBxClick = this.actualTarget && !isNullOrUndefined(closest(this.actualTarget, 'thead'));\n                if (isHeaderCheckBxClick || rowIndex.length > 1) {\n                    rowDeselectObj[rowidx] = rowIndex[0];\n                    rowDeselectObj[rowidxex] = rowIndex;\n                }\n                else if (rowIndex.length === 1) {\n                    rowDeselectObj[data_2] = rowDeselectObj[data_2][0];\n                    rowDeselectObj[rowInString] = rowDeselectObj[rowInString][0];\n                    rowDeselectObj[foreignKey] = rowDeselectObj[foreignKey][0];\n                    if (this.isAddRowsToSelection) {\n                        rowDeselectObj[rowidxex] = rowIndex;\n                    }\n                }\n            }\n            else {\n                var rowIndex_2 = 'rowIndex';\n                var data_3 = 'data';\n                rowDeselectObj[rowIndex_2] = rowDeselectObj[rowIndex_2][rowDeselectObj[rowIndex_2].length - 1];\n                rowDeselectObj[data_3] = rowDeselectObj[data_3][rowDeselectObj[data_3].length - 1];\n            }\n            this.parent.trigger(type, (!isBlazor() || this.parent.isJsComponent) && this.parent.isFrozenGrid() ? __assign({}, rowDeselectObj, { mRow: mRow, frozenRightRow: frozenRightRow }) : rowDeselectObj, function (args) {\n                _this.isCancelDeSelect = args[cancl_1];\n                if (!_this.isCancelDeSelect || (!_this.isInteracted && !_this.checkSelectAllClicked)) {\n                    _this.updatePersistCollection(row[0], false);\n                    _this.updateCheckBoxes(row[0], undefined, rowIndex[0]);\n                }\n                if (rowDeselectCallBack !== undefined) {\n                    rowDeselectCallBack();\n                }\n            });\n        }\n        else if (this.selectionSettings.persistSelection && !this.isInteracted) {\n            if (rowDeselectCallBack !== undefined) {\n                rowDeselectCallBack();\n            }\n        }\n    };\n    Selection.prototype.getRowObj = function (row) {\n        if (row === void 0) { row = this.currentIndex; }\n        if (isNullOrUndefined(row)) {\n            return {};\n        }\n        if (typeof row === 'number') {\n            row = this.parent.getRowByIndex(row);\n        }\n        if (row) {\n            return this.parent.getRowObjectFromUID(row.getAttribute('data-uid')) || {};\n        }\n        return {};\n    };\n    Selection.prototype.getSelectedMovableCell = function (cellIndex) {\n        var gObj = this.parent;\n        var col = gObj.getColumnByIndex(cellIndex.cellIndex);\n        var frzCols = gObj.isFrozenGrid();\n        if (frzCols) {\n            if (col.getFreezeTableName() === 'movable') {\n                return gObj.getMovableCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n            }\n            return null;\n        }\n        return null;\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    Selection.prototype.selectCell = function (cellIndex, isToggle) {\n        if (!this.isCellType()) {\n            return;\n        }\n        var gObj = this.parent;\n        var selectedCell = this.getSelectedMovableCell(cellIndex);\n        var args;\n        if (!selectedCell) {\n            selectedCell = gObj.getCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n        }\n        var selectedTable;\n        var cIdx;\n        this.currentIndex = cellIndex.rowIndex;\n        var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n        if (!this.isCellType() || !selectedCell || this.isEditing()) {\n            return;\n        }\n        var isCellSelected = selectedCell.classList.contains('e-cellselectionbackground');\n        isToggle = !isToggle ? isToggle : (!isUndefined(this.prevCIdxs) &&\n            cellIndex.rowIndex === this.prevCIdxs.rowIndex && cellIndex.cellIndex === this.prevCIdxs.cellIndex &&\n            isCellSelected);\n        if (!isToggle) {\n            args = {\n                data: selectedData, cellIndex: cellIndex,\n                isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest,\n                previousRowCell: this.prevECIdxs ?\n                    this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined,\n                cancel: false\n            };\n            if (!isBlazor() || this.parent.isJsComponent) {\n                var currentCell = 'currentCell';\n                args[currentCell] = selectedCell;\n                var previousRowCellIndex = 'previousRowCellIndex';\n                args[previousRowCellIndex] = this.prevECIdxs;\n            }\n            this.parent.trigger(events.cellSelecting, this.fDataUpdate(args), this.successCallBack(args, isToggle, cellIndex, selectedCell, selectedData));\n            this.cellselected = true;\n        }\n        else {\n            this.successCallBack(args, isToggle, cellIndex, selectedCell, selectedData)(args);\n        }\n    };\n    Selection.prototype.successCallBack = function (cellSelectingArgs, isToggle, cellIndex, selectedCell, selectedData) {\n        var _this = this;\n        return function (cellSelectingArgs) {\n            var cncl = 'cancel';\n            var currentCell = 'currentCell';\n            if (!isNullOrUndefined(cellSelectingArgs) && cellSelectingArgs[cncl] === true) {\n                return;\n            }\n            if (!isToggle) {\n                cellSelectingArgs[currentCell] = cellSelectingArgs[currentCell] ? cellSelectingArgs[currentCell] : selectedCell;\n            }\n            _this.clearCell();\n            if (!isToggle) {\n                _this.updateCellSelection(selectedCell, cellIndex.rowIndex, cellIndex.cellIndex);\n            }\n            if (!isToggle) {\n                var args = void 0;\n                var isHybrid = 'isHybrid';\n                if (!isBlazor() || _this.parent.isJsComponent || _this.parent[isHybrid]) {\n                    args = {\n                        data: selectedData, cellIndex: cellIndex, currentCell: selectedCell,\n                        selectedRowCellIndex: _this.selectedRowCellIndexes,\n                        previousRowCell: _this.prevECIdxs ?\n                            _this.getCellIndex(_this.prevECIdxs.rowIndex, _this.prevECIdxs.cellIndex) : undefined\n                    };\n                    var previousRowCellIndex = 'previousRowCellIndex';\n                    args[previousRowCellIndex] = _this.prevECIdxs;\n                }\n                else {\n                    args = { data: selectedData, cellIndex: cellIndex, selectedRowCellIndex: _this.selectedRowCellIndexes };\n                }\n                _this.updateCellProps(cellIndex, cellIndex);\n                _this.onActionComplete(args, events.cellSelected);\n            }\n        };\n    };\n    Selection.prototype.getCellIndex = function (rIdx, cIdx) {\n        return (this.parent.getFrozenColumns() ? (cIdx >= this.parent.getFrozenColumns() ? this.parent.getMovableCellFromIndex(rIdx, cIdx)\n            : this.parent.getCellFromIndex(rIdx, cIdx)) : this.parent.getCellFromIndex(rIdx, cIdx));\n    };\n    /**\n     * Selects a range of cells from start and end indexes.\n     * @param  {IIndex} startIndex - Specifies the row and column's start index.\n     * @param  {IIndex} endIndex - Specifies the row and column's end index.\n     * @return {void}\n     */\n    Selection.prototype.selectCellsByRange = function (startIndex, endIndex) {\n        var _this = this;\n        if (!this.isCellType()) {\n            return;\n        }\n        var gObj = this.parent;\n        var selectedCell = this.getSelectedMovableCell(startIndex);\n        var frzCols = gObj.getFrozenColumns();\n        if (!selectedCell) {\n            selectedCell = gObj.getCellFromIndex(startIndex.rowIndex, startIndex.cellIndex);\n        }\n        var min;\n        var max;\n        var stIndex = startIndex;\n        var edIndex = endIndex = endIndex ? endIndex : startIndex;\n        var cellIndexes;\n        this.currentIndex = startIndex.rowIndex;\n        var cncl = 'cancel';\n        var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n        if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n            return;\n        }\n        var args = {\n            data: selectedData, cellIndex: startIndex, currentCell: selectedCell,\n            isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest,\n            previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n        };\n        if (!isBlazor()) {\n            var previousRowCellIndex = 'previousRowCellIndex';\n            args[previousRowCellIndex] = this.prevECIdxs;\n        }\n        this.parent.trigger(events.cellSelecting, this.fDataUpdate(args), function (cellSelectingArgs) {\n            if (!isNullOrUndefined(cellSelectingArgs) && cellSelectingArgs[cncl] === true) {\n                return;\n            }\n            _this.clearCell();\n            if (startIndex.rowIndex > endIndex.rowIndex) {\n                var temp = startIndex;\n                startIndex = endIndex;\n                endIndex = temp;\n            }\n            for (var i = startIndex.rowIndex; i <= endIndex.rowIndex; i++) {\n                if (_this.selectionSettings.cellSelectionMode.indexOf('Box') < 0) {\n                    min = i === startIndex.rowIndex ? (startIndex.cellIndex) : 0;\n                    max = i === endIndex.rowIndex ? (endIndex.cellIndex) : _this.getLastColIndex(i);\n                }\n                else {\n                    min = startIndex.cellIndex;\n                    max = endIndex.cellIndex;\n                }\n                cellIndexes = [];\n                for (var j = min < max ? min : max, len = min > max ? min : max; j <= len; j++) {\n                    if (frzCols) {\n                        if (j < frzCols) {\n                            selectedCell = gObj.getCellFromIndex(i, j);\n                        }\n                        else {\n                            selectedCell = gObj.getMovableCellFromIndex(i, j);\n                        }\n                    }\n                    else {\n                        selectedCell = gObj.getCellFromIndex(i, j);\n                    }\n                    if (!selectedCell) {\n                        continue;\n                    }\n                    cellIndexes.push(j);\n                    _this.updateCellSelection(selectedCell);\n                    _this.addAttribute(selectedCell);\n                }\n                _this.selectedRowCellIndexes.push({ rowIndex: i, cellIndexes: cellIndexes });\n            }\n            var cellSelectedArgs;\n            var isHybrid = 'isHybrid';\n            if (!isBlazor() || _this.parent.isJsComponent || _this.parent[isHybrid]) {\n                cellSelectedArgs = {\n                    data: selectedData, cellIndex: edIndex, currentCell: gObj.getCellFromIndex(edIndex.rowIndex, edIndex.cellIndex),\n                    selectedRowCellIndex: _this.selectedRowCellIndexes,\n                    previousRowCell: _this.prevECIdxs ? _this.getCellIndex(_this.prevECIdxs.rowIndex, _this.prevECIdxs.cellIndex) : undefined\n                };\n                var previousRowCellIndex = 'previousRowCellIndex';\n                cellSelectedArgs[previousRowCellIndex] = _this.prevECIdxs;\n            }\n            else {\n                cellSelectedArgs = { data: selectedData, cellIndex: edIndex, selectedRowCellIndex: _this.selectedRowCellIndexes };\n            }\n            if (!_this.isDragged) {\n                _this.onActionComplete(cellSelectedArgs, events.cellSelected);\n                _this.cellselected = true;\n            }\n            _this.updateCellProps(stIndex, edIndex);\n        });\n    };\n    /**\n     * Selects a collection of cells by row and column indexes.\n     * @param  {ISelectedCell[]} rowCellIndexes - Specifies the row and column indexes.\n     * @return {void}\n     */\n    Selection.prototype.selectCells = function (rowCellIndexes) {\n        if (!this.isCellType()) {\n            return;\n        }\n        var gObj = this.parent;\n        var selectedCell = this.getSelectedMovableCell(rowCellIndexes[0]);\n        var frzCols = gObj.getFrozenColumns();\n        if (!selectedCell) {\n            selectedCell = gObj.getCellFromIndex(rowCellIndexes[0].rowIndex, rowCellIndexes[0].cellIndexes[0]);\n        }\n        this.currentIndex = rowCellIndexes[0].rowIndex;\n        var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n        if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n            return;\n        }\n        var cellSelectArgs;\n        var isHybrid = 'isHybrid';\n        if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n            cellSelectArgs = {\n                data: selectedData, cellIndex: rowCellIndexes[0].cellIndexes[0],\n                currentCell: selectedCell, isCtrlPressed: this.isMultiCtrlRequest,\n                isShiftPressed: this.isMultiShiftRequest,\n                previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n            };\n            var previousRowCellIndex = 'previousRowCellIndex';\n            cellSelectArgs[previousRowCellIndex] = this.prevECIdxs;\n        }\n        else {\n            cellSelectArgs = {\n                data: selectedData, cellIndex: rowCellIndexes[0].cellIndexes[0],\n                isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest\n            };\n        }\n        this.onActionBegin(cellSelectArgs, events.cellSelecting);\n        for (var i = 0, len = rowCellIndexes.length; i < len; i++) {\n            for (var j = 0, cellLen = rowCellIndexes[i].cellIndexes.length; j < cellLen; j++) {\n                if (frzCols) {\n                    if (rowCellIndexes[i].cellIndexes[j] < frzCols) {\n                        selectedCell = gObj.getCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n                    }\n                    else {\n                        selectedCell = gObj.getMovableCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n                    }\n                }\n                else {\n                    selectedCell = gObj.getCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n                }\n                if (!selectedCell) {\n                    continue;\n                }\n                this.updateCellSelection(selectedCell);\n                this.addAttribute(selectedCell);\n                this.addRowCellIndex({ rowIndex: rowCellIndexes[i].rowIndex, cellIndex: rowCellIndexes[i].cellIndexes[j] });\n            }\n        }\n        this.updateCellProps({ rowIndex: rowCellIndexes[0].rowIndex, cellIndex: rowCellIndexes[0].cellIndexes[0] }, { rowIndex: rowCellIndexes[0].rowIndex, cellIndex: rowCellIndexes[0].cellIndexes[0] });\n        var cellSelectedArgs;\n        if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n            cellSelectedArgs = {\n                data: selectedData, cellIndex: rowCellIndexes[0].cellIndexes[0],\n                currentCell: selectedCell, selectedRowCellIndex: this.selectedRowCellIndexes,\n                previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n            };\n            var previousRowCellIndex = 'previousRowCellIndex';\n            cellSelectedArgs[previousRowCellIndex] = this.prevECIdxs;\n        }\n        else {\n            cellSelectedArgs = { data: selectedData, cellIndex: rowCellIndexes[0].cellIndexes[0],\n                selectedRowCellIndex: this.selectedRowCellIndexes };\n        }\n        this.onActionComplete(cellSelectedArgs, events.cellSelected);\n    };\n    /**\n     * Select cells with existing cell selection by passing row and column index.\n     * @param  {IIndex} startIndex - Defines the collection of row and column index.\n     * @return {void}\n     * @hidden\n     */\n    // tslint:disable-next-line:max-func-body-length\n    Selection.prototype.addCellsToSelection = function (cellIndexes) {\n        if (!this.isCellType()) {\n            return;\n        }\n        var gObj = this.parent;\n        var selectedCell;\n        var index;\n        this.currentIndex = cellIndexes[0].rowIndex;\n        var cncl = 'cancel';\n        var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n        var isHybrid = 'isHybrid';\n        var left = gObj.getFrozenLeftCount();\n        var movable = gObj.getMovableColumnsCount();\n        if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n            return;\n        }\n        this.hideAutoFill();\n        var col = gObj.getColumnByIndex(cellIndexes[0].cellIndex);\n        var rowObj;\n        gridActionHandler(this.parent, function (tableName, rows) {\n            rowObj = rows[cellIndexes[0].rowIndex];\n        }, [\n            !col.getFreezeTableName() || col.getFreezeTableName() === 'frozen-left' ? gObj.getRowsObject() : [],\n            col.getFreezeTableName() === 'movable' ? gObj.getMovableRowsObject() : [],\n            col.getFreezeTableName() === 'frozen-right' ? gObj.getFrozenRightRowsObject() : []\n        ]);\n        var foreignKeyData = [];\n        for (var _i = 0, cellIndexes_1 = cellIndexes; _i < cellIndexes_1.length; _i++) {\n            var cellIndex = cellIndexes_1[_i];\n            for (var i = 0, len = this.selectedRowCellIndexes.length; i < len; i++) {\n                if (this.selectedRowCellIndexes[i].rowIndex === cellIndex.rowIndex) {\n                    index = i;\n                    break;\n                }\n            }\n            selectedCell = this.getSelectedMovableCell(cellIndex);\n            if (!selectedCell) {\n                selectedCell = gObj.getCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n            }\n            var idx = col.getFreezeTableName() === 'movable' ? cellIndex.cellIndex - left\n                : col.getFreezeTableName() === 'frozen-right' ? cellIndex.cellIndex - (left + movable) : cellIndex.cellIndex;\n            foreignKeyData.push(rowObj.cells[idx].foreignKeyData);\n            var args = void 0;\n            if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n                args = {\n                    cancel: false, data: selectedData, cellIndex: cellIndexes[0],\n                    isShiftPressed: this.isMultiShiftRequest,\n                    currentCell: selectedCell, isCtrlPressed: this.isMultiCtrlRequest,\n                    previousRowCell: this.prevECIdxs ?\n                        gObj.getCellFromIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined,\n                };\n                var previousRowCellIndex = 'previousRowCellIndex';\n                args[previousRowCellIndex] = this.prevECIdxs;\n            }\n            else {\n                args = {\n                    cancel: false, data: selectedData, cellIndex: cellIndexes[0],\n                    isShiftPressed: this.isMultiShiftRequest, isCtrlPressed: this.isMultiCtrlRequest\n                };\n            }\n            var isUnSelected = index > -1;\n            if (isUnSelected) {\n                var selectedCellIdx = this.selectedRowCellIndexes[index].cellIndexes;\n                if (selectedCellIdx.indexOf(cellIndex.cellIndex) > -1) {\n                    this.cellDeselect(events.cellDeselecting, [{ rowIndex: cellIndex.rowIndex, cellIndexes: [cellIndex.cellIndex] }], selectedData, [selectedCell], foreignKeyData);\n                    selectedCellIdx.splice(selectedCellIdx.indexOf(cellIndex.cellIndex), 1);\n                    if (selectedCellIdx.length === 0) {\n                        this.selectedRowCellIndexes.splice(index, 1);\n                    }\n                    selectedCell.classList.remove('e-cellselectionbackground');\n                    selectedCell.removeAttribute('aria-selected');\n                    this.cellDeselect(events.cellDeselected, [{ rowIndex: cellIndex.rowIndex, cellIndexes: [cellIndex.cellIndex] }], selectedData, [selectedCell], foreignKeyData);\n                }\n                else {\n                    isUnSelected = false;\n                    this.onActionBegin(args, events.cellSelecting);\n                    this.addRowCellIndex({ rowIndex: cellIndex.rowIndex, cellIndex: cellIndex.cellIndex });\n                    this.updateCellSelection(selectedCell);\n                    this.addAttribute(selectedCell);\n                }\n            }\n            else {\n                this.onActionBegin(args, events.cellSelecting);\n                if (!isNullOrUndefined(args) && args[cncl] === true) {\n                    return;\n                }\n                this.updateCellSelection(selectedCell, cellIndex.rowIndex, cellIndex.cellIndex);\n            }\n            if (!isUnSelected) {\n                var cellSelectedArgs = void 0;\n                if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n                    cellSelectedArgs = {\n                        data: selectedData, cellIndex: cellIndexes[0], currentCell: selectedCell,\n                        previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) :\n                            undefined, selectedRowCellIndex: this.selectedRowCellIndexes\n                    };\n                    var previousRowCellIndex = 'previousRowCellIndex';\n                    cellSelectedArgs[previousRowCellIndex] = this.prevECIdxs;\n                }\n                else {\n                    cellSelectedArgs = { data: selectedData, cellIndex: cellIndexes[0], selectedRowCellIndex: this.selectedRowCellIndexes };\n                }\n                this.onActionComplete(cellSelectedArgs, events.cellSelected);\n                this.cellselected = true;\n            }\n            this.updateCellProps(cellIndex, cellIndex);\n        }\n    };\n    Selection.prototype.getColIndex = function (rowIndex, index) {\n        var frzCols = this.parent.isFrozenGrid();\n        var col = this.parent.getColumnByIndex(index);\n        var cells = getCellsByTableName(this.parent, col, rowIndex);\n        if (cells) {\n            for (var m = 0; m < cells.length; m++) {\n                var colIndex = parseInt(cells[m].getAttribute('aria-colindex'), 10);\n                if (colIndex === index) {\n                    if (frzCols) {\n                        if (col.getFreezeTableName() === 'movable') {\n                            m += this.parent.getFrozenLeftCount();\n                        }\n                        else if (col.getFreezeTableName() === 'frozen-right') {\n                            m += (this.parent.getFrozenLeftColumnsCount() + this.parent.getMovableColumnsCount());\n                        }\n                    }\n                    return m;\n                }\n            }\n        }\n        return -1;\n    };\n    Selection.prototype.getLastColIndex = function (rowIndex) {\n        var cells = this.parent.getFrozenColumns() ? this.parent.getMovableDataRows()[rowIndex].querySelectorAll('td.e-rowcell')\n            : this.parent.getDataRows()[rowIndex].querySelectorAll('td.e-rowcell');\n        return parseInt(cells[cells.length - 1].getAttribute('aria-colindex'), 10);\n    };\n    Selection.prototype.clearCell = function () {\n        this.clearCellSelection();\n    };\n    Selection.prototype.cellDeselect = function (type, cellIndexes, data, cells, foreignKeyData) {\n        var cancl = 'cancel';\n        if (cells[0] && cells[0].classList.contains('e-gridchkbox')) {\n            this.updateCheckBoxes(closest(cells[0], 'tr'));\n        }\n        var args = {\n            cells: cells, data: data, cellIndexes: cellIndexes, foreignKeyData: foreignKeyData, cancel: false\n        };\n        this.parent.trigger(type, args);\n        this.isPreventCellSelect = args[cancl];\n    };\n    Selection.prototype.updateCellSelection = function (selectedCell, rowIndex, cellIndex) {\n        if (!isNullOrUndefined(rowIndex)) {\n            this.addRowCellIndex({ rowIndex: rowIndex, cellIndex: cellIndex });\n        }\n        selectedCell.classList.add('e-cellselectionbackground');\n        if (selectedCell.classList.contains('e-gridchkbox')) {\n            this.updateCheckBoxes(closest(selectedCell, 'tr'), true);\n        }\n        this.addAttribute(selectedCell);\n    };\n    Selection.prototype.addAttribute = function (cell) {\n        this.target = cell;\n        if (!isNullOrUndefined(cell)) {\n            cell.setAttribute('aria-selected', 'true');\n            if (!this.preventFocus) {\n                this.focus.onClick({ target: cell }, true);\n            }\n        }\n    };\n    Selection.prototype.updateCellProps = function (startIndex, endIndex) {\n        this.prevCIdxs = startIndex;\n        this.prevECIdxs = endIndex;\n        this.isCellSelected = this.selectedRowCellIndexes.length && true;\n    };\n    Selection.prototype.addRowCellIndex = function (rowCellIndex) {\n        var isRowAvail;\n        var index;\n        for (var i = 0, len = this.selectedRowCellIndexes.length; i < len; i++) {\n            if (this.selectedRowCellIndexes[i].rowIndex === rowCellIndex.rowIndex) {\n                isRowAvail = true;\n                index = i;\n                break;\n            }\n        }\n        if (isRowAvail) {\n            if (this.selectedRowCellIndexes[index].cellIndexes.indexOf(rowCellIndex.cellIndex) < 0) {\n                this.selectedRowCellIndexes[index].cellIndexes.push(rowCellIndex.cellIndex);\n            }\n        }\n        else {\n            this.selectedRowCellIndexes.push({ rowIndex: rowCellIndex.rowIndex, cellIndexes: [rowCellIndex.cellIndex] });\n        }\n    };\n    /**\n     * Deselects the currently selected cells.\n     * @return {void}\n     */\n    Selection.prototype.clearCellSelection = function () {\n        if (this.isCellSelected) {\n            var gObj = this.parent;\n            var selectedCells = this.getSelectedCellsElement();\n            var rowCell = this.selectedRowCellIndexes;\n            var data = [];\n            var cells = [];\n            var foreignKeyData = [];\n            var currentViewData = this.getCurrentBatchRecordChanges();\n            var selectedTable = void 0;\n            var frzCols = gObj.isFrozenGrid();\n            this.hideAutoFill();\n            for (var i = 0, len = rowCell.length; i < len; i++) {\n                data.push(currentViewData[rowCell[i].rowIndex]);\n                var rowObj = this.getRowObj(rowCell[i].rowIndex);\n                for (var j = 0, cLen = rowCell[i].cellIndexes.length; j < cLen; j++) {\n                    if (frzCols) {\n                        var col = gObj.getColumnByIndex(rowCell[i].cellIndexes[j]);\n                        cells.push(getCellByColAndRowIndex(this.parent, col, rowCell[i].rowIndex, rowCell[i].cellIndexes[j]));\n                    }\n                    else {\n                        if (rowObj.cells) {\n                            foreignKeyData.push(rowObj.cells[rowCell[i].cellIndexes[j]].foreignKeyData);\n                        }\n                        cells.push(gObj.getCellFromIndex(rowCell[i].rowIndex, rowCell[i].cellIndexes[j]));\n                    }\n                }\n            }\n            this.cellDeselect(events.cellDeselecting, rowCell, data, cells, foreignKeyData);\n            if (this.isPreventCellSelect === true) {\n                return;\n            }\n            for (var i = 0, len = selectedCells.length; i < len; i++) {\n                selectedCells[i].classList.remove('e-cellselectionbackground');\n                selectedCells[i].removeAttribute('aria-selected');\n            }\n            if (this.bdrElement) {\n                this.showHideBorders('none');\n            }\n            this.selectedRowCellIndexes = [];\n            this.isCellSelected = false;\n            if (!this.isDragged && this.cellselected) {\n                this.cellDeselect(events.cellDeselected, rowCell, data, cells, foreignKeyData);\n            }\n        }\n    };\n    Selection.prototype.getSelectedCellsElement = function () {\n        var gObj = this.parent;\n        var rows = gObj.getDataRows();\n        var mRows;\n        if (gObj.isFrozenGrid()) {\n            mRows = gObj.getMovableDataRows();\n            rows = gObj.addMovableRows(rows, mRows);\n            if (gObj.getFrozenMode() === 'Left-Right') {\n                rows = gObj.addMovableRows(rows, gObj.getFrozenRightDataRows());\n            }\n        }\n        var cells = [];\n        for (var i = 0, len = rows.length; i < len; i++) {\n            cells = cells.concat([].slice.call(rows[i].querySelectorAll('.e-cellselectionbackground')));\n        }\n        return cells;\n    };\n    Selection.prototype.mouseMoveHandler = function (e) {\n        e.preventDefault();\n        var gBRect = this.parent.element.getBoundingClientRect();\n        var x1 = this.x;\n        var y1 = this.y;\n        var position = getPosition(e);\n        var x2 = position.x - gBRect.left;\n        var y2 = position.y - gBRect.top;\n        var tmp;\n        var target = closest(e.target, 'tr');\n        this.isDragged = true;\n        if (!this.isCellDrag) {\n            if (!target) {\n                target = closest(document.elementFromPoint(this.parent.element.offsetLeft + 2, e.clientY), 'tr');\n            }\n            if (x1 > x2) {\n                tmp = x2;\n                x2 = x1;\n                x1 = tmp;\n            }\n            if (y1 > y2) {\n                tmp = y2;\n                y2 = y1;\n                y1 = tmp;\n            }\n            this.element.style.left = x1 + 'px';\n            this.element.style.top = y1 + 'px';\n            this.element.style.width = x2 - x1 + 'px';\n            this.element.style.height = y2 - y1 + 'px';\n        }\n        if (target && !e.ctrlKey && !e.shiftKey) {\n            var rowIndex = parseInt(target.getAttribute('aria-rowindex'), 10);\n            if (!this.isCellDrag) {\n                this.hideAutoFill();\n                this.selectRowsByRange(this.startDIndex, rowIndex);\n            }\n            else {\n                var td = parentsUntil(e.target, 'e-rowcell');\n                if (td) {\n                    this.startAFCell = this.startCell;\n                    this.endAFCell = parentsUntil(e.target, 'e-rowcell');\n                    this.selectLikeExcel(e, rowIndex, parseInt(td.getAttribute('aria-colindex'), 10));\n                }\n            }\n        }\n    };\n    Selection.prototype.selectLikeExcel = function (e, rowIndex, cellIndex) {\n        if (!this.isAutoFillSel) {\n            this.clearCellSelection();\n            this.selectCellsByRange({ rowIndex: this.startDIndex, cellIndex: this.startDCellIndex }, { rowIndex: rowIndex, cellIndex: cellIndex });\n            this.drawBorders();\n        }\n        else { //Autofill\n            this.showAFBorders();\n            this.selectLikeAutoFill(e);\n        }\n    };\n    Selection.prototype.drawBorders = function () {\n        if (this.selectionSettings.cellSelectionMode === 'BoxWithBorder' && this.selectedRowCellIndexes.length && !this.parent.isEdit) {\n            this.parent.element.classList.add('e-enabledboxbdr');\n            if (!this.bdrElement) {\n                this.createBorders();\n            }\n            this.positionBorders();\n        }\n        else {\n            this.showHideBorders('none');\n        }\n    };\n    Selection.prototype.isLastCell = function (cell) {\n        var cells = [].slice.call(cell.parentElement.querySelectorAll('.e-rowcell:not(.e-hide)'));\n        return cells[cells.length - 1] === cell;\n    };\n    Selection.prototype.isLastRow = function (cell) {\n        var rows = [].slice.call(closest(cell, 'tbody').querySelectorAll('.e-row:not(.e-hiddenrow)'));\n        return cell.parentElement === rows[rows.length - 1];\n    };\n    Selection.prototype.isFirstRow = function (cell) {\n        var rows = [].slice.call(closest(cell, 'tbody').querySelectorAll('.e-row:not(.e-hiddenrow)'));\n        return cell.parentElement === rows[0];\n    };\n    Selection.prototype.isFirstCell = function (cell) {\n        var cells = [].slice.call(cell.parentElement.querySelectorAll('.e-rowcell:not(.e-hide)'));\n        return cells[0] === cell;\n    };\n    Selection.prototype.setBorders = function (parentEle, border, bdrStr) {\n        var cells = [].slice.call(parentEle.querySelectorAll('.e-cellselectionbackground')).\n            filter(function (ele) { return ele.style.display === ''; });\n        if (cells.length) {\n            var isFrozen = this.parent.isFrozenGrid();\n            var start = cells[0];\n            var end = cells[cells.length - 1];\n            var stOff = start.getBoundingClientRect();\n            var endOff = end.getBoundingClientRect();\n            var parentOff = start.offsetParent.getBoundingClientRect();\n            var rowHeight = this.isLastRow(end) && (bdrStr === '1' || bdrStr === '2' || bdrStr === '5') ? 2 : 0;\n            var topOffSet = this.parent.frozenRows && (bdrStr === '1' || bdrStr === '2') &&\n                this.isFirstRow(start) ? 1.5 : 0;\n            var leftOffset = isFrozen && (bdrStr === '2' || bdrStr === '4') && this.isFirstCell(start) ? 1 : 0;\n            var rightOffset = ((this.parent.getFrozenMode() === 'Right' && (bdrStr === '1' || bdrStr === '3'))\n                || (this.parent.getFrozenMode() === 'Left-Right' && (bdrStr === '5' || bdrStr === '6')))\n                && this.isFirstCell(start) ? 1 : 0;\n            if (this.parent.enableRtl) {\n                border.style.right = parentOff.right - stOff.right - leftOffset + 'px';\n                border.style.width = stOff.right - endOff.left + leftOffset + 1 + 'px';\n            }\n            else {\n                border.style.left = stOff.left - parentOff.left - leftOffset - rightOffset + 'px';\n                border.style.width = endOff.right - stOff.left + leftOffset - rightOffset + 1 + 'px';\n            }\n            border.style.top = stOff.top - parentOff.top - topOffSet + 'px';\n            border.style.height = endOff.top - stOff.top > 0 ?\n                (endOff.top - parentOff.top + endOff.height + 1) - (stOff.top - parentOff.top) - rowHeight + topOffSet + 'px' :\n                endOff.height + topOffSet - rowHeight + 1 + 'px';\n            this.selectDirection += bdrStr;\n        }\n        else {\n            border.style.display = 'none';\n        }\n    };\n    Selection.prototype.positionBorders = function () {\n        this.updateStartEndCells();\n        if (!this.startCell || !this.bdrElement || !this.selectedRowCellIndexes.length) {\n            return;\n        }\n        this.selectDirection = '';\n        this.showHideBorders('');\n        this.setBorders(this.parent.getContentTable(), this.bdrElement, '1');\n        if (this.parent.isFrozenGrid()) {\n            this.setBorders(this.parent.contentModule.getMovableContent(), this.mcBdrElement, '2');\n            if (this.parent.getFrozenMode() === 'Left-Right') {\n                this.setBorders(this.parent.contentModule.getFrozenRightContent(), this.frcBdrElement, '5');\n            }\n        }\n        if (this.parent.frozenRows) {\n            this.setBorders(this.parent.getHeaderTable(), this.fhBdrElement, '3');\n            if (this.parent.isFrozenGrid()) {\n                this.setBorders(this.parent.headerModule.getMovableHeader(), this.mhBdrElement, '4');\n                if (this.parent.getFrozenMode() === 'Left-Right') {\n                    this.setBorders(this.parent.headerModule.getFrozenRightHeader(), this.frhBdrElement, '6');\n                }\n            }\n        }\n        this.applyBorders(this.selectDirection);\n    };\n    Selection.prototype.applyBothFrozenBorders = function (str) {\n        var rtl = this.parent.enableRtl;\n        switch (str.length) {\n            case 6:\n                {\n                    this.bdrElement.style.borderWidth = rtl ? '0 2px 2px 0' : '0 0 2px 2px';\n                    this.mcBdrElement.style.borderWidth = '0 0 2px 0';\n                    this.fhBdrElement.style.borderWidth = rtl ? '2px 2px 0 0' : '2px 0 0 2px';\n                    this.mhBdrElement.style.borderWidth = '2px 0 0 0';\n                    this.frcBdrElement.style.borderWidth = rtl ? '0 0 2px 2px' : '0 2px 2px 0';\n                    this.frhBdrElement.style.borderWidth = rtl ? '2px 0 0 2px' : '2px 2px 0 0';\n                }\n                break;\n            case 4:\n                {\n                    if (str.includes('1') && str.includes('2') && str.includes('3') && str.includes('4')) {\n                        this.bdrElement.style.borderWidth = rtl ? '0 2px 2px 0' : '0 0 2px 2px';\n                        this.mcBdrElement.style.borderWidth = rtl ? '0 0 2px 2px' : '0 2px 2px 0';\n                        this.fhBdrElement.style.borderWidth = rtl ? '2px 2px 0 0' : '2px 0 0 2px';\n                        this.mhBdrElement.style.borderWidth = rtl ? '2px 0 0 2px' : '2px 2px 0 0';\n                    }\n                    if (str.includes('2') && str.includes('4') && str.includes('5') && str.includes('6')) {\n                        this.mcBdrElement.style.borderWidth = rtl ? '0 2px 2px 0' : '0 0 2px 2px';\n                        this.mhBdrElement.style.borderWidth = rtl ? '2px 2px 0 0' : '2px 0 0 2px';\n                        this.frcBdrElement.style.borderWidth = rtl ? '0 0 2px 2px' : '0 2px 2px 0';\n                        this.frhBdrElement.style.borderWidth = rtl ? '2px 0 0 2px' : '2px 2px 0 0';\n                    }\n                }\n                break;\n            case 3:\n                {\n                    this.bdrElement.style.borderWidth = rtl ? '2px 2px 2px 0' : '2px 0 2px 2px';\n                    this.mcBdrElement.style.borderWidth = '2p 0 2px 0';\n                    this.frcBdrElement.style.borderWidth = rtl ? '2px 0 2px 2px' : '2px 2px 2px 0';\n                    if (this.parent.frozenRows) {\n                        this.fhBdrElement.style.borderWidth = rtl ? '2px 2px 2px 0' : '2px 0 2px 2px';\n                        this.mhBdrElement.style.borderWidth = '2px 0 2px 0';\n                        this.frcBdrElement.style.borderWidth = rtl ? '2px 0 2px 2px' : '2px 2px 2px 0';\n                    }\n                }\n                break;\n            case 2:\n                {\n                    if (str.includes('1')) {\n                        this.mcBdrElement.style.borderWidth = rtl ? '2px 0 2px 2px' : '2px 2px 2px 0';\n                        if (this.parent.frozenRows) {\n                            this.fhBdrElement.style.borderWidth = '2px 2px 0 2px';\n                        }\n                    }\n                    if (str.includes('2')) {\n                        this.bdrElement.style.borderWidth = rtl ? '2px 2px 2px 0' : '2px 0 2px 2px';\n                        this.frcBdrElement.style.borderWidth = rtl ? '2px 0 2px 2px' : '2px 2px 2px 0';\n                        if (this.parent.frozenRows) {\n                            this.mhBdrElement.style.borderWidth = '2px 2px 0 2px';\n                        }\n                    }\n                    if (str.includes('3')) {\n                        this.mhBdrElement.style.borderWidth = rtl ? '2px 0 2px 2px' : '2px 2px 2px 0';\n                        this.bdrElement.style.borderWidth = '0 2px 2px 2px';\n                    }\n                    if (str.includes('4')) {\n                        this.fhBdrElement.style.borderWidth = rtl ? '2px 2px 2px 0' : '2px 0 2px 2px';\n                        this.frhBdrElement.style.borderWidth = rtl ? '2px 0 2px 2px' : '2px 2px 2px 0';\n                        this.mcBdrElement.style.borderWidth = '0 2px 2px 2px';\n                    }\n                    if (str.includes('5')) {\n                        this.mcBdrElement.style.borderWidth = rtl ? '2px 2px 2px 0' : '2px 0 2px 2px';\n                        if (this.parent.frozenRows) {\n                            this.frhBdrElement.style.borderWidth = '2px 2px 0 2px';\n                        }\n                    }\n                    if (str.includes('6')) {\n                        this.mhBdrElement.style.borderWidth = rtl ? '2px 2px 2px 0' : '2px 0 2px 2px';\n                        this.frcBdrElement.style.borderWidth = '0 2px 2px 2px';\n                    }\n                }\n                break;\n            default:\n                this.bdrElement.style.borderWidth = '2px';\n                this.mcBdrElement.style.borderWidth = '2px';\n                this.frcBdrElement.style.borderWidth = '2px';\n                if (this.parent.frozenRows) {\n                    this.fhBdrElement.style.borderWidth = '2px';\n                    this.mhBdrElement.style.borderWidth = '2px';\n                    this.frhBdrElement.style.borderWidth = '2px';\n                }\n                break;\n        }\n    };\n    Selection.prototype.applyBorders = function (str) {\n        var rtl = this.parent.enableRtl;\n        if (this.parent.getFrozenMode() === 'Left-Right') {\n            this.applyBothFrozenBorders(str);\n        }\n        else {\n            switch (str.length) {\n                case 4:\n                    {\n                        if (this.parent.getFrozenMode() === 'Right') {\n                            this.bdrElement.style.borderWidth = rtl ? '0 0 2px 2px' : '0 2px 2px 0';\n                            this.mcBdrElement.style.borderWidth = rtl ? '0 2px 2px 0' : '0 0 2px 2px';\n                            this.fhBdrElement.style.borderWidth = rtl ? '2px 0 0 2px' : '2px 2px 0 0';\n                            this.mhBdrElement.style.borderWidth = rtl ? '2px 2px 0 0' : '2px 0 0 2px';\n                        }\n                        else {\n                            this.bdrElement.style.borderWidth = rtl ? '0 2px 2px 0' : '0 0 2px 2px';\n                            this.mcBdrElement.style.borderWidth = rtl ? '0 0 2px 2px' : '0 2px 2px 0';\n                            this.fhBdrElement.style.borderWidth = rtl ? '2px 2px 0 0' : '2px 0 0 2px';\n                            this.mhBdrElement.style.borderWidth = rtl ? '2px 0 0 2px' : '2px 2px 0 0';\n                        }\n                    }\n                    break;\n                case 2:\n                    {\n                        if (this.parent.getFrozenMode() === 'Right') {\n                            this.bdrElement.style.borderWidth = str.includes('2') ? rtl ? '2px 0 2px 2px'\n                                : '2px 2px 2px 0' : '0 2px 2px 2px';\n                            this.mcBdrElement.style.borderWidth = str.includes('1') ? rtl ? '2px 2px 2px 0'\n                                : '2px 0 2px 2px' : '0 2px 2px 2px';\n                            if (this.parent.frozenRows) {\n                                this.fhBdrElement.style.borderWidth = str.includes('1') ? '2px 2px 0 2px'\n                                    : rtl ? '2px 0 2px 2px' : '2px 2px 2px 0';\n                                this.mhBdrElement.style.borderWidth = str.includes('2') ? '2px 2px 0 2px'\n                                    : rtl ? '2px 2px 2px 0' : '2px 0 2px 2px';\n                            }\n                        }\n                        else {\n                            this.bdrElement.style.borderWidth = str.includes('2') ? rtl ? '2px 2px 2px 0'\n                                : '2px 0 2px 2px' : '0 2px 2px 2px';\n                            if (this.parent.isFrozenGrid()) {\n                                this.mcBdrElement.style.borderWidth = str.includes('1') ? rtl ? '2px 0 2px 2px'\n                                    : '2px 2px 2px 0' : '0 2px 2px 2px';\n                            }\n                            if (this.parent.frozenRows) {\n                                this.fhBdrElement.style.borderWidth = str.includes('1') ? '2px 2px 0 2px'\n                                    : rtl ? '2px 2px 2px 0' : '2px 0 2px 2px';\n                                if (this.parent.isFrozenGrid()) {\n                                    this.mhBdrElement.style.borderWidth = str.includes('2') ? '2px 2px 0 2px'\n                                        : rtl ? '2px 0 2px 2px' : '2px 2px 2px 0';\n                                }\n                            }\n                        }\n                    }\n                    break;\n                default:\n                    this.bdrElement.style.borderWidth = '2px';\n                    if (this.parent.isFrozenGrid()) {\n                        this.mcBdrElement.style.borderWidth = '2px';\n                    }\n                    if (this.parent.frozenRows) {\n                        this.fhBdrElement.style.borderWidth = '2px';\n                        if (this.parent.isFrozenGrid()) {\n                            this.mhBdrElement.style.borderWidth = '2px';\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    Selection.prototype.createBorders = function () {\n        if (!this.bdrElement) {\n            this.bdrElement = this.parent.getContentTable().parentElement.appendChild(createElement('div', {\n                className: 'e-xlsel', id: this.parent.element.id + '_bdr',\n                styles: 'width: 2px; border-width: 0;'\n            }));\n            if (this.parent.isFrozenGrid()) {\n                this.mcBdrElement = this.parent.contentModule.getMovableContent().appendChild(createElement('div', {\n                    className: 'e-xlsel', id: this.parent.element.id + '_mcbdr',\n                    styles: 'height: 2px; border-width: 0;'\n                }));\n                if (this.parent.getFrozenMode() === 'Left-Right') {\n                    this.frcBdrElement = this.parent.contentModule.getFrozenRightContent().appendChild(createElement('div', {\n                        className: 'e-xlsel', id: this.parent.element.id + '_frcbdr',\n                        styles: 'height: 2px; border-width: 0;'\n                    }));\n                }\n            }\n            if (this.parent.frozenRows) {\n                this.fhBdrElement = this.parent.getHeaderTable().parentElement.appendChild(createElement('div', { className: 'e-xlsel', id: this.parent.element.id + '_fhbdr', styles: 'height: 2px;' }));\n            }\n            if (this.parent.frozenRows && this.parent.isFrozenGrid()) {\n                this.mhBdrElement = this.parent.headerModule.getMovableHeader().appendChild(createElement('div', { className: 'e-xlsel', id: this.parent.element.id + '_mhbdr', styles: 'height: 2px;' }));\n                if (this.parent.getFrozenMode() === 'Left-Right') {\n                    this.frhBdrElement = this.parent.headerModule.getFrozenRightHeader().appendChild(createElement('div', { className: 'e-xlsel', id: this.parent.element.id + '_frhbdr', styles: 'height: 2px;' }));\n                }\n            }\n        }\n    };\n    Selection.prototype.showHideBorders = function (display) {\n        if (this.bdrElement) {\n            this.bdrElement.style.display = display;\n            if (this.parent.isFrozenGrid()) {\n                this.mcBdrElement.style.display = display;\n                if (this.parent.getFrozenMode() === 'Left-Right') {\n                    this.frcBdrElement.style.display = display;\n                }\n            }\n            if (this.parent.frozenRows) {\n                this.fhBdrElement.style.display = display;\n            }\n            if (this.parent.frozenRows && this.parent.isFrozenGrid()) {\n                this.mhBdrElement.style.display = display;\n                if (this.parent.getFrozenMode() === 'Left-Right') {\n                    this.frhBdrElement.style.display = display;\n                }\n            }\n        }\n    };\n    Selection.prototype.drawAFBorders = function () {\n        if (!this.bdrAFBottom) {\n            this.createAFBorders();\n        }\n        this.positionAFBorders();\n    };\n    Selection.prototype.positionAFBorders = function () {\n        if (!this.startCell || !this.bdrAFLeft) {\n            return;\n        }\n        var stOff = this.startAFCell.getBoundingClientRect();\n        var endOff = this.endAFCell.getBoundingClientRect();\n        var top = endOff.top - stOff.top > 0 ? 1 : 0;\n        var firstCellTop = endOff.top - stOff.top >= 0 && (parentsUntil(this.startAFCell, 'e-movablecontent') ||\n            parentsUntil(this.startAFCell, 'e-frozencontent')) && this.isFirstRow(this.startAFCell) ? 1.5 : 0;\n        var firstCellLeft = (parentsUntil(this.startAFCell, 'e-movablecontent') ||\n            parentsUntil(this.startAFCell, 'e-movableheader')) && this.isFirstCell(this.startAFCell) ? 1 : 0;\n        var rowHeight = this.isLastRow(this.endAFCell) && (parentsUntil(this.endAFCell, 'e-movablecontent') ||\n            parentsUntil(this.endAFCell, 'e-frozencontent')) ? 2 : 0;\n        var parentOff = this.startAFCell.offsetParent.getBoundingClientRect();\n        var parentRect = this.parent.element.getBoundingClientRect();\n        var sTop = this.startAFCell.offsetParent.parentElement.scrollTop;\n        var sLeft = this.startAFCell.offsetParent.parentElement.scrollLeft;\n        var scrollTop = sTop - this.startAFCell.offsetTop;\n        var scrollLeft = sLeft - this.startAFCell.offsetLeft;\n        var totalHeight = this.parent.element.clientHeight;\n        var totalWidth = this.parent.element.clientWidth;\n        scrollTop = scrollTop > 0 ? Math.floor(scrollTop) - 1 : 0;\n        scrollLeft = scrollLeft > 0 ? scrollLeft : 0;\n        var left = stOff.left - parentRect.left;\n        if (!this.parent.enableRtl) {\n            this.bdrAFLeft.style.left = left - firstCellLeft + scrollLeft - 1 + 'px';\n            this.bdrAFRight.style.left = endOff.left - parentRect.left - 2 + endOff.width + 'px';\n            this.bdrAFRight.style.width = totalWidth <= parseInt(this.bdrAFRight.style.left, 10) ? '0px' : '2px';\n            this.bdrAFTop.style.left = left + scrollLeft - 0.5 + 'px';\n            this.bdrAFTop.style.width = parseInt(this.bdrAFRight.style.left, 10) - parseInt(this.bdrAFLeft.style.left, 10)\n                - firstCellLeft + 1 + 'px';\n            if (totalWidth <= (parseInt(this.bdrAFTop.style.width, 10) + parseInt(this.bdrAFTop.style.left, 10))) {\n                var leftRemove = (parseInt(this.bdrAFTop.style.width, 10) + parseInt(this.bdrAFTop.style.left, 10)) - totalWidth;\n                this.bdrAFTop.style.width = parseInt(this.bdrAFTop.style.width, 10) - leftRemove + 'px';\n            }\n        }\n        else {\n            var scrolloffSet = (parentsUntil(this.startAFCell, 'e-movablecontent') ||\n                parentsUntil(this.startAFCell, 'e-movableheader')) ? stOff.right -\n                this.startAFCell.offsetParent.parentElement.getBoundingClientRect().width -\n                parentRect.left : 0;\n            this.bdrAFLeft.style.right = parentRect.right - endOff.right - 2 + endOff.width + 'px';\n            this.bdrAFLeft.style.width = totalWidth <= parseInt(this.bdrAFLeft.style.right, 10) ? '0px' : '2px';\n            this.bdrAFRight.style.right = parentRect.right - stOff.right - firstCellLeft + scrolloffSet - 1 + 'px';\n            this.bdrAFTop.style.left = endOff.left - parentRect.left - 0.5 + 'px';\n            this.bdrAFTop.style.width = parseInt(this.bdrAFLeft.style.right, 10) - parseInt(this.bdrAFRight.style.right, 10)\n                - firstCellLeft + 1 + 'px';\n            if (parseInt(this.bdrAFTop.style.left, 10) < 0) {\n                this.bdrAFTop.style.width = parseInt(this.bdrAFTop.style.width, 10) + parseInt(this.bdrAFTop.style.left, 10) + 'px';\n                this.bdrAFTop.style.left = '0px';\n            }\n        }\n        this.bdrAFLeft.style.top = stOff.top - parentRect.top - firstCellTop + scrollTop + 'px';\n        this.bdrAFLeft.style.height = endOff.top - stOff.top > 0 ?\n            (endOff.top - parentOff.top + endOff.height + 1) - (stOff.top - parentOff.top) + firstCellTop - rowHeight - scrollTop + 'px' :\n            endOff.height + firstCellTop - rowHeight - scrollTop + 'px';\n        this.bdrAFRight.style.top = this.bdrAFLeft.style.top;\n        this.bdrAFRight.style.height = parseInt(this.bdrAFLeft.style.height, 10) + 'px';\n        this.bdrAFTop.style.top = this.bdrAFRight.style.top;\n        this.bdrAFBottom.style.left = this.bdrAFTop.style.left;\n        this.bdrAFBottom.style.top = parseFloat(this.bdrAFLeft.style.top) + parseFloat(this.bdrAFLeft.style.height) - top - 1 + 'px';\n        this.bdrAFBottom.style.width = totalHeight <= parseFloat(this.bdrAFBottom.style.top) ? '0px' : this.bdrAFTop.style.width;\n        if (totalHeight <= (parseInt(this.bdrAFLeft.style.height, 10) + parseInt(this.bdrAFLeft.style.top, 10))) {\n            var topRemove = parseInt(this.bdrAFLeft.style.height, 10) + parseInt(this.bdrAFLeft.style.top, 10) - totalHeight;\n            this.bdrAFLeft.style.height = parseInt(this.bdrAFLeft.style.height, 10) - topRemove + 'px';\n            this.bdrAFRight.style.height = parseInt(this.bdrAFLeft.style.height, 10) + 'px';\n        }\n    };\n    Selection.prototype.createAFBorders = function () {\n        if (!this.bdrAFLeft) {\n            this.bdrAFLeft = this.parent.element.appendChild(createElement('div', { className: 'e-xlselaf', id: this.parent.element.id + '_bdrafleft', styles: 'width: 2px;' }));\n            this.bdrAFRight = this.parent.element.appendChild(createElement('div', { className: 'e-xlselaf', id: this.parent.element.id + '_bdrafright', styles: 'width: 2px;' }));\n            this.bdrAFBottom = this.parent.element.appendChild(createElement('div', { className: 'e-xlselaf', id: this.parent.element.id + '_bdrafbottom', styles: 'height: 2px;' }));\n            this.bdrAFTop = this.parent.element.appendChild(createElement('div', { className: 'e-xlselaf', id: this.parent.element.id + '_bdraftop', styles: 'height: 2px;' }));\n        }\n    };\n    Selection.prototype.showAFBorders = function () {\n        if (this.bdrAFLeft) {\n            this.bdrAFLeft.style.display = '';\n            this.bdrAFRight.style.display = '';\n            this.bdrAFBottom.style.display = '';\n            this.bdrAFTop.style.display = '';\n        }\n    };\n    Selection.prototype.hideAFBorders = function () {\n        if (this.bdrAFLeft) {\n            this.bdrAFLeft.style.display = 'none';\n            this.bdrAFRight.style.display = 'none';\n            this.bdrAFBottom.style.display = 'none';\n            this.bdrAFTop.style.display = 'none';\n        }\n    };\n    Selection.prototype.updateValue = function (rIdx, cIdx, cell) {\n        var args = this.createBeforeAutoFill(rIdx, cIdx, cell);\n        if (!args.cancel) {\n            var col = this.parent.getColumnByIndex(cIdx);\n            if (this.parent.editModule && cell) {\n                if (col.type === 'number') {\n                    this.parent.editModule.updateCell(rIdx, col.field, parseInt(args.value, 10));\n                }\n                else {\n                    this.parent.editModule.updateCell(rIdx, col.field, args.value);\n                }\n            }\n        }\n    };\n    Selection.prototype.createBeforeAutoFill = function (rowIndex, colIndex, cell) {\n        var col = this.parent.getColumnByIndex(colIndex);\n        var args = {\n            column: col,\n            value: cell.innerText\n        };\n        this.parent.trigger(events.beforeAutoFill, args);\n        return args;\n    };\n    Selection.prototype.getAutoFillCells = function (rowIndex, startCellIdx) {\n        var cls = '.e-cellselectionbackground';\n        var cells = [].slice.call(this.parent.getDataRows()[rowIndex].querySelectorAll(cls));\n        if (this.parent.isFrozenGrid()) {\n            cells = cells.concat([].slice.call(this.parent.getMovableDataRows()[rowIndex].querySelectorAll(cls)));\n            if (this.parent.getFrozenMode() === 'Left-Right') {\n                cells = cells.concat([].slice.call(this.parent.getFrozenRightDataRows()[rowIndex].querySelectorAll(cls)));\n            }\n        }\n        return cells;\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    Selection.prototype.selectLikeAutoFill = function (e, isApply) {\n        var startrowIdx = parseInt(parentsUntil(this.startAFCell, 'e-row').getAttribute('aria-rowindex'), 10);\n        var startCellIdx = parseInt(this.startAFCell.getAttribute('aria-colindex'), 10);\n        var endrowIdx = parseInt(parentsUntil(this.endAFCell, 'e-row').getAttribute('aria-rowindex'), 10);\n        var endCellIdx = parseInt(this.endAFCell.getAttribute('aria-colindex'), 10);\n        var rowLen = this.selectedRowCellIndexes.length - 1;\n        var colLen = this.selectedRowCellIndexes[0].cellIndexes.length - 1;\n        var col;\n        switch (true) { //direction         \n            case !isApply && this.endAFCell.classList.contains('e-cellselectionbackground') &&\n                !!parentsUntil(e.target, 'e-rowcell'):\n                this.startAFCell = this.parent.getCellFromIndex(startrowIdx, startCellIdx);\n                this.endAFCell = this.parent.getCellFromIndex(startrowIdx + rowLen, startCellIdx + colLen);\n                this.drawAFBorders();\n                break;\n            case this.autoFillRLselection && startCellIdx + colLen < endCellIdx && //right\n                endCellIdx - startCellIdx - colLen + 1 > endrowIdx - startrowIdx - rowLen // right bottom\n                && endCellIdx - startCellIdx - colLen + 1 > startrowIdx - endrowIdx: //right top\n                this.endAFCell = this.parent.getCellFromIndex(startrowIdx + rowLen, endCellIdx);\n                endrowIdx = parseInt(parentsUntil(this.endAFCell, 'e-row').getAttribute('aria-rowindex'), 10);\n                endCellIdx = parseInt(this.endAFCell.getAttribute('aria-colindex'), 10);\n                if (!isApply) {\n                    this.drawAFBorders();\n                }\n                else {\n                    var cellIdx = parseInt(this.endCell.getAttribute('aria-colindex'), 10);\n                    for (var i = startrowIdx; i <= endrowIdx; i++) {\n                        var cells = this.getAutoFillCells(i, startCellIdx);\n                        var c = 0;\n                        for (var j = cellIdx + 1; j <= endCellIdx; j++) {\n                            if (c > colLen) {\n                                c = 0;\n                            }\n                            this.updateValue(i, j, cells[c]);\n                            c++;\n                        }\n                    }\n                    this.selectCellsByRange({ rowIndex: startrowIdx, cellIndex: this.startCellIndex }, { rowIndex: endrowIdx, cellIndex: endCellIdx });\n                }\n                break;\n            case this.autoFillRLselection && startCellIdx > endCellIdx && // left\n                startCellIdx - endCellIdx + 1 > endrowIdx - startrowIdx - rowLen && //left top\n                startCellIdx - endCellIdx + 1 > startrowIdx - endrowIdx: // left bottom\n                this.startAFCell = this.parent.getCellFromIndex(startrowIdx, endCellIdx);\n                this.endAFCell = this.endCell;\n                if (!isApply) {\n                    this.drawAFBorders();\n                }\n                else {\n                    for (var i = startrowIdx; i <= startrowIdx + rowLen; i++) {\n                        var cells = this.getAutoFillCells(i, startCellIdx);\n                        cells.reverse();\n                        var c = 0;\n                        for (var j = this.startCellIndex - 1; j >= endCellIdx; j--) {\n                            if (c > colLen) {\n                                c = 0;\n                            }\n                            this.updateValue(i, j, cells[c]);\n                            c++;\n                        }\n                    }\n                    this.selectCellsByRange({ rowIndex: startrowIdx, cellIndex: endCellIdx }, { rowIndex: startrowIdx + rowLen, cellIndex: this.startCellIndex + colLen });\n                }\n                break;\n            case startrowIdx > endrowIdx: //up\n                this.startAFCell = this.parent.getCellFromIndex(endrowIdx, startCellIdx);\n                this.endAFCell = this.endCell;\n                if (!isApply) {\n                    this.drawAFBorders();\n                }\n                else {\n                    var trIdx = parseInt(this.endCell.parentElement.getAttribute('aria-rowindex'), 10);\n                    var r = trIdx;\n                    for (var i = startrowIdx - 1; i >= endrowIdx; i--) {\n                        if (r === this.startIndex - 1) {\n                            r = trIdx;\n                        }\n                        var cells = this.getAutoFillCells(r, startCellIdx);\n                        var c = 0;\n                        r--;\n                        for (var j = this.startCellIndex; j <= this.startCellIndex + colLen; j++) {\n                            this.updateValue(i, j, cells[c]);\n                            c++;\n                        }\n                    }\n                    this.selectCellsByRange({ rowIndex: endrowIdx, cellIndex: startCellIdx + colLen }, { rowIndex: startrowIdx + rowLen, cellIndex: startCellIdx });\n                }\n                break;\n            default: //down\n                this.endAFCell = this.parent.getCellFromIndex(endrowIdx, startCellIdx + colLen);\n                if (!isApply) {\n                    this.drawAFBorders();\n                }\n                else {\n                    var trIdx = parseInt(this.endCell.parentElement.getAttribute('aria-rowindex'), 10);\n                    var r = this.startIndex;\n                    for (var i = trIdx + 1; i <= endrowIdx; i++) {\n                        if (r === trIdx + 1) {\n                            r = this.startIndex;\n                        }\n                        var cells = this.getAutoFillCells(r, startCellIdx);\n                        r++;\n                        var c = 0;\n                        for (var m = this.startCellIndex; m <= this.startCellIndex + colLen; m++) {\n                            this.updateValue(i, m, cells[c]);\n                            c++;\n                        }\n                    }\n                    this.selectCellsByRange({ rowIndex: trIdx - rowLen, cellIndex: startCellIdx }, { rowIndex: endrowIdx, cellIndex: startCellIdx + colLen });\n                }\n                break;\n        }\n    };\n    Selection.prototype.mouseUpHandler = function (e) {\n        document.body.classList.remove('e-disableuserselect');\n        if (this.element) {\n            remove(this.element);\n        }\n        if (this.isDragged && this.selectedRowCellIndexes.length === 1 && this.selectedRowCellIndexes[0].cellIndexes.length === 1) {\n            this.mUPTarget = parentsUntil(e.target, 'e-rowcell');\n        }\n        else {\n            this.mUPTarget = null;\n        }\n        if (this.isDragged && !this.isAutoFillSel && this.selectionSettings.mode === 'Cell') {\n            var target = e.target;\n            var rowIndex = parseInt(target.parentElement.getAttribute('aria-rowindex'), 10);\n            var cellIndex = parseInt(target.getAttribute('aria-colindex'), 10);\n            this.isDragged = false;\n            this.clearCellSelection();\n            this.selectCellsByRange({ rowIndex: this.startDIndex, cellIndex: this.startDCellIndex }, { rowIndex: rowIndex, cellIndex: cellIndex });\n        }\n        this.isDragged = false;\n        this.updateAutoFillPosition();\n        if (this.isAutoFillSel) {\n            var lastCell = parentsUntil(e.target, 'e-rowcell');\n            this.endAFCell = lastCell ? lastCell : this.endCell === this.endAFCell ? this.startAFCell : this.endAFCell;\n            this.startAFCell = this.startCell;\n            this.updateStartCellsIndex();\n            this.selectLikeAutoFill(e, true);\n            this.updateAutoFillPosition();\n            this.hideAFBorders();\n            this.positionBorders();\n            this.isAutoFillSel = false;\n        }\n        EventHandler.remove(this.parent.getContent(), 'mousemove', this.mouseMoveHandler);\n        if (this.parent.frozenRows) {\n            EventHandler.remove(this.parent.getHeaderContent(), 'mousemove', this.mouseMoveHandler);\n        }\n        EventHandler.remove(document.body, 'mouseup', this.mouseUpHandler);\n    };\n    Selection.prototype.hideAutoFill = function () {\n        if (this.autofill) {\n            this.autofill.style.display = 'none';\n        }\n    };\n    /**\n     * @hidden\n     */\n    Selection.prototype.updateAutoFillPosition = function () {\n        if (this.parent.enableAutoFill && !this.parent.isEdit &&\n            this.selectionSettings.cellSelectionMode.indexOf('Box') > -1 && !this.isRowType() && !this.isSingleSel()\n            && this.selectedRowCellIndexes.length) {\n            var index = parseInt(this.target.getAttribute('aria-colindex'), 10);\n            var rindex = parseInt(this.target.getAttribute('index'), 10);\n            var rowIndex = this.selectedRowCellIndexes[this.selectedRowCellIndexes.length - 1].rowIndex;\n            var cells = this.getAutoFillCells(rowIndex, index).filter(function (ele) { return ele.style.display === ''; });\n            var col = this.parent.getColumnByIndex(index);\n            var isFrozenCol = col.getFreezeTableName() === 'movable';\n            var isFrozenRow = rindex < this.parent.frozenRows;\n            var isFrozenRight = this.parent.getFrozenMode() === 'Left-Right' && col.getFreezeTableName() === 'frozen-right';\n            if (!select('#' + this.parent.element.id + '_autofill', parentsUntil(this.target, 'e-table'))) {\n                if (select('#' + this.parent.element.id + '_autofill', this.parent.element)) {\n                    select('#' + this.parent.element.id + '_autofill', this.parent.element).remove();\n                }\n                this.autofill = createElement('div', { className: 'e-autofill', id: this.parent.element.id + '_autofill' });\n                this.autofill.style.display = 'none';\n                !isFrozenRow ? !isFrozenCol ? this.parent.getContentTable().parentElement.appendChild(this.autofill) :\n                    this.parent.contentModule.getMovableContent().appendChild(this.autofill) :\n                    !isFrozenCol ? this.parent.getHeaderTable().parentElement.appendChild(this.autofill) :\n                        this.parent.headerModule.getMovableHeader().appendChild(this.autofill);\n                if (isFrozenRight) {\n                    isFrozenRow ? this.parent.getFrozenRightHeader().appendChild(this.autofill)\n                        : this.parent.getFrozenRightContent().appendChild(this.autofill);\n                }\n            }\n            var cell = cells[cells.length - 1];\n            if (cell && cell.offsetParent) {\n                var clientRect = cell.getBoundingClientRect();\n                var parentOff = cell.offsetParent.getBoundingClientRect();\n                var colWidth = this.isLastCell(cell) ? 4 : 0;\n                var rowHeight = this.isLastRow(cell) ? 3 : 0;\n                if (!this.parent.enableRtl) {\n                    this.autofill.style.left = clientRect.left - parentOff.left + clientRect.width - 4 - colWidth + 'px';\n                }\n                else {\n                    this.autofill.style.right = parentOff.right - clientRect.right + clientRect.width - 4 - colWidth + 'px';\n                }\n                this.autofill.style.top = clientRect.top - parentOff.top + clientRect.height - 5 - rowHeight + 'px';\n            }\n            this.autofill.style.display = '';\n        }\n        else {\n            this.hideAutoFill();\n        }\n    };\n    Selection.prototype.mouseDownHandler = function (e) {\n        this.mouseButton = e.button;\n        var target = e.target;\n        var gObj = this.parent;\n        var isDrag;\n        var gridElement = parentsUntil(target, 'e-grid');\n        if (gridElement && gridElement.id !== gObj.element.id || parentsUntil(target, 'e-headercontent') && !this.parent.frozenRows ||\n            parentsUntil(target, 'e-editedbatchcell') || parentsUntil(target, 'e-editedrow')) {\n            return;\n        }\n        if (e.shiftKey || e.ctrlKey) {\n            e.preventDefault();\n        }\n        if (parentsUntil(target, 'e-rowcell') && !e.shiftKey && !e.ctrlKey) {\n            if (gObj.selectionSettings.cellSelectionMode.indexOf('Box') > -1 && !this.isRowType() && !this.isSingleSel()) {\n                this.isCellDrag = true;\n                isDrag = true;\n            }\n            else if (gObj.allowRowDragAndDrop && !gObj.isEdit) {\n                if (!this.isRowType() || this.isSingleSel() || closest(target, 'td').classList.contains('e-selectionbackground')) {\n                    this.isDragged = false;\n                    return;\n                }\n                isDrag = true;\n                this.element = this.parent.createElement('div', { className: 'e-griddragarea' });\n                gObj.getContent().appendChild(this.element);\n            }\n            if (isDrag) {\n                this.enableDrag(e, true);\n            }\n        }\n        this.updateStartEndCells();\n        if (target.classList.contains('e-autofill') || target.classList.contains('e-xlsel')) {\n            this.isCellDrag = true;\n            this.isAutoFillSel = true;\n            this.enableDrag(e);\n        }\n    };\n    Selection.prototype.updateStartEndCells = function () {\n        var cells = [].slice.call(this.parent.element.querySelectorAll('.e-cellselectionbackground'));\n        this.startCell = cells[0];\n        this.endCell = cells[cells.length - 1];\n        if (this.startCell) {\n            this.startIndex = parseInt(this.startCell.parentElement.getAttribute('aria-rowindex'), 10);\n            this.startCellIndex = parseInt(parentsUntil(this.startCell, 'e-rowcell').getAttribute('aria-colindex'), 10);\n        }\n    };\n    Selection.prototype.updateStartCellsIndex = function () {\n        if (this.startCell) {\n            this.startIndex = parseInt(this.startCell.parentElement.getAttribute('aria-rowindex'), 10);\n            this.startCellIndex = parseInt(parentsUntil(this.startCell, 'e-rowcell').getAttribute('aria-colindex'), 10);\n        }\n    };\n    Selection.prototype.enableDrag = function (e, isUpdate) {\n        var gObj = this.parent;\n        if (isUpdate) {\n            var tr = closest(e.target, 'tr');\n            this.startDIndex = parseInt(tr.getAttribute('aria-rowindex'), 10);\n            this.startDCellIndex = parseInt(parentsUntil(e.target, 'e-rowcell').getAttribute('aria-colindex'), 10);\n        }\n        document.body.classList.add('e-disableuserselect');\n        var gBRect = gObj.element.getBoundingClientRect();\n        var postion = getPosition(e);\n        this.x = postion.x - gBRect.left;\n        this.y = postion.y - gBRect.top;\n        EventHandler.add(gObj.getContent(), 'mousemove', this.mouseMoveHandler, this);\n        if (this.parent.frozenRows) {\n            EventHandler.add(gObj.getHeaderContent(), 'mousemove', this.mouseMoveHandler, this);\n        }\n        EventHandler.add(document.body, 'mouseup', this.mouseUpHandler, this);\n    };\n    Selection.prototype.clearSelAfterRefresh = function (e) {\n        var isInfiniteScroll = this.parent.enableInfiniteScrolling && e.requestType === 'infiniteScroll';\n        if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection && !isInfiniteScroll) {\n            this.clearSelection();\n        }\n    };\n    /**\n     * @hidden\n     */\n    Selection.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.uiUpdate, this.enableAfterRender, this);\n        this.parent.on(events.initialEnd, this.initializeSelection, this);\n        this.parent.on(events.rowSelectionComplete, this.onActionComplete, this);\n        this.parent.on(events.cellSelectionComplete, this.onActionComplete, this);\n        this.parent.on(events.inBoundModelChanged, this.onPropertyChanged, this);\n        this.parent.on(events.cellFocused, this.onCellFocused, this);\n        this.parent.on(events.beforeFragAppend, this.clearSelAfterRefresh, this);\n        this.parent.on(events.columnPositionChanged, this.columnPositionChanged, this);\n        this.parent.on(events.contentReady, this.initialEnd, this);\n        this.actionBeginFunction = this.actionBegin.bind(this);\n        this.actionCompleteFunction = this.actionComplete.bind(this);\n        this.parent.addEventListener(events.actionBegin, this.actionBeginFunction);\n        this.parent.addEventListener(events.actionComplete, this.actionCompleteFunction);\n        this.parent.on(events.rowsRemoved, this.rowsRemoved, this);\n        this.parent.on(events.headerRefreshed, this.refreshHeader, this);\n        this.addEventListener_checkbox();\n    };\n    /**\n     * @hidden\n     */\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.uiUpdate, this.enableAfterRender);\n        this.parent.off(events.initialEnd, this.initializeSelection);\n        this.parent.off(events.rowSelectionComplete, this.onActionComplete);\n        this.parent.off(events.cellSelectionComplete, this.onActionComplete);\n        this.parent.off(events.inBoundModelChanged, this.onPropertyChanged);\n        this.parent.off(events.cellFocused, this.onCellFocused);\n        this.parent.off(events.beforeFragAppend, this.clearSelAfterRefresh);\n        this.parent.off(events.columnPositionChanged, this.columnPositionChanged);\n        this.parent.removeEventListener(events.actionBegin, this.actionBeginFunction);\n        this.parent.removeEventListener(events.actionComplete, this.actionCompleteFunction);\n        this.parent.off(events.rowsRemoved, this.rowsRemoved);\n        this.parent.off(events.headerRefreshed, this.refreshHeader);\n        this.removeEventListener_checkbox();\n    };\n    Selection.prototype.wireEvents = function () {\n        this.isMacOS = navigator.userAgent.indexOf('Mac OS') !== -1;\n        if (this.isMacOS) {\n            EventHandler.add(this.parent.element, 'keydown', this.keyDownHandler, this);\n            EventHandler.add(this.parent.element, 'keyup', this.keyUpHandler, this);\n        }\n    };\n    Selection.prototype.unWireEvents = function () {\n        if (this.isMacOS) {\n            EventHandler.remove(this.parent.element, 'keydown', this.keyDownHandler);\n            EventHandler.remove(this.parent.element, 'keyup', this.keyUpHandler);\n        }\n    };\n    Selection.prototype.columnPositionChanged = function () {\n        if (!this.parent.isPersistSelection) {\n            this.clearSelection();\n        }\n    };\n    Selection.prototype.refreshHeader = function () {\n        this.setCheckAllState();\n    };\n    Selection.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            delete (this.selectedRowState[e.records[i][this.primaryKey]]);\n            --this.totalRecordsCount;\n        }\n        this.setCheckAllState();\n    };\n    ;\n    Selection.prototype.beforeFragAppend = function (e) {\n        if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection) {\n            this.clearSelection();\n        }\n    };\n    ;\n    Selection.prototype.getCheckAllBox = function () {\n        return this.parent.getHeaderContent().querySelector('.e-checkselectall');\n    };\n    Selection.prototype.enableAfterRender = function (e) {\n        if (e.module === this.getModuleName() && e.enable) {\n            this.render();\n            this.initPerisistSelection();\n        }\n    };\n    Selection.prototype.render = function (e) {\n        EventHandler.add(this.parent.getContent(), 'mousedown', this.mouseDownHandler, this);\n        EventHandler.add(this.parent.getHeaderContent(), 'mousedown', this.mouseDownHandler, this);\n    };\n    Selection.prototype.onPropertyChanged = function (e) {\n        if (e.module !== this.getModuleName()) {\n            return;\n        }\n        var gObj = this.parent;\n        if (!isNullOrUndefined(e.properties.type) && this.selectionSettings.type === 'Single') {\n            if (this.selectedRowCellIndexes.length > 1) {\n                this.clearCellSelection();\n                this.prevCIdxs = undefined;\n            }\n            if (this.selectedRowIndexes.length > 1) {\n                this.clearRowSelection();\n                this.prevRowIndex = undefined;\n            }\n            if (this.selectedColumnsIndexes.length > 1) {\n                this.clearColumnSelection();\n                this.prevColIndex = undefined;\n            }\n            this.enableSelectMultiTouch = false;\n            this.hidePopUp();\n        }\n        if (!isNullOrUndefined(e.properties.mode) ||\n            !isNullOrUndefined(e.properties.cellSelectionMode)) {\n            this.clearSelection();\n            this.prevRowIndex = undefined;\n            this.prevCIdxs = undefined;\n            this.prevColIndex = undefined;\n        }\n        this.isPersisted = true;\n        this.checkBoxSelectionChanged();\n        this.isPersisted = false;\n        this.initPerisistSelection();\n        var checkboxColumn = this.parent.getColumns().filter(function (col) { return col.type === 'checkbox'; });\n        if (checkboxColumn.length) {\n            gObj.isCheckBoxSelection = !(this.selectionSettings.checkboxMode === 'ResetOnRowClick');\n        }\n        this.drawBorders();\n    };\n    Selection.prototype.hidePopUp = function () {\n        if (this.parent.element.querySelector('.e-gridpopup').querySelectorAll('.e-rowselect').length) {\n            this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        }\n    };\n    Selection.prototype.initialEnd = function (e) {\n        var isFrozen = this.parent.isFrozenGrid();\n        var isLeftRightFrozen = this.parent.getFrozenMode() === 'Left-Right';\n        if (!isFrozen || (isFrozen && (!isLeftRightFrozen && !e.args.isFrozen)\n            || (isLeftRightFrozen && e.args.renderFrozenRightContent))) {\n            this.parent.off(events.contentReady, this.initialEnd);\n            this.selectRow(this.parent.selectedRowIndex);\n        }\n    };\n    Selection.prototype.checkBoxSelectionChanged = function () {\n        this.parent.off(events.contentReady, this.checkBoxSelectionChanged);\n        var gobj = this.parent;\n        var checkboxColumn = gobj.getColumns().filter(function (col) { return col.type === 'checkbox'; });\n        if (checkboxColumn.length > 0) {\n            gobj.isCheckBoxSelection = true;\n            this.chkField = checkboxColumn[0].field;\n            this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n            if (isNullOrUndefined(this.totalRecordsCount)) {\n                this.totalRecordsCount = this.getCurrentBatchRecordChanges().length;\n            }\n            if (this.isSingleSel()) {\n                gobj.selectionSettings.type = 'Multiple';\n                gobj.dataBind();\n            }\n            else {\n                this.initPerisistSelection();\n            }\n        }\n        if (!gobj.isCheckBoxSelection && !this.isPersisted) {\n            this.chkField = null;\n            this.initPerisistSelection();\n        }\n    };\n    Selection.prototype.initPerisistSelection = function () {\n        var gobj = this.parent;\n        if (this.parent.selectionSettings.persistSelection && this.parent.getPrimaryKeyFieldNames().length > 0) {\n            gobj.isPersistSelection = true;\n            this.ensureCheckboxFieldSelection();\n        }\n        else if (this.parent.getPrimaryKeyFieldNames().length > 0) {\n            gobj.isPersistSelection = false;\n            this.ensureCheckboxFieldSelection();\n        }\n        else {\n            gobj.isPersistSelection = false;\n            this.selectedRowState = {};\n        }\n    };\n    Selection.prototype.ensureCheckboxFieldSelection = function () {\n        var gobj = this.parent;\n        this.primaryKey = this.parent.getPrimaryKeyFieldNames()[0];\n        if (!gobj.enableVirtualization && this.chkField\n            && ((gobj.isPersistSelection && Object.keys(this.selectedRowState).length === 0) ||\n                !gobj.isPersistSelection)) {\n            var data = this.parent.getDataModule();\n            var query = new Query().where(this.chkField, 'equal', true);\n            if (!query.params) {\n                query.params = this.parent.query.params;\n            }\n            var dataManager = data.getData({}, query);\n            var proxy_1 = this;\n            this.parent.showSpinner();\n            dataManager.then(function (e) {\n                proxy_1.dataSuccess(e.result);\n                proxy_1.refreshPersistSelection();\n                proxy_1.parent.hideSpinner();\n            });\n        }\n    };\n    Selection.prototype.dataSuccess = function (res) {\n        for (var i = 0; i < res.length; i++) {\n            if (isNullOrUndefined(this.selectedRowState[res[i][this.primaryKey]]) && res[i][this.chkField]) {\n                this.selectedRowState[res[i][this.primaryKey]] = res[i][this.chkField];\n            }\n        }\n        this.persistSelectedData = res;\n    };\n    Selection.prototype.setRowSelection = function (state) {\n        if (!this.parent.getDataModule().isRemote() && !isBlazor()) {\n            if (state) {\n                if (this.parent.groupSettings.columns.length) {\n                    for (var _i = 0, _a = this.getData().records; _i < _a.length; _i++) {\n                        var data = _a[_i];\n                        this.selectedRowState[data[this.primaryKey]] = true;\n                    }\n                }\n                else {\n                    for (var _b = 0, _c = this.getData(); _b < _c.length; _b++) {\n                        var data = _c[_b];\n                        this.selectedRowState[data[this.primaryKey]] = true;\n                    }\n                }\n            }\n            else {\n                this.selectedRowState = {};\n            }\n            // (this.getData()).forEach(function (data) {\n            //     this.selectedRowState[data[this.primaryKey]] = true;\n            // })\n        }\n    };\n    Selection.prototype.getData = function () {\n        return this.parent.getDataModule().dataManager.executeLocal(this.parent.getDataModule().generateQuery(true));\n    };\n    Selection.prototype.refreshPersistSelection = function () {\n        var rows = this.parent.getRows();\n        this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n        if (rows !== null && rows.length > 0 && (this.parent.isPersistSelection || this.chkField)) {\n            var indexes = [];\n            for (var j = 0; j < rows.length; j++) {\n                var rowObj = this.getRowObj(rows[j]);\n                var pKey = rowObj ? rowObj.data ? rowObj.data[this.primaryKey] : null : null;\n                if (pKey === null) {\n                    return;\n                }\n                var checkState = void 0;\n                var chkBox = rows[j].querySelector('.e-checkselect');\n                if (this.selectedRowState[pKey] || (this.parent.checkAllRows === 'Check' &&\n                    this.totalRecordsCount === Object.keys(this.selectedRowState).length && this.chkAllCollec.indexOf(pKey) < 0)\n                    || (this.parent.checkAllRows === 'Uncheck' && this.chkAllCollec.indexOf(pKey) > 0)\n                    || (this.parent.checkAllRows === 'Intermediate' && !isNullOrUndefined(this.chkField) && rowObj.data[this.chkField])) {\n                    indexes.push(parseInt(rows[j].getAttribute('aria-rowindex'), 10));\n                    checkState = true;\n                }\n                else {\n                    checkState = false;\n                    if (this.checkedTarget !== chkBox && this.parent.isCheckBoxSelection) {\n                        removeAddCboxClasses(chkBox.nextElementSibling, checkState);\n                    }\n                }\n                this.updatePersistCollection(rows[j], checkState);\n            }\n            this.isSingleSel() && indexes.length > 0 ? this.selectRow(indexes[0], true) : this.selectRows(indexes);\n        }\n        if (this.parent.isCheckBoxSelection && this.getCurrentBatchRecordChanges().length > 0) {\n            this.setCheckAllState();\n        }\n    };\n    Selection.prototype.actionBegin = function (e) {\n        if (e.requestType === 'save' && this.parent.isPersistSelection) {\n            var editChkBox = this.parent.element.querySelector('.e-edit-checkselect');\n            if (!isNullOrUndefined(editChkBox)) {\n                var row = closest(editChkBox, '.e-editedrow');\n                if (row) {\n                    if (this.parent.editSettings.mode === 'Dialog') {\n                        row = this.parent.element.querySelector('.e-dlgeditrow');\n                    }\n                    var rowObj = this.getRowObj(row);\n                    if (!rowObj) {\n                        return;\n                    }\n                    this.selectedRowState[rowObj.data[this.primaryKey]] = rowObj.isSelected = editChkBox.checked;\n                }\n                else {\n                    this.isCheckedOnAdd = editChkBox.checked;\n                }\n            }\n        }\n    };\n    Selection.prototype.actionComplete = function (e) {\n        if (e.requestType === 'save' && this.parent.isPersistSelection) {\n            if (e.action === 'add' && this.isCheckedOnAdd) {\n                var rowObj = this.parent.getRowObjectFromUID(this.parent.getRows()[e.selectedRow].getAttribute('data-uid'));\n                this.selectedRowState[rowObj.data[this.primaryKey]] = rowObj.isSelected = this.isCheckedOnAdd;\n            }\n            this.refreshPersistSelection();\n        }\n        if (e.requestType === 'delete' && this.parent.isPersistSelection) {\n            var records = [];\n            if (!isBlazor()) {\n                records = e.data;\n            }\n            else {\n                records = this.getSelectedRecords();\n            }\n            var data = records.slice();\n            for (var i = 0; i < data.length; i++) {\n                if (!isNullOrUndefined(data[i][this.primaryKey])) {\n                    this.updatePersistDelete(data[i][this.primaryKey]);\n                }\n            }\n            this.setCheckAllState();\n            this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n        }\n        if (e.requestType === 'paging') {\n            this.prevRowIndex = undefined;\n            this.prevCIdxs = undefined;\n            this.prevECIdxs = undefined;\n        }\n    };\n    Selection.prototype.onDataBound = function () {\n        if (!this.parent.enableVirtualization && this.parent.isPersistSelection) {\n            this.refreshPersistSelection();\n        }\n        if (this.parent.enableVirtualization) {\n            this.setCheckAllState();\n        }\n        if (this.parent.isCheckBoxSelection && !this.initialRowSelection) {\n            var totalRecords = this.parent.getRowsObject();\n            var indexes = [];\n            for (var i = 0; i < totalRecords.length; i++) {\n                if (totalRecords[i].isSelected) {\n                    indexes.push(i);\n                }\n            }\n            if (indexes.length) {\n                this.selectRows(indexes);\n            }\n            this.initialRowSelection = true;\n        }\n    };\n    Selection.prototype.updatePersistSelectedData = function (checkState) {\n        if (this.parent.isPersistSelection) {\n            var rows = this.parent.getRows();\n            for (var i = 0; i < rows.length; i++) {\n                this.updatePersistCollection(rows[i], checkState);\n            }\n            if (this.parent.checkAllRows === 'Uncheck') {\n                this.setRowSelection(false);\n                this.persistSelectedData = this.parent.getDataModule().isRemote() ? this.persistSelectedData : [];\n            }\n            else if (this.parent.checkAllRows === 'Check') {\n                this.setRowSelection(true);\n                this.persistSelectedData = (!this.parent.getDataModule().isRemote() && !isBlazor()) ?\n                    this.parent.groupSettings.columns.length ? this.getData().records.slice() :\n                        this.getData().slice() : this.persistSelectedData;\n            }\n        }\n    };\n    Selection.prototype.checkSelectAllAction = function (checkState) {\n        var cRenderer = this.getRenderer();\n        var editForm = this.parent.element.querySelector('.e-gridform');\n        this.checkedTarget = this.getCheckAllBox();\n        if (checkState && this.getCurrentBatchRecordChanges().length) {\n            this.parent.checkAllRows = 'Check';\n            this.updatePersistSelectedData(checkState);\n            if (isBlazor() && this.parent.enableVirtualization &&\n                !isNullOrUndefined(this.parent.contentModule.currentInfo.endIndex)) {\n                this.selectRowsByRange(this.parent.contentModule.currentInfo.startIndex, this.parent.contentModule.currentInfo.endIndex);\n            }\n            else {\n                this.selectRowsByRange(cRenderer.getVirtualRowIndex(0), cRenderer.getVirtualRowIndex(this.getCurrentBatchRecordChanges().length - 1));\n            }\n        }\n        else {\n            this.parent.checkAllRows = 'Uncheck';\n            this.updatePersistSelectedData(checkState);\n            this.clearSelection();\n        }\n        this.chkAllCollec = [];\n        if (!isNullOrUndefined(editForm)) {\n            var editChkBox = editForm.querySelector('.e-edit-checkselect');\n            if (!isNullOrUndefined(editChkBox)) {\n                removeAddCboxClasses(editChkBox.nextElementSibling, checkState);\n            }\n        }\n    };\n    Selection.prototype.checkSelectAll = function (checkBox) {\n        var _this = this;\n        var stateStr = this.getCheckAllStatus(checkBox);\n        var state = stateStr === 'Check';\n        this.isHeaderCheckboxClicked = true;\n        if (stateStr === 'Intermediate') {\n            state = this.getCurrentBatchRecordChanges().some(function (data) {\n                return data[_this.primaryKey] in _this.selectedRowState;\n            });\n        }\n        if (this.parent.isPersistSelection && this.parent.allowPaging) {\n            this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n        }\n        this.checkSelectAllAction(!state);\n        if (isBlazor() && this.parent.isServerRendered && this.parent.enableVirtualization) {\n            var interopAdaptor = 'interopAdaptor';\n            var invokeMethodAsync = 'invokeMethodAsync';\n            this.parent[interopAdaptor][invokeMethodAsync]('MaintainSelection', !state, 'checkbox', null);\n            this.checkBoxState = !state;\n            if (!state) {\n                var values = 'values';\n                var vgenerator = 'vgenerator';\n                var rowCache = this.parent.contentModule[vgenerator].rowCache;\n                Object[values](rowCache).forEach(function (x) { return x.isSelected = true; });\n                for (var i = 0; i < Object.keys(rowCache).length; i++) {\n                    if (this.parent.selectionModule.selectedRowIndexes.indexOf(Number(Object.keys(rowCache)[i])) === -1) {\n                        this.parent.selectionModule.selectedRowIndexes.push(Number(Object.keys(rowCache)[i]));\n                    }\n                }\n            }\n        }\n        this.target = null;\n        if (this.getCurrentBatchRecordChanges().length > 0) {\n            this.setCheckAllState();\n        }\n        this.triggerChkChangeEvent(checkBox, !state);\n    };\n    Selection.prototype.getCheckAllStatus = function (ele) {\n        var classes = ele ? ele.nextElementSibling.classList :\n            this.getCheckAllBox().nextElementSibling.classList;\n        var status;\n        if (classes.contains('e-check')) {\n            status = 'Check';\n        }\n        else if (classes.contains('e-uncheck')) {\n            status = 'Uncheck';\n        }\n        else if (classes.contains('e-stop')) {\n            status = 'Intermediate';\n        }\n        else {\n            status = 'None';\n        }\n        return status;\n    };\n    Selection.prototype.checkSelect = function (checkBox) {\n        var target = closest(this.checkedTarget, '.e-rowcell');\n        var checkObj = checkBox;\n        var gObj = this.parent;\n        this.isMultiCtrlRequest = true;\n        var rIndex = 0;\n        this.isHeaderCheckboxClicked = false;\n        if (isGroupAdaptive(gObj)) {\n            var uid = target.parentElement.getAttribute('data-uid');\n            rIndex = gObj.getRows().map(function (m) { return m.getAttribute('data-uid'); }).indexOf(uid);\n        }\n        else {\n            rIndex = parseInt(target.parentElement.getAttribute('aria-rowindex'), 10);\n        }\n        if (this.parent.isPersistSelection && this.parent.element.querySelectorAll('.e-addedrow').length > 0 &&\n            this.parent.editSettings.newRowPosition === 'Top') {\n            ++rIndex;\n        }\n        this.rowCellSelectionHandler(rIndex, parseInt(target.getAttribute('aria-colindex'), 10));\n        this.moveIntoUncheckCollection(closest(target, '.e-row'));\n        this.setCheckAllState();\n        this.isMultiCtrlRequest = false;\n        this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'));\n    };\n    Selection.prototype.moveIntoUncheckCollection = function (row) {\n        if (this.parent.checkAllRows === 'Check' || this.parent.checkAllRows === 'Uncheck') {\n            var rowObj = this.getRowObj(row);\n            var pKey = rowObj && rowObj.data ? rowObj.data[this.primaryKey] : null;\n            if (!pKey) {\n                return;\n            }\n            if (this.chkAllCollec.indexOf(pKey) < 0) {\n                this.chkAllCollec.push(pKey);\n            }\n            else {\n                this.chkAllCollec.splice(this.chkAllCollec.indexOf(pKey), 1);\n            }\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState) {\n        this.parent.trigger(events.checkBoxChange, {\n            checked: checkState, selectedRowIndexes: this.parent.getSelectedRowIndexes(),\n            target: checkBox\n        });\n        if (!this.parent.isEdit) {\n            this.checkedTarget = null;\n        }\n    };\n    Selection.prototype.updateSelectedRowIndex = function (index) {\n        if (this.parent.isCheckBoxSelection && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)\n            && !this.parent.getDataModule().isRemote()\n            && !(isBlazor() && this.parent.isServerRendered)) {\n            if (this.parent.checkAllRows === 'Check') {\n                this.selectedRowIndexes = [];\n                var dataLength = this.getData().length;\n                for (var data = 0; data < dataLength; data++) {\n                    this.selectedRowIndexes.push(data);\n                }\n            }\n            else if (this.parent.checkAllRows === 'Uncheck') {\n                this.selectedRowIndexes = [];\n            }\n            else {\n                if (index && this.parent.getRowByIndex(index).getAttribute('aria-selected') === 'false') {\n                    var selectedVal = this.selectedRowIndexes.indexOf(index);\n                    this.selectedRowIndexes.splice(selectedVal, 1);\n                }\n            }\n        }\n    };\n    ;\n    Selection.prototype.setCheckAllState = function (index, isInteraction) {\n        if (this.parent.isCheckBoxSelection || this.parent.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n            var checkToSelectAll = void 0;\n            var isServerRenderedVirtualization = isBlazor() && this.parent.isServerRendered && this.parent.enableVirtualization;\n            if (isServerRenderedVirtualization) {\n                var values = 'values';\n                var vgenerator = 'vgenerator';\n                checkToSelectAll = !Object[values](this.parent.contentModule[vgenerator].rowCache).\n                    filter(function (x) { return x.isSelected === undefined || x.isSelected === false; }).length &&\n                    Object[values](this.parent.contentModule[vgenerator].rowCache).\n                        filter(function (x) { return x.isSelected; }).length === this.selectedRowIndexes.length;\n            }\n            var checkedLen = Object.keys(this.selectedRowState).length;\n            if (!this.parent.isPersistSelection && !(isServerRenderedVirtualization)) {\n                checkedLen = this.selectedRowIndexes.length;\n                this.totalRecordsCount = this.getCurrentBatchRecordChanges().length;\n            }\n            var input = this.getCheckAllBox();\n            if (input) {\n                var spanEle = input.nextElementSibling;\n                removeClass([spanEle], ['e-check', 'e-stop', 'e-uncheck']);\n                setChecked(input, false);\n                input.indeterminate = false;\n                if (checkToSelectAll || checkedLen === this.totalRecordsCount && this.totalRecordsCount\n                    || ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)\n                        && !this.parent.allowPaging && !this.parent.getDataModule().isRemote()\n                        && !(isBlazor() && this.parent.isServerRendered)\n                        && checkedLen === this.getData().length)) {\n                    addClass([spanEle], ['e-check']);\n                    setChecked(input, true);\n                    if (isInteraction) {\n                        this.getRenderer().setSelection(null, true, true);\n                    }\n                    this.parent.checkAllRows = 'Check';\n                }\n                else if (isServerRenderedVirtualization && !this.selectedRowIndexes.length ||\n                    checkedLen === 0 && !isServerRenderedVirtualization || this.getCurrentBatchRecordChanges().length === 0) {\n                    addClass([spanEle], ['e-uncheck']);\n                    if (isInteraction) {\n                        this.getRenderer().setSelection(null, false, true);\n                    }\n                    this.parent.checkAllRows = 'Uncheck';\n                    if (checkedLen === 0 && this.getCurrentBatchRecordChanges().length === 0) {\n                        addClass([spanEle.parentElement], ['e-checkbox-disabled']);\n                    }\n                    else {\n                        removeClass([spanEle.parentElement], ['e-checkbox-disabled']);\n                    }\n                }\n                else {\n                    addClass([spanEle], ['e-stop']);\n                    this.parent.checkAllRows = 'Intermediate';\n                    input.indeterminate = true;\n                }\n                if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)\n                    && !this.parent.allowPaging && !this.parent.getDataModule().isRemote()) {\n                    this.updateSelectedRowIndex(index);\n                }\n            }\n        }\n    };\n    Selection.prototype.keyDownHandler = function (e) {\n        // Below are keyCode for command key in MAC OS. Safari/Chrome(91-Left command, 93-Right Command), Opera(17), FireFox(224)\n        if ((((Browser.info.name === 'chrome') || (Browser.info.name === 'safari')) && (e.keyCode === 91 || e.keyCode === 93)) ||\n            (Browser.info.name === 'opera' && e.keyCode === 17) || (Browser.info.name === 'mozilla' && e.keyCode === 224)) {\n            this.cmdKeyPressed = true;\n        }\n    };\n    Selection.prototype.keyUpHandler = function (e) {\n        if ((((Browser.info.name === 'chrome') || (Browser.info.name === 'safari')) && (e.keyCode === 91 || e.keyCode === 93)) ||\n            (Browser.info.name === 'opera' && e.keyCode === 17) || (Browser.info.name === 'mozilla' && e.keyCode === 224)) {\n            this.cmdKeyPressed = false;\n        }\n    };\n    Selection.prototype.clickHandler = function (e) {\n        var target = e.target;\n        this.actualTarget = target;\n        if (parentsUntil(target, 'e-row') || parentsUntil(target, 'e-headerchkcelldiv') ||\n            (this.selectionSettings.allowColumnSelection && target.classList.contains('e-headercell'))) {\n            this.isInteracted = true;\n        }\n        this.isMultiCtrlRequest = e.ctrlKey || this.enableSelectMultiTouch ||\n            (this.isMacOS && this.cmdKeyPressed);\n        this.isMultiShiftRequest = e.shiftKey;\n        this.popUpClickHandler(e);\n        var chkSelect = false;\n        this.preventFocus = true;\n        var checkBox;\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        this.checkSelectAllClicked = checkWrap && checkWrap.querySelectorAll('.e-checkselectall') ? true : false;\n        if (checkWrap && checkWrap.querySelectorAll('.e-checkselect,.e-checkselectall').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            chkSelect = true;\n        }\n        this.drawBorders();\n        this.updateAutoFillPosition();\n        target = parentsUntil(target, 'e-rowcell');\n        if ((target && target.parentElement.classList.contains('e-row') && !this.parent.selectionSettings.checkboxOnly) || chkSelect) {\n            if (this.parent.isCheckBoxSelection) {\n                this.isMultiCtrlRequest = true;\n            }\n            this.target = target;\n            if (!isNullOrUndefined(checkBox)) {\n                this.checkedTarget = checkBox;\n                if (checkBox.classList.contains('e-checkselectall')) {\n                    this.checkSelectAll(checkBox);\n                }\n                else {\n                    this.checkSelect(checkBox);\n                }\n            }\n            else {\n                var gObj = this.parent;\n                var rIndex = 0;\n                if (isGroupAdaptive(gObj)) {\n                    var uid = target.parentElement.getAttribute('data-uid');\n                    rIndex = gObj.getRows().map(function (m) { return m.getAttribute('data-uid'); }).indexOf(uid);\n                }\n                else {\n                    rIndex = parseInt(target.parentElement.getAttribute('aria-rowindex'), 10);\n                }\n                if (this.parent.isPersistSelection && this.parent.element.querySelectorAll('.e-addedrow').length > 0) {\n                    ++rIndex;\n                }\n                if (!this.mUPTarget || !this.mUPTarget.isEqualNode(target)) {\n                    this.rowCellSelectionHandler(rIndex, parseInt(target.getAttribute('aria-colindex'), 10));\n                }\n                this.parent.hoverFrozenRows(e);\n                if (this.parent.isCheckBoxSelection) {\n                    this.moveIntoUncheckCollection(closest(target, '.e-row'));\n                    this.setCheckAllState();\n                }\n            }\n            if (!this.parent.isCheckBoxSelection && Browser.isDevice && !this.isSingleSel()) {\n                this.showPopup(e);\n            }\n        }\n        else if (e.target.classList.contains('e-headercell') &&\n            !e.target.classList.contains('e-stackedheadercell')) {\n            var uid = e.target.querySelector('.e-headercelldiv').getAttribute('e-mappinguid');\n            this.headerSelectionHandler(this.parent.getColumnIndexByUid(uid));\n        }\n        this.isMultiCtrlRequest = false;\n        this.isMultiShiftRequest = false;\n        if (isNullOrUndefined(closest(e.target, '.e-unboundcell'))) {\n            this.preventFocus = false;\n        }\n    };\n    Selection.prototype.popUpClickHandler = function (e) {\n        var target = e.target;\n        if (closest(target, '.e-headercell') || e.target.classList.contains('e-rowcell') ||\n            closest(target, '.e-gridpopup')) {\n            if (target.classList.contains('e-rowselect')) {\n                if (!target.classList.contains('e-spanclicked')) {\n                    target.classList.add('e-spanclicked');\n                    this.enableSelectMultiTouch = true;\n                }\n                else {\n                    target.classList.remove('e-spanclicked');\n                    this.enableSelectMultiTouch = false;\n                    this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n                }\n            }\n        }\n        else {\n            this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        }\n    };\n    Selection.prototype.showPopup = function (e) {\n        if (!this.selectionSettings.enableSimpleMultiRowSelection) {\n            setCssInGridPopUp(this.parent.element.querySelector('.e-gridpopup'), e, 'e-rowselect e-icons e-icon-rowselect' +\n                (!this.isSingleSel() && (this.selectedRecords.length > (this.parent.getFrozenColumns() ? 2 : 1)\n                    || this.selectedRowCellIndexes.length > 1) ? ' e-spanclicked' : ''));\n        }\n    };\n    Selection.prototype.rowCellSelectionHandler = function (rowIndex, cellIndex) {\n        var gObj = this.parent;\n        if ((!this.isMultiCtrlRequest && !this.isMultiShiftRequest) || this.isSingleSel()) {\n            if (!this.isDragged) {\n                this.selectRow(rowIndex, this.selectionSettings.enableToggle);\n            }\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, this.selectionSettings.enableToggle);\n            if (this.selectedRowCellIndexes.length) {\n                this.updateAutoFillPosition();\n            }\n            this.drawBorders();\n        }\n        else if (this.isMultiShiftRequest) {\n            if (this.parent.isCheckBoxSelection || (!this.parent.isCheckBoxSelection &&\n                !closest(this.target, '.e-rowcell').classList.contains('e-gridchkbox'))) {\n                this.selectRowsByRange(isUndefined(this.prevRowIndex) ? rowIndex : this.prevRowIndex, rowIndex);\n            }\n            else {\n                this.addRowsToSelection([rowIndex]);\n            }\n            this.selectCellsByRange(isUndefined(this.prevCIdxs) ? { rowIndex: rowIndex, cellIndex: cellIndex } : this.prevCIdxs, { rowIndex: rowIndex, cellIndex: cellIndex });\n            this.updateAutoFillPosition();\n            this.drawBorders();\n        }\n        else {\n            this.addRowsToSelection([rowIndex]);\n            if (isBlazor() && this.parent.enableVirtualization && this.parent.isServerRendered) {\n                var rowIndexes = this.parent.getSelectedRowIndexes();\n                var interopAdaptor = 'interopAdaptor';\n                var invokeMethodAsync = 'invokeMethodAsync';\n                this.parent[interopAdaptor][invokeMethodAsync]('MaintainSelection', true, 'normal', rowIndexes);\n            }\n            this.addCellsToSelection([{ rowIndex: rowIndex, cellIndex: cellIndex }]);\n            this.showHideBorders('none');\n        }\n        this.isDragged = false;\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    Selection.prototype.onCellFocused = function (e) {\n        if (this.parent.frozenRows && e.container.isHeader && e.byKey) {\n            if (e.keyArgs.action === 'upArrow') {\n                if (this.parent.allowFiltering) {\n                    e.isJump = e.element.tagName === 'INPUT' ? true : false;\n                }\n                else {\n                    e.isJump = e.element.tagName === 'TH' ? true : false;\n                }\n            }\n            else {\n                if (e.keyArgs.action === 'downArrow') {\n                    var rIdx = Number(e.element.parentElement.getAttribute('aria-rowindex'));\n                    e.isJump = rIdx === 0 ? true : false;\n                }\n                else {\n                    if (e.keyArgs.action === 'ctrlHome') {\n                        e.isJump = true;\n                    }\n                }\n            }\n        }\n        var clear = this.parent.isFrozenGrid() ? (((e.container.isHeader && e.element.tagName !== 'TD' && e.isJump &&\n            !this.selectionSettings.allowColumnSelection) ||\n            ((e.container.isContent || e.element.tagName === 'TD') && !(e.container.isSelectable || e.element.tagName === 'TD')))\n            && !(e.byKey && e.keyArgs.action === 'space')) : ((e.container.isHeader && e.isJump) ||\n            (e.container.isContent && !e.container.isSelectable)) && !(e.byKey && e.keyArgs.action === 'space')\n            && !(e.element.classList.contains('e-detailrowexpand') || e.element.classList.contains('e-detailrowcollapse'));\n        var headerAction = (e.container.isHeader && e.element.tagName !== 'TD' && !closest(e.element, '.e-rowcell'))\n            && !(e.byKey && e.keyArgs.action === 'space');\n        if (!e.byKey || clear) {\n            if (clear && !this.parent.isCheckBoxSelection) {\n                this.clearSelection();\n            }\n            return;\n        }\n        var _a = e.container.isContent ? e.container.indexes : e.indexes, rowIndex = _a[0], cellIndex = _a[1];\n        var prev = this.focus.getPrevIndexes();\n        if (this.parent.frozenRows) {\n            if (e.container.isHeader && (e.element.tagName === 'TD' || closest(e.element, '.e-rowcell'))) {\n                var thLen = this.parent.getHeaderTable().querySelector('thead').childElementCount;\n                rowIndex -= thLen;\n                prev.rowIndex = !isNullOrUndefined(prev.rowIndex) ? prev.rowIndex - thLen : null;\n            }\n            else {\n                rowIndex += this.parent.frozenRows;\n                prev.rowIndex = prev.rowIndex === 0 || !isNullOrUndefined(prev.rowIndex) ? prev.rowIndex + this.parent.frozenRows : null;\n            }\n        }\n        if (this.parent.isFrozenGrid()) {\n            var cIdx = Number(e.element.getAttribute('aria-colindex'));\n            var selectedIndexes = this.parent.getSelectedRowCellIndexes();\n            if (selectedIndexes.length && prev.cellIndex === 0) {\n                prev.cellIndex = selectedIndexes[selectedIndexes.length - 1].cellIndexes[0];\n            }\n            prev.cellIndex = !isNullOrUndefined(prev.cellIndex) ? (prev.cellIndex === cellIndex ? cIdx : cIdx - 1) : null;\n            cellIndex = cIdx;\n        }\n        if ((headerAction || (['ctrlPlusA', 'escape'].indexOf(e.keyArgs.action) === -1 &&\n            e.keyArgs.action !== 'space' && rowIndex === prev.rowIndex && cellIndex === prev.cellIndex)) &&\n            !this.selectionSettings.allowColumnSelection) {\n            return;\n        }\n        this.preventFocus = true;\n        var columnIndex = this.getKeyColIndex(e);\n        if (this.needColumnSelection) {\n            cellIndex = columnIndex;\n        }\n        switch (e.keyArgs.action) {\n            case 'downArrow':\n            case 'upArrow':\n            case 'enter':\n            case 'shiftEnter':\n                this.target = e.element;\n                this.applyDownUpKey(rowIndex, cellIndex);\n                break;\n            case 'rightArrow':\n            case 'leftArrow':\n                this.applyRightLeftKey(rowIndex, cellIndex);\n                break;\n            case 'shiftDown':\n            case 'shiftUp':\n                this.shiftDownKey(rowIndex, cellIndex);\n                break;\n            case 'shiftLeft':\n            case 'shiftRight':\n                this.applyShiftLeftRightKey(rowIndex, cellIndex);\n                break;\n            case 'home':\n            case 'end':\n                cellIndex = e.keyArgs.action === 'end' ? this.getLastColIndex(rowIndex) : 0;\n                this.applyHomeEndKey(rowIndex, cellIndex);\n                break;\n            case 'ctrlHome':\n            case 'ctrlEnd':\n                this.applyCtrlHomeEndKey(rowIndex, cellIndex);\n                break;\n            case 'escape':\n                this.clearSelection();\n                break;\n            case 'ctrlPlusA':\n                this.ctrlPlusA();\n                break;\n            case 'space':\n                this.applySpaceSelection(e.element);\n                break;\n            case 'tab':\n                if (this.parent.editSettings.allowNextRowEdit) {\n                    this.selectRow(rowIndex);\n                }\n                break;\n        }\n        this.needColumnSelection = false;\n        this.preventFocus = false;\n        this.positionBorders();\n        this.updateAutoFillPosition();\n    };\n    Selection.prototype.getKeyColIndex = function (e) {\n        var uid;\n        var index = null;\n        var stackedHeader = e.element.querySelector('.e-stackedheadercelldiv');\n        if (this.selectionSettings.allowColumnSelection && parentsUntil(e.element, 'e-columnheader')) {\n            this.needColumnSelection = e.container.isHeader ? true : false;\n            if (stackedHeader) {\n                if (e.keyArgs.action === 'rightArrow' || e.keyArgs.action === 'leftArrow') {\n                    return index;\n                }\n                uid = stackedHeader.getAttribute('e-mappinguid');\n                var innerColumn = this.getstackedColumns(this.parent.getColumnByUid(uid).columns);\n                var lastIndex = this.parent.getColumnIndexByUid(innerColumn[innerColumn.length - 1].uid);\n                var firstIndex = this.parent.getColumnIndexByUid(innerColumn[0].uid);\n                index = this.prevColIndex >= lastIndex ? firstIndex : lastIndex;\n            }\n            else {\n                index = this.parent.getColumnIndexByUid(e.element\n                    .querySelector('.e-headercelldiv').getAttribute('e-mappinguid'));\n            }\n        }\n        return index;\n    };\n    /**\n     * Apply ctrl + A key selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.ctrlPlusA = function () {\n        if (this.isRowType() && !this.isSingleSel()) {\n            this.selectRowsByRange(0, this.getCurrentBatchRecordChanges().length - 1);\n        }\n        if (this.isCellType() && !this.isSingleSel()) {\n            this.selectCellsByRange({ rowIndex: 0, cellIndex: 0 }, { rowIndex: this.parent.getRows().length - 1, cellIndex: this.parent.getColumns().length - 1 });\n        }\n    };\n    Selection.prototype.applySpaceSelection = function (target) {\n        if (target.classList.contains('e-checkselectall')) {\n            this.checkedTarget = target;\n            this.checkSelectAll(this.checkedTarget);\n        }\n        else {\n            if (target.classList.contains('e-checkselect')) {\n                this.checkedTarget = target;\n                this.checkSelect(this.checkedTarget);\n            }\n        }\n    };\n    Selection.prototype.applyDownUpKey = function (rowIndex, cellIndex) {\n        var gObj = this.parent;\n        if (this.parent.isCheckBoxSelection && this.parent.checkAllRows === 'Check' && !this.selectionSettings.persistSelection) {\n            this.checkSelectAllAction(false);\n            this.checkedTarget = null;\n        }\n        if (this.isRowType()) {\n            if (this.parent.frozenRows) {\n                this.selectRow(rowIndex, true);\n                this.applyUpDown(gObj.selectedRowIndex);\n            }\n            else {\n                this.selectRow(rowIndex, true);\n                this.applyUpDown(gObj.selectedRowIndex);\n            }\n        }\n        if (this.isCellType()) {\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, true);\n        }\n        if (this.selectionSettings.allowColumnSelection && this.needColumnSelection) {\n            this.selectColumn(cellIndex);\n        }\n    };\n    Selection.prototype.applyUpDown = function (rowIndex) {\n        if (rowIndex < 0) {\n            return;\n        }\n        if (!this.target) {\n            this.target = this.parent.getRows()[0].children[this.parent.groupSettings.columns.length || 0];\n        }\n        var cIndex = parseInt(this.target.getAttribute('aria-colindex'), 10);\n        var frzCols = this.parent.getFrozenColumns();\n        if (frzCols) {\n            if (cIndex >= frzCols) {\n                this.target =\n                    this.contentRenderer.getMovableRowByIndex(rowIndex).querySelectorAll('.e-rowcell')[cIndex - frzCols];\n            }\n            else {\n                this.target = this.contentRenderer.getRowByIndex(rowIndex).querySelectorAll('.e-rowcell')[cIndex];\n            }\n        }\n        else {\n            this.target = this.contentRenderer.getRowByIndex(rowIndex).querySelectorAll('.e-rowcell')[cIndex];\n        }\n        this.addAttribute(this.target);\n    };\n    Selection.prototype.applyRightLeftKey = function (rowIndex, cellIndex) {\n        var gObj = this.parent;\n        if (this.selectionSettings.allowColumnSelection && this.needColumnSelection) {\n            this.selectColumn(cellIndex);\n        }\n        else if (this.isCellType()) {\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, true);\n            this.addAttribute(this.target);\n        }\n    };\n    Selection.prototype.applyHomeEndKey = function (rowIndex, cellIndex) {\n        if (this.isCellType()) {\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, true);\n        }\n        else {\n            this.addAttribute(this.parent.getCellFromIndex(rowIndex, cellIndex));\n        }\n    };\n    /**\n     * Apply shift+down key selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.shiftDownKey = function (rowIndex, cellIndex) {\n        var gObj = this.parent;\n        this.isMultiShiftRequest = true;\n        if (this.isRowType() && !this.isSingleSel()) {\n            if (!isUndefined(this.prevRowIndex)) {\n                this.selectRowsByRange(this.prevRowIndex, rowIndex);\n                this.applyUpDown(rowIndex);\n            }\n            else {\n                this.selectRow(0, true);\n            }\n        }\n        if (this.isCellType() && !this.isSingleSel()) {\n            this.selectCellsByRange(this.prevCIdxs || { rowIndex: 0, cellIndex: 0 }, { rowIndex: rowIndex, cellIndex: cellIndex });\n        }\n        this.isMultiShiftRequest = false;\n    };\n    Selection.prototype.applyShiftLeftRightKey = function (rowIndex, cellIndex) {\n        var gObj = this.parent;\n        this.isMultiShiftRequest = true;\n        if (this.selectionSettings.allowColumnSelection && this.needColumnSelection) {\n            this.selectColumnsByRange(this.prevColIndex, cellIndex);\n        }\n        else {\n            this.selectCellsByRange(this.prevCIdxs, { rowIndex: rowIndex, cellIndex: cellIndex });\n        }\n        this.isMultiShiftRequest = false;\n    };\n    Selection.prototype.getstackedColumns = function (column) {\n        var innerColumnIndexes = [];\n        for (var i = 0, len = column.length; i < len; i++) {\n            if (column[i].columns) {\n                this.getstackedColumns(column[i].columns);\n            }\n            else {\n                innerColumnIndexes.push(column[i]);\n            }\n        }\n        return innerColumnIndexes;\n    };\n    Selection.prototype.applyCtrlHomeEndKey = function (rowIndex, cellIndex) {\n        if (this.isRowType()) {\n            this.selectRow(rowIndex, true);\n            this.addAttribute(this.parent.getCellFromIndex(rowIndex, cellIndex));\n        }\n        if (this.isCellType()) {\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, true);\n        }\n    };\n    Selection.prototype.addRemoveClassesForRow = function (row, isAdd, clearAll) {\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        if (row) {\n            var cells = [].slice.call(row.querySelectorAll('.e-rowcell'));\n            var detailIndentCell = row.querySelector('.e-detailrowcollapse') || row.querySelector('.e-detailrowexpand');\n            var dragdropIndentCell = row.querySelector('.e-rowdragdrop');\n            if (detailIndentCell) {\n                cells.push(detailIndentCell);\n            }\n            if (dragdropIndentCell) {\n                cells.push(dragdropIndentCell);\n            }\n            addRemoveActiveClasses.apply(void 0, [cells, isAdd].concat(args));\n        }\n        this.getRenderer().setSelection(row ? row.getAttribute('data-uid') : null, isAdd, clearAll);\n    };\n    Selection.prototype.isRowType = function () {\n        return this.selectionSettings.mode === 'Row' || this.selectionSettings.mode === 'Both';\n    };\n    Selection.prototype.isCellType = function () {\n        return this.selectionSettings.mode === 'Cell' || this.selectionSettings.mode === 'Both';\n    };\n    Selection.prototype.isSingleSel = function () {\n        return this.selectionSettings.type === 'Single';\n    };\n    Selection.prototype.getRenderer = function () {\n        if (isNullOrUndefined(this.contentRenderer)) {\n            this.contentRenderer = this.factory.getRenderer(RenderType.Content);\n        }\n        return this.contentRenderer;\n    };\n    /**\n     * Gets the collection of selected records.\n     * @return {Object[]}\n     */\n    Selection.prototype.getSelectedRecords = function () {\n        var selectedData = [];\n        if (!this.selectionSettings.persistSelection) {\n            selectedData = this.parent.getRowsObject().filter(function (row) { return row.isSelected; })\n                .map(function (m) { return m.data; });\n        }\n        else {\n            selectedData = this.persistSelectedData;\n        }\n        return selectedData;\n    };\n    /**\n     * Select the column by passing start column index\n     * @param  {number} startIndex\n     */\n    Selection.prototype.selectColumn = function (index) {\n        var gObj = this.parent;\n        if (isNullOrUndefined(gObj.getColumns()[index])) {\n            return;\n        }\n        var column = gObj.getColumnByIndex(index);\n        var selectedCol = gObj.getColumnHeaderByUid(column.uid);\n        var isColSelected = selectedCol.classList.contains('e-columnselection');\n        if ((!gObj.selectionSettings.allowColumnSelection)) {\n            return;\n        }\n        var isMultiColumns = this.selectedColumnsIndexes.length > 1 &&\n            this.selectedColumnsIndexes.indexOf(index) > -1;\n        this.clearColDependency();\n        if (!isColSelected || !this.selectionSettings.enableToggle || isMultiColumns) {\n            var args = {\n                columnIndex: index, headerCell: selectedCol,\n                column: column,\n                cancel: false, target: this.actualTarget,\n                isInteracted: this.isInteracted, previousColumnIndex: this.prevColIndex,\n                isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest\n            };\n            this.onActionBegin(args, events.columnSelecting);\n            if (args.cancel) {\n                this.disableInteracted();\n                return;\n            }\n            if (!(gObj.selectionSettings.enableToggle && index === this.prevColIndex && isColSelected) || isMultiColumns) {\n                this.updateColSelection(selectedCol, index);\n            }\n            var selectedArgs = {\n                columnIndex: index, headerCell: selectedCol,\n                column: column,\n                target: this.actualTarget,\n                isInteracted: this.isInteracted, previousColumnIndex: this.prevColIndex\n            };\n            this.onActionComplete(selectedArgs, events.columnSelected);\n        }\n        this.updateColProps(index);\n    };\n    /**\n     * Select the columns by passing start and end column index\n     * @param  {number} startIndex\n     * @param  {number} endIndex\n     */\n    Selection.prototype.selectColumnsByRange = function (startIndex, endIndex) {\n        var gObj = this.parent;\n        if (isNullOrUndefined(gObj.getColumns()[startIndex])) {\n            return;\n        }\n        var indexes = [];\n        if (gObj.selectionSettings.type === 'Single' || isNullOrUndefined(endIndex)) {\n            indexes[0] = startIndex;\n        }\n        else {\n            var min = startIndex < endIndex;\n            for (var i = startIndex; min ? i <= endIndex : i >= endIndex; min ? i++ : i--) {\n                indexes.push(i);\n            }\n        }\n        this.selectColumns(indexes);\n    };\n    /**\n     * Select the columns by passing column indexes\n     * @param  {number[]} columnIndexes\n     */\n    Selection.prototype.selectColumns = function (columnIndexes) {\n        var gObj = this.parent;\n        var selectedCol = this.getselectedCols();\n        if (gObj.selectionSettings.type === 'Single') {\n            columnIndexes = [columnIndexes[0]];\n        }\n        if (!gObj.selectionSettings.allowColumnSelection) {\n            return;\n        }\n        this.clearColDependency();\n        var selectingArgs = {\n            columnIndex: columnIndexes[0], headerCell: selectedCol,\n            columnIndexes: columnIndexes,\n            column: gObj.getColumnByIndex(columnIndexes[0]),\n            cancel: false, target: this.actualTarget,\n            isInteracted: this.isInteracted, previousColumnIndex: this.prevColIndex,\n            isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest\n        };\n        this.onActionBegin(selectingArgs, events.columnSelecting);\n        if (selectingArgs.cancel) {\n            this.disableInteracted();\n            return;\n        }\n        for (var i = 0, len = columnIndexes.length; i < len; i++) {\n            this.updateColSelection(gObj.getColumnHeaderByUid(gObj.getColumnByIndex(columnIndexes[i]).uid), columnIndexes[i]);\n        }\n        selectedCol = this.getselectedCols();\n        var selectedArgs = {\n            columnIndex: columnIndexes[0], headerCell: selectedCol,\n            columnIndexes: columnIndexes,\n            column: gObj.getColumnByIndex(columnIndexes[0]),\n            target: this.actualTarget,\n            isInteracted: this.isInteracted, previousColumnIndex: this.prevColIndex\n        };\n        this.onActionComplete(selectedArgs, events.columnSelected);\n        this.updateColProps(columnIndexes[0]);\n    };\n    /**\n     * Select the column with existing column by passing column index\n     * @param  {number} startIndex\n     */\n    Selection.prototype.selectColumnWithExisting = function (startIndex) {\n        var gObj = this.parent;\n        if (isNullOrUndefined(gObj.getColumns()[startIndex])) {\n            return;\n        }\n        var frzCols = gObj.getFrozenColumns();\n        var isFreeze = frzCols && startIndex >= frzCols;\n        var newCol = gObj.getColumnHeaderByUid(gObj.getColumnByIndex(startIndex).uid);\n        var selectedCol = this.getselectedCols();\n        if (gObj.selectionSettings.type === 'Single') {\n            this.clearColDependency();\n        }\n        if (!gObj.selectionSettings.allowColumnSelection) {\n            return;\n        }\n        var rows = !isFreeze ? gObj.getDataRows() : gObj.getMovableRows();\n        if (this.selectedColumnsIndexes.indexOf(startIndex) > -1) {\n            this.clearColumnSelection(startIndex);\n        }\n        else {\n            var selectingArgs = {\n                columnIndex: startIndex, headerCell: selectedCol,\n                columnIndexes: this.selectedColumnsIndexes,\n                column: gObj.getColumnByIndex(startIndex),\n                cancel: false, target: this.actualTarget,\n                isInteracted: this.isInteracted, previousColumnIndex: this.prevColIndex,\n                isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest\n            };\n            this.onActionBegin(selectingArgs, events.columnSelecting);\n            if (selectingArgs.cancel) {\n                this.disableInteracted();\n                return;\n            }\n            this.updateColSelection(newCol, startIndex);\n            selectedCol = this.getselectedCols();\n            var selectedArgs = {\n                columnIndex: startIndex, headerCell: selectedCol,\n                column: gObj.getColumnByIndex(startIndex),\n                columnIndexes: this.selectedColumnsIndexes,\n                target: this.actualTarget,\n                isInteracted: this.isInteracted, previousColumnIndex: this.prevColIndex\n            };\n            this.onActionComplete(selectedArgs, events.columnSelected);\n        }\n        this.updateColProps(startIndex);\n    };\n    /**\n     * Clear the column selection\n     */\n    Selection.prototype.clearColumnSelection = function (clearIndex) {\n        if (this.isColumnSelected) {\n            var gObj = this.parent;\n            if (!isNullOrUndefined(clearIndex) && this.selectedColumnsIndexes.indexOf(clearIndex) === -1) {\n                return;\n            }\n            var index = !isNullOrUndefined(clearIndex) ? clearIndex :\n                this.selectedColumnsIndexes[this.selectedColumnsIndexes.length - 1];\n            var col = gObj.getColumnByIndex(index);\n            var selectedCol = void 0;\n            var column = gObj.getColumnByIndex(index);\n            if (col.getFreezeTableName() === 'frozen-right') {\n                selectedCol = gObj.getFrozenRightColumnHeaderByIndex(index);\n            }\n            else if (col.getFreezeTableName() === 'movable') {\n                selectedCol = gObj.getMovableColumnHeaderByIndex(index);\n            }\n            else {\n                selectedCol = gObj.getColumnHeaderByUid(column.uid);\n            }\n            var deselectedArgs = {\n                columnIndex: index, headerCell: selectedCol,\n                columnIndexes: this.selectedColumnsIndexes,\n                column: column,\n                cancel: false, target: this.actualTarget,\n                isInteracted: this.isInteracted\n            };\n            var isCanceled = this.columnDeselect(deselectedArgs, events.columnDeselecting);\n            if (isCanceled) {\n                this.disableInteracted();\n                return;\n            }\n            var selectedHeader = !isNullOrUndefined(clearIndex) ? [selectedCol] :\n                [].slice.call(gObj.getHeaderContent().querySelectorAll('.e-columnselection'));\n            var selectedCells = this.getSelectedColumnCells(clearIndex);\n            for (var i = 0, len = selectedHeader.length; i < len; i++) {\n                addRemoveActiveClasses([selectedHeader[i]], false, 'e-columnselection');\n            }\n            for (var i = 0, len = selectedCells.length; i < len; i++) {\n                addRemoveActiveClasses([selectedCells[i]], false, 'e-columnselection');\n            }\n            if (!isNullOrUndefined(clearIndex)) {\n                this.selectedColumnsIndexes.splice(this.selectedColumnsIndexes.indexOf(clearIndex), 1);\n                this.parent.getColumns()[clearIndex].isSelected = false;\n            }\n            else {\n                this.columnDeselect(deselectedArgs, events.columnDeselected);\n                this.selectedColumnsIndexes = [];\n                this.isColumnSelected = false;\n                this.parent.getColumns().filter(function (col) { return col.isSelected = false; });\n            }\n        }\n    };\n    Selection.prototype.getselectedCols = function () {\n        var gObj = this.parent;\n        var selectedCol;\n        if (this.selectedColumnsIndexes.length > 1) {\n            selectedCol = [];\n            for (var i = 0; i < this.selectedColumnsIndexes.length; i++) {\n                (selectedCol).push(gObj.getColumnHeaderByUid(gObj.getColumnByIndex(this.selectedColumnsIndexes[i]).uid));\n            }\n        }\n        else {\n            selectedCol = gObj.getColumnHeaderByUid(gObj.getColumnByIndex(this.selectedColumnsIndexes[0]).uid);\n        }\n        return selectedCol;\n    };\n    Selection.prototype.getSelectedColumnCells = function (clearIndex) {\n        var gObj = this.parent;\n        var isRowTemplate = !isNullOrUndefined(this.parent.rowTemplate);\n        var rows = isRowTemplate ? gObj.getRows() : gObj.getDataRows();\n        var movableRows;\n        var frRows;\n        if (gObj.isFrozenGrid() && gObj.getContent().querySelector('.e-movablecontent')) {\n            movableRows = isRowTemplate ? gObj.getMovableRows() : gObj.getMovableDataRows();\n            rows = gObj.addMovableRows(rows, movableRows);\n            if (gObj.getFrozenMode() === 'Left-Right') {\n                frRows = isRowTemplate ? gObj.getFrozenRightRows() : gObj.getFrozenRightDataRows();\n                rows = gObj.addMovableRows(rows, frRows);\n            }\n        }\n        var seletedcells = [];\n        var selectionString = !isNullOrUndefined(clearIndex) ? '[aria-colindex=\"' + clearIndex + '\"]' : '.e-columnselection';\n        for (var i = 0, len = rows.length; i < len; i++) {\n            seletedcells = seletedcells.concat([].slice.call(rows[i].querySelectorAll(selectionString)));\n        }\n        return seletedcells;\n    };\n    Selection.prototype.columnDeselect = function (args, event) {\n        if (event === 'columnDeselected') {\n            delete args.cancel;\n        }\n        this.onActionComplete(args, event);\n        return args.cancel;\n    };\n    Selection.prototype.updateColProps = function (startIndex) {\n        this.prevColIndex = startIndex;\n        this.isColumnSelected = this.selectedColumnsIndexes.length && true;\n    };\n    Selection.prototype.clearColDependency = function () {\n        this.clearColumnSelection();\n        this.selectedColumnsIndexes = [];\n    };\n    Selection.prototype.updateColSelection = function (selectedCol, startIndex) {\n        if (isNullOrUndefined(this.parent.getColumns()[startIndex])) {\n            return;\n        }\n        var left = this.parent.getFrozenLeftCount();\n        var movable = this.parent.getMovableColumnsCount();\n        var col = this.parent.getColumnByIndex(startIndex);\n        var isRowTemplate = !isNullOrUndefined(this.parent.rowTemplate);\n        var rows;\n        this.selectedColumnsIndexes.push(startIndex);\n        this.parent.getColumns()[startIndex].isSelected = true;\n        if (col.getFreezeTableName() === 'frozen-right') {\n            startIndex = startIndex - (left + movable);\n            rows = isRowTemplate ? this.parent.getFrozenRightRows() : this.parent.getFrozenRightDataRows();\n        }\n        else if (col.getFreezeTableName() === 'movable') {\n            startIndex = startIndex - left;\n            rows = isRowTemplate ? this.parent.getMovableRows() : this.parent.getMovableDataRows();\n        }\n        else {\n            startIndex = startIndex + this.parent.getIndentCount();\n            rows = isRowTemplate ? this.parent.getRows() : this.parent.getDataRows();\n        }\n        addRemoveActiveClasses([selectedCol], true, 'e-columnselection');\n        for (var j = 0, len = rows.length; j < len; j++) {\n            if (rows[j].classList.contains('e-row')) {\n                if ((rows[j].classList.contains('e-editedrow') || rows[j].classList.contains('e-addedrow')) &&\n                    this.parent.editSettings.mode === 'Normal' && !isNullOrUndefined(rows[j].querySelector('tr').childNodes[startIndex])) {\n                    addRemoveActiveClasses([rows[j].querySelector('tr').childNodes[startIndex]], true, 'e-columnselection');\n                }\n                else if (!isNullOrUndefined(rows[j].childNodes[startIndex])) {\n                    addRemoveActiveClasses([rows[j].childNodes[startIndex]], true, 'e-columnselection');\n                }\n            }\n        }\n    };\n    Selection.prototype.headerSelectionHandler = function (colIndex) {\n        if ((!this.isMultiCtrlRequest && !this.isMultiShiftRequest) || this.isSingleSel()) {\n            this.selectColumn(colIndex);\n        }\n        else if (this.isMultiShiftRequest) {\n            this.selectColumnsByRange(isUndefined(this.prevColIndex) ? colIndex : this.prevColIndex, colIndex);\n        }\n        else {\n            this.selectColumnWithExisting(colIndex);\n        }\n    };\n    Selection.prototype.addEventListener_checkbox = function () {\n        var _this = this;\n        this.parent.on(events.dataReady, this.dataReady, this);\n        this.onDataBoundFunction = this.onDataBound.bind(this);\n        this.parent.addEventListener(events.dataBound, this.onDataBoundFunction);\n        this.parent.on(events.contentReady, this.checkBoxSelectionChanged, this);\n        this.parent.on(events.beforeRefreshOnDataChange, this.initPerisistSelection, this);\n        this.parent.on(events.onEmpty, this.setCheckAllForEmptyGrid, this);\n        this.actionCompleteFunc = this.actionCompleteHandler.bind(this);\n        this.parent.addEventListener(events.actionComplete, this.actionCompleteFunc);\n        this.parent.on(events.click, this.clickHandler, this);\n        this.resizeEndFn = function () {\n            _this.updateAutoFillPosition();\n            _this.drawBorders();\n        };\n        this.resizeEndFn.bind(this);\n        this.parent.addEventListener(events.resizeStop, this.resizeEndFn);\n    };\n    Selection.prototype.removeEventListener_checkbox = function () {\n        this.parent.off(events.dataReady, this.dataReady);\n        this.parent.removeEventListener(events.dataBound, this.onDataBoundFunction);\n        this.parent.removeEventListener(events.actionComplete, this.actionCompleteFunc);\n        this.parent.off(events.onEmpty, this.setCheckAllForEmptyGrid);\n        this.parent.off(events.click, this.clickHandler);\n        this.parent.off(events.beforeRefreshOnDataChange, this.initPerisistSelection);\n    };\n    Selection.prototype.setCheckAllForEmptyGrid = function () {\n        var checkAllBox = this.getCheckAllBox();\n        if (checkAllBox) {\n            this.parent.isCheckBoxSelection = true;\n            var spanEle = checkAllBox.nextElementSibling;\n            removeClass([spanEle], ['e-check', 'e-stop', 'e-uncheck']);\n        }\n    };\n    Selection.prototype.dataReady = function (e) {\n        this.isHeaderCheckboxClicked = false;\n        var isInfinitecroll = this.parent.enableInfiniteScrolling && e.requestType === 'infiniteScroll';\n        if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection && !isInfinitecroll) {\n            this.disableUI = !this.parent.enableImmutableMode;\n            this.clearSelection();\n            this.setCheckAllState();\n            this.disableUI = false;\n        }\n    };\n    Selection.prototype.actionCompleteHandler = function (e) {\n        if (e.requestType === 'save' && this.parent.isPersistSelection) {\n            this.refreshPersistSelection();\n        }\n    };\n    Selection.prototype.selectRowIndex = function (index) {\n        this.parent.isSelectedRowIndexUpdating = true;\n        this.parent.selectedRowIndex = index;\n    };\n    Selection.prototype.disableInteracted = function () {\n        this.isInteracted = false;\n    };\n    Selection.prototype.activeTarget = function () {\n        this.actualTarget = this.isInteracted ? this.actualTarget : null;\n    };\n    return Selection;\n}());\nexport { Selection };\n"]},"metadata":{},"sourceType":"module"}