{"ast":null,"code":"import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { formatUnit } from '@syncfusion/ej2-base';\nimport { columnWidthChanged, preventFrozenScrollRefresh } from '../base/constant';\nimport { Column } from '../models/column';\nimport { parentsUntil, ispercentageWidth, getScrollBarWidth } from '../base/util';\n/**\n * ColumnWidthService\n * @hidden\n */\n\nvar ColumnWidthService =\n/** @class */\nfunction () {\n  function ColumnWidthService(parent) {\n    this.parent = parent;\n  }\n\n  ColumnWidthService.prototype.setWidthToColumns = function () {\n    var i = 0;\n    var indexes = this.parent.getColumnIndexesInView();\n    var wFlag = true;\n    var totalColumnsWidth = 0;\n\n    if (this.parent.allowGrouping) {\n      for (var len = this.parent.groupSettings.columns.length; i < len; i++) {\n        if (this.parent.enableColumnVirtualization && indexes.indexOf(i) === -1) {\n          wFlag = false;\n          continue;\n        }\n\n        this.setColumnWidth(new Column({\n          width: '30px'\n        }), i);\n      }\n    }\n\n    if (this.parent.detailTemplate || this.parent.childGrid) {\n      this.setColumnWidth(new Column({\n        width: '30px'\n      }), i);\n      i++;\n    }\n\n    if (this.parent.isRowDragable() && this.parent.getFrozenMode() !== 'Right') {\n      this.setColumnWidth(new Column({\n        width: '30px'\n      }), i);\n      i++;\n    }\n\n    var columns = this.parent.getColumns();\n\n    for (var j = 0; j < columns.length; j++) {\n      this.setColumnWidth(columns[j], wFlag && this.parent.enableColumnVirtualization ? undefined : j + i);\n    }\n\n    if (this.parent.isRowDragable() && this.parent.getFrozenMode() === 'Right') {\n      this.setColumnWidth(new Column({\n        width: '30px'\n      }), columns.length);\n    }\n\n    totalColumnsWidth = this.getTableWidth(this.parent.getColumns());\n\n    if (this.parent.width !== 'auto' && this.parent.width.toString().indexOf('%') === -1) {\n      this.setMinwidthBycalculation(totalColumnsWidth);\n    }\n  };\n\n  ColumnWidthService.prototype.setMinwidthBycalculation = function (tWidth) {\n    var difference = 0;\n    var collection = this.parent.getColumns().filter(function (a) {\n      return isNullOrUndefined(a.width) || a.width === 'auto';\n    });\n\n    if (collection.length) {\n      if (!isNullOrUndefined(this.parent.width) && this.parent.width !== 'auto' && typeof this.parent.width === 'string' && this.parent.width.indexOf('%') === -1) {\n        difference = (typeof this.parent.width === 'string' ? parseInt(this.parent.width, 10) : this.parent.width) - tWidth;\n      } else {\n        difference = this.parent.element.getBoundingClientRect().width - tWidth;\n      }\n\n      var tmWidth = 0;\n\n      for (var _i = 0, collection_1 = collection; _i < collection_1.length; _i++) {\n        var cols = collection_1[_i];\n        tmWidth += !isNullOrUndefined(cols.minWidth) ? typeof cols.minWidth === 'string' ? parseInt(cols.minWidth, 10) : cols.minWidth : 0;\n      }\n\n      for (var i = 0; i < collection.length; i++) {\n        if (tWidth === 0 && this.parent.allowResizing && this.isWidthUndefined() && i !== collection.length - 1) {\n          this.setUndefinedColumnWidth(collection);\n        }\n\n        if (tWidth !== 0 && difference < tmWidth) {\n          this.setWidth(collection[i].minWidth, this.parent.getColumnIndexByField(collection[i].field));\n        } else if (tWidth !== 0 && difference > tmWidth) {\n          this.setWidth('', this.parent.getColumnIndexByField(collection[i].field) + this.parent.getIndentCount(), true);\n        }\n      }\n    }\n  };\n\n  ColumnWidthService.prototype.setUndefinedColumnWidth = function (collection) {\n    for (var k = 0; k < collection.length; k++) {\n      if (k !== collection.length - 1) {\n        collection[k].width = 200;\n        this.setWidth(200, this.parent.getColumnIndexByField(collection[k].field));\n      }\n    }\n  };\n\n  ColumnWidthService.prototype.setColumnWidth = function (column, index, module) {\n    if (this.parent.getColumns().length < 1) {\n      return;\n    }\n\n    var columnIndex = isNullOrUndefined(index) ? this.parent.getNormalizedColumnIndex(column.uid) : index;\n    var cWidth = this.getWidth(column);\n    var tgridWidth = this.getTableWidth(this.parent.getColumns());\n\n    if (cWidth !== null) {\n      this.setWidth(cWidth, columnIndex);\n\n      if (this.parent.width !== 'auto' && this.parent.width.toString().indexOf('%') === -1) {\n        this.setMinwidthBycalculation(tgridWidth);\n      }\n\n      if (this.parent.allowResizing && module === 'resize' || this.parent.getFrozenColumns() && this.parent.allowResizing) {\n        this.setWidthToTable();\n      }\n\n      this.parent.notify(columnWidthChanged, {\n        index: columnIndex,\n        width: cWidth,\n        column: column,\n        module: module\n      });\n    }\n  };\n\n  ColumnWidthService.prototype.setWidth = function (width, index, clear) {\n    if (this.parent.groupSettings.columns.length > index && ispercentageWidth(this.parent)) {\n      var elementWidth = this.parent.element.offsetWidth;\n      width = (30 / elementWidth * 100).toFixed(1) + '%';\n    }\n\n    var header = this.parent.getHeaderTable();\n    var content = this.parent.getContentTable();\n    var fWidth = formatUnit(width);\n    var headerCol;\n    var frzCols = this.parent.getFrozenColumns();\n    var isDraggable = this.parent.isRowDragable();\n    frzCols = frzCols && isDraggable ? frzCols + 1 : frzCols;\n    var mHdr = this.parent.getHeaderContent().querySelector('.e-movableheader');\n    var mCont = this.parent.getContent().querySelector('.e-movablecontent');\n    var freezeLeft = this.parent.getFrozenLeftColumnsCount();\n    var freezeRight = this.parent.getFrozenRightColumnsCount();\n    var movableCount = this.parent.getMovableColumnsCount();\n    var isColFrozen = freezeLeft !== 0 || freezeRight !== 0;\n\n    if (frzCols && index >= frzCols && mHdr && mHdr.querySelector('colgroup')) {\n      headerCol = mHdr.querySelector('colgroup').children[index - frzCols];\n    } else if (this.parent.enableColumnVirtualization && frzCols && this.parent.contentModule.isXaxis() && mHdr.scrollLeft > 0) {\n      var colGroup = mHdr.querySelector('colgroup');\n      headerCol = colGroup.children[colGroup.children.length - 1 - index];\n    } else if (isColFrozen) {\n      var target = void 0;\n\n      if (freezeLeft && !freezeRight) {\n        index = isDraggable ? index - 1 : index;\n        target = index < freezeLeft ? header : mHdr;\n      } else if (!freezeLeft && freezeRight) {\n        target = index >= movableCount ? header : mHdr;\n      } else if (freezeLeft && freezeRight) {\n        index = isDraggable ? index - 1 : index;\n        var frHdr = this.parent.getFrozenRightHeader();\n        target = index < freezeLeft ? header : index < freezeLeft + movableCount ? mHdr : frHdr;\n      }\n\n      headerCol = this.getColumnLevelFrozenColgroup(index, freezeLeft, movableCount, target);\n\n      if (!headerCol) {\n        return;\n      }\n    } else {\n      headerCol = header.querySelector('colgroup').children[index];\n    }\n\n    if (headerCol && !clear) {\n      headerCol.style.width = fWidth;\n    } else if (headerCol && clear) {\n      headerCol.style.width = '';\n    }\n\n    var contentCol;\n\n    if (frzCols && index >= frzCols) {\n      contentCol = this.parent.getContent().querySelector('.e-movablecontent').querySelector('colgroup').children[index - frzCols];\n    } else if (this.parent.enableColumnVirtualization && frzCols && this.parent.contentModule.isXaxis() && mCont.scrollLeft > 0) {\n      var colGroup = this.parent.getContent().querySelector('.e-movablecontent').querySelector('colgroup');\n      contentCol = colGroup.children[colGroup.children.length - 1 - index];\n    } else if (isColFrozen) {\n      var target = void 0;\n\n      if (freezeLeft && !freezeRight) {\n        target = index < freezeLeft ? content : mCont;\n      }\n\n      if (!freezeLeft && freezeRight) {\n        target = index >= movableCount ? content : mCont;\n      }\n\n      if (freezeLeft && freezeRight) {\n        var frCont = this.parent.getContent().querySelector('.e-frozen-right-content');\n        target = index < freezeLeft ? content : index < freezeLeft + movableCount ? mCont : frCont;\n      }\n\n      contentCol = this.getColumnLevelFrozenColgroup(index, freezeLeft, movableCount, target);\n    } else {\n      contentCol = content.querySelector('colgroup').children[index];\n    }\n\n    if (contentCol && !clear) {\n      contentCol.style.width = fWidth;\n    } else if (contentCol && clear) {\n      contentCol.style.width = '';\n    }\n\n    var edit = this.parent.element.querySelectorAll('.e-table.e-inline-edit');\n    var editTableCol = [];\n\n    for (var i = 0; i < edit.length; i++) {\n      if (parentsUntil(edit[i], 'e-grid').id === this.parent.element.id) {\n        for (var j = 0; j < edit[i].querySelector('colgroup').children.length; j++) {\n          editTableCol.push(edit[i].querySelector('colgroup').children[j]);\n        }\n      }\n    }\n\n    if (edit.length && editTableCol.length) {\n      editTableCol[index].style.width = fWidth;\n    }\n\n    if (this.parent.isFrozenGrid()) {\n      this.refreshFrozenScrollbar();\n    }\n  };\n\n  ColumnWidthService.prototype.getColumnLevelFrozenColgroup = function (index, left, movable, ele) {\n    if (!ele || !ele.querySelector('colgroup')) {\n      return null;\n    }\n\n    var columns = this.parent.getColumns();\n    var isDrag = this.parent.isRowDragable();\n    var frzMode = this.parent.getFrozenMode();\n    var headerCol;\n    var colGroup = [].slice.call(ele.querySelector('colgroup').children);\n\n    if (frzMode === 'Right' && isDrag && index === movable + this.parent.getFrozenRightColumnsCount()) {\n      headerCol = colGroup[colGroup.length - 1];\n    } else if (isDrag && index === -1) {\n      headerCol = colGroup[0];\n    } else if (columns[index].freeze === 'Left') {\n      headerCol = colGroup[isDrag ? index + 1 : index];\n    } else if (columns[index].freeze === 'Right') {\n      headerCol = colGroup[index - (left + movable)];\n    } else {\n      headerCol = colGroup[index - left];\n    }\n\n    return headerCol;\n  };\n\n  ColumnWidthService.prototype.refreshFrozenScrollbar = function () {\n    var args = {\n      cancel: false\n    };\n    this.parent.notify(preventFrozenScrollRefresh, args);\n\n    if (args.cancel) {\n      return;\n    }\n\n    var left = this.parent.getHeaderContent().querySelector('.e-frozenheader').querySelector('table');\n    var movable = this.parent.getContent().querySelector('.e-movablecontent').querySelector('table');\n    var right = this.parent.getHeaderContent().querySelector('.e-frozen-right-header');\n\n    if (movable && left) {\n      var leftScrollbar = this.parent.getContent().querySelector('.e-frozenscrollbar');\n      var movableScrollbar = this.parent.getContent().querySelector('.e-movablescrollbar');\n      var rightScrollbar = this.parent.getContent().querySelector('.e-frozen-right-scrollbar');\n      var movableChild = this.parent.getContent().querySelector('.e-movablechild');\n      var content = this.parent.getContent();\n      var scrollbarWidth = getScrollBarWidth();\n      var frzHdrWidth = left.offsetWidth;\n      var mvblHdrWidth = movable.offsetWidth;\n\n      if (this.parent.enableColumnVirtualization) {\n        var placeHolder = this.parent.getMovableVirtualContent().querySelector('.e-virtualtrack');\n\n        if (placeHolder) {\n          mvblHdrWidth = placeHolder.scrollWidth;\n        }\n      }\n\n      leftScrollbar.style.width = frzHdrWidth.toString() + 'px';\n      var movableWidth = this.parent.getContent().querySelector('.e-movablecontent').offsetWidth;\n\n      if (right) {\n        var rightwidth = right.offsetWidth;\n\n        if (content.firstChild.scrollHeight > content.firstChild.clientHeight) {\n          rightwidth = right.offsetWidth + scrollbarWidth;\n        }\n\n        rightScrollbar.style.width = rightwidth.toString() + 'px';\n        movableWidth = movableWidth - rightwidth;\n      }\n\n      if (this.parent.height !== 'auto' && (this.parent.getFrozenMode() === 'Left' || this.parent.getFrozenColumns()) && content.firstChild.scrollHeight >= content.firstChild.clientHeight) {\n        mvblHdrWidth = mvblHdrWidth + scrollbarWidth;\n      }\n\n      movableScrollbar.style.width = movableWidth.toString() + 'px';\n      movableChild.style.width = mvblHdrWidth.toString() + 'px';\n    }\n  };\n\n  ColumnWidthService.prototype.getSiblingsHeight = function (element) {\n    var previous = this.getHeightFromDirection(element, 'previous');\n    var next = this.getHeightFromDirection(element, 'next');\n    return previous + next;\n  };\n\n  ColumnWidthService.prototype.getHeightFromDirection = function (element, direction) {\n    var sibling = element[direction + 'ElementSibling'];\n    var result = 0;\n    var classList = ['e-gridheader', 'e-gridfooter', 'e-groupdroparea', 'e-gridpager', 'e-toolbar'];\n\n    while (sibling) {\n      if (classList.some(function (value) {\n        return sibling.classList.contains(value);\n      })) {\n        result += sibling.offsetHeight;\n      }\n\n      sibling = sibling[direction + 'ElementSibling'];\n    }\n\n    return result;\n  };\n\n  ColumnWidthService.prototype.isWidthUndefined = function () {\n    var isWidUndefCount = this.parent.getColumns().filter(function (col) {\n      return isNullOrUndefined(col.width) && isNullOrUndefined(col.minWidth);\n    }).length;\n    return this.parent.getColumns().length === isWidUndefCount;\n  };\n\n  ColumnWidthService.prototype.getWidth = function (column) {\n    if (isNullOrUndefined(column.width) && this.parent.allowResizing && isNullOrUndefined(column.minWidth) && !this.isWidthUndefined()) {\n      column.width = 200;\n    }\n\n    if (this.parent.isFrozenGrid() && isNullOrUndefined(column.width) && (column.getFreezeTableName() === 'frozen-left' || column.getFreezeTableName() === 'frozen-right')) {\n      column.width = 200;\n    }\n\n    if (!column.width) {\n      return null;\n    }\n\n    var width = parseInt(column.width.toString(), 10);\n\n    if (column.minWidth && width < parseInt(column.minWidth.toString(), 10)) {\n      return column.minWidth;\n    } else if (column.maxWidth && width > parseInt(column.maxWidth.toString(), 10)) {\n      return column.maxWidth;\n    } else {\n      return column.width;\n    }\n  };\n\n  ColumnWidthService.prototype.getTableWidth = function (columns) {\n    var tWidth = 0;\n\n    for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n      var column = columns_1[_i];\n      var cWidth = this.getWidth(column);\n\n      if (column.width === 'auto') {\n        cWidth = 0;\n      }\n\n      if (column.visible !== false && cWidth !== null) {\n        tWidth += parseInt(cWidth.toString(), 10);\n      }\n    }\n\n    return tWidth;\n  };\n\n  ColumnWidthService.prototype.calcMovableOrFreezeColWidth = function (tableType) {\n    var columns = this.parent.getColumns().slice();\n    var left = this.parent.getFrozenLeftColumnsCount() || this.parent.getFrozenColumns();\n    var movable = this.parent.getMovableColumnsCount();\n    var right = this.parent.getFrozenRightColumnsCount();\n\n    if (tableType === 'movable') {\n      if (right) {\n        columns.splice(left + movable, columns.length);\n      }\n\n      if (left) {\n        columns.splice(0, left);\n      }\n    } else if (tableType === 'freeze-left') {\n      columns.splice(left, columns.length);\n    } else if (tableType === 'freeze-right') {\n      columns.splice(0, left + movable);\n    }\n\n    return formatUnit(this.getTableWidth(columns));\n  };\n\n  ColumnWidthService.prototype.setWidthToFrozenRightTable = function () {\n    var freezeWidth = this.calcMovableOrFreezeColWidth('freeze-right');\n    freezeWidth = this.isAutoResize() ? '100%' : freezeWidth;\n    var headerTbl = this.parent.getHeaderContent().querySelector('.e-frozen-right-header').querySelector('.e-table');\n    var cntTbl = this.parent.getContent().querySelector('.e-frozen-right-content').querySelector('.e-table');\n    headerTbl.style.width = freezeWidth;\n    cntTbl.style.width = freezeWidth;\n  };\n\n  ColumnWidthService.prototype.setWidthToFrozenLeftTable = function () {\n    var freezeWidth = this.calcMovableOrFreezeColWidth('freeze-left');\n    freezeWidth = this.isAutoResize() ? '100%' : freezeWidth;\n    this.parent.getHeaderTable().style.width = freezeWidth;\n    this.parent.getContentTable().style.width = freezeWidth;\n  };\n\n  ColumnWidthService.prototype.setWidthToMovableTable = function () {\n    var movableWidth = '';\n    var isColUndefined = this.parent.getColumns().filter(function (a) {\n      return isNullOrUndefined(a.width);\n    }).length >= 1;\n    var isWidthAuto = this.parent.getColumns().filter(function (a) {\n      return a.width === 'auto';\n    }).length >= 1;\n\n    if (typeof this.parent.width === 'number' && !isColUndefined && !isWidthAuto) {\n      movableWidth = formatUnit(this.parent.width - parseInt(this.calcMovableOrFreezeColWidth('freeze').split('px')[0], 10) - 5);\n    } else if (!isColUndefined && !isWidthAuto) {\n      movableWidth = this.calcMovableOrFreezeColWidth('movable');\n    }\n\n    movableWidth = this.isAutoResize() ? '100%' : movableWidth;\n\n    if (this.parent.getHeaderContent().querySelector('.e-movableheader').firstElementChild) {\n      this.parent.getHeaderContent().querySelector('.e-movableheader').firstElementChild.style.width = movableWidth;\n    }\n\n    this.parent.getContent().querySelector('.e-movablecontent').firstElementChild.style.width = movableWidth;\n  };\n\n  ColumnWidthService.prototype.setWidthToFrozenEditTable = function () {\n    var freezeWidth = this.calcMovableOrFreezeColWidth('freeze');\n    freezeWidth = this.isAutoResize() ? '100%' : freezeWidth;\n    this.parent.element.querySelectorAll('.e-table.e-inline-edit')[0].style.width = freezeWidth;\n  };\n\n  ColumnWidthService.prototype.setWidthToMovableEditTable = function () {\n    var movableWidth = this.calcMovableOrFreezeColWidth('movable');\n    movableWidth = this.isAutoResize() ? '100%' : movableWidth;\n    this.parent.element.querySelectorAll('.e-table.e-inline-edit')[1].style.width = movableWidth;\n  };\n\n  ColumnWidthService.prototype.setWidthToTable = function () {\n    var tWidth = formatUnit(this.getTableWidth(this.parent.getColumns()));\n\n    if (this.parent.isFrozenGrid()) {\n      if (this.parent.getFrozenColumns() || this.parent.getFrozenLeftColumnsCount()) {\n        this.setWidthToFrozenLeftTable();\n      }\n\n      this.setWidthToMovableTable();\n\n      if (this.parent.getFrozenRightColumnsCount()) {\n        this.setWidthToFrozenRightTable();\n      }\n    } else {\n      if (this.parent.detailTemplate || this.parent.childGrid) {\n        this.setColumnWidth(new Column({\n          width: '30px'\n        }));\n      }\n\n      tWidth = this.isAutoResize() ? '100%' : tWidth;\n      this.parent.getHeaderTable().style.width = tWidth;\n      this.parent.getContentTable().style.width = tWidth;\n    }\n\n    var edit = this.parent.element.querySelector('.e-table.e-inline-edit');\n\n    if (edit && this.parent.getFrozenColumns()) {\n      this.setWidthToFrozenEditTable();\n      this.setWidthToMovableEditTable();\n    } else if (edit) {\n      edit.style.width = tWidth;\n    }\n  };\n\n  ColumnWidthService.prototype.isAutoResize = function () {\n    return this.parent.allowResizing && this.parent.resizeSettings.mode === 'Auto';\n  };\n\n  return ColumnWidthService;\n}();\n\nexport { ColumnWidthService };","map":{"version":3,"sources":["C:/Users/appsk/Documents/Projects/PredictiveMaintenance/React PDM/env/frontend/node_modules/@syncfusion/ej2-grids/src/grid/services/width-controller.js"],"names":["isNullOrUndefined","formatUnit","columnWidthChanged","preventFrozenScrollRefresh","Column","parentsUntil","ispercentageWidth","getScrollBarWidth","ColumnWidthService","parent","prototype","setWidthToColumns","i","indexes","getColumnIndexesInView","wFlag","totalColumnsWidth","allowGrouping","len","groupSettings","columns","length","enableColumnVirtualization","indexOf","setColumnWidth","width","detailTemplate","childGrid","isRowDragable","getFrozenMode","getColumns","j","undefined","getTableWidth","toString","setMinwidthBycalculation","tWidth","difference","collection","filter","a","parseInt","element","getBoundingClientRect","tmWidth","_i","collection_1","cols","minWidth","allowResizing","isWidthUndefined","setUndefinedColumnWidth","setWidth","getColumnIndexByField","field","getIndentCount","k","column","index","module","columnIndex","getNormalizedColumnIndex","uid","cWidth","getWidth","tgridWidth","getFrozenColumns","setWidthToTable","notify","clear","elementWidth","offsetWidth","toFixed","header","getHeaderTable","content","getContentTable","fWidth","headerCol","frzCols","isDraggable","mHdr","getHeaderContent","querySelector","mCont","getContent","freezeLeft","getFrozenLeftColumnsCount","freezeRight","getFrozenRightColumnsCount","movableCount","getMovableColumnsCount","isColFrozen","children","contentModule","isXaxis","scrollLeft","colGroup","target","frHdr","getFrozenRightHeader","getColumnLevelFrozenColgroup","style","contentCol","frCont","edit","querySelectorAll","editTableCol","id","push","isFrozenGrid","refreshFrozenScrollbar","left","movable","ele","isDrag","frzMode","slice","call","freeze","args","cancel","right","leftScrollbar","movableScrollbar","rightScrollbar","movableChild","scrollbarWidth","frzHdrWidth","mvblHdrWidth","placeHolder","getMovableVirtualContent","scrollWidth","movableWidth","rightwidth","firstChild","scrollHeight","clientHeight","height","getSiblingsHeight","previous","getHeightFromDirection","next","direction","sibling","result","classList","some","value","contains","offsetHeight","isWidUndefCount","col","getFreezeTableName","maxWidth","columns_1","visible","calcMovableOrFreezeColWidth","tableType","splice","setWidthToFrozenRightTable","freezeWidth","isAutoResize","headerTbl","cntTbl","setWidthToFrozenLeftTable","setWidthToMovableTable","isColUndefined","isWidthAuto","split","firstElementChild","setWidthToFrozenEditTable","setWidthToMovableEditTable","resizeSettings","mode"],"mappings":"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","sourcesContent":["import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { formatUnit } from '@syncfusion/ej2-base';\nimport { columnWidthChanged, preventFrozenScrollRefresh } from '../base/constant';\nimport { Column } from '../models/column';\nimport { parentsUntil, ispercentageWidth, getScrollBarWidth } from '../base/util';\n/**\n * ColumnWidthService\n * @hidden\n */\nvar ColumnWidthService = /** @class */ (function () {\n    function ColumnWidthService(parent) {\n        this.parent = parent;\n    }\n    ColumnWidthService.prototype.setWidthToColumns = function () {\n        var i = 0;\n        var indexes = this.parent.getColumnIndexesInView();\n        var wFlag = true;\n        var totalColumnsWidth = 0;\n        if (this.parent.allowGrouping) {\n            for (var len = this.parent.groupSettings.columns.length; i < len; i++) {\n                if (this.parent.enableColumnVirtualization && indexes.indexOf(i) === -1) {\n                    wFlag = false;\n                    continue;\n                }\n                this.setColumnWidth(new Column({ width: '30px' }), i);\n            }\n        }\n        if (this.parent.detailTemplate || this.parent.childGrid) {\n            this.setColumnWidth(new Column({ width: '30px' }), i);\n            i++;\n        }\n        if (this.parent.isRowDragable() && this.parent.getFrozenMode() !== 'Right') {\n            this.setColumnWidth(new Column({ width: '30px' }), i);\n            i++;\n        }\n        var columns = this.parent.getColumns();\n        for (var j = 0; j < columns.length; j++) {\n            this.setColumnWidth(columns[j], wFlag && this.parent.enableColumnVirtualization ? undefined : j + i);\n        }\n        if (this.parent.isRowDragable() && this.parent.getFrozenMode() === 'Right') {\n            this.setColumnWidth(new Column({ width: '30px' }), columns.length);\n        }\n        totalColumnsWidth = this.getTableWidth(this.parent.getColumns());\n        if (this.parent.width !== 'auto' && this.parent.width.toString().indexOf('%') === -1) {\n            this.setMinwidthBycalculation(totalColumnsWidth);\n        }\n    };\n    ColumnWidthService.prototype.setMinwidthBycalculation = function (tWidth) {\n        var difference = 0;\n        var collection = this.parent.getColumns().filter(function (a) {\n            return isNullOrUndefined(a.width) || a.width === 'auto';\n        });\n        if (collection.length) {\n            if (!isNullOrUndefined(this.parent.width) && this.parent.width !== 'auto' &&\n                typeof (this.parent.width) === 'string' && this.parent.width.indexOf('%') === -1) {\n                difference = (typeof this.parent.width === 'string' ? parseInt(this.parent.width, 10) : this.parent.width) - tWidth;\n            }\n            else {\n                difference = this.parent.element.getBoundingClientRect().width - tWidth;\n            }\n            var tmWidth = 0;\n            for (var _i = 0, collection_1 = collection; _i < collection_1.length; _i++) {\n                var cols = collection_1[_i];\n                tmWidth += !isNullOrUndefined(cols.minWidth) ?\n                    ((typeof cols.minWidth === 'string' ? parseInt(cols.minWidth, 10) : cols.minWidth)) : 0;\n            }\n            for (var i = 0; i < collection.length; i++) {\n                if (tWidth === 0 && this.parent.allowResizing && this.isWidthUndefined() && (i !== collection.length - 1)) {\n                    this.setUndefinedColumnWidth(collection);\n                }\n                if (tWidth !== 0 && difference < tmWidth) {\n                    this.setWidth(collection[i].minWidth, this.parent.getColumnIndexByField(collection[i].field));\n                }\n                else if (tWidth !== 0 && difference > tmWidth) {\n                    this.setWidth('', this.parent.getColumnIndexByField(collection[i].field) + this.parent.getIndentCount(), true);\n                }\n            }\n        }\n    };\n    ColumnWidthService.prototype.setUndefinedColumnWidth = function (collection) {\n        for (var k = 0; k < collection.length; k++) {\n            if (k !== collection.length - 1) {\n                collection[k].width = 200;\n                this.setWidth(200, this.parent.getColumnIndexByField(collection[k].field));\n            }\n        }\n    };\n    ColumnWidthService.prototype.setColumnWidth = function (column, index, module) {\n        if (this.parent.getColumns().length < 1) {\n            return;\n        }\n        var columnIndex = isNullOrUndefined(index) ? this.parent.getNormalizedColumnIndex(column.uid) : index;\n        var cWidth = this.getWidth(column);\n        var tgridWidth = this.getTableWidth(this.parent.getColumns());\n        if (cWidth !== null) {\n            this.setWidth(cWidth, columnIndex);\n            if (this.parent.width !== 'auto' && this.parent.width.toString().indexOf('%') === -1) {\n                this.setMinwidthBycalculation(tgridWidth);\n            }\n            if ((this.parent.allowResizing && module === 'resize') || (this.parent.getFrozenColumns() && this.parent.allowResizing)) {\n                this.setWidthToTable();\n            }\n            this.parent.notify(columnWidthChanged, { index: columnIndex, width: cWidth, column: column, module: module });\n        }\n    };\n    ColumnWidthService.prototype.setWidth = function (width, index, clear) {\n        if (this.parent.groupSettings.columns.length > index && ispercentageWidth(this.parent)) {\n            var elementWidth = this.parent.element.offsetWidth;\n            width = (30 / elementWidth * 100).toFixed(1) + '%';\n        }\n        var header = this.parent.getHeaderTable();\n        var content = this.parent.getContentTable();\n        var fWidth = formatUnit(width);\n        var headerCol;\n        var frzCols = this.parent.getFrozenColumns();\n        var isDraggable = this.parent.isRowDragable();\n        frzCols = frzCols && isDraggable ? frzCols + 1 : frzCols;\n        var mHdr = this.parent.getHeaderContent().querySelector('.e-movableheader');\n        var mCont = this.parent.getContent().querySelector('.e-movablecontent');\n        var freezeLeft = this.parent.getFrozenLeftColumnsCount();\n        var freezeRight = this.parent.getFrozenRightColumnsCount();\n        var movableCount = this.parent.getMovableColumnsCount();\n        var isColFrozen = freezeLeft !== 0 || freezeRight !== 0;\n        if (frzCols && index >= frzCols && mHdr && mHdr.querySelector('colgroup')) {\n            headerCol = mHdr.querySelector('colgroup').children[index - frzCols];\n        }\n        else if (this.parent.enableColumnVirtualization && frzCols && this.parent.contentModule.isXaxis()\n            && mHdr.scrollLeft > 0) {\n            var colGroup = mHdr.querySelector('colgroup');\n            headerCol = colGroup.children[(colGroup.children.length - 1) - index];\n        }\n        else if (isColFrozen) {\n            var target = void 0;\n            if (freezeLeft && !freezeRight) {\n                index = isDraggable ? index - 1 : index;\n                target = index < freezeLeft ? header : mHdr;\n            }\n            else if (!freezeLeft && freezeRight) {\n                target = index >= movableCount ? header : mHdr;\n            }\n            else if (freezeLeft && freezeRight) {\n                index = isDraggable ? index - 1 : index;\n                var frHdr = this.parent.getFrozenRightHeader();\n                target = index < freezeLeft ? header : index < (freezeLeft + movableCount) ? mHdr : frHdr;\n            }\n            headerCol = this.getColumnLevelFrozenColgroup(index, freezeLeft, movableCount, target);\n            if (!headerCol) {\n                return;\n            }\n        }\n        else {\n            headerCol = header.querySelector('colgroup').children[index];\n        }\n        if (headerCol && !clear) {\n            headerCol.style.width = fWidth;\n        }\n        else if (headerCol && clear) {\n            headerCol.style.width = '';\n        }\n        var contentCol;\n        if (frzCols && index >= frzCols) {\n            contentCol = this.parent.getContent().querySelector('.e-movablecontent')\n                .querySelector('colgroup').children[index - frzCols];\n        }\n        else if (this.parent.enableColumnVirtualization && frzCols && this.parent.contentModule.isXaxis()\n            && mCont.scrollLeft > 0) {\n            var colGroup = this.parent.getContent().querySelector('.e-movablecontent')\n                .querySelector('colgroup');\n            contentCol = colGroup.children[(colGroup.children.length - 1) - index];\n        }\n        else if (isColFrozen) {\n            var target = void 0;\n            if (freezeLeft && !freezeRight) {\n                target = index < freezeLeft ? content : mCont;\n            }\n            if (!freezeLeft && freezeRight) {\n                target = index >= movableCount ? content : mCont;\n            }\n            if (freezeLeft && freezeRight) {\n                var frCont = this.parent.getContent().querySelector('.e-frozen-right-content');\n                target = index < freezeLeft ? content : index < (freezeLeft + movableCount) ? mCont : frCont;\n            }\n            contentCol = this.getColumnLevelFrozenColgroup(index, freezeLeft, movableCount, target);\n        }\n        else {\n            contentCol = content.querySelector('colgroup').children[index];\n        }\n        if (contentCol && !clear) {\n            contentCol.style.width = fWidth;\n        }\n        else if (contentCol && clear) {\n            contentCol.style.width = '';\n        }\n        var edit = this.parent.element.querySelectorAll('.e-table.e-inline-edit');\n        var editTableCol = [];\n        for (var i = 0; i < edit.length; i++) {\n            if (parentsUntil(edit[i], 'e-grid').id === this.parent.element.id) {\n                for (var j = 0; j < edit[i].querySelector('colgroup').children.length; j++) {\n                    editTableCol.push(edit[i].querySelector('colgroup').children[j]);\n                }\n            }\n        }\n        if (edit.length && editTableCol.length) {\n            editTableCol[index].style.width = fWidth;\n        }\n        if (this.parent.isFrozenGrid()) {\n            this.refreshFrozenScrollbar();\n        }\n    };\n    ColumnWidthService.prototype.getColumnLevelFrozenColgroup = function (index, left, movable, ele) {\n        if (!ele || !ele.querySelector('colgroup')) {\n            return null;\n        }\n        var columns = this.parent.getColumns();\n        var isDrag = this.parent.isRowDragable();\n        var frzMode = this.parent.getFrozenMode();\n        var headerCol;\n        var colGroup = [].slice.call(ele.querySelector('colgroup').children);\n        if (frzMode === 'Right' && isDrag && index === (movable + this.parent.getFrozenRightColumnsCount())) {\n            headerCol = colGroup[colGroup.length - 1];\n        }\n        else if (isDrag && index === -1) {\n            headerCol = colGroup[0];\n        }\n        else if (columns[index].freeze === 'Left') {\n            headerCol = colGroup[isDrag ? (index + 1) : index];\n        }\n        else if (columns[index].freeze === 'Right') {\n            headerCol = colGroup[index - (left + movable)];\n        }\n        else {\n            headerCol = colGroup[index - left];\n        }\n        return headerCol;\n    };\n    ColumnWidthService.prototype.refreshFrozenScrollbar = function () {\n        var args = { cancel: false };\n        this.parent.notify(preventFrozenScrollRefresh, args);\n        if (args.cancel) {\n            return;\n        }\n        var left = this.parent.getHeaderContent().querySelector('.e-frozenheader').querySelector('table');\n        var movable = this.parent.getContent().querySelector('.e-movablecontent').querySelector('table');\n        var right = this.parent.getHeaderContent().querySelector('.e-frozen-right-header');\n        if (movable && left) {\n            var leftScrollbar = this.parent.getContent().querySelector('.e-frozenscrollbar');\n            var movableScrollbar = this.parent.getContent().querySelector('.e-movablescrollbar');\n            var rightScrollbar = this.parent.getContent().querySelector('.e-frozen-right-scrollbar');\n            var movableChild = this.parent.getContent().querySelector('.e-movablechild');\n            var content = this.parent.getContent();\n            var scrollbarWidth = getScrollBarWidth();\n            var frzHdrWidth = left.offsetWidth;\n            var mvblHdrWidth = movable.offsetWidth;\n            if (this.parent.enableColumnVirtualization) {\n                var placeHolder = this.parent.getMovableVirtualContent().querySelector('.e-virtualtrack');\n                if (placeHolder) {\n                    mvblHdrWidth = placeHolder.scrollWidth;\n                }\n            }\n            leftScrollbar.style.width = frzHdrWidth.toString() + 'px';\n            var movableWidth = this.parent.getContent().querySelector('.e-movablecontent').offsetWidth;\n            if (right) {\n                var rightwidth = right.offsetWidth;\n                if (content.firstChild.scrollHeight > content.firstChild.clientHeight) {\n                    rightwidth = right.offsetWidth + scrollbarWidth;\n                }\n                rightScrollbar.style.width = rightwidth.toString() + 'px';\n                movableWidth = movableWidth - rightwidth;\n            }\n            if (this.parent.height !== 'auto' && (this.parent.getFrozenMode() === 'Left' || this.parent.getFrozenColumns())\n                && content.firstChild.scrollHeight >= content.firstChild.clientHeight) {\n                mvblHdrWidth = mvblHdrWidth + scrollbarWidth;\n            }\n            movableScrollbar.style.width = movableWidth.toString() + 'px';\n            movableChild.style.width = mvblHdrWidth.toString() + 'px';\n        }\n    };\n    ColumnWidthService.prototype.getSiblingsHeight = function (element) {\n        var previous = this.getHeightFromDirection(element, 'previous');\n        var next = this.getHeightFromDirection(element, 'next');\n        return previous + next;\n    };\n    ColumnWidthService.prototype.getHeightFromDirection = function (element, direction) {\n        var sibling = element[direction + 'ElementSibling'];\n        var result = 0;\n        var classList = ['e-gridheader', 'e-gridfooter', 'e-groupdroparea', 'e-gridpager', 'e-toolbar'];\n        while (sibling) {\n            if (classList.some(function (value) { return sibling.classList.contains(value); })) {\n                result += sibling.offsetHeight;\n            }\n            sibling = sibling[direction + 'ElementSibling'];\n        }\n        return result;\n    };\n    ColumnWidthService.prototype.isWidthUndefined = function () {\n        var isWidUndefCount = this.parent.getColumns().filter(function (col) {\n            return isNullOrUndefined(col.width) && isNullOrUndefined(col.minWidth);\n        }).length;\n        return (this.parent.getColumns().length === isWidUndefCount);\n    };\n    ColumnWidthService.prototype.getWidth = function (column) {\n        if (isNullOrUndefined(column.width) && this.parent.allowResizing\n            && isNullOrUndefined(column.minWidth) && !this.isWidthUndefined()) {\n            column.width = 200;\n        }\n        if (this.parent.isFrozenGrid() && isNullOrUndefined(column.width) &&\n            (column.getFreezeTableName() === 'frozen-left' || column.getFreezeTableName() === 'frozen-right')) {\n            column.width = 200;\n        }\n        if (!column.width) {\n            return null;\n        }\n        var width = parseInt(column.width.toString(), 10);\n        if (column.minWidth && width < parseInt(column.minWidth.toString(), 10)) {\n            return column.minWidth;\n        }\n        else if ((column.maxWidth && width > parseInt(column.maxWidth.toString(), 10))) {\n            return column.maxWidth;\n        }\n        else {\n            return column.width;\n        }\n    };\n    ColumnWidthService.prototype.getTableWidth = function (columns) {\n        var tWidth = 0;\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            var cWidth = this.getWidth(column);\n            if (column.width === 'auto') {\n                cWidth = 0;\n            }\n            if (column.visible !== false && cWidth !== null) {\n                tWidth += parseInt(cWidth.toString(), 10);\n            }\n        }\n        return tWidth;\n    };\n    ColumnWidthService.prototype.calcMovableOrFreezeColWidth = function (tableType) {\n        var columns = this.parent.getColumns().slice();\n        var left = this.parent.getFrozenLeftColumnsCount() || this.parent.getFrozenColumns();\n        var movable = this.parent.getMovableColumnsCount();\n        var right = this.parent.getFrozenRightColumnsCount();\n        if (tableType === 'movable') {\n            if (right) {\n                columns.splice(left + movable, columns.length);\n            }\n            if (left) {\n                columns.splice(0, left);\n            }\n        }\n        else if (tableType === 'freeze-left') {\n            columns.splice(left, columns.length);\n        }\n        else if (tableType === 'freeze-right') {\n            columns.splice(0, left + movable);\n        }\n        return formatUnit(this.getTableWidth(columns));\n    };\n    ColumnWidthService.prototype.setWidthToFrozenRightTable = function () {\n        var freezeWidth = this.calcMovableOrFreezeColWidth('freeze-right');\n        freezeWidth = this.isAutoResize() ? '100%' : freezeWidth;\n        var headerTbl = this.parent.getHeaderContent().querySelector('.e-frozen-right-header').querySelector('.e-table');\n        var cntTbl = this.parent.getContent().querySelector('.e-frozen-right-content').querySelector('.e-table');\n        headerTbl.style.width = freezeWidth;\n        cntTbl.style.width = freezeWidth;\n    };\n    ColumnWidthService.prototype.setWidthToFrozenLeftTable = function () {\n        var freezeWidth = this.calcMovableOrFreezeColWidth('freeze-left');\n        freezeWidth = this.isAutoResize() ? '100%' : freezeWidth;\n        this.parent.getHeaderTable().style.width = freezeWidth;\n        this.parent.getContentTable().style.width = freezeWidth;\n    };\n    ColumnWidthService.prototype.setWidthToMovableTable = function () {\n        var movableWidth = '';\n        var isColUndefined = this.parent.getColumns().filter(function (a) { return isNullOrUndefined(a.width); }).length >= 1;\n        var isWidthAuto = this.parent.getColumns().filter(function (a) { return (a.width === 'auto'); }).length >= 1;\n        if (typeof this.parent.width === 'number' && !isColUndefined && !isWidthAuto) {\n            movableWidth = formatUnit(this.parent.width - parseInt(this.calcMovableOrFreezeColWidth('freeze').split('px')[0], 10) - 5);\n        }\n        else if (!isColUndefined && !isWidthAuto) {\n            movableWidth = this.calcMovableOrFreezeColWidth('movable');\n        }\n        movableWidth = this.isAutoResize() ? '100%' : movableWidth;\n        if (this.parent.getHeaderContent().querySelector('.e-movableheader').firstElementChild) {\n            this.parent.getHeaderContent().querySelector('.e-movableheader').firstElementChild.style.width\n                = movableWidth;\n        }\n        this.parent.getContent().querySelector('.e-movablecontent').firstElementChild.style.width =\n            movableWidth;\n    };\n    ColumnWidthService.prototype.setWidthToFrozenEditTable = function () {\n        var freezeWidth = this.calcMovableOrFreezeColWidth('freeze');\n        freezeWidth = this.isAutoResize() ? '100%' : freezeWidth;\n        this.parent.element.querySelectorAll('.e-table.e-inline-edit')[0].style.width = freezeWidth;\n    };\n    ColumnWidthService.prototype.setWidthToMovableEditTable = function () {\n        var movableWidth = this.calcMovableOrFreezeColWidth('movable');\n        movableWidth = this.isAutoResize() ? '100%' : movableWidth;\n        this.parent.element.querySelectorAll('.e-table.e-inline-edit')[1].style.width = movableWidth;\n    };\n    ColumnWidthService.prototype.setWidthToTable = function () {\n        var tWidth = formatUnit(this.getTableWidth(this.parent.getColumns()));\n        if (this.parent.isFrozenGrid()) {\n            if (this.parent.getFrozenColumns() || this.parent.getFrozenLeftColumnsCount()) {\n                this.setWidthToFrozenLeftTable();\n            }\n            this.setWidthToMovableTable();\n            if (this.parent.getFrozenRightColumnsCount()) {\n                this.setWidthToFrozenRightTable();\n            }\n        }\n        else {\n            if (this.parent.detailTemplate || this.parent.childGrid) {\n                this.setColumnWidth(new Column({ width: '30px' }));\n            }\n            tWidth = this.isAutoResize() ? '100%' : tWidth;\n            this.parent.getHeaderTable().style.width = tWidth;\n            this.parent.getContentTable().style.width = tWidth;\n        }\n        var edit = this.parent.element.querySelector('.e-table.e-inline-edit');\n        if (edit && this.parent.getFrozenColumns()) {\n            this.setWidthToFrozenEditTable();\n            this.setWidthToMovableEditTable();\n        }\n        else if (edit) {\n            edit.style.width = tWidth;\n        }\n    };\n    ColumnWidthService.prototype.isAutoResize = function () {\n        return this.parent.allowResizing && this.parent.resizeSettings.mode === 'Auto';\n    };\n    return ColumnWidthService;\n}());\nexport { ColumnWidthService };\n"]},"metadata":{},"sourceType":"module"}