{"ast":null,"code":"import { isNullOrUndefined, extend, isBlazor } from '@syncfusion/ej2-base';\nimport { Query, DataManager, Predicate, Deferred, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { setFormatter, isGroupAdaptive, getColumnByForeignKeyValue, refreshFilteredColsUid } from '../base/util';\nimport * as events from '../base/constant';\nimport { ValueFormatter } from '../services/value-formatter';\nimport { CheckBoxFilterBase } from '../common/checkbox-filter-base';\n/**\n * Grid data module is used to generate query and data source.\n * @hidden\n */\n\nvar Data =\n/** @class */\nfunction () {\n  /**\n   * Constructor for data module.\n   * @hidden\n   */\n  function Data(parent, serviceLocator) {\n    this.dataState = {\n      isPending: false,\n      resolver: null,\n      group: []\n    };\n    this.foreignKeyDataState = {\n      isPending: false,\n      resolver: null\n    };\n    this.parent = parent;\n    this.serviceLocator = serviceLocator;\n    this.initDataManager();\n\n    if (this.parent.isDestroyed || this.getModuleName() === 'foreignKey') {\n      return;\n    }\n\n    this.parent.on(events.rowsAdded, this.addRows, this);\n    this.parent.on(events.rowPositionChanged, this.reorderRows, this);\n    this.parent.on(events.rowsRemoved, this.removeRows, this);\n    this.parent.on(events.dataSourceModified, this.initDataManager, this);\n    this.parent.on(events.destroy, this.destroy, this);\n    this.parent.on(events.updateData, this.crudActions, this);\n    this.parent.on(events.addDeleteAction, this.getData, this);\n    this.parent.on(events.autoCol, this.refreshFilteredCols, this);\n    this.parent.on(events.columnsPrepared, this.refreshFilteredCols, this);\n  }\n\n  Data.prototype.reorderRows = function (e) {\n    this.dataManager.dataSource.json.splice(e.toIndex, 0, this.dataManager.dataSource.json.splice(e.fromIndex, 1)[0]);\n  };\n\n  Data.prototype.getModuleName = function () {\n    return 'data';\n  };\n  /**\n   * The function used to initialize dataManager and external query\n   * @return {void}\n   */\n\n\n  Data.prototype.initDataManager = function () {\n    var gObj = this.parent;\n    this.dataManager = gObj.dataSource instanceof DataManager ? gObj.dataSource : isNullOrUndefined(gObj.dataSource) ? new DataManager() : new DataManager(gObj.dataSource);\n\n    if (gObj.isAngular && !(gObj.query instanceof Query)) {\n      gObj.setProperties({\n        query: new Query()\n      }, true);\n    } else {\n      this.isQueryInvokedFromData = true;\n      gObj.query = gObj.query instanceof Query ? gObj.query : new Query();\n    }\n  };\n  /**\n   * The function is used to generate updated Query from Grid model.\n   * @return {Query}\n   * @hidden\n   */\n\n\n  Data.prototype.generateQuery = function (skipPage) {\n    var gObj = this.parent;\n    var query = gObj.getQuery().clone();\n\n    if (this.parent.columnQueryMode === 'ExcludeHidden') {\n      query.select(this.parent.getColumns().filter(function (column) {\n        return !(column.isPrimaryKey !== true && column.visible === false || column.field === undefined);\n      }).map(function (column) {\n        return column.field;\n      }));\n    } else if (this.parent.columnQueryMode === 'Schema') {\n      var selectQueryFields = [];\n      var columns = this.parent.columns;\n\n      for (var i = 0; i < columns.length; i++) {\n        selectQueryFields.push(columns[i].field);\n      }\n\n      query.select(selectQueryFields);\n    }\n\n    this.filterQuery(query);\n    this.searchQuery(query);\n    this.aggregateQuery(query);\n    this.sortQuery(query);\n\n    if (isGroupAdaptive(this.parent)) {\n      this.virtualGroupPageQuery(query);\n    } else {\n      this.pageQuery(query, skipPage);\n    }\n\n    this.groupQuery(query);\n    return query;\n  };\n  /** @hidden */\n\n\n  Data.prototype.aggregateQuery = function (query, isForeign) {\n    var rows = this.parent.aggregates;\n\n    for (var i = 0; i < rows.length; i++) {\n      var row = rows[i];\n\n      for (var j = 0; j < row.columns.length; j++) {\n        var cols = row.columns[j];\n        var types = cols.type instanceof Array ? cols.type : [cols.type];\n\n        for (var k = 0; k < types.length; k++) {\n          query.aggregate(types[k].toLowerCase(), cols.field);\n        }\n      }\n    }\n\n    return query;\n  };\n\n  Data.prototype.virtualGroupPageQuery = function (query) {\n    var gObj = this.parent;\n    var fName = 'fn';\n\n    if (query.queries.length) {\n      for (var i = 0; i < query.queries.length; i++) {\n        if (query.queries[i][fName] === 'onPage') {\n          query.queries.splice(i, 1);\n        }\n      }\n    }\n\n    return query;\n  };\n\n  Data.prototype.pageQuery = function (query, skipPage) {\n    var gObj = this.parent;\n    var fName = 'fn';\n\n    if ((gObj.allowPaging || gObj.enableVirtualization || gObj.enableInfiniteScrolling) && skipPage !== true) {\n      gObj.pageSettings.currentPage = Math.max(1, gObj.pageSettings.currentPage);\n\n      if (gObj.pageSettings.pageCount <= 0) {\n        gObj.pageSettings.pageCount = 8;\n      }\n\n      if (gObj.pageSettings.pageSize <= 0) {\n        gObj.pageSettings.pageSize = 12;\n      }\n\n      if (query.queries.length) {\n        for (var i = 0; i < query.queries.length; i++) {\n          if (query.queries[i][fName] === 'onPage') {\n            query.queries.splice(i, 1);\n          }\n        }\n      }\n\n      if (!isNullOrUndefined(gObj.infiniteScrollModule) && gObj.enableInfiniteScrolling) {\n        this.parent.notify(events.infinitePageQuery, query);\n      } else {\n        query.page(gObj.pageSettings.currentPage, gObj.pageSettings.pageSize);\n      }\n    }\n\n    return query;\n  };\n\n  Data.prototype.groupQuery = function (query) {\n    var gObj = this.parent;\n\n    if (gObj.allowGrouping && gObj.groupSettings.columns.length) {\n      if (this.parent.groupSettings.enableLazyLoading) {\n        query.lazyLoad.push({\n          key: 'isLazyLoad',\n          value: this.parent.groupSettings.enableLazyLoading\n        });\n      }\n\n      var columns = gObj.groupSettings.columns;\n\n      for (var i = 0, len = columns.length; i < len; i++) {\n        var column = this.getColumnByField(columns[i]);\n\n        if (!column) {\n          this.parent.log('initial_action', {\n            moduleName: 'group',\n            columnName: columns[i]\n          });\n        }\n\n        var isGrpFmt = column.enableGroupByFormat;\n        var format = column.format;\n\n        if (isGrpFmt) {\n          query.group(columns[i], this.formatGroupColumn.bind(this), format);\n        } else {\n          query.group(columns[i], null);\n        }\n      }\n    }\n\n    return query;\n  };\n\n  Data.prototype.sortQuery = function (query) {\n    var gObj = this.parent;\n\n    if ((gObj.allowSorting || gObj.allowGrouping) && gObj.sortSettings.columns.length) {\n      var columns = gObj.sortSettings.columns;\n      var sortGrp = [];\n\n      for (var i = columns.length - 1; i > -1; i--) {\n        var col = this.getColumnByField(columns[i].field);\n\n        if (col) {\n          col.setSortDirection(columns[i].direction);\n        } else {\n          this.parent.log('initial_action', {\n            moduleName: 'sort',\n            columnName: columns[i].field\n          });\n          return query;\n        }\n\n        var fn = columns[i].direction;\n\n        if (col.sortComparer) {\n          this.parent.log('grid_sort_comparer');\n          fn = !this.isRemote() ? col.sortComparer.bind(col) : columns[i].direction;\n        }\n\n        if (gObj.groupSettings.columns.indexOf(columns[i].field) === -1) {\n          if (col.isForeignColumn() || col.sortComparer) {\n            query.sortByForeignKey(col.field, fn, undefined, columns[i].direction.toLowerCase());\n          } else {\n            query.sortBy(col.field, fn);\n          }\n        } else {\n          sortGrp.push({\n            direction: fn,\n            field: col.field\n          });\n        }\n      }\n\n      for (var i = 0, len = sortGrp.length; i < len; i++) {\n        if (typeof sortGrp[i].direction === 'string') {\n          query.sortBy(sortGrp[i].field, sortGrp[i].direction);\n        } else {\n          var col = this.getColumnByField(sortGrp[i].field);\n          query.sortByForeignKey(sortGrp[i].field, sortGrp[i].direction, undefined, col.getSortDirection().toLowerCase());\n        }\n      }\n    }\n\n    return query;\n  };\n\n  Data.prototype.searchQuery = function (query, fcolumn, isForeignKey) {\n    var sSettings = this.parent.searchSettings;\n    var fields = sSettings.fields.length ? sSettings.fields : this.getSearchColumnFieldNames();\n    var predicateList = [];\n    var needForeignKeySearch = false;\n\n    if (this.parent.searchSettings.key.length) {\n      needForeignKeySearch = this.parent.getForeignKeyColumns().some(function (col) {\n        return fields.indexOf(col.field) > -1;\n      });\n      var adaptor = !isForeignKey ? this.dataManager.adaptor : fcolumn.dataSource.adaptor;\n\n      if (needForeignKeySearch || adaptor.getModuleName && adaptor.getModuleName() === 'ODataV4Adaptor') {\n        fields = isForeignKey ? [fcolumn.foreignKeyValue] : fields;\n\n        for (var i = 0; i < fields.length; i++) {\n          var column = isForeignKey ? fcolumn : this.getColumnByField(fields[i]);\n\n          if (column.isForeignColumn() && !isForeignKey) {\n            predicateList = this.fGeneratePredicate(column, predicateList);\n          } else {\n            predicateList.push(new Predicate(fields[i], sSettings.operator, sSettings.key, sSettings.ignoreCase, sSettings.ignoreAccent));\n          }\n        }\n\n        var predList = Predicate.or(predicateList);\n        predList.key = sSettings.key;\n        query.where(predList);\n      } else {\n        query.search(sSettings.key, fields, sSettings.operator, sSettings.ignoreCase, sSettings.ignoreAccent);\n      }\n    }\n\n    return query;\n  };\n\n  Data.prototype.filterQuery = function (query, column, skipFoerign) {\n    var gObj = this.parent;\n    var predicateList = [];\n    var actualFilter = [];\n    var foreignColumn = this.parent.getForeignKeyColumns();\n\n    if (gObj.allowFiltering && gObj.filterSettings.columns.length) {\n      var columns = column ? column : gObj.filterSettings.columns;\n      var colType = {};\n\n      for (var _i = 0, _a = gObj.getColumns(); _i < _a.length; _i++) {\n        var col = _a[_i];\n        colType[col.field] = col.filter.type ? col.filter.type : gObj.filterSettings.type;\n      }\n\n      var foreignCols = [];\n      var defaultFltrCols = [];\n\n      for (var _b = 0, columns_1 = columns; _b < columns_1.length; _b++) {\n        var col = columns_1[_b];\n        var gridColumn = gObj.getColumnByField(col.field);\n\n        if (isNullOrUndefined(col.type) && gridColumn && (gridColumn.type === 'date' || gridColumn.type === 'datetime')) {\n          col.type = gObj.getColumnByField(col.field).type;\n        }\n\n        if (col.isForeignKey) {\n          foreignCols.push(col);\n        } else {\n          defaultFltrCols.push(col);\n        }\n      }\n\n      if (defaultFltrCols.length) {\n        if (gObj.filterSettings.type === 'FilterBar' || gObj.filterSettings.type === 'Menu') {\n          for (var i = 0, len = defaultFltrCols.length; i < len; i++) {\n            defaultFltrCols[i].uid = defaultFltrCols[i].uid || this.parent.grabColumnByFieldFromAllCols(defaultFltrCols[i].field).uid;\n          }\n        }\n\n        var excelPredicate = CheckBoxFilterBase.getPredicate(defaultFltrCols);\n\n        for (var _c = 0, _d = Object.keys(excelPredicate); _c < _d.length; _c++) {\n          var prop = _d[_c];\n          predicateList.push(excelPredicate[prop]);\n        }\n      }\n\n      if (foreignCols.length) {\n        for (var _e = 0, foreignCols_1 = foreignCols; _e < foreignCols_1.length; _e++) {\n          var col = foreignCols_1[_e];\n          col.uid = col.uid || this.parent.grabColumnByFieldFromAllCols(col.field).uid;\n          var column_1 = this.parent.grabColumnByUidFromAllCols(col.uid);\n\n          if (!column_1) {\n            this.parent.log('initial_action', {\n              moduleName: 'filter',\n              columnName: col.field\n            });\n          }\n\n          if (column_1.isForeignColumn() && getColumnByForeignKeyValue(col.field, foreignColumn) && !skipFoerign) {\n            actualFilter.push(col);\n            predicateList = this.fGeneratePredicate(column_1, predicateList);\n          } else {\n            var excelPredicate = CheckBoxFilterBase.getPredicate(columns);\n\n            for (var _f = 0, _g = Object.keys(excelPredicate); _f < _g.length; _f++) {\n              var prop = _g[_f];\n              predicateList.push(excelPredicate[prop]);\n            }\n          }\n        }\n      }\n\n      if (predicateList.length) {\n        query.where(Predicate.and(predicateList));\n      } else {\n        this.parent.notify(events.showEmptyGrid, {});\n      }\n    }\n\n    return query;\n  };\n\n  Data.prototype.fGeneratePredicate = function (col, predicateList) {\n    var fPredicate = {};\n\n    if (col) {\n      this.parent.notify(events.generateQuery, {\n        predicate: fPredicate,\n        column: col\n      });\n\n      if (fPredicate.predicate.predicates.length) {\n        predicateList.push(fPredicate.predicate);\n      }\n    }\n\n    return predicateList;\n  };\n  /**\n   * The function is used to get dataManager promise by executing given Query.\n   * @param  {Query} query - Defines the query which will execute along with data processing.\n   * @return {Promise<Object>}\n   * @hidden\n   */\n\n\n  Data.prototype.getData = function (args, query) {\n    var _this = this;\n\n    if (args === void 0) {\n      args = {\n        requestType: ''\n      };\n    }\n\n    var key = this.getKey(args.foreignKeyData && Object.keys(args.foreignKeyData).length ? args.foreignKeyData : this.parent.getPrimaryKeyFieldNames());\n    this.parent.log('datasource_syntax_mismatch', {\n      dataState: this.parent\n    });\n\n    if (this.parent.dataSource && 'result' in this.parent.dataSource) {\n      var def = this.eventPromise(args, query, key);\n      return def.promise;\n    } else {\n      var crud = void 0;\n\n      switch (args.requestType) {\n        case 'delete':\n          query = query ? query : this.generateQuery();\n          var len = Object.keys(args.data).length;\n\n          if (len === 1) {\n            crud = this.dataManager.remove(key, args.data[0], query.fromTable, query);\n          } else {\n            var changes = {\n              addedRecords: [],\n              deletedRecords: [],\n              changedRecords: []\n            };\n            changes.deletedRecords = args.data;\n            crud = this.dataManager.saveChanges(changes, key, query.fromTable, query.requiresCount());\n          }\n\n          break;\n\n        case 'save':\n          if (isBlazor() && this.parent.isServerRendered) {\n            this.parent.notify('offset', args);\n          }\n\n          query = query ? query : this.generateQuery();\n          args.index = isNullOrUndefined(args.index) ? 0 : args.index;\n          crud = this.dataManager.insert(args.data, query.fromTable, query, args.index);\n          break;\n      }\n\n      var promise = 'promise';\n      args[promise] = crud;\n\n      if (crud && !Array.isArray(crud) && !crud.hasOwnProperty('deletedRecords')) {\n        if (isBlazor()) {\n          return crud.then(function (result) {\n            return _this.insert(query, args);\n          }).catch(function (e) {\n            return null;\n          });\n        } else {\n          return crud.then(function (result) {\n            return _this.insert(query, args);\n          });\n        }\n      } else {\n        return this.insert(query, args);\n      }\n    }\n  };\n\n  Data.prototype.insert = function (query, args) {\n    if (args.requestType === 'save') {\n      this.parent.notify(events.recordAdded, args);\n    }\n\n    return this.executeQuery(query);\n  };\n\n  Data.prototype.executeQuery = function (query) {\n    var _this = this;\n\n    if (this.dataManager.ready) {\n      var deferred_1 = new Deferred();\n      var ready = this.dataManager.ready;\n      ready.then(function (e) {\n        _this.dataManager.executeQuery(query).then(function (result) {\n          deferred_1.resolve(result);\n        });\n      }).catch(function (e) {\n        deferred_1.reject(e);\n      });\n      return deferred_1.promise;\n    } else {\n      return this.dataManager.executeQuery(query);\n    }\n  };\n\n  Data.prototype.formatGroupColumn = function (value, field) {\n    var gObj = this.parent;\n    var serviceLocator = this.serviceLocator;\n    var column = this.getColumnByField(field);\n    var date = value;\n\n    if (!column.type) {\n      column.type = date.getDay ? date.getHours() > 0 || date.getMinutes() > 0 || date.getSeconds() > 0 || date.getMilliseconds() > 0 ? 'datetime' : 'date' : typeof value;\n    }\n\n    if (isNullOrUndefined(column.getFormatter())) {\n      setFormatter(serviceLocator, column);\n    }\n\n    var formatVal = ValueFormatter.prototype.toView(value, column.getFormatter());\n    return formatVal;\n  };\n\n  Data.prototype.crudActions = function (args) {\n    var query = this.generateQuery();\n    var promise = null;\n    var pr = 'promise';\n    var key = this.getKey(args.foreignKeyData && Object.keys(args.foreignKeyData).length ? args.foreignKeyData : this.parent.getPrimaryKeyFieldNames());\n\n    if (this.parent.dataSource && 'result' in this.parent.dataSource) {\n      this.eventPromise(args, query, key);\n    }\n\n    switch (args.requestType) {\n      case 'save':\n        if (isBlazor() && this.parent.isServerRendered) {\n          this.parent.notify('offset', args);\n        }\n\n        promise = this.dataManager.update(key, args.data, query.fromTable, query, args.previousData);\n        break;\n    }\n\n    args[pr] = promise ? promise : args[pr];\n    this.parent.notify(events.crudAction, args);\n  };\n  /** @hidden */\n\n\n  Data.prototype.saveChanges = function (changes, key, original, query) {\n    if (query === void 0) {\n      query = this.generateQuery();\n    }\n\n    query.requiresCount();\n\n    if ('result' in this.parent.dataSource) {\n      var state = void 0;\n      state = this.getStateEventArgument(query);\n      var deff = new Deferred();\n      var args = {\n        requestType: 'batchsave',\n        changes: changes,\n        key: key,\n        query: query,\n        endEdit: deff.resolve\n      };\n      this.setState({\n        isPending: true,\n        resolver: deff.resolve\n      });\n      this.parent.trigger(events.dataSourceChanged, args);\n      return deff.promise;\n    } else {\n      var changedRecords = 'changedRecords';\n      var addedRecords = 'addedRecords';\n      var data = 'data';\n\n      if (isBlazor() && this.parent.isServerRendered) {\n        for (var i = 0; i < changes[changedRecords].length; i++) {\n          var args = {\n            data: changes[changedRecords][i]\n          };\n          this.parent.notify('offset', args);\n          changes[changedRecords][i] = args[data];\n        }\n\n        for (var i = 0; i < changes[addedRecords].length; i++) {\n          var args = {\n            data: changes[addedRecords][i]\n          };\n          this.parent.notify('offset', args);\n          changes[addedRecords][i] = args[data];\n        }\n      }\n\n      var promise = this.dataManager.saveChanges(changes, key, query.fromTable, query, original);\n      return promise;\n    }\n  };\n\n  Data.prototype.getKey = function (keys) {\n    if (keys && keys.length) {\n      return keys[0];\n    }\n\n    return undefined;\n  };\n  /** @hidden */\n\n\n  Data.prototype.isRemote = function () {\n    return this.dataManager.dataSource.offline !== true && this.dataManager.dataSource.url !== undefined && this.dataManager.dataSource.url !== '';\n  };\n\n  Data.prototype.addRows = function (e) {\n    for (var i = e.records.length; i > 0; i--) {\n      this.dataManager.dataSource.json.splice(e.toIndex, 0, e.records[i - 1]);\n    }\n  };\n\n  Data.prototype.removeRows = function (e) {\n    var json = this.dataManager.dataSource.json;\n    this.dataManager.dataSource.json = json.filter(function (value, index) {\n      return e.records.indexOf(value) === -1;\n    });\n  };\n\n  Data.prototype.getColumnByField = function (field) {\n    var col;\n    return this.parent.columnModel.some(function (column) {\n      col = column;\n      return column.field === field;\n    }) && col;\n  };\n\n  Data.prototype.destroy = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off(events.rowsAdded, this.addRows);\n    this.parent.off(events.rowsRemoved, this.removeRows);\n    this.parent.off(events.dataSourceModified, this.initDataManager);\n    this.parent.off(events.destroy, this.destroy);\n    this.parent.off(events.updateData, this.crudActions);\n    this.parent.off(events.addDeleteAction, this.getData);\n    this.parent.off(events.autoCol, this.refreshFilteredCols);\n    this.parent.off(events.columnsPrepared, this.refreshFilteredCols);\n  };\n\n  Data.prototype.getState = function () {\n    return this.dataState;\n  };\n\n  Data.prototype.setState = function (state) {\n    return this.dataState = state;\n  };\n\n  Data.prototype.getForeignKeyDataState = function () {\n    return this.foreignKeyDataState;\n  };\n\n  Data.prototype.setForeignKeyDataState = function (state) {\n    this.foreignKeyDataState = state;\n  };\n\n  Data.prototype.getStateEventArgument = function (query) {\n    var adaptr = new UrlAdaptor();\n    var dm = new DataManager({\n      url: '',\n      adaptor: new UrlAdaptor()\n    });\n    var state = adaptr.processQuery(dm, query);\n    var data = JSON.parse(state.data);\n    return extend(data, state.pvtData);\n  };\n\n  Data.prototype.eventPromise = function (args, query, key) {\n    var _this = this;\n\n    var state;\n    var dataArgs = args;\n    state = this.getStateEventArgument(query);\n    var def = new Deferred();\n    var deff = new Deferred();\n\n    if (args.requestType !== undefined && this.dataState.isDataChanged !== false) {\n      state.action = args;\n\n      if (args.requestType === 'save' || args.requestType === 'delete') {\n        var editArgs_1 = args;\n        editArgs_1.key = key;\n        var promise = 'promise';\n        editArgs_1[promise] = deff.promise;\n        editArgs_1.state = state;\n        this.setState({\n          isPending: true,\n          resolver: deff.resolve\n        });\n        dataArgs.endEdit = deff.resolve;\n        dataArgs.cancelEdit = deff.reject;\n        this.parent.trigger(events.dataSourceChanged, editArgs_1);\n        deff.promise.then(function (e) {\n          _this.setState({\n            isPending: true,\n            resolver: def.resolve,\n            group: state.group,\n            aggregates: state.aggregates\n          });\n\n          if (editArgs_1.requestType === 'save') {\n            _this.parent.notify(events.recordAdded, editArgs_1);\n          }\n\n          _this.parent.trigger(events.dataStateChange, state);\n        }).catch(function () {\n          return void 0;\n        });\n      } else {\n        this.setState({\n          isPending: true,\n          resolver: def.resolve,\n          group: state.group,\n          aggregates: state.aggregates\n        });\n        this.parent.trigger(events.dataStateChange, state);\n      }\n    } else {\n      this.setState({});\n      def.resolve(this.parent.dataSource);\n    }\n\n    return def;\n  };\n  /**\n   * Gets the columns where searching needs to be performed from the Grid.\n   * @return {string[]}\n   */\n\n\n  Data.prototype.getSearchColumnFieldNames = function () {\n    var colFieldNames = [];\n    var columns = this.parent.getColumns();\n\n    for (var _i = 0, columns_2 = columns; _i < columns_2.length; _i++) {\n      var col = columns_2[_i];\n\n      if (col.allowSearching && !isNullOrUndefined(col.field)) {\n        colFieldNames.push(col.field);\n      }\n    }\n\n    return colFieldNames;\n  };\n\n  Data.prototype.refreshFilteredCols = function () {\n    if (this.parent.allowFiltering && this.parent.filterSettings.columns.length) {\n      refreshFilteredColsUid(this.parent, this.parent.filterSettings.columns);\n    }\n  };\n\n  return Data;\n}();\n\nexport { Data };","map":{"version":3,"sources":["C:/Users/appsk/Documents/Projects/PredictiveMaintenance/React PDM/env/frontend/node_modules/@syncfusion/ej2-grids/src/grid/actions/data.js"],"names":["isNullOrUndefined","extend","isBlazor","Query","DataManager","Predicate","Deferred","UrlAdaptor","setFormatter","isGroupAdaptive","getColumnByForeignKeyValue","refreshFilteredColsUid","events","ValueFormatter","CheckBoxFilterBase","Data","parent","serviceLocator","dataState","isPending","resolver","group","foreignKeyDataState","initDataManager","isDestroyed","getModuleName","on","rowsAdded","addRows","rowPositionChanged","reorderRows","rowsRemoved","removeRows","dataSourceModified","destroy","updateData","crudActions","addDeleteAction","getData","autoCol","refreshFilteredCols","columnsPrepared","prototype","e","dataManager","dataSource","json","splice","toIndex","fromIndex","gObj","isAngular","query","setProperties","isQueryInvokedFromData","generateQuery","skipPage","getQuery","clone","columnQueryMode","select","getColumns","filter","column","isPrimaryKey","visible","field","undefined","map","selectQueryFields","columns","i","length","push","filterQuery","searchQuery","aggregateQuery","sortQuery","virtualGroupPageQuery","pageQuery","groupQuery","isForeign","rows","aggregates","row","j","cols","types","type","Array","k","aggregate","toLowerCase","fName","queries","allowPaging","enableVirtualization","enableInfiniteScrolling","pageSettings","currentPage","Math","max","pageCount","pageSize","infiniteScrollModule","notify","infinitePageQuery","page","allowGrouping","groupSettings","enableLazyLoading","lazyLoad","key","value","len","getColumnByField","log","moduleName","columnName","isGrpFmt","enableGroupByFormat","format","formatGroupColumn","bind","allowSorting","sortSettings","sortGrp","col","setSortDirection","direction","fn","sortComparer","isRemote","indexOf","isForeignColumn","sortByForeignKey","sortBy","getSortDirection","fcolumn","isForeignKey","sSettings","searchSettings","fields","getSearchColumnFieldNames","predicateList","needForeignKeySearch","getForeignKeyColumns","some","adaptor","foreignKeyValue","fGeneratePredicate","operator","ignoreCase","ignoreAccent","predList","or","where","search","skipFoerign","actualFilter","foreignColumn","allowFiltering","filterSettings","colType","_i","_a","foreignCols","defaultFltrCols","_b","columns_1","gridColumn","uid","grabColumnByFieldFromAllCols","excelPredicate","getPredicate","_c","_d","Object","keys","prop","_e","foreignCols_1","column_1","grabColumnByUidFromAllCols","_f","_g","and","showEmptyGrid","fPredicate","predicate","predicates","args","_this","requestType","getKey","foreignKeyData","getPrimaryKeyFieldNames","def","eventPromise","promise","crud","data","remove","fromTable","changes","addedRecords","deletedRecords","changedRecords","saveChanges","requiresCount","isServerRendered","index","insert","isArray","hasOwnProperty","then","result","catch","recordAdded","executeQuery","ready","deferred_1","resolve","reject","date","getDay","getHours","getMinutes","getSeconds","getMilliseconds","getFormatter","formatVal","toView","pr","update","previousData","crudAction","original","state","getStateEventArgument","deff","endEdit","setState","trigger","dataSourceChanged","offline","url","records","columnModel","off","getState","getForeignKeyDataState","setForeignKeyDataState","adaptr","dm","processQuery","JSON","parse","pvtData","dataArgs","isDataChanged","action","editArgs_1","cancelEdit","dataStateChange","colFieldNames","columns_2","allowSearching"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,MAA5B,EAAoCC,QAApC,QAAoD,sBAApD;AACA,SAASC,KAAT,EAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,EAAkDC,UAAlD,QAAoE,sBAApE;AACA,SAASC,YAAT,EAAuBC,eAAvB,EAAwCC,0BAAxC,EAAoEC,sBAApE,QAAkG,cAAlG;AACA,OAAO,KAAKC,MAAZ,MAAwB,kBAAxB;AACA,SAASC,cAAT,QAA+B,6BAA/B;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AACA;AACA;AACA;AACA;;AACA,IAAIC,IAAI;AAAG;AAAe,YAAY;AAClC;AACJ;AACA;AACA;AACI,WAASA,IAAT,CAAcC,MAAd,EAAsBC,cAAtB,EAAsC;AAClC,SAAKC,SAAL,GAAiB;AAAEC,MAAAA,SAAS,EAAE,KAAb;AAAoBC,MAAAA,QAAQ,EAAE,IAA9B;AAAoCC,MAAAA,KAAK,EAAE;AAA3C,KAAjB;AACA,SAAKC,mBAAL,GAA2B;AAAEH,MAAAA,SAAS,EAAE,KAAb;AAAoBC,MAAAA,QAAQ,EAAE;AAA9B,KAA3B;AACA,SAAKJ,MAAL,GAAcA,MAAd;AACA,SAAKC,cAAL,GAAsBA,cAAtB;AACA,SAAKM,eAAL;;AACA,QAAI,KAAKP,MAAL,CAAYQ,WAAZ,IAA2B,KAAKC,aAAL,OAAyB,YAAxD,EAAsE;AAClE;AACH;;AACD,SAAKT,MAAL,CAAYU,EAAZ,CAAed,MAAM,CAACe,SAAtB,EAAiC,KAAKC,OAAtC,EAA+C,IAA/C;AACA,SAAKZ,MAAL,CAAYU,EAAZ,CAAed,MAAM,CAACiB,kBAAtB,EAA0C,KAAKC,WAA/C,EAA4D,IAA5D;AACA,SAAKd,MAAL,CAAYU,EAAZ,CAAed,MAAM,CAACmB,WAAtB,EAAmC,KAAKC,UAAxC,EAAoD,IAApD;AACA,SAAKhB,MAAL,CAAYU,EAAZ,CAAed,MAAM,CAACqB,kBAAtB,EAA0C,KAAKV,eAA/C,EAAgE,IAAhE;AACA,SAAKP,MAAL,CAAYU,EAAZ,CAAed,MAAM,CAACsB,OAAtB,EAA+B,KAAKA,OAApC,EAA6C,IAA7C;AACA,SAAKlB,MAAL,CAAYU,EAAZ,CAAed,MAAM,CAACuB,UAAtB,EAAkC,KAAKC,WAAvC,EAAoD,IAApD;AACA,SAAKpB,MAAL,CAAYU,EAAZ,CAAed,MAAM,CAACyB,eAAtB,EAAuC,KAAKC,OAA5C,EAAqD,IAArD;AACA,SAAKtB,MAAL,CAAYU,EAAZ,CAAed,MAAM,CAAC2B,OAAtB,EAA+B,KAAKC,mBAApC,EAAyD,IAAzD;AACA,SAAKxB,MAAL,CAAYU,EAAZ,CAAed,MAAM,CAAC6B,eAAtB,EAAuC,KAAKD,mBAA5C,EAAiE,IAAjE;AACH;;AACDzB,EAAAA,IAAI,CAAC2B,SAAL,CAAeZ,WAAf,GAA6B,UAAUa,CAAV,EAAa;AACtC,SAAKC,WAAL,CAAiBC,UAAjB,CAA4BC,IAA5B,CAAiCC,MAAjC,CAAwCJ,CAAC,CAACK,OAA1C,EAAmD,CAAnD,EAAsD,KAAKJ,WAAL,CAAiBC,UAAjB,CAA4BC,IAA5B,CAAiCC,MAAjC,CAAwCJ,CAAC,CAACM,SAA1C,EAAqD,CAArD,EAAwD,CAAxD,CAAtD;AACH,GAFD;;AAGAlC,EAAAA,IAAI,CAAC2B,SAAL,CAAejB,aAAf,GAA+B,YAAY;AACvC,WAAO,MAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACIV,EAAAA,IAAI,CAAC2B,SAAL,CAAenB,eAAf,GAAiC,YAAY;AACzC,QAAI2B,IAAI,GAAG,KAAKlC,MAAhB;AACA,SAAK4B,WAAL,GAAmBM,IAAI,CAACL,UAAL,YAA2BzC,WAA3B,GAAyC8C,IAAI,CAACL,UAA9C,GACd7C,iBAAiB,CAACkD,IAAI,CAACL,UAAN,CAAjB,GAAqC,IAAIzC,WAAJ,EAArC,GAAyD,IAAIA,WAAJ,CAAgB8C,IAAI,CAACL,UAArB,CAD9D;;AAEA,QAAIK,IAAI,CAACC,SAAL,IAAkB,EAAED,IAAI,CAACE,KAAL,YAAsBjD,KAAxB,CAAtB,EAAsD;AAClD+C,MAAAA,IAAI,CAACG,aAAL,CAAmB;AAAED,QAAAA,KAAK,EAAE,IAAIjD,KAAJ;AAAT,OAAnB,EAA2C,IAA3C;AACH,KAFD,MAGK;AACD,WAAKmD,sBAAL,GAA8B,IAA9B;AACAJ,MAAAA,IAAI,CAACE,KAAL,GAAaF,IAAI,CAACE,KAAL,YAAsBjD,KAAtB,GAA8B+C,IAAI,CAACE,KAAnC,GAA2C,IAAIjD,KAAJ,EAAxD;AACH;AACJ,GAXD;AAYA;AACJ;AACA;AACA;AACA;;;AACIY,EAAAA,IAAI,CAAC2B,SAAL,CAAea,aAAf,GAA+B,UAAUC,QAAV,EAAoB;AAC/C,QAAIN,IAAI,GAAG,KAAKlC,MAAhB;AACA,QAAIoC,KAAK,GAAGF,IAAI,CAACO,QAAL,GAAgBC,KAAhB,EAAZ;;AACA,QAAI,KAAK1C,MAAL,CAAY2C,eAAZ,KAAgC,eAApC,EAAqD;AACjDP,MAAAA,KAAK,CAACQ,MAAN,CAAa,KAAK5C,MAAL,CAAY6C,UAAZ,GAAyBC,MAAzB,CAAgC,UAAUC,MAAV,EAAkB;AAAE,eAAO,EAAEA,MAAM,CAACC,YAAP,KAAwB,IAAxB,IAAgCD,MAAM,CAACE,OAAP,KAAmB,KAAnD,IAA4DF,MAAM,CAACG,KAAP,KAAiBC,SAA/E,CAAP;AAAmG,OAAvJ,EAAyJC,GAAzJ,CAA6J,UAAUL,MAAV,EAAkB;AAAE,eAAOA,MAAM,CAACG,KAAd;AAAsB,OAAvM,CAAb;AACH,KAFD,MAGK,IAAI,KAAKlD,MAAL,CAAY2C,eAAZ,KAAgC,QAApC,EAA8C;AAC/C,UAAIU,iBAAiB,GAAG,EAAxB;AACA,UAAIC,OAAO,GAAG,KAAKtD,MAAL,CAAYsD,OAA1B;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,OAAO,CAACE,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrCF,QAAAA,iBAAiB,CAACI,IAAlB,CAAuBH,OAAO,CAACC,CAAD,CAAP,CAAWL,KAAlC;AACH;;AACDd,MAAAA,KAAK,CAACQ,MAAN,CAAaS,iBAAb;AACH;;AACD,SAAKK,WAAL,CAAiBtB,KAAjB;AACA,SAAKuB,WAAL,CAAiBvB,KAAjB;AACA,SAAKwB,cAAL,CAAoBxB,KAApB;AACA,SAAKyB,SAAL,CAAezB,KAAf;;AACA,QAAI3C,eAAe,CAAC,KAAKO,MAAN,CAAnB,EAAkC;AAC9B,WAAK8D,qBAAL,CAA2B1B,KAA3B;AACH,KAFD,MAGK;AACD,WAAK2B,SAAL,CAAe3B,KAAf,EAAsBI,QAAtB;AACH;;AACD,SAAKwB,UAAL,CAAgB5B,KAAhB;AACA,WAAOA,KAAP;AACH,GA1BD;AA2BA;;;AACArC,EAAAA,IAAI,CAAC2B,SAAL,CAAekC,cAAf,GAAgC,UAAUxB,KAAV,EAAiB6B,SAAjB,EAA4B;AACxD,QAAIC,IAAI,GAAG,KAAKlE,MAAL,CAAYmE,UAAvB;;AACA,SAAK,IAAIZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGW,IAAI,CAACV,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,UAAIa,GAAG,GAAGF,IAAI,CAACX,CAAD,CAAd;;AACA,WAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAAG,CAACd,OAAJ,CAAYE,MAAhC,EAAwCa,CAAC,EAAzC,EAA6C;AACzC,YAAIC,IAAI,GAAGF,GAAG,CAACd,OAAJ,CAAYe,CAAZ,CAAX;AACA,YAAIE,KAAK,GAAGD,IAAI,CAACE,IAAL,YAAqBC,KAArB,GAA6BH,IAAI,CAACE,IAAlC,GAAyC,CAACF,IAAI,CAACE,IAAN,CAArD;;AACA,aAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACf,MAA1B,EAAkCkB,CAAC,EAAnC,EAAuC;AACnCtC,UAAAA,KAAK,CAACuC,SAAN,CAAgBJ,KAAK,CAACG,CAAD,CAAL,CAASE,WAAT,EAAhB,EAAwCN,IAAI,CAACpB,KAA7C;AACH;AACJ;AACJ;;AACD,WAAOd,KAAP;AACH,GAbD;;AAcArC,EAAAA,IAAI,CAAC2B,SAAL,CAAeoC,qBAAf,GAAuC,UAAU1B,KAAV,EAAiB;AACpD,QAAIF,IAAI,GAAG,KAAKlC,MAAhB;AACA,QAAI6E,KAAK,GAAG,IAAZ;;AACA,QAAIzC,KAAK,CAAC0C,OAAN,CAActB,MAAlB,EAA0B;AACtB,WAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnB,KAAK,CAAC0C,OAAN,CAActB,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3C,YAAInB,KAAK,CAAC0C,OAAN,CAAcvB,CAAd,EAAiBsB,KAAjB,MAA4B,QAAhC,EAA0C;AACtCzC,UAAAA,KAAK,CAAC0C,OAAN,CAAc/C,MAAd,CAAqBwB,CAArB,EAAwB,CAAxB;AACH;AACJ;AACJ;;AACD,WAAOnB,KAAP;AACH,GAXD;;AAYArC,EAAAA,IAAI,CAAC2B,SAAL,CAAeqC,SAAf,GAA2B,UAAU3B,KAAV,EAAiBI,QAAjB,EAA2B;AAClD,QAAIN,IAAI,GAAG,KAAKlC,MAAhB;AACA,QAAI6E,KAAK,GAAG,IAAZ;;AACA,QAAI,CAAC3C,IAAI,CAAC6C,WAAL,IAAoB7C,IAAI,CAAC8C,oBAAzB,IAAiD9C,IAAI,CAAC+C,uBAAvD,KAAmFzC,QAAQ,KAAK,IAApG,EAA0G;AACtGN,MAAAA,IAAI,CAACgD,YAAL,CAAkBC,WAAlB,GAAgCC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYnD,IAAI,CAACgD,YAAL,CAAkBC,WAA9B,CAAhC;;AACA,UAAIjD,IAAI,CAACgD,YAAL,CAAkBI,SAAlB,IAA+B,CAAnC,EAAsC;AAClCpD,QAAAA,IAAI,CAACgD,YAAL,CAAkBI,SAAlB,GAA8B,CAA9B;AACH;;AACD,UAAIpD,IAAI,CAACgD,YAAL,CAAkBK,QAAlB,IAA8B,CAAlC,EAAqC;AACjCrD,QAAAA,IAAI,CAACgD,YAAL,CAAkBK,QAAlB,GAA6B,EAA7B;AACH;;AACD,UAAInD,KAAK,CAAC0C,OAAN,CAActB,MAAlB,EAA0B;AACtB,aAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnB,KAAK,CAAC0C,OAAN,CAActB,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3C,cAAInB,KAAK,CAAC0C,OAAN,CAAcvB,CAAd,EAAiBsB,KAAjB,MAA4B,QAAhC,EAA0C;AACtCzC,YAAAA,KAAK,CAAC0C,OAAN,CAAc/C,MAAd,CAAqBwB,CAArB,EAAwB,CAAxB;AACH;AACJ;AACJ;;AACD,UAAI,CAACvE,iBAAiB,CAACkD,IAAI,CAACsD,oBAAN,CAAlB,IAAiDtD,IAAI,CAAC+C,uBAA1D,EAAmF;AAC/E,aAAKjF,MAAL,CAAYyF,MAAZ,CAAmB7F,MAAM,CAAC8F,iBAA1B,EAA6CtD,KAA7C;AACH,OAFD,MAGK;AACDA,QAAAA,KAAK,CAACuD,IAAN,CAAWzD,IAAI,CAACgD,YAAL,CAAkBC,WAA7B,EAA0CjD,IAAI,CAACgD,YAAL,CAAkBK,QAA5D;AACH;AACJ;;AACD,WAAOnD,KAAP;AACH,GA1BD;;AA2BArC,EAAAA,IAAI,CAAC2B,SAAL,CAAesC,UAAf,GAA4B,UAAU5B,KAAV,EAAiB;AACzC,QAAIF,IAAI,GAAG,KAAKlC,MAAhB;;AACA,QAAIkC,IAAI,CAAC0D,aAAL,IAAsB1D,IAAI,CAAC2D,aAAL,CAAmBvC,OAAnB,CAA2BE,MAArD,EAA6D;AACzD,UAAI,KAAKxD,MAAL,CAAY6F,aAAZ,CAA0BC,iBAA9B,EAAiD;AAC7C1D,QAAAA,KAAK,CAAC2D,QAAN,CAAetC,IAAf,CAAoB;AAAEuC,UAAAA,GAAG,EAAE,YAAP;AAAqBC,UAAAA,KAAK,EAAE,KAAKjG,MAAL,CAAY6F,aAAZ,CAA0BC;AAAtD,SAApB;AACH;;AACD,UAAIxC,OAAO,GAAGpB,IAAI,CAAC2D,aAAL,CAAmBvC,OAAjC;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAR,EAAW2C,GAAG,GAAG5C,OAAO,CAACE,MAA9B,EAAsCD,CAAC,GAAG2C,GAA1C,EAA+C3C,CAAC,EAAhD,EAAoD;AAChD,YAAIR,MAAM,GAAG,KAAKoD,gBAAL,CAAsB7C,OAAO,CAACC,CAAD,CAA7B,CAAb;;AACA,YAAI,CAACR,MAAL,EAAa;AACT,eAAK/C,MAAL,CAAYoG,GAAZ,CAAgB,gBAAhB,EAAkC;AAAEC,YAAAA,UAAU,EAAE,OAAd;AAAuBC,YAAAA,UAAU,EAAEhD,OAAO,CAACC,CAAD;AAA1C,WAAlC;AACH;;AACD,YAAIgD,QAAQ,GAAGxD,MAAM,CAACyD,mBAAtB;AACA,YAAIC,MAAM,GAAG1D,MAAM,CAAC0D,MAApB;;AACA,YAAIF,QAAJ,EAAc;AACVnE,UAAAA,KAAK,CAAC/B,KAAN,CAAYiD,OAAO,CAACC,CAAD,CAAnB,EAAwB,KAAKmD,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAxB,EAA2DF,MAA3D;AACH,SAFD,MAGK;AACDrE,UAAAA,KAAK,CAAC/B,KAAN,CAAYiD,OAAO,CAACC,CAAD,CAAnB,EAAwB,IAAxB;AACH;AACJ;AACJ;;AACD,WAAOnB,KAAP;AACH,GAvBD;;AAwBArC,EAAAA,IAAI,CAAC2B,SAAL,CAAemC,SAAf,GAA2B,UAAUzB,KAAV,EAAiB;AACxC,QAAIF,IAAI,GAAG,KAAKlC,MAAhB;;AACA,QAAI,CAACkC,IAAI,CAAC0E,YAAL,IAAqB1E,IAAI,CAAC0D,aAA3B,KAA6C1D,IAAI,CAAC2E,YAAL,CAAkBvD,OAAlB,CAA0BE,MAA3E,EAAmF;AAC/E,UAAIF,OAAO,GAAGpB,IAAI,CAAC2E,YAAL,CAAkBvD,OAAhC;AACA,UAAIwD,OAAO,GAAG,EAAd;;AACA,WAAK,IAAIvD,CAAC,GAAGD,OAAO,CAACE,MAAR,GAAiB,CAA9B,EAAiCD,CAAC,GAAG,CAAC,CAAtC,EAAyCA,CAAC,EAA1C,EAA8C;AAC1C,YAAIwD,GAAG,GAAG,KAAKZ,gBAAL,CAAsB7C,OAAO,CAACC,CAAD,CAAP,CAAWL,KAAjC,CAAV;;AACA,YAAI6D,GAAJ,EAAS;AACLA,UAAAA,GAAG,CAACC,gBAAJ,CAAqB1D,OAAO,CAACC,CAAD,CAAP,CAAW0D,SAAhC;AACH,SAFD,MAGK;AACD,eAAKjH,MAAL,CAAYoG,GAAZ,CAAgB,gBAAhB,EAAkC;AAAEC,YAAAA,UAAU,EAAE,MAAd;AAAsBC,YAAAA,UAAU,EAAEhD,OAAO,CAACC,CAAD,CAAP,CAAWL;AAA7C,WAAlC;AACA,iBAAOd,KAAP;AACH;;AACD,YAAI8E,EAAE,GAAG5D,OAAO,CAACC,CAAD,CAAP,CAAW0D,SAApB;;AACA,YAAIF,GAAG,CAACI,YAAR,EAAsB;AAClB,eAAKnH,MAAL,CAAYoG,GAAZ,CAAgB,oBAAhB;AACAc,UAAAA,EAAE,GAAG,CAAC,KAAKE,QAAL,EAAD,GAAmBL,GAAG,CAACI,YAAJ,CAAiBR,IAAjB,CAAsBI,GAAtB,CAAnB,GAAgDzD,OAAO,CAACC,CAAD,CAAP,CAAW0D,SAAhE;AACH;;AACD,YAAI/E,IAAI,CAAC2D,aAAL,CAAmBvC,OAAnB,CAA2B+D,OAA3B,CAAmC/D,OAAO,CAACC,CAAD,CAAP,CAAWL,KAA9C,MAAyD,CAAC,CAA9D,EAAiE;AAC7D,cAAI6D,GAAG,CAACO,eAAJ,MAAyBP,GAAG,CAACI,YAAjC,EAA+C;AAC3C/E,YAAAA,KAAK,CAACmF,gBAAN,CAAuBR,GAAG,CAAC7D,KAA3B,EAAkCgE,EAAlC,EAAsC/D,SAAtC,EAAiDG,OAAO,CAACC,CAAD,CAAP,CAAW0D,SAAX,CAAqBrC,WAArB,EAAjD;AACH,WAFD,MAGK;AACDxC,YAAAA,KAAK,CAACoF,MAAN,CAAaT,GAAG,CAAC7D,KAAjB,EAAwBgE,EAAxB;AACH;AACJ,SAPD,MAQK;AACDJ,UAAAA,OAAO,CAACrD,IAAR,CAAa;AAAEwD,YAAAA,SAAS,EAAEC,EAAb;AAAiBhE,YAAAA,KAAK,EAAE6D,GAAG,CAAC7D;AAA5B,WAAb;AACH;AACJ;;AACD,WAAK,IAAIK,CAAC,GAAG,CAAR,EAAW2C,GAAG,GAAGY,OAAO,CAACtD,MAA9B,EAAsCD,CAAC,GAAG2C,GAA1C,EAA+C3C,CAAC,EAAhD,EAAoD;AAChD,YAAI,OAAOuD,OAAO,CAACvD,CAAD,CAAP,CAAW0D,SAAlB,KAAgC,QAApC,EAA8C;AAC1C7E,UAAAA,KAAK,CAACoF,MAAN,CAAaV,OAAO,CAACvD,CAAD,CAAP,CAAWL,KAAxB,EAA+B4D,OAAO,CAACvD,CAAD,CAAP,CAAW0D,SAA1C;AACH,SAFD,MAGK;AACD,cAAIF,GAAG,GAAG,KAAKZ,gBAAL,CAAsBW,OAAO,CAACvD,CAAD,CAAP,CAAWL,KAAjC,CAAV;AACAd,UAAAA,KAAK,CAACmF,gBAAN,CAAuBT,OAAO,CAACvD,CAAD,CAAP,CAAWL,KAAlC,EAAyC4D,OAAO,CAACvD,CAAD,CAAP,CAAW0D,SAApD,EAA+D9D,SAA/D,EAA0E4D,GAAG,CAACU,gBAAJ,GAAuB7C,WAAvB,EAA1E;AACH;AACJ;AACJ;;AACD,WAAOxC,KAAP;AACH,GA1CD;;AA2CArC,EAAAA,IAAI,CAAC2B,SAAL,CAAeiC,WAAf,GAA6B,UAAUvB,KAAV,EAAiBsF,OAAjB,EAA0BC,YAA1B,EAAwC;AACjE,QAAIC,SAAS,GAAG,KAAK5H,MAAL,CAAY6H,cAA5B;AACA,QAAIC,MAAM,GAAGF,SAAS,CAACE,MAAV,CAAiBtE,MAAjB,GAA0BoE,SAAS,CAACE,MAApC,GAA6C,KAAKC,yBAAL,EAA1D;AACA,QAAIC,aAAa,GAAG,EAApB;AACA,QAAIC,oBAAoB,GAAG,KAA3B;;AACA,QAAI,KAAKjI,MAAL,CAAY6H,cAAZ,CAA2B7B,GAA3B,CAA+BxC,MAAnC,EAA2C;AACvCyE,MAAAA,oBAAoB,GAAG,KAAKjI,MAAL,CAAYkI,oBAAZ,GAAmCC,IAAnC,CAAwC,UAAUpB,GAAV,EAAe;AAAE,eAAOe,MAAM,CAACT,OAAP,CAAeN,GAAG,CAAC7D,KAAnB,IAA4B,CAAC,CAApC;AAAwC,OAAjG,CAAvB;AACA,UAAIkF,OAAO,GAAG,CAACT,YAAD,GAAgB,KAAK/F,WAAL,CAAiBwG,OAAjC,GAA2CV,OAAO,CAAC7F,UAAR,CAAmBuG,OAA5E;;AACA,UAAIH,oBAAoB,IAAKG,OAAO,CAAC3H,aAAR,IACzB2H,OAAO,CAAC3H,aAAR,OAA4B,gBADhC,EACmD;AAC/CqH,QAAAA,MAAM,GAAGH,YAAY,GAAG,CAACD,OAAO,CAACW,eAAT,CAAH,GAA+BP,MAApD;;AACA,aAAK,IAAIvE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuE,MAAM,CAACtE,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACpC,cAAIR,MAAM,GAAG4E,YAAY,GAAGD,OAAH,GAAa,KAAKvB,gBAAL,CAAsB2B,MAAM,CAACvE,CAAD,CAA5B,CAAtC;;AACA,cAAIR,MAAM,CAACuE,eAAP,MAA4B,CAACK,YAAjC,EAA+C;AAC3CK,YAAAA,aAAa,GAAG,KAAKM,kBAAL,CAAwBvF,MAAxB,EAAgCiF,aAAhC,CAAhB;AACH,WAFD,MAGK;AACDA,YAAAA,aAAa,CAACvE,IAAd,CAAmB,IAAIpE,SAAJ,CAAcyI,MAAM,CAACvE,CAAD,CAApB,EAAyBqE,SAAS,CAACW,QAAnC,EAA6CX,SAAS,CAAC5B,GAAvD,EAA4D4B,SAAS,CAACY,UAAtE,EAAkFZ,SAAS,CAACa,YAA5F,CAAnB;AACH;AACJ;;AACD,YAAIC,QAAQ,GAAGrJ,SAAS,CAACsJ,EAAV,CAAaX,aAAb,CAAf;AACAU,QAAAA,QAAQ,CAAC1C,GAAT,GAAe4B,SAAS,CAAC5B,GAAzB;AACA5D,QAAAA,KAAK,CAACwG,KAAN,CAAYF,QAAZ;AACH,OAfD,MAgBK;AACDtG,QAAAA,KAAK,CAACyG,MAAN,CAAajB,SAAS,CAAC5B,GAAvB,EAA4B8B,MAA5B,EAAoCF,SAAS,CAACW,QAA9C,EAAwDX,SAAS,CAACY,UAAlE,EAA8EZ,SAAS,CAACa,YAAxF;AACH;AACJ;;AACD,WAAOrG,KAAP;AACH,GA7BD;;AA8BArC,EAAAA,IAAI,CAAC2B,SAAL,CAAegC,WAAf,GAA6B,UAAUtB,KAAV,EAAiBW,MAAjB,EAAyB+F,WAAzB,EAAsC;AAC/D,QAAI5G,IAAI,GAAG,KAAKlC,MAAhB;AACA,QAAIgI,aAAa,GAAG,EAApB;AACA,QAAIe,YAAY,GAAG,EAAnB;AACA,QAAIC,aAAa,GAAG,KAAKhJ,MAAL,CAAYkI,oBAAZ,EAApB;;AACA,QAAIhG,IAAI,CAAC+G,cAAL,IAAuB/G,IAAI,CAACgH,cAAL,CAAoB5F,OAApB,CAA4BE,MAAvD,EAA+D;AAC3D,UAAIF,OAAO,GAAGP,MAAM,GAAGA,MAAH,GAAYb,IAAI,CAACgH,cAAL,CAAoB5F,OAApD;AACA,UAAI6F,OAAO,GAAG,EAAd;;AACA,WAAK,IAAIC,EAAE,GAAG,CAAT,EAAYC,EAAE,GAAGnH,IAAI,CAACW,UAAL,EAAtB,EAAyCuG,EAAE,GAAGC,EAAE,CAAC7F,MAAjD,EAAyD4F,EAAE,EAA3D,EAA+D;AAC3D,YAAIrC,GAAG,GAAGsC,EAAE,CAACD,EAAD,CAAZ;AACAD,QAAAA,OAAO,CAACpC,GAAG,CAAC7D,KAAL,CAAP,GAAqB6D,GAAG,CAACjE,MAAJ,CAAW0B,IAAX,GAAkBuC,GAAG,CAACjE,MAAJ,CAAW0B,IAA7B,GAAoCtC,IAAI,CAACgH,cAAL,CAAoB1E,IAA7E;AACH;;AACD,UAAI8E,WAAW,GAAG,EAAlB;AACA,UAAIC,eAAe,GAAG,EAAtB;;AACA,WAAK,IAAIC,EAAE,GAAG,CAAT,EAAYC,SAAS,GAAGnG,OAA7B,EAAsCkG,EAAE,GAAGC,SAAS,CAACjG,MAArD,EAA6DgG,EAAE,EAA/D,EAAmE;AAC/D,YAAIzC,GAAG,GAAG0C,SAAS,CAACD,EAAD,CAAnB;AACA,YAAIE,UAAU,GAAGxH,IAAI,CAACiE,gBAAL,CAAsBY,GAAG,CAAC7D,KAA1B,CAAjB;;AACA,YAAIlE,iBAAiB,CAAC+H,GAAG,CAACvC,IAAL,CAAjB,IAA+BkF,UAA/B,KAA8CA,UAAU,CAAClF,IAAX,KAAoB,MAApB,IAA8BkF,UAAU,CAAClF,IAAX,KAAoB,UAAhG,CAAJ,EAAiH;AAC7GuC,UAAAA,GAAG,CAACvC,IAAJ,GAAWtC,IAAI,CAACiE,gBAAL,CAAsBY,GAAG,CAAC7D,KAA1B,EAAiCsB,IAA5C;AACH;;AACD,YAAIuC,GAAG,CAACY,YAAR,EAAsB;AAClB2B,UAAAA,WAAW,CAAC7F,IAAZ,CAAiBsD,GAAjB;AACH,SAFD,MAGK;AACDwC,UAAAA,eAAe,CAAC9F,IAAhB,CAAqBsD,GAArB;AACH;AACJ;;AACD,UAAIwC,eAAe,CAAC/F,MAApB,EAA4B;AACxB,YAAItB,IAAI,CAACgH,cAAL,CAAoB1E,IAApB,KAA6B,WAA7B,IAA4CtC,IAAI,CAACgH,cAAL,CAAoB1E,IAApB,KAA6B,MAA7E,EAAqF;AACjF,eAAK,IAAIjB,CAAC,GAAG,CAAR,EAAW2C,GAAG,GAAGqD,eAAe,CAAC/F,MAAtC,EAA8CD,CAAC,GAAG2C,GAAlD,EAAuD3C,CAAC,EAAxD,EAA4D;AACxDgG,YAAAA,eAAe,CAAChG,CAAD,CAAf,CAAmBoG,GAAnB,GAAyBJ,eAAe,CAAChG,CAAD,CAAf,CAAmBoG,GAAnB,IACrB,KAAK3J,MAAL,CAAY4J,4BAAZ,CAAyCL,eAAe,CAAChG,CAAD,CAAf,CAAmBL,KAA5D,EAAmEyG,GADvE;AAEH;AACJ;;AACD,YAAIE,cAAc,GAAG/J,kBAAkB,CAACgK,YAAnB,CAAgCP,eAAhC,CAArB;;AACA,aAAK,IAAIQ,EAAE,GAAG,CAAT,EAAYC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYL,cAAZ,CAAtB,EAAmDE,EAAE,GAAGC,EAAE,CAACxG,MAA3D,EAAmEuG,EAAE,EAArE,EAAyE;AACrE,cAAII,IAAI,GAAGH,EAAE,CAACD,EAAD,CAAb;AACA/B,UAAAA,aAAa,CAACvE,IAAd,CAAmBoG,cAAc,CAACM,IAAD,CAAjC;AACH;AACJ;;AACD,UAAIb,WAAW,CAAC9F,MAAhB,EAAwB;AACpB,aAAK,IAAI4G,EAAE,GAAG,CAAT,EAAYC,aAAa,GAAGf,WAAjC,EAA8Cc,EAAE,GAAGC,aAAa,CAAC7G,MAAjE,EAAyE4G,EAAE,EAA3E,EAA+E;AAC3E,cAAIrD,GAAG,GAAGsD,aAAa,CAACD,EAAD,CAAvB;AACArD,UAAAA,GAAG,CAAC4C,GAAJ,GAAU5C,GAAG,CAAC4C,GAAJ,IAAW,KAAK3J,MAAL,CAAY4J,4BAAZ,CAAyC7C,GAAG,CAAC7D,KAA7C,EAAoDyG,GAAzE;AACA,cAAIW,QAAQ,GAAG,KAAKtK,MAAL,CAAYuK,0BAAZ,CAAuCxD,GAAG,CAAC4C,GAA3C,CAAf;;AACA,cAAI,CAACW,QAAL,EAAe;AACX,iBAAKtK,MAAL,CAAYoG,GAAZ,CAAgB,gBAAhB,EAAkC;AAAEC,cAAAA,UAAU,EAAE,QAAd;AAAwBC,cAAAA,UAAU,EAAES,GAAG,CAAC7D;AAAxC,aAAlC;AACH;;AACD,cAAIoH,QAAQ,CAAChD,eAAT,MAA8B5H,0BAA0B,CAACqH,GAAG,CAAC7D,KAAL,EAAY8F,aAAZ,CAAxD,IAAsF,CAACF,WAA3F,EAAwG;AACpGC,YAAAA,YAAY,CAACtF,IAAb,CAAkBsD,GAAlB;AACAiB,YAAAA,aAAa,GAAG,KAAKM,kBAAL,CAAwBgC,QAAxB,EAAkCtC,aAAlC,CAAhB;AACH,WAHD,MAIK;AACD,gBAAI6B,cAAc,GAAG/J,kBAAkB,CAACgK,YAAnB,CAAgCxG,OAAhC,CAArB;;AACA,iBAAK,IAAIkH,EAAE,GAAG,CAAT,EAAYC,EAAE,GAAGR,MAAM,CAACC,IAAP,CAAYL,cAAZ,CAAtB,EAAmDW,EAAE,GAAGC,EAAE,CAACjH,MAA3D,EAAmEgH,EAAE,EAArE,EAAyE;AACrE,kBAAIL,IAAI,GAAGM,EAAE,CAACD,EAAD,CAAb;AACAxC,cAAAA,aAAa,CAACvE,IAAd,CAAmBoG,cAAc,CAACM,IAAD,CAAjC;AACH;AACJ;AACJ;AACJ;;AACD,UAAInC,aAAa,CAACxE,MAAlB,EAA0B;AACtBpB,QAAAA,KAAK,CAACwG,KAAN,CAAYvJ,SAAS,CAACqL,GAAV,CAAc1C,aAAd,CAAZ;AACH,OAFD,MAGK;AACD,aAAKhI,MAAL,CAAYyF,MAAZ,CAAmB7F,MAAM,CAAC+K,aAA1B,EAAyC,EAAzC;AACH;AACJ;;AACD,WAAOvI,KAAP;AACH,GArED;;AAsEArC,EAAAA,IAAI,CAAC2B,SAAL,CAAe4G,kBAAf,GAAoC,UAAUvB,GAAV,EAAeiB,aAAf,EAA8B;AAC9D,QAAI4C,UAAU,GAAG,EAAjB;;AACA,QAAI7D,GAAJ,EAAS;AACL,WAAK/G,MAAL,CAAYyF,MAAZ,CAAmB7F,MAAM,CAAC2C,aAA1B,EAAyC;AAAEsI,QAAAA,SAAS,EAAED,UAAb;AAAyB7H,QAAAA,MAAM,EAAEgE;AAAjC,OAAzC;;AACA,UAAI6D,UAAU,CAACC,SAAX,CAAqBC,UAArB,CAAgCtH,MAApC,EAA4C;AACxCwE,QAAAA,aAAa,CAACvE,IAAd,CAAmBmH,UAAU,CAACC,SAA9B;AACH;AACJ;;AACD,WAAO7C,aAAP;AACH,GATD;AAUA;AACJ;AACA;AACA;AACA;AACA;;;AACIjI,EAAAA,IAAI,CAAC2B,SAAL,CAAeJ,OAAf,GAAyB,UAAUyJ,IAAV,EAAgB3I,KAAhB,EAAuB;AAC5C,QAAI4I,KAAK,GAAG,IAAZ;;AACA,QAAID,IAAI,KAAK,KAAK,CAAlB,EAAqB;AAAEA,MAAAA,IAAI,GAAG;AAAEE,QAAAA,WAAW,EAAE;AAAf,OAAP;AAA6B;;AACpD,QAAIjF,GAAG,GAAG,KAAKkF,MAAL,CAAYH,IAAI,CAACI,cAAL,IAClBlB,MAAM,CAACC,IAAP,CAAYa,IAAI,CAACI,cAAjB,EAAiC3H,MADf,GAElBuH,IAAI,CAACI,cAFa,GAEI,KAAKnL,MAAL,CAAYoL,uBAAZ,EAFhB,CAAV;AAGA,SAAKpL,MAAL,CAAYoG,GAAZ,CAAgB,4BAAhB,EAA8C;AAAElG,MAAAA,SAAS,EAAE,KAAKF;AAAlB,KAA9C;;AACA,QAAI,KAAKA,MAAL,CAAY6B,UAAZ,IAA0B,YAAY,KAAK7B,MAAL,CAAY6B,UAAtD,EAAkE;AAC9D,UAAIwJ,GAAG,GAAG,KAAKC,YAAL,CAAkBP,IAAlB,EAAwB3I,KAAxB,EAA+B4D,GAA/B,CAAV;AACA,aAAOqF,GAAG,CAACE,OAAX;AACH,KAHD,MAIK;AACD,UAAIC,IAAI,GAAG,KAAK,CAAhB;;AACA,cAAQT,IAAI,CAACE,WAAb;AACI,aAAK,QAAL;AACI7I,UAAAA,KAAK,GAAGA,KAAK,GAAGA,KAAH,GAAW,KAAKG,aAAL,EAAxB;AACA,cAAI2D,GAAG,GAAG+D,MAAM,CAACC,IAAP,CAAYa,IAAI,CAACU,IAAjB,EAAuBjI,MAAjC;;AACA,cAAI0C,GAAG,KAAK,CAAZ,EAAe;AACXsF,YAAAA,IAAI,GAAG,KAAK5J,WAAL,CAAiB8J,MAAjB,CAAwB1F,GAAxB,EAA6B+E,IAAI,CAACU,IAAL,CAAU,CAAV,CAA7B,EAA2CrJ,KAAK,CAACuJ,SAAjD,EAA4DvJ,KAA5D,CAAP;AACH,WAFD,MAGK;AACD,gBAAIwJ,OAAO,GAAG;AACVC,cAAAA,YAAY,EAAE,EADJ;AAEVC,cAAAA,cAAc,EAAE,EAFN;AAGVC,cAAAA,cAAc,EAAE;AAHN,aAAd;AAKAH,YAAAA,OAAO,CAACE,cAAR,GAAyBf,IAAI,CAACU,IAA9B;AACAD,YAAAA,IAAI,GAAG,KAAK5J,WAAL,CAAiBoK,WAAjB,CAA6BJ,OAA7B,EAAsC5F,GAAtC,EAA2C5D,KAAK,CAACuJ,SAAjD,EAA4DvJ,KAAK,CAAC6J,aAAN,EAA5D,CAAP;AACH;;AACD;;AACJ,aAAK,MAAL;AACI,cAAI/M,QAAQ,MAAM,KAAKc,MAAL,CAAYkM,gBAA9B,EAAgD;AAC5C,iBAAKlM,MAAL,CAAYyF,MAAZ,CAAmB,QAAnB,EAA6BsF,IAA7B;AACH;;AACD3I,UAAAA,KAAK,GAAGA,KAAK,GAAGA,KAAH,GAAW,KAAKG,aAAL,EAAxB;AACAwI,UAAAA,IAAI,CAACoB,KAAL,GAAanN,iBAAiB,CAAC+L,IAAI,CAACoB,KAAN,CAAjB,GAAgC,CAAhC,GAAoCpB,IAAI,CAACoB,KAAtD;AACAX,UAAAA,IAAI,GAAG,KAAK5J,WAAL,CAAiBwK,MAAjB,CAAwBrB,IAAI,CAACU,IAA7B,EAAmCrJ,KAAK,CAACuJ,SAAzC,EAAoDvJ,KAApD,EAA2D2I,IAAI,CAACoB,KAAhE,CAAP;AACA;AAxBR;;AA0BA,UAAIZ,OAAO,GAAG,SAAd;AACAR,MAAAA,IAAI,CAACQ,OAAD,CAAJ,GAAgBC,IAAhB;;AACA,UAAIA,IAAI,IAAI,CAAC/G,KAAK,CAAC4H,OAAN,CAAcb,IAAd,CAAT,IAAgC,CAACA,IAAI,CAACc,cAAL,CAAoB,gBAApB,CAArC,EAA4E;AACxE,YAAIpN,QAAQ,EAAZ,EAAgB;AACZ,iBAAOsM,IAAI,CAACe,IAAL,CAAU,UAAUC,MAAV,EAAkB;AAC/B,mBAAOxB,KAAK,CAACoB,MAAN,CAAahK,KAAb,EAAoB2I,IAApB,CAAP;AACH,WAFM,EAEJ0B,KAFI,CAEE,UAAU9K,CAAV,EAAa;AAClB,mBAAO,IAAP;AACH,WAJM,CAAP;AAKH,SAND,MAOK;AACD,iBAAO6J,IAAI,CAACe,IAAL,CAAU,UAAUC,MAAV,EAAkB;AAC/B,mBAAOxB,KAAK,CAACoB,MAAN,CAAahK,KAAb,EAAoB2I,IAApB,CAAP;AACH,WAFM,CAAP;AAGH;AACJ,OAbD,MAcK;AACD,eAAO,KAAKqB,MAAL,CAAYhK,KAAZ,EAAmB2I,IAAnB,CAAP;AACH;AACJ;AACJ,GA3DD;;AA4DAhL,EAAAA,IAAI,CAAC2B,SAAL,CAAe0K,MAAf,GAAwB,UAAUhK,KAAV,EAAiB2I,IAAjB,EAAuB;AAC3C,QAAIA,IAAI,CAACE,WAAL,KAAqB,MAAzB,EAAiC;AAC7B,WAAKjL,MAAL,CAAYyF,MAAZ,CAAmB7F,MAAM,CAAC8M,WAA1B,EAAuC3B,IAAvC;AACH;;AACD,WAAO,KAAK4B,YAAL,CAAkBvK,KAAlB,CAAP;AACH,GALD;;AAMArC,EAAAA,IAAI,CAAC2B,SAAL,CAAeiL,YAAf,GAA8B,UAAUvK,KAAV,EAAiB;AAC3C,QAAI4I,KAAK,GAAG,IAAZ;;AACA,QAAI,KAAKpJ,WAAL,CAAiBgL,KAArB,EAA4B;AACxB,UAAIC,UAAU,GAAG,IAAIvN,QAAJ,EAAjB;AACA,UAAIsN,KAAK,GAAG,KAAKhL,WAAL,CAAiBgL,KAA7B;AACAA,MAAAA,KAAK,CAACL,IAAN,CAAW,UAAU5K,CAAV,EAAa;AACpBqJ,QAAAA,KAAK,CAACpJ,WAAN,CAAkB+K,YAAlB,CAA+BvK,KAA/B,EAAsCmK,IAAtC,CAA2C,UAAUC,MAAV,EAAkB;AACzDK,UAAAA,UAAU,CAACC,OAAX,CAAmBN,MAAnB;AACH,SAFD;AAGH,OAJD,EAIGC,KAJH,CAIS,UAAU9K,CAAV,EAAa;AAClBkL,QAAAA,UAAU,CAACE,MAAX,CAAkBpL,CAAlB;AACH,OAND;AAOA,aAAOkL,UAAU,CAACtB,OAAlB;AACH,KAXD,MAYK;AACD,aAAO,KAAK3J,WAAL,CAAiB+K,YAAjB,CAA8BvK,KAA9B,CAAP;AACH;AACJ,GAjBD;;AAkBArC,EAAAA,IAAI,CAAC2B,SAAL,CAAegF,iBAAf,GAAmC,UAAUT,KAAV,EAAiB/C,KAAjB,EAAwB;AACvD,QAAIhB,IAAI,GAAG,KAAKlC,MAAhB;AACA,QAAIC,cAAc,GAAG,KAAKA,cAA1B;AACA,QAAI8C,MAAM,GAAG,KAAKoD,gBAAL,CAAsBjD,KAAtB,CAAb;AACA,QAAI8J,IAAI,GAAG/G,KAAX;;AACA,QAAI,CAAClD,MAAM,CAACyB,IAAZ,EAAkB;AACdzB,MAAAA,MAAM,CAACyB,IAAP,GAAcwI,IAAI,CAACC,MAAL,GAAeD,IAAI,CAACE,QAAL,KAAkB,CAAlB,IAAuBF,IAAI,CAACG,UAAL,KAAoB,CAA3C,IACzBH,IAAI,CAACI,UAAL,KAAoB,CADK,IACAJ,IAAI,CAACK,eAAL,KAAyB,CADzB,GAC6B,UAD7B,GAC0C,MADzD,GACmE,OAAQpH,KADzF;AAEH;;AACD,QAAIjH,iBAAiB,CAAC+D,MAAM,CAACuK,YAAP,EAAD,CAArB,EAA8C;AAC1C9N,MAAAA,YAAY,CAACS,cAAD,EAAiB8C,MAAjB,CAAZ;AACH;;AACD,QAAIwK,SAAS,GAAG1N,cAAc,CAAC6B,SAAf,CAAyB8L,MAAzB,CAAgCvH,KAAhC,EAAuClD,MAAM,CAACuK,YAAP,EAAvC,CAAhB;AACA,WAAOC,SAAP;AACH,GAdD;;AAeAxN,EAAAA,IAAI,CAAC2B,SAAL,CAAeN,WAAf,GAA6B,UAAU2J,IAAV,EAAgB;AACzC,QAAI3I,KAAK,GAAG,KAAKG,aAAL,EAAZ;AACA,QAAIgJ,OAAO,GAAG,IAAd;AACA,QAAIkC,EAAE,GAAG,SAAT;AACA,QAAIzH,GAAG,GAAG,KAAKkF,MAAL,CAAYH,IAAI,CAACI,cAAL,IAClBlB,MAAM,CAACC,IAAP,CAAYa,IAAI,CAACI,cAAjB,EAAiC3H,MADf,GACwBuH,IAAI,CAACI,cAD7B,GAElB,KAAKnL,MAAL,CAAYoL,uBAAZ,EAFM,CAAV;;AAGA,QAAI,KAAKpL,MAAL,CAAY6B,UAAZ,IAA0B,YAAY,KAAK7B,MAAL,CAAY6B,UAAtD,EAAkE;AAC9D,WAAKyJ,YAAL,CAAkBP,IAAlB,EAAwB3I,KAAxB,EAA+B4D,GAA/B;AACH;;AACD,YAAQ+E,IAAI,CAACE,WAAb;AACI,WAAK,MAAL;AACI,YAAI/L,QAAQ,MAAM,KAAKc,MAAL,CAAYkM,gBAA9B,EAAgD;AAC5C,eAAKlM,MAAL,CAAYyF,MAAZ,CAAmB,QAAnB,EAA6BsF,IAA7B;AACH;;AACDQ,QAAAA,OAAO,GAAG,KAAK3J,WAAL,CAAiB8L,MAAjB,CAAwB1H,GAAxB,EAA6B+E,IAAI,CAACU,IAAlC,EAAwCrJ,KAAK,CAACuJ,SAA9C,EAAyDvJ,KAAzD,EAAgE2I,IAAI,CAAC4C,YAArE,CAAV;AACA;AANR;;AAQA5C,IAAAA,IAAI,CAAC0C,EAAD,CAAJ,GAAWlC,OAAO,GAAGA,OAAH,GAAaR,IAAI,CAAC0C,EAAD,CAAnC;AACA,SAAKzN,MAAL,CAAYyF,MAAZ,CAAmB7F,MAAM,CAACgO,UAA1B,EAAsC7C,IAAtC;AACH,GApBD;AAqBA;;;AACAhL,EAAAA,IAAI,CAAC2B,SAAL,CAAesK,WAAf,GAA6B,UAAUJ,OAAV,EAAmB5F,GAAnB,EAAwB6H,QAAxB,EAAkCzL,KAAlC,EAAyC;AAClE,QAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;AAAEA,MAAAA,KAAK,GAAG,KAAKG,aAAL,EAAR;AAA+B;;AACvDH,IAAAA,KAAK,CAAC6J,aAAN;;AACA,QAAI,YAAY,KAAKjM,MAAL,CAAY6B,UAA5B,EAAwC;AACpC,UAAIiM,KAAK,GAAG,KAAK,CAAjB;AACAA,MAAAA,KAAK,GAAG,KAAKC,qBAAL,CAA2B3L,KAA3B,CAAR;AACA,UAAI4L,IAAI,GAAG,IAAI1O,QAAJ,EAAX;AACA,UAAIyL,IAAI,GAAG;AACPE,QAAAA,WAAW,EAAE,WADN;AACmBW,QAAAA,OAAO,EAAEA,OAD5B;AACqC5F,QAAAA,GAAG,EAAEA,GAD1C;AAC+C5D,QAAAA,KAAK,EAAEA,KADtD;AAEP6L,QAAAA,OAAO,EAAED,IAAI,CAAClB;AAFP,OAAX;AAIA,WAAKoB,QAAL,CAAc;AAAE/N,QAAAA,SAAS,EAAE,IAAb;AAAmBC,QAAAA,QAAQ,EAAE4N,IAAI,CAAClB;AAAlC,OAAd;AACA,WAAK9M,MAAL,CAAYmO,OAAZ,CAAoBvO,MAAM,CAACwO,iBAA3B,EAA8CrD,IAA9C;AACA,aAAOiD,IAAI,CAACzC,OAAZ;AACH,KAXD,MAYK;AACD,UAAIQ,cAAc,GAAG,gBAArB;AACA,UAAIF,YAAY,GAAG,cAAnB;AACA,UAAIJ,IAAI,GAAG,MAAX;;AACA,UAAIvM,QAAQ,MAAM,KAAKc,MAAL,CAAYkM,gBAA9B,EAAgD;AAC5C,aAAK,IAAI3I,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqI,OAAO,CAACG,cAAD,CAAP,CAAwBvI,MAA5C,EAAoDD,CAAC,EAArD,EAAyD;AACrD,cAAIwH,IAAI,GAAG;AAAEU,YAAAA,IAAI,EAAEG,OAAO,CAACG,cAAD,CAAP,CAAwBxI,CAAxB;AAAR,WAAX;AACA,eAAKvD,MAAL,CAAYyF,MAAZ,CAAmB,QAAnB,EAA6BsF,IAA7B;AACAa,UAAAA,OAAO,CAACG,cAAD,CAAP,CAAwBxI,CAAxB,IAA6BwH,IAAI,CAACU,IAAD,CAAjC;AACH;;AACD,aAAK,IAAIlI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqI,OAAO,CAACC,YAAD,CAAP,CAAsBrI,MAA1C,EAAkDD,CAAC,EAAnD,EAAuD;AACnD,cAAIwH,IAAI,GAAG;AAAEU,YAAAA,IAAI,EAAEG,OAAO,CAACC,YAAD,CAAP,CAAsBtI,CAAtB;AAAR,WAAX;AACA,eAAKvD,MAAL,CAAYyF,MAAZ,CAAmB,QAAnB,EAA6BsF,IAA7B;AACAa,UAAAA,OAAO,CAACC,YAAD,CAAP,CAAsBtI,CAAtB,IAA2BwH,IAAI,CAACU,IAAD,CAA/B;AACH;AACJ;;AACD,UAAIF,OAAO,GAAG,KAAK3J,WAAL,CAAiBoK,WAAjB,CAA6BJ,OAA7B,EAAsC5F,GAAtC,EAA2C5D,KAAK,CAACuJ,SAAjD,EAA4DvJ,KAA5D,EAAmEyL,QAAnE,CAAd;AACA,aAAOtC,OAAP;AACH;AACJ,GAlCD;;AAmCAxL,EAAAA,IAAI,CAAC2B,SAAL,CAAewJ,MAAf,GAAwB,UAAUhB,IAAV,EAAgB;AACpC,QAAIA,IAAI,IAAIA,IAAI,CAAC1G,MAAjB,EAAyB;AACrB,aAAO0G,IAAI,CAAC,CAAD,CAAX;AACH;;AACD,WAAO/G,SAAP;AACH,GALD;AAMA;;;AACApD,EAAAA,IAAI,CAAC2B,SAAL,CAAe0F,QAAf,GAA0B,YAAY;AAClC,WAAO,KAAKxF,WAAL,CAAiBC,UAAjB,CAA4BwM,OAA5B,KAAwC,IAAxC,IAAgD,KAAKzM,WAAL,CAAiBC,UAAjB,CAA4ByM,GAA5B,KAAoCnL,SAApF,IACH,KAAKvB,WAAL,CAAiBC,UAAjB,CAA4ByM,GAA5B,KAAoC,EADxC;AAEH,GAHD;;AAIAvO,EAAAA,IAAI,CAAC2B,SAAL,CAAed,OAAf,GAAyB,UAAUe,CAAV,EAAa;AAClC,SAAK,IAAI4B,CAAC,GAAG5B,CAAC,CAAC4M,OAAF,CAAU/K,MAAvB,EAA+BD,CAAC,GAAG,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACvC,WAAK3B,WAAL,CAAiBC,UAAjB,CAA4BC,IAA5B,CAAiCC,MAAjC,CAAwCJ,CAAC,CAACK,OAA1C,EAAmD,CAAnD,EAAsDL,CAAC,CAAC4M,OAAF,CAAUhL,CAAC,GAAG,CAAd,CAAtD;AACH;AACJ,GAJD;;AAKAxD,EAAAA,IAAI,CAAC2B,SAAL,CAAeV,UAAf,GAA4B,UAAUW,CAAV,EAAa;AACrC,QAAIG,IAAI,GAAG,KAAKF,WAAL,CAAiBC,UAAjB,CAA4BC,IAAvC;AACA,SAAKF,WAAL,CAAiBC,UAAjB,CAA4BC,IAA5B,GAAmCA,IAAI,CAACgB,MAAL,CAAY,UAAUmD,KAAV,EAAiBkG,KAAjB,EAAwB;AAAE,aAAOxK,CAAC,CAAC4M,OAAF,CAAUlH,OAAV,CAAkBpB,KAAlB,MAA6B,CAAC,CAArC;AAAyC,KAA/E,CAAnC;AACH,GAHD;;AAIAlG,EAAAA,IAAI,CAAC2B,SAAL,CAAeyE,gBAAf,GAAkC,UAAUjD,KAAV,EAAiB;AAC/C,QAAI6D,GAAJ;AACA,WAAQ,KAAK/G,MAAL,CAAYwO,WAAb,CAA0BrG,IAA1B,CAA+B,UAAUpF,MAAV,EAAkB;AACpDgE,MAAAA,GAAG,GAAGhE,MAAN;AACA,aAAOA,MAAM,CAACG,KAAP,KAAiBA,KAAxB;AACH,KAHM,KAGD6D,GAHN;AAIH,GAND;;AAOAhH,EAAAA,IAAI,CAAC2B,SAAL,CAAeR,OAAf,GAAyB,YAAY;AACjC,QAAI,KAAKlB,MAAL,CAAYQ,WAAhB,EAA6B;AACzB;AACH;;AACD,SAAKR,MAAL,CAAYyO,GAAZ,CAAgB7O,MAAM,CAACe,SAAvB,EAAkC,KAAKC,OAAvC;AACA,SAAKZ,MAAL,CAAYyO,GAAZ,CAAgB7O,MAAM,CAACmB,WAAvB,EAAoC,KAAKC,UAAzC;AACA,SAAKhB,MAAL,CAAYyO,GAAZ,CAAgB7O,MAAM,CAACqB,kBAAvB,EAA2C,KAAKV,eAAhD;AACA,SAAKP,MAAL,CAAYyO,GAAZ,CAAgB7O,MAAM,CAACsB,OAAvB,EAAgC,KAAKA,OAArC;AACA,SAAKlB,MAAL,CAAYyO,GAAZ,CAAgB7O,MAAM,CAACuB,UAAvB,EAAmC,KAAKC,WAAxC;AACA,SAAKpB,MAAL,CAAYyO,GAAZ,CAAgB7O,MAAM,CAACyB,eAAvB,EAAwC,KAAKC,OAA7C;AACA,SAAKtB,MAAL,CAAYyO,GAAZ,CAAgB7O,MAAM,CAAC2B,OAAvB,EAAgC,KAAKC,mBAArC;AACA,SAAKxB,MAAL,CAAYyO,GAAZ,CAAgB7O,MAAM,CAAC6B,eAAvB,EAAwC,KAAKD,mBAA7C;AACH,GAZD;;AAaAzB,EAAAA,IAAI,CAAC2B,SAAL,CAAegN,QAAf,GAA0B,YAAY;AAClC,WAAO,KAAKxO,SAAZ;AACH,GAFD;;AAGAH,EAAAA,IAAI,CAAC2B,SAAL,CAAewM,QAAf,GAA0B,UAAUJ,KAAV,EAAiB;AACvC,WAAO,KAAK5N,SAAL,GAAiB4N,KAAxB;AACH,GAFD;;AAGA/N,EAAAA,IAAI,CAAC2B,SAAL,CAAeiN,sBAAf,GAAwC,YAAY;AAChD,WAAO,KAAKrO,mBAAZ;AACH,GAFD;;AAGAP,EAAAA,IAAI,CAAC2B,SAAL,CAAekN,sBAAf,GAAwC,UAAUd,KAAV,EAAiB;AACrD,SAAKxN,mBAAL,GAA2BwN,KAA3B;AACH,GAFD;;AAGA/N,EAAAA,IAAI,CAAC2B,SAAL,CAAeqM,qBAAf,GAAuC,UAAU3L,KAAV,EAAiB;AACpD,QAAIyM,MAAM,GAAG,IAAItP,UAAJ,EAAb;AACA,QAAIuP,EAAE,GAAG,IAAI1P,WAAJ,CAAgB;AAAEkP,MAAAA,GAAG,EAAE,EAAP;AAAWlG,MAAAA,OAAO,EAAE,IAAI7I,UAAJ;AAApB,KAAhB,CAAT;AACA,QAAIuO,KAAK,GAAGe,MAAM,CAACE,YAAP,CAAoBD,EAApB,EAAwB1M,KAAxB,CAAZ;AACA,QAAIqJ,IAAI,GAAGuD,IAAI,CAACC,KAAL,CAAWnB,KAAK,CAACrC,IAAjB,CAAX;AACA,WAAOxM,MAAM,CAACwM,IAAD,EAAOqC,KAAK,CAACoB,OAAb,CAAb;AACH,GAND;;AAOAnP,EAAAA,IAAI,CAAC2B,SAAL,CAAe4J,YAAf,GAA8B,UAAUP,IAAV,EAAgB3I,KAAhB,EAAuB4D,GAAvB,EAA4B;AACtD,QAAIgF,KAAK,GAAG,IAAZ;;AACA,QAAI8C,KAAJ;AACA,QAAIqB,QAAQ,GAAGpE,IAAf;AACA+C,IAAAA,KAAK,GAAG,KAAKC,qBAAL,CAA2B3L,KAA3B,CAAR;AACA,QAAIiJ,GAAG,GAAG,IAAI/L,QAAJ,EAAV;AACA,QAAI0O,IAAI,GAAG,IAAI1O,QAAJ,EAAX;;AACA,QAAIyL,IAAI,CAACE,WAAL,KAAqB9H,SAArB,IAAkC,KAAKjD,SAAL,CAAekP,aAAf,KAAiC,KAAvE,EAA8E;AAC1EtB,MAAAA,KAAK,CAACuB,MAAN,GAAetE,IAAf;;AACA,UAAIA,IAAI,CAACE,WAAL,KAAqB,MAArB,IAA+BF,IAAI,CAACE,WAAL,KAAqB,QAAxD,EAAkE;AAC9D,YAAIqE,UAAU,GAAGvE,IAAjB;AACAuE,QAAAA,UAAU,CAACtJ,GAAX,GAAiBA,GAAjB;AACA,YAAIuF,OAAO,GAAG,SAAd;AACA+D,QAAAA,UAAU,CAAC/D,OAAD,CAAV,GAAsByC,IAAI,CAACzC,OAA3B;AACA+D,QAAAA,UAAU,CAACxB,KAAX,GAAmBA,KAAnB;AACA,aAAKI,QAAL,CAAc;AAAE/N,UAAAA,SAAS,EAAE,IAAb;AAAmBC,UAAAA,QAAQ,EAAE4N,IAAI,CAAClB;AAAlC,SAAd;AACAqC,QAAAA,QAAQ,CAAClB,OAAT,GAAmBD,IAAI,CAAClB,OAAxB;AACAqC,QAAAA,QAAQ,CAACI,UAAT,GAAsBvB,IAAI,CAACjB,MAA3B;AACA,aAAK/M,MAAL,CAAYmO,OAAZ,CAAoBvO,MAAM,CAACwO,iBAA3B,EAA8CkB,UAA9C;AACAtB,QAAAA,IAAI,CAACzC,OAAL,CAAagB,IAAb,CAAkB,UAAU5K,CAAV,EAAa;AAC3BqJ,UAAAA,KAAK,CAACkD,QAAN,CAAe;AAAE/N,YAAAA,SAAS,EAAE,IAAb;AAAmBC,YAAAA,QAAQ,EAAEiL,GAAG,CAACyB,OAAjC;AAA0CzM,YAAAA,KAAK,EAAEyN,KAAK,CAACzN,KAAvD;AAA8D8D,YAAAA,UAAU,EAAE2J,KAAK,CAAC3J;AAAhF,WAAf;;AACA,cAAImL,UAAU,CAACrE,WAAX,KAA2B,MAA/B,EAAuC;AACnCD,YAAAA,KAAK,CAAChL,MAAN,CAAayF,MAAb,CAAoB7F,MAAM,CAAC8M,WAA3B,EAAwC4C,UAAxC;AACH;;AACDtE,UAAAA,KAAK,CAAChL,MAAN,CAAamO,OAAb,CAAqBvO,MAAM,CAAC4P,eAA5B,EAA6C1B,KAA7C;AACH,SAND,EAOKrB,KAPL,CAOW,YAAY;AAAE,iBAAO,KAAK,CAAZ;AAAgB,SAPzC;AAQH,OAlBD,MAmBK;AACD,aAAKyB,QAAL,CAAc;AAAE/N,UAAAA,SAAS,EAAE,IAAb;AAAmBC,UAAAA,QAAQ,EAAEiL,GAAG,CAACyB,OAAjC;AAA0CzM,UAAAA,KAAK,EAAEyN,KAAK,CAACzN,KAAvD;AAA8D8D,UAAAA,UAAU,EAAE2J,KAAK,CAAC3J;AAAhF,SAAd;AACA,aAAKnE,MAAL,CAAYmO,OAAZ,CAAoBvO,MAAM,CAAC4P,eAA3B,EAA4C1B,KAA5C;AACH;AACJ,KAzBD,MA0BK;AACD,WAAKI,QAAL,CAAc,EAAd;AACA7C,MAAAA,GAAG,CAACyB,OAAJ,CAAY,KAAK9M,MAAL,CAAY6B,UAAxB;AACH;;AACD,WAAOwJ,GAAP;AACH,GAtCD;AAuCA;AACJ;AACA;AACA;;;AACItL,EAAAA,IAAI,CAAC2B,SAAL,CAAeqG,yBAAf,GAA2C,YAAY;AACnD,QAAI0H,aAAa,GAAG,EAApB;AACA,QAAInM,OAAO,GAAG,KAAKtD,MAAL,CAAY6C,UAAZ,EAAd;;AACA,SAAK,IAAIuG,EAAE,GAAG,CAAT,EAAYsG,SAAS,GAAGpM,OAA7B,EAAsC8F,EAAE,GAAGsG,SAAS,CAAClM,MAArD,EAA6D4F,EAAE,EAA/D,EAAmE;AAC/D,UAAIrC,GAAG,GAAG2I,SAAS,CAACtG,EAAD,CAAnB;;AACA,UAAIrC,GAAG,CAAC4I,cAAJ,IAAsB,CAAC3Q,iBAAiB,CAAC+H,GAAG,CAAC7D,KAAL,CAA5C,EAAyD;AACrDuM,QAAAA,aAAa,CAAChM,IAAd,CAAmBsD,GAAG,CAAC7D,KAAvB;AACH;AACJ;;AACD,WAAOuM,aAAP;AACH,GAVD;;AAWA1P,EAAAA,IAAI,CAAC2B,SAAL,CAAeF,mBAAf,GAAqC,YAAY;AAC7C,QAAI,KAAKxB,MAAL,CAAYiJ,cAAZ,IAA8B,KAAKjJ,MAAL,CAAYkJ,cAAZ,CAA2B5F,OAA3B,CAAmCE,MAArE,EAA6E;AACzE7D,MAAAA,sBAAsB,CAAC,KAAKK,MAAN,EAAc,KAAKA,MAAL,CAAYkJ,cAAZ,CAA2B5F,OAAzC,CAAtB;AACH;AACJ,GAJD;;AAKA,SAAOvD,IAAP;AACH,CA9kByB,EAA1B;;AA+kBA,SAASA,IAAT","sourcesContent":["import { isNullOrUndefined, extend, isBlazor } from '@syncfusion/ej2-base';\nimport { Query, DataManager, Predicate, Deferred, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { setFormatter, isGroupAdaptive, getColumnByForeignKeyValue, refreshFilteredColsUid } from '../base/util';\nimport * as events from '../base/constant';\nimport { ValueFormatter } from '../services/value-formatter';\nimport { CheckBoxFilterBase } from '../common/checkbox-filter-base';\n/**\n * Grid data module is used to generate query and data source.\n * @hidden\n */\nvar Data = /** @class */ (function () {\n    /**\n     * Constructor for data module.\n     * @hidden\n     */\n    function Data(parent, serviceLocator) {\n        this.dataState = { isPending: false, resolver: null, group: [] };\n        this.foreignKeyDataState = { isPending: false, resolver: null };\n        this.parent = parent;\n        this.serviceLocator = serviceLocator;\n        this.initDataManager();\n        if (this.parent.isDestroyed || this.getModuleName() === 'foreignKey') {\n            return;\n        }\n        this.parent.on(events.rowsAdded, this.addRows, this);\n        this.parent.on(events.rowPositionChanged, this.reorderRows, this);\n        this.parent.on(events.rowsRemoved, this.removeRows, this);\n        this.parent.on(events.dataSourceModified, this.initDataManager, this);\n        this.parent.on(events.destroy, this.destroy, this);\n        this.parent.on(events.updateData, this.crudActions, this);\n        this.parent.on(events.addDeleteAction, this.getData, this);\n        this.parent.on(events.autoCol, this.refreshFilteredCols, this);\n        this.parent.on(events.columnsPrepared, this.refreshFilteredCols, this);\n    }\n    Data.prototype.reorderRows = function (e) {\n        this.dataManager.dataSource.json.splice(e.toIndex, 0, this.dataManager.dataSource.json.splice(e.fromIndex, 1)[0]);\n    };\n    Data.prototype.getModuleName = function () {\n        return 'data';\n    };\n    /**\n     * The function used to initialize dataManager and external query\n     * @return {void}\n     */\n    Data.prototype.initDataManager = function () {\n        var gObj = this.parent;\n        this.dataManager = gObj.dataSource instanceof DataManager ? gObj.dataSource :\n            (isNullOrUndefined(gObj.dataSource) ? new DataManager() : new DataManager(gObj.dataSource));\n        if (gObj.isAngular && !(gObj.query instanceof Query)) {\n            gObj.setProperties({ query: new Query() }, true);\n        }\n        else {\n            this.isQueryInvokedFromData = true;\n            gObj.query = gObj.query instanceof Query ? gObj.query : new Query();\n        }\n    };\n    /**\n     * The function is used to generate updated Query from Grid model.\n     * @return {Query}\n     * @hidden\n     */\n    Data.prototype.generateQuery = function (skipPage) {\n        var gObj = this.parent;\n        var query = gObj.getQuery().clone();\n        if (this.parent.columnQueryMode === 'ExcludeHidden') {\n            query.select(this.parent.getColumns().filter(function (column) { return !(column.isPrimaryKey !== true && column.visible === false || column.field === undefined); }).map(function (column) { return column.field; }));\n        }\n        else if (this.parent.columnQueryMode === 'Schema') {\n            var selectQueryFields = [];\n            var columns = this.parent.columns;\n            for (var i = 0; i < columns.length; i++) {\n                selectQueryFields.push(columns[i].field);\n            }\n            query.select(selectQueryFields);\n        }\n        this.filterQuery(query);\n        this.searchQuery(query);\n        this.aggregateQuery(query);\n        this.sortQuery(query);\n        if (isGroupAdaptive(this.parent)) {\n            this.virtualGroupPageQuery(query);\n        }\n        else {\n            this.pageQuery(query, skipPage);\n        }\n        this.groupQuery(query);\n        return query;\n    };\n    /** @hidden */\n    Data.prototype.aggregateQuery = function (query, isForeign) {\n        var rows = this.parent.aggregates;\n        for (var i = 0; i < rows.length; i++) {\n            var row = rows[i];\n            for (var j = 0; j < row.columns.length; j++) {\n                var cols = row.columns[j];\n                var types = cols.type instanceof Array ? cols.type : [cols.type];\n                for (var k = 0; k < types.length; k++) {\n                    query.aggregate(types[k].toLowerCase(), cols.field);\n                }\n            }\n        }\n        return query;\n    };\n    Data.prototype.virtualGroupPageQuery = function (query) {\n        var gObj = this.parent;\n        var fName = 'fn';\n        if (query.queries.length) {\n            for (var i = 0; i < query.queries.length; i++) {\n                if (query.queries[i][fName] === 'onPage') {\n                    query.queries.splice(i, 1);\n                }\n            }\n        }\n        return query;\n    };\n    Data.prototype.pageQuery = function (query, skipPage) {\n        var gObj = this.parent;\n        var fName = 'fn';\n        if ((gObj.allowPaging || gObj.enableVirtualization || gObj.enableInfiniteScrolling) && skipPage !== true) {\n            gObj.pageSettings.currentPage = Math.max(1, gObj.pageSettings.currentPage);\n            if (gObj.pageSettings.pageCount <= 0) {\n                gObj.pageSettings.pageCount = 8;\n            }\n            if (gObj.pageSettings.pageSize <= 0) {\n                gObj.pageSettings.pageSize = 12;\n            }\n            if (query.queries.length) {\n                for (var i = 0; i < query.queries.length; i++) {\n                    if (query.queries[i][fName] === 'onPage') {\n                        query.queries.splice(i, 1);\n                    }\n                }\n            }\n            if (!isNullOrUndefined(gObj.infiniteScrollModule) && gObj.enableInfiniteScrolling) {\n                this.parent.notify(events.infinitePageQuery, query);\n            }\n            else {\n                query.page(gObj.pageSettings.currentPage, gObj.pageSettings.pageSize);\n            }\n        }\n        return query;\n    };\n    Data.prototype.groupQuery = function (query) {\n        var gObj = this.parent;\n        if (gObj.allowGrouping && gObj.groupSettings.columns.length) {\n            if (this.parent.groupSettings.enableLazyLoading) {\n                query.lazyLoad.push({ key: 'isLazyLoad', value: this.parent.groupSettings.enableLazyLoading });\n            }\n            var columns = gObj.groupSettings.columns;\n            for (var i = 0, len = columns.length; i < len; i++) {\n                var column = this.getColumnByField(columns[i]);\n                if (!column) {\n                    this.parent.log('initial_action', { moduleName: 'group', columnName: columns[i] });\n                }\n                var isGrpFmt = column.enableGroupByFormat;\n                var format = column.format;\n                if (isGrpFmt) {\n                    query.group(columns[i], this.formatGroupColumn.bind(this), format);\n                }\n                else {\n                    query.group(columns[i], null);\n                }\n            }\n        }\n        return query;\n    };\n    Data.prototype.sortQuery = function (query) {\n        var gObj = this.parent;\n        if ((gObj.allowSorting || gObj.allowGrouping) && gObj.sortSettings.columns.length) {\n            var columns = gObj.sortSettings.columns;\n            var sortGrp = [];\n            for (var i = columns.length - 1; i > -1; i--) {\n                var col = this.getColumnByField(columns[i].field);\n                if (col) {\n                    col.setSortDirection(columns[i].direction);\n                }\n                else {\n                    this.parent.log('initial_action', { moduleName: 'sort', columnName: columns[i].field });\n                    return query;\n                }\n                var fn = columns[i].direction;\n                if (col.sortComparer) {\n                    this.parent.log('grid_sort_comparer');\n                    fn = !this.isRemote() ? col.sortComparer.bind(col) : columns[i].direction;\n                }\n                if (gObj.groupSettings.columns.indexOf(columns[i].field) === -1) {\n                    if (col.isForeignColumn() || col.sortComparer) {\n                        query.sortByForeignKey(col.field, fn, undefined, columns[i].direction.toLowerCase());\n                    }\n                    else {\n                        query.sortBy(col.field, fn);\n                    }\n                }\n                else {\n                    sortGrp.push({ direction: fn, field: col.field });\n                }\n            }\n            for (var i = 0, len = sortGrp.length; i < len; i++) {\n                if (typeof sortGrp[i].direction === 'string') {\n                    query.sortBy(sortGrp[i].field, sortGrp[i].direction);\n                }\n                else {\n                    var col = this.getColumnByField(sortGrp[i].field);\n                    query.sortByForeignKey(sortGrp[i].field, sortGrp[i].direction, undefined, col.getSortDirection().toLowerCase());\n                }\n            }\n        }\n        return query;\n    };\n    Data.prototype.searchQuery = function (query, fcolumn, isForeignKey) {\n        var sSettings = this.parent.searchSettings;\n        var fields = sSettings.fields.length ? sSettings.fields : this.getSearchColumnFieldNames();\n        var predicateList = [];\n        var needForeignKeySearch = false;\n        if (this.parent.searchSettings.key.length) {\n            needForeignKeySearch = this.parent.getForeignKeyColumns().some(function (col) { return fields.indexOf(col.field) > -1; });\n            var adaptor = !isForeignKey ? this.dataManager.adaptor : fcolumn.dataSource.adaptor;\n            if (needForeignKeySearch || (adaptor.getModuleName &&\n                adaptor.getModuleName() === 'ODataV4Adaptor')) {\n                fields = isForeignKey ? [fcolumn.foreignKeyValue] : fields;\n                for (var i = 0; i < fields.length; i++) {\n                    var column = isForeignKey ? fcolumn : this.getColumnByField(fields[i]);\n                    if (column.isForeignColumn() && !isForeignKey) {\n                        predicateList = this.fGeneratePredicate(column, predicateList);\n                    }\n                    else {\n                        predicateList.push(new Predicate(fields[i], sSettings.operator, sSettings.key, sSettings.ignoreCase, sSettings.ignoreAccent));\n                    }\n                }\n                var predList = Predicate.or(predicateList);\n                predList.key = sSettings.key;\n                query.where(predList);\n            }\n            else {\n                query.search(sSettings.key, fields, sSettings.operator, sSettings.ignoreCase, sSettings.ignoreAccent);\n            }\n        }\n        return query;\n    };\n    Data.prototype.filterQuery = function (query, column, skipFoerign) {\n        var gObj = this.parent;\n        var predicateList = [];\n        var actualFilter = [];\n        var foreignColumn = this.parent.getForeignKeyColumns();\n        if (gObj.allowFiltering && gObj.filterSettings.columns.length) {\n            var columns = column ? column : gObj.filterSettings.columns;\n            var colType = {};\n            for (var _i = 0, _a = gObj.getColumns(); _i < _a.length; _i++) {\n                var col = _a[_i];\n                colType[col.field] = col.filter.type ? col.filter.type : gObj.filterSettings.type;\n            }\n            var foreignCols = [];\n            var defaultFltrCols = [];\n            for (var _b = 0, columns_1 = columns; _b < columns_1.length; _b++) {\n                var col = columns_1[_b];\n                var gridColumn = gObj.getColumnByField(col.field);\n                if (isNullOrUndefined(col.type) && gridColumn && (gridColumn.type === 'date' || gridColumn.type === 'datetime')) {\n                    col.type = gObj.getColumnByField(col.field).type;\n                }\n                if (col.isForeignKey) {\n                    foreignCols.push(col);\n                }\n                else {\n                    defaultFltrCols.push(col);\n                }\n            }\n            if (defaultFltrCols.length) {\n                if (gObj.filterSettings.type === 'FilterBar' || gObj.filterSettings.type === 'Menu') {\n                    for (var i = 0, len = defaultFltrCols.length; i < len; i++) {\n                        defaultFltrCols[i].uid = defaultFltrCols[i].uid ||\n                            this.parent.grabColumnByFieldFromAllCols(defaultFltrCols[i].field).uid;\n                    }\n                }\n                var excelPredicate = CheckBoxFilterBase.getPredicate(defaultFltrCols);\n                for (var _c = 0, _d = Object.keys(excelPredicate); _c < _d.length; _c++) {\n                    var prop = _d[_c];\n                    predicateList.push(excelPredicate[prop]);\n                }\n            }\n            if (foreignCols.length) {\n                for (var _e = 0, foreignCols_1 = foreignCols; _e < foreignCols_1.length; _e++) {\n                    var col = foreignCols_1[_e];\n                    col.uid = col.uid || this.parent.grabColumnByFieldFromAllCols(col.field).uid;\n                    var column_1 = this.parent.grabColumnByUidFromAllCols(col.uid);\n                    if (!column_1) {\n                        this.parent.log('initial_action', { moduleName: 'filter', columnName: col.field });\n                    }\n                    if (column_1.isForeignColumn() && getColumnByForeignKeyValue(col.field, foreignColumn) && !skipFoerign) {\n                        actualFilter.push(col);\n                        predicateList = this.fGeneratePredicate(column_1, predicateList);\n                    }\n                    else {\n                        var excelPredicate = CheckBoxFilterBase.getPredicate(columns);\n                        for (var _f = 0, _g = Object.keys(excelPredicate); _f < _g.length; _f++) {\n                            var prop = _g[_f];\n                            predicateList.push(excelPredicate[prop]);\n                        }\n                    }\n                }\n            }\n            if (predicateList.length) {\n                query.where(Predicate.and(predicateList));\n            }\n            else {\n                this.parent.notify(events.showEmptyGrid, {});\n            }\n        }\n        return query;\n    };\n    Data.prototype.fGeneratePredicate = function (col, predicateList) {\n        var fPredicate = {};\n        if (col) {\n            this.parent.notify(events.generateQuery, { predicate: fPredicate, column: col });\n            if (fPredicate.predicate.predicates.length) {\n                predicateList.push(fPredicate.predicate);\n            }\n        }\n        return predicateList;\n    };\n    /**\n     * The function is used to get dataManager promise by executing given Query.\n     * @param  {Query} query - Defines the query which will execute along with data processing.\n     * @return {Promise<Object>}\n     * @hidden\n     */\n    Data.prototype.getData = function (args, query) {\n        var _this = this;\n        if (args === void 0) { args = { requestType: '' }; }\n        var key = this.getKey(args.foreignKeyData &&\n            Object.keys(args.foreignKeyData).length ?\n            args.foreignKeyData : this.parent.getPrimaryKeyFieldNames());\n        this.parent.log('datasource_syntax_mismatch', { dataState: this.parent });\n        if (this.parent.dataSource && 'result' in this.parent.dataSource) {\n            var def = this.eventPromise(args, query, key);\n            return def.promise;\n        }\n        else {\n            var crud = void 0;\n            switch (args.requestType) {\n                case 'delete':\n                    query = query ? query : this.generateQuery();\n                    var len = Object.keys(args.data).length;\n                    if (len === 1) {\n                        crud = this.dataManager.remove(key, args.data[0], query.fromTable, query);\n                    }\n                    else {\n                        var changes = {\n                            addedRecords: [],\n                            deletedRecords: [],\n                            changedRecords: []\n                        };\n                        changes.deletedRecords = args.data;\n                        crud = this.dataManager.saveChanges(changes, key, query.fromTable, query.requiresCount());\n                    }\n                    break;\n                case 'save':\n                    if (isBlazor() && this.parent.isServerRendered) {\n                        this.parent.notify('offset', args);\n                    }\n                    query = query ? query : this.generateQuery();\n                    args.index = isNullOrUndefined(args.index) ? 0 : args.index;\n                    crud = this.dataManager.insert(args.data, query.fromTable, query, args.index);\n                    break;\n            }\n            var promise = 'promise';\n            args[promise] = crud;\n            if (crud && !Array.isArray(crud) && !crud.hasOwnProperty('deletedRecords')) {\n                if (isBlazor()) {\n                    return crud.then(function (result) {\n                        return _this.insert(query, args);\n                    }).catch(function (e) {\n                        return null;\n                    });\n                }\n                else {\n                    return crud.then(function (result) {\n                        return _this.insert(query, args);\n                    });\n                }\n            }\n            else {\n                return this.insert(query, args);\n            }\n        }\n    };\n    Data.prototype.insert = function (query, args) {\n        if (args.requestType === 'save') {\n            this.parent.notify(events.recordAdded, args);\n        }\n        return this.executeQuery(query);\n    };\n    Data.prototype.executeQuery = function (query) {\n        var _this = this;\n        if (this.dataManager.ready) {\n            var deferred_1 = new Deferred();\n            var ready = this.dataManager.ready;\n            ready.then(function (e) {\n                _this.dataManager.executeQuery(query).then(function (result) {\n                    deferred_1.resolve(result);\n                });\n            }).catch(function (e) {\n                deferred_1.reject(e);\n            });\n            return deferred_1.promise;\n        }\n        else {\n            return this.dataManager.executeQuery(query);\n        }\n    };\n    Data.prototype.formatGroupColumn = function (value, field) {\n        var gObj = this.parent;\n        var serviceLocator = this.serviceLocator;\n        var column = this.getColumnByField(field);\n        var date = value;\n        if (!column.type) {\n            column.type = date.getDay ? (date.getHours() > 0 || date.getMinutes() > 0 ||\n                date.getSeconds() > 0 || date.getMilliseconds() > 0 ? 'datetime' : 'date') : typeof (value);\n        }\n        if (isNullOrUndefined(column.getFormatter())) {\n            setFormatter(serviceLocator, column);\n        }\n        var formatVal = ValueFormatter.prototype.toView(value, column.getFormatter());\n        return formatVal;\n    };\n    Data.prototype.crudActions = function (args) {\n        var query = this.generateQuery();\n        var promise = null;\n        var pr = 'promise';\n        var key = this.getKey(args.foreignKeyData &&\n            Object.keys(args.foreignKeyData).length ? args.foreignKeyData :\n            this.parent.getPrimaryKeyFieldNames());\n        if (this.parent.dataSource && 'result' in this.parent.dataSource) {\n            this.eventPromise(args, query, key);\n        }\n        switch (args.requestType) {\n            case 'save':\n                if (isBlazor() && this.parent.isServerRendered) {\n                    this.parent.notify('offset', args);\n                }\n                promise = this.dataManager.update(key, args.data, query.fromTable, query, args.previousData);\n                break;\n        }\n        args[pr] = promise ? promise : args[pr];\n        this.parent.notify(events.crudAction, args);\n    };\n    /** @hidden */\n    Data.prototype.saveChanges = function (changes, key, original, query) {\n        if (query === void 0) { query = this.generateQuery(); }\n        query.requiresCount();\n        if ('result' in this.parent.dataSource) {\n            var state = void 0;\n            state = this.getStateEventArgument(query);\n            var deff = new Deferred();\n            var args = {\n                requestType: 'batchsave', changes: changes, key: key, query: query,\n                endEdit: deff.resolve\n            };\n            this.setState({ isPending: true, resolver: deff.resolve });\n            this.parent.trigger(events.dataSourceChanged, args);\n            return deff.promise;\n        }\n        else {\n            var changedRecords = 'changedRecords';\n            var addedRecords = 'addedRecords';\n            var data = 'data';\n            if (isBlazor() && this.parent.isServerRendered) {\n                for (var i = 0; i < changes[changedRecords].length; i++) {\n                    var args = { data: changes[changedRecords][i] };\n                    this.parent.notify('offset', args);\n                    changes[changedRecords][i] = args[data];\n                }\n                for (var i = 0; i < changes[addedRecords].length; i++) {\n                    var args = { data: changes[addedRecords][i] };\n                    this.parent.notify('offset', args);\n                    changes[addedRecords][i] = args[data];\n                }\n            }\n            var promise = this.dataManager.saveChanges(changes, key, query.fromTable, query, original);\n            return promise;\n        }\n    };\n    Data.prototype.getKey = function (keys) {\n        if (keys && keys.length) {\n            return keys[0];\n        }\n        return undefined;\n    };\n    /** @hidden */\n    Data.prototype.isRemote = function () {\n        return this.dataManager.dataSource.offline !== true && this.dataManager.dataSource.url !== undefined &&\n            this.dataManager.dataSource.url !== '';\n    };\n    Data.prototype.addRows = function (e) {\n        for (var i = e.records.length; i > 0; i--) {\n            this.dataManager.dataSource.json.splice(e.toIndex, 0, e.records[i - 1]);\n        }\n    };\n    Data.prototype.removeRows = function (e) {\n        var json = this.dataManager.dataSource.json;\n        this.dataManager.dataSource.json = json.filter(function (value, index) { return e.records.indexOf(value) === -1; });\n    };\n    Data.prototype.getColumnByField = function (field) {\n        var col;\n        return (this.parent.columnModel).some(function (column) {\n            col = column;\n            return column.field === field;\n        }) && col;\n    };\n    Data.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowsAdded, this.addRows);\n        this.parent.off(events.rowsRemoved, this.removeRows);\n        this.parent.off(events.dataSourceModified, this.initDataManager);\n        this.parent.off(events.destroy, this.destroy);\n        this.parent.off(events.updateData, this.crudActions);\n        this.parent.off(events.addDeleteAction, this.getData);\n        this.parent.off(events.autoCol, this.refreshFilteredCols);\n        this.parent.off(events.columnsPrepared, this.refreshFilteredCols);\n    };\n    Data.prototype.getState = function () {\n        return this.dataState;\n    };\n    Data.prototype.setState = function (state) {\n        return this.dataState = state;\n    };\n    Data.prototype.getForeignKeyDataState = function () {\n        return this.foreignKeyDataState;\n    };\n    Data.prototype.setForeignKeyDataState = function (state) {\n        this.foreignKeyDataState = state;\n    };\n    Data.prototype.getStateEventArgument = function (query) {\n        var adaptr = new UrlAdaptor();\n        var dm = new DataManager({ url: '', adaptor: new UrlAdaptor });\n        var state = adaptr.processQuery(dm, query);\n        var data = JSON.parse(state.data);\n        return extend(data, state.pvtData);\n    };\n    Data.prototype.eventPromise = function (args, query, key) {\n        var _this = this;\n        var state;\n        var dataArgs = args;\n        state = this.getStateEventArgument(query);\n        var def = new Deferred();\n        var deff = new Deferred();\n        if (args.requestType !== undefined && this.dataState.isDataChanged !== false) {\n            state.action = args;\n            if (args.requestType === 'save' || args.requestType === 'delete') {\n                var editArgs_1 = args;\n                editArgs_1.key = key;\n                var promise = 'promise';\n                editArgs_1[promise] = deff.promise;\n                editArgs_1.state = state;\n                this.setState({ isPending: true, resolver: deff.resolve });\n                dataArgs.endEdit = deff.resolve;\n                dataArgs.cancelEdit = deff.reject;\n                this.parent.trigger(events.dataSourceChanged, editArgs_1);\n                deff.promise.then(function (e) {\n                    _this.setState({ isPending: true, resolver: def.resolve, group: state.group, aggregates: state.aggregates });\n                    if (editArgs_1.requestType === 'save') {\n                        _this.parent.notify(events.recordAdded, editArgs_1);\n                    }\n                    _this.parent.trigger(events.dataStateChange, state);\n                })\n                    .catch(function () { return void 0; });\n            }\n            else {\n                this.setState({ isPending: true, resolver: def.resolve, group: state.group, aggregates: state.aggregates });\n                this.parent.trigger(events.dataStateChange, state);\n            }\n        }\n        else {\n            this.setState({});\n            def.resolve(this.parent.dataSource);\n        }\n        return def;\n    };\n    /**\n     * Gets the columns where searching needs to be performed from the Grid.\n     * @return {string[]}\n     */\n    Data.prototype.getSearchColumnFieldNames = function () {\n        var colFieldNames = [];\n        var columns = this.parent.getColumns();\n        for (var _i = 0, columns_2 = columns; _i < columns_2.length; _i++) {\n            var col = columns_2[_i];\n            if (col.allowSearching && !isNullOrUndefined(col.field)) {\n                colFieldNames.push(col.field);\n            }\n        }\n        return colFieldNames;\n    };\n    Data.prototype.refreshFilteredCols = function () {\n        if (this.parent.allowFiltering && this.parent.filterSettings.columns.length) {\n            refreshFilteredColsUid(this.parent, this.parent.filterSettings.columns);\n        }\n    };\n    return Data;\n}());\nexport { Data };\n"]},"metadata":{},"sourceType":"module"}