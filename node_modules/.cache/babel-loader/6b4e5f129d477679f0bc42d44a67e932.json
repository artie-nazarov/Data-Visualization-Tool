{"ast":null,"code":"import { isBlazor, removeClass, addClass } from '@syncfusion/ej2-base';\nimport { closest, classList, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Grid } from '../base/grid';\nimport { parents, getUid, appendChildren } from '../base/util';\nimport * as events from '../base/constant';\nimport { AriaService } from '../services/aria-service';\nimport { Row } from '../models/row';\nimport { Cell } from '../models/cell';\nimport { CellType } from '../base/enum';\n/**\n * The `DetailRow` module is used to handle detail template and hierarchy Grid operations.\n */\n\nvar DetailRow =\n/** @class */\nfunction () {\n  /**\n   * Constructor for the Grid detail template module\n   * @hidden\n   */\n  function DetailRow(parent, locator) {\n    //Internal variables\n    this.aria = new AriaService();\n    this.parent = parent;\n\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.focus = locator.getService('focus');\n    this.parent.on(events.click, this.clickHandler, this);\n    this.parent.on(events.destroy, this.destroy, this);\n    this.parent.on(events.keyPressed, this.keyPressHandler, this);\n    this.parent.on(events.expandChildGrid, this.expand, this);\n    this.parent.on(events.columnVisibilityChanged, this.refreshColSpan, this);\n  }\n\n  DetailRow.prototype.clickHandler = function (e) {\n    this.toogleExpandcollapse(closest(e.target, 'td'));\n  }; // tslint:disable-next-line:max-func-body-length\n\n\n  DetailRow.prototype.toogleExpandcollapse = function (target) {\n    var gObj = this.parent;\n    var table = this.parent.getContentTable();\n    var lastrowIdx = this.parent.getCurrentViewRecords().length - 1;\n    var parent = 'parentDetails';\n    var isServerRendered = 'isServerRendered';\n    var childGrid;\n    var isExpanded = target && target.classList.contains('e-detailrowcollapse');\n\n    if (!(target && (target.classList.contains('e-detailrowcollapse') || target.classList.contains('e-detailrowexpand')))) {\n      return;\n    }\n\n    if (isBlazor() && this.parent[isServerRendered]) {\n      this.parent.notify('detailclick', target);\n      return;\n    }\n\n    var tr = target.parentElement;\n    var uid = tr.getAttribute('data-uid');\n    var rowObj = gObj.getRowObjectFromUID(uid);\n    var nextRow = this.parent.getContentTable().querySelector('tbody').children[tr.rowIndex + 1];\n\n    if (target.classList.contains('e-detailrowcollapse')) {\n      var data = rowObj.data;\n\n      if (this.isDetailRow(nextRow)) {\n        nextRow.style.display = '';\n        gObj.notify(events.detailStateChange, {\n          data: data,\n          childGrid: gObj.childGrid,\n          detailElement: target,\n          isExpanded: isExpanded\n        });\n      } else if (gObj.getDetailTemplate() || gObj.childGrid) {\n        var rowId = getUid('grid-row');\n        var detailRow = this.parent.createElement('tr', {\n          className: 'e-detailrow',\n          attrs: {\n            'data-uid': rowId\n          }\n        });\n        var detailCell = this.parent.createElement('td', {\n          className: 'e-detailcell'\n        });\n        var colSpan = this.parent.getVisibleColumns().length;\n\n        if (this.parent.allowRowDragAndDrop) {\n          colSpan++;\n        }\n\n        detailCell.setAttribute('colspan', colSpan.toString());\n        var row = new Row({\n          isDataRow: true,\n          isExpand: true,\n          uid: rowId,\n          isDetailRow: true,\n          cells: [new Cell({\n            cellType: CellType.Indent\n          }), new Cell({\n            isDataCell: true,\n            visible: true\n          })]\n        });\n\n        for (var i = 0, len = gObj.groupSettings.columns.length; i < len; i++) {\n          detailRow.appendChild(this.parent.createElement('td', {\n            className: 'e-indentcell'\n          }));\n          row.cells.unshift(new Cell({\n            cellType: CellType.Indent\n          }));\n        }\n\n        detailRow.appendChild(this.parent.createElement('td', {\n          className: 'e-detailindentcell'\n        }));\n        detailRow.appendChild(detailCell);\n        tr.parentNode.insertBefore(detailRow, tr.nextSibling);\n\n        if (gObj.detailTemplate) {\n          var isReactCompiler = this.parent.isReact && typeof gObj.detailTemplate !== 'string';\n          var detailTemplateID = gObj.element.id + 'detailTemplate';\n\n          if (isReactCompiler) {\n            gObj.getDetailTemplate()(data, gObj, 'detailTemplate', detailTemplateID, null, null, detailCell);\n            this.parent.renderTemplates();\n          } else {\n            appendChildren(detailCell, gObj.getDetailTemplate()(data, gObj, 'detailTemplate', detailTemplateID));\n          }\n\n          if (isBlazor()) {\n            updateBlazorTemplate(detailTemplateID, 'DetailTemplate', gObj, false);\n          }\n        } else {\n          childGrid = new Grid(this.getGridModel(gObj, rowObj, gObj.printMode));\n\n          if (childGrid.query) {\n            childGrid.query = childGrid.query.clone();\n          }\n\n          childGrid[parent] = {\n            parentID: gObj.element.id,\n            parentPrimaryKeys: gObj.getPrimaryKeyFieldNames(),\n            parentKeyField: gObj.childGrid.queryString,\n            parentKeyFieldValue: data[gObj.childGrid.queryString],\n            parentRowData: data\n          };\n\n          if (gObj.isPrinting) {\n            childGrid.isPrinting = true;\n            childGrid.on(events.contentReady, this.promiseResolve(childGrid), this);\n            childGrid.on(events.onEmpty, this.promiseResolve(childGrid), this);\n          }\n\n          rowObj.childGrid = childGrid;\n          var modules = childGrid.getInjectedModules();\n          var injectedModues = gObj.getInjectedModules();\n\n          if (!modules || modules.length !== injectedModues.length) {\n            childGrid.setInjectedModules(injectedModues);\n          }\n\n          var gridElem = this.parent.createElement('div', {\n            id: 'child' + parents(tr, 'e-grid').length + '_grid' + tr.rowIndex + getUid('')\n          });\n          detailCell.appendChild(gridElem);\n          childGrid.appendTo(gridElem);\n        }\n\n        detailRow.appendChild(detailCell);\n\n        if (tr.nextSibling) {\n          tr.parentNode.insertBefore(detailRow, tr.nextSibling);\n        } else {\n          tr.parentNode.appendChild(detailRow);\n        }\n\n        gObj.getRows().splice(tr.rowIndex + 1, 0, detailRow);\n        gObj.getRowsObject().splice(rowObj.index + 1, 0, row);\n        gObj.trigger(events.detailDataBound, {\n          detailElement: detailCell,\n          data: data,\n          childGrid: childGrid\n        });\n        gObj.notify(events.detailDataBound, {\n          rows: gObj.getRowsObject()\n        });\n      }\n\n      classList(target, ['e-detailrowexpand'], ['e-detailrowcollapse']);\n      classList(target.firstElementChild, ['e-dtdiagonaldown', 'e-icon-gdownarrow'], ['e-dtdiagonalright', 'e-icon-grightarrow']);\n      rowObj.isExpand = true;\n\n      if (target.classList.contains('e-lastrowcell') && this.parent.getContent().clientHeight > table.scrollHeight) {\n        removeClass(target.parentElement.querySelectorAll('td'), 'e-lastrowcell');\n        var detailrowIdx = table.querySelector('tbody').querySelectorAll('.e-detailrow').length - 1;\n        addClass(table.querySelector('tbody').querySelectorAll('.e-detailrow')[detailrowIdx].childNodes, ['e-lastrowcell']);\n        this.lastrowcell = true;\n      }\n\n      this.aria.setExpand(target, true);\n    } else {\n      if (this.isDetailRow(nextRow)) {\n        nextRow.style.display = 'none';\n        gObj.notify(events.detailStateChange, {\n          data: rowObj.data,\n          childGrid: gObj.childGrid,\n          detailElement: target,\n          isExpanded: isExpanded\n        });\n      }\n\n      classList(target, ['e-detailrowcollapse'], ['e-detailrowexpand']);\n      classList(target.firstElementChild, ['e-dtdiagonalright', 'e-icon-grightarrow'], ['e-dtdiagonaldown', 'e-icon-gdownarrow']);\n\n      if (parseInt(tr.getAttribute('aria-rowindex'), 10) === lastrowIdx && this.lastrowcell) {\n        addClass(target.parentElement.querySelectorAll('td'), 'e-lastrowcell');\n        this.lastrowcell = false;\n      }\n\n      rowObj.isExpand = false;\n      this.aria.setExpand(target, false);\n    }\n  };\n  /**\n   * @hidden\n   * @param gObj\n   * @param rowObj\n   */\n\n\n  DetailRow.prototype.getGridModel = function (gObj, rowObj, printMode) {\n    var gridModel;\n\n    if (gObj.isPrinting && rowObj.isExpand && gObj.expandedRows && gObj.expandedRows[rowObj.index] && gObj.expandedRows[rowObj.index].gridModel) {\n      gObj.expandedRows[rowObj.index].gridModel.hierarchyPrintMode = gObj.childGrid.hierarchyPrintMode;\n      gridModel = gObj.expandedRows[rowObj.index].gridModel;\n    } else {\n      if (gObj.isPrinting && gObj.childGrid.allowPaging) {\n        gObj.childGrid.allowPaging = printMode === 'CurrentPage';\n        gridModel = gObj.childGrid;\n      } else {\n        gridModel = gObj.childGrid;\n      }\n    }\n\n    return gridModel;\n  };\n\n  DetailRow.prototype.promiseResolve = function (grid) {\n    var _this = this;\n\n    return function () {\n      grid.off(events.contentReady, _this.promiseResolve);\n      grid.off(events.onEmpty, _this.promiseResolve);\n      grid.notify(events.hierarchyPrint, {});\n    };\n  };\n\n  DetailRow.prototype.isDetailRow = function (row) {\n    return row && row.classList.contains('e-detailrow');\n  };\n\n  DetailRow.prototype.destroy = function () {\n    var gridElement = this.parent.element;\n\n    if (this.parent.isDestroyed || !gridElement || !gridElement.querySelector('.e-gridheader') && !gridElement.querySelector('.e-gridcontent')) {\n      return;\n    }\n\n    this.parent.off(events.click, this.clickHandler);\n    this.parent.off(events.destroy, this.destroy);\n    this.parent.off(events.keyPressed, this.keyPressHandler);\n    this.parent.off(events.expandChildGrid, this.expand);\n    this.parent.off(events.columnVisibilityChanged, this.refreshColSpan);\n  };\n\n  DetailRow.prototype.getTDfromIndex = function (index, className) {\n    var tr = this.parent.getDataRows()[index];\n\n    if (tr && tr.querySelector(className)) {\n      return tr.querySelector(className);\n    }\n\n    return null;\n  };\n  /**\n   * Expands a detail row with the given target.\n   * @param  {Element} target - Defines the collapsed element to expand.\n   * @return {void}\n   */\n\n\n  DetailRow.prototype.expand = function (target) {\n    if (!isNaN(target)) {\n      target = this.getTDfromIndex(target, '.e-detailrowcollapse');\n    }\n\n    if (target && target.classList.contains('e-detailrowcollapse')) {\n      this.toogleExpandcollapse(target);\n    }\n  };\n  /**\n   * Collapses a detail row with the given target.\n   * @param  {Element} target - Defines the expanded element to collapse.\n   * @return {void}\n   */\n\n\n  DetailRow.prototype.collapse = function (target) {\n    if (!isNaN(target)) {\n      target = this.getTDfromIndex(target, '.e-detailrowexpand');\n    }\n\n    if (target && target.classList.contains('e-detailrowexpand')) {\n      this.toogleExpandcollapse(target);\n    }\n  };\n  /**\n   * Expands all the detail rows of the Grid.\n   * @return {void}\n   */\n\n\n  DetailRow.prototype.expandAll = function () {\n    this.expandCollapse(true);\n    this.parent.trigger(events.actionComplete, {\n      requestType: 'expandAllComplete',\n      type: events.actionComplete,\n      moduleObj: this\n    });\n  };\n  /**\n   * Collapses all the detail rows of the Grid.\n   * @return {void}\n   */\n\n\n  DetailRow.prototype.collapseAll = function () {\n    this.expandCollapse(false);\n    this.parent.trigger(events.actionComplete, {\n      requestType: 'collapseAllComplete',\n      type: events.actionComplete,\n      moduleObj: this\n    });\n  };\n\n  DetailRow.prototype.expandCollapse = function (isExpand) {\n    var td;\n    var rows = this.parent.getDataRows();\n\n    for (var i = 0, len = rows.length; i < len; i++) {\n      td = rows[i].querySelector('.e-detailrowcollapse, .e-detailrowexpand');\n      isExpand ? this.expand(td) : this.collapse(td);\n    }\n  };\n\n  DetailRow.prototype.keyPressHandler = function (e) {\n    var gObj = this.parent;\n\n    switch (e.action) {\n      case 'ctrlDownArrow':\n        this.expandAll();\n        break;\n\n      case 'ctrlUpArrow':\n        this.collapseAll();\n        break;\n\n      case 'altUpArrow':\n      case 'altDownArrow':\n        var selected = gObj.allowSelection ? gObj.getSelectedRowIndexes() : [];\n\n        if (selected.length) {\n          var dataRow = gObj.getDataRows()[selected[selected.length - 1]];\n          var td = dataRow.querySelector('.e-detailrowcollapse, .e-detailrowexpand');\n          e.action === 'altDownArrow' ? this.expand(td) : this.collapse(td);\n        }\n\n        break;\n\n      case 'enter':\n        if (this.parent.isEdit) {\n          return;\n        }\n\n        var element = this.focus.getFocusedElement();\n\n        if (!e.target.classList.contains('e-detailrowcollapse') && !e.target.classList.contains('e-detailrowexpand')) {\n          break;\n        }\n\n        this.toogleExpandcollapse(element);\n        break;\n    }\n  };\n\n  DetailRow.prototype.refreshColSpan = function () {\n    var detailrows = this.parent.contentModule.getTable().querySelectorAll('tr.e-detailrow');\n    var colSpan = this.parent.getVisibleColumns().length;\n\n    for (var i = 0; i < detailrows.length; i++) {\n      detailrows[i].querySelector('.e-detailcell').setAttribute('colspan', colSpan + '');\n    }\n  };\n  /**\n   * For internal use only - Get the module name.\n   * @private\n   */\n\n\n  DetailRow.prototype.getModuleName = function () {\n    return 'detailRow';\n  };\n\n  return DetailRow;\n}();\n\nexport { DetailRow };","map":{"version":3,"sources":["C:/Users/appsk/Documents/Projects/PredictiveMaintenance/React PDM/env/frontend/node_modules/@syncfusion/ej2-grids/src/grid/actions/detail-row.js"],"names":["isBlazor","removeClass","addClass","closest","classList","updateBlazorTemplate","Grid","parents","getUid","appendChildren","events","AriaService","Row","Cell","CellType","DetailRow","parent","locator","aria","isDestroyed","focus","getService","on","click","clickHandler","destroy","keyPressed","keyPressHandler","expandChildGrid","expand","columnVisibilityChanged","refreshColSpan","prototype","e","toogleExpandcollapse","target","gObj","table","getContentTable","lastrowIdx","getCurrentViewRecords","length","isServerRendered","childGrid","isExpanded","contains","notify","tr","parentElement","uid","getAttribute","rowObj","getRowObjectFromUID","nextRow","querySelector","children","rowIndex","data","isDetailRow","style","display","detailStateChange","detailElement","getDetailTemplate","rowId","detailRow","createElement","className","attrs","detailCell","colSpan","getVisibleColumns","allowRowDragAndDrop","setAttribute","toString","row","isDataRow","isExpand","cells","cellType","Indent","isDataCell","visible","i","len","groupSettings","columns","appendChild","unshift","parentNode","insertBefore","nextSibling","detailTemplate","isReactCompiler","isReact","detailTemplateID","element","id","renderTemplates","getGridModel","printMode","query","clone","parentID","parentPrimaryKeys","getPrimaryKeyFieldNames","parentKeyField","queryString","parentKeyFieldValue","parentRowData","isPrinting","contentReady","promiseResolve","onEmpty","modules","getInjectedModules","injectedModues","setInjectedModules","gridElem","appendTo","getRows","splice","getRowsObject","index","trigger","detailDataBound","rows","firstElementChild","getContent","clientHeight","scrollHeight","querySelectorAll","detailrowIdx","childNodes","lastrowcell","setExpand","parseInt","gridModel","expandedRows","hierarchyPrintMode","allowPaging","grid","_this","off","hierarchyPrint","gridElement","getTDfromIndex","getDataRows","isNaN","collapse","expandAll","expandCollapse","actionComplete","requestType","type","moduleObj","collapseAll","td","action","selected","allowSelection","getSelectedRowIndexes","dataRow","isEdit","getFocusedElement","detailrows","contentModule","getTable","getModuleName"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,QAAhC,QAAgD,sBAAhD;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,oBAA7B,QAAyD,sBAAzD;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,cAA1B,QAAgD,cAAhD;AACA,OAAO,KAAKC,MAAZ,MAAwB,kBAAxB;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,SAASC,IAAT,QAAqB,gBAArB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA;AACA;AACA;;AACA,IAAIC,SAAS;AAAG;AAAe,YAAY;AACvC;AACJ;AACA;AACA;AACI,WAASA,SAAT,CAAmBC,MAAnB,EAA2BC,OAA3B,EAAoC;AAChC;AACA,SAAKC,IAAL,GAAY,IAAIP,WAAJ,EAAZ;AACA,SAAKK,MAAL,GAAcA,MAAd;;AACA,QAAI,KAAKA,MAAL,CAAYG,WAAhB,EAA6B;AACzB;AACH;;AACD,SAAKC,KAAL,GAAaH,OAAO,CAACI,UAAR,CAAmB,OAAnB,CAAb;AACA,SAAKL,MAAL,CAAYM,EAAZ,CAAeZ,MAAM,CAACa,KAAtB,EAA6B,KAAKC,YAAlC,EAAgD,IAAhD;AACA,SAAKR,MAAL,CAAYM,EAAZ,CAAeZ,MAAM,CAACe,OAAtB,EAA+B,KAAKA,OAApC,EAA6C,IAA7C;AACA,SAAKT,MAAL,CAAYM,EAAZ,CAAeZ,MAAM,CAACgB,UAAtB,EAAkC,KAAKC,eAAvC,EAAwD,IAAxD;AACA,SAAKX,MAAL,CAAYM,EAAZ,CAAeZ,MAAM,CAACkB,eAAtB,EAAuC,KAAKC,MAA5C,EAAoD,IAApD;AACA,SAAKb,MAAL,CAAYM,EAAZ,CAAeZ,MAAM,CAACoB,uBAAtB,EAA+C,KAAKC,cAApD,EAAoE,IAApE;AACH;;AACDhB,EAAAA,SAAS,CAACiB,SAAV,CAAoBR,YAApB,GAAmC,UAAUS,CAAV,EAAa;AAC5C,SAAKC,oBAAL,CAA0B/B,OAAO,CAAC8B,CAAC,CAACE,MAAH,EAAW,IAAX,CAAjC;AACH,GAFD,CAnBuC,CAsBvC;;;AACApB,EAAAA,SAAS,CAACiB,SAAV,CAAoBE,oBAApB,GAA2C,UAAUC,MAAV,EAAkB;AACzD,QAAIC,IAAI,GAAG,KAAKpB,MAAhB;AACA,QAAIqB,KAAK,GAAG,KAAKrB,MAAL,CAAYsB,eAAZ,EAAZ;AACA,QAAIC,UAAU,GAAG,KAAKvB,MAAL,CAAYwB,qBAAZ,GAAoCC,MAApC,GAA6C,CAA9D;AACA,QAAIzB,MAAM,GAAG,eAAb;AACA,QAAI0B,gBAAgB,GAAG,kBAAvB;AACA,QAAIC,SAAJ;AACA,QAAIC,UAAU,GAAGT,MAAM,IAAIA,MAAM,CAAC/B,SAAP,CAAiByC,QAAjB,CAA0B,qBAA1B,CAA3B;;AACA,QAAI,EAAEV,MAAM,KAAKA,MAAM,CAAC/B,SAAP,CAAiByC,QAAjB,CAA0B,qBAA1B,KAAoDV,MAAM,CAAC/B,SAAP,CAAiByC,QAAjB,CAA0B,mBAA1B,CAAzD,CAAR,CAAJ,EAAuH;AACnH;AACH;;AACD,QAAI7C,QAAQ,MAAM,KAAKgB,MAAL,CAAY0B,gBAAZ,CAAlB,EAAiD;AAC7C,WAAK1B,MAAL,CAAY8B,MAAZ,CAAmB,aAAnB,EAAkCX,MAAlC;AACA;AACH;;AACD,QAAIY,EAAE,GAAGZ,MAAM,CAACa,aAAhB;AACA,QAAIC,GAAG,GAAGF,EAAE,CAACG,YAAH,CAAgB,UAAhB,CAAV;AACA,QAAIC,MAAM,GAAGf,IAAI,CAACgB,mBAAL,CAAyBH,GAAzB,CAAb;AACA,QAAII,OAAO,GAAG,KAAKrC,MAAL,CAAYsB,eAAZ,GAA8BgB,aAA9B,CAA4C,OAA5C,EAAqDC,QAArD,CAA8DR,EAAE,CAACS,QAAH,GAAc,CAA5E,CAAd;;AACA,QAAIrB,MAAM,CAAC/B,SAAP,CAAiByC,QAAjB,CAA0B,qBAA1B,CAAJ,EAAsD;AAClD,UAAIY,IAAI,GAAGN,MAAM,CAACM,IAAlB;;AACA,UAAI,KAAKC,WAAL,CAAiBL,OAAjB,CAAJ,EAA+B;AAC3BA,QAAAA,OAAO,CAACM,KAAR,CAAcC,OAAd,GAAwB,EAAxB;AACAxB,QAAAA,IAAI,CAACU,MAAL,CAAYpC,MAAM,CAACmD,iBAAnB,EAAsC;AAAEJ,UAAAA,IAAI,EAAEA,IAAR;AAClCd,UAAAA,SAAS,EAAEP,IAAI,CAACO,SADkB;AACPmB,UAAAA,aAAa,EAAE3B,MADR;AACgBS,UAAAA,UAAU,EAAEA;AAD5B,SAAtC;AAEH,OAJD,MAKK,IAAIR,IAAI,CAAC2B,iBAAL,MAA4B3B,IAAI,CAACO,SAArC,EAAgD;AACjD,YAAIqB,KAAK,GAAGxD,MAAM,CAAC,UAAD,CAAlB;AACA,YAAIyD,SAAS,GAAG,KAAKjD,MAAL,CAAYkD,aAAZ,CAA0B,IAA1B,EAAgC;AAAEC,UAAAA,SAAS,EAAE,aAAb;AAA4BC,UAAAA,KAAK,EAAE;AAAE,wBAAYJ;AAAd;AAAnC,SAAhC,CAAhB;AACA,YAAIK,UAAU,GAAG,KAAKrD,MAAL,CAAYkD,aAAZ,CAA0B,IAA1B,EAAgC;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAhC,CAAjB;AACA,YAAIG,OAAO,GAAG,KAAKtD,MAAL,CAAYuD,iBAAZ,GAAgC9B,MAA9C;;AACA,YAAI,KAAKzB,MAAL,CAAYwD,mBAAhB,EAAqC;AACjCF,UAAAA,OAAO;AACV;;AACDD,QAAAA,UAAU,CAACI,YAAX,CAAwB,SAAxB,EAAmCH,OAAO,CAACI,QAAR,EAAnC;AACA,YAAIC,GAAG,GAAG,IAAI/D,GAAJ,CAAQ;AACdgE,UAAAA,SAAS,EAAE,IADG;AAEdC,UAAAA,QAAQ,EAAE,IAFI;AAGd5B,UAAAA,GAAG,EAAEe,KAHS;AAIdN,UAAAA,WAAW,EAAE,IAJC;AAKdoB,UAAAA,KAAK,EAAE,CAAC,IAAIjE,IAAJ,CAAS;AAAEkE,YAAAA,QAAQ,EAAEjE,QAAQ,CAACkE;AAArB,WAAT,CAAD,EAA0C,IAAInE,IAAJ,CAAS;AAAEoE,YAAAA,UAAU,EAAE,IAAd;AAAoBC,YAAAA,OAAO,EAAE;AAA7B,WAAT,CAA1C;AALO,SAAR,CAAV;;AAOA,aAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGhD,IAAI,CAACiD,aAAL,CAAmBC,OAAnB,CAA2B7C,MAAjD,EAAyD0C,CAAC,GAAGC,GAA7D,EAAkED,CAAC,EAAnE,EAAuE;AACnElB,UAAAA,SAAS,CAACsB,WAAV,CAAsB,KAAKvE,MAAL,CAAYkD,aAAZ,CAA0B,IAA1B,EAAgC;AAAEC,YAAAA,SAAS,EAAE;AAAb,WAAhC,CAAtB;AACAQ,UAAAA,GAAG,CAACG,KAAJ,CAAUU,OAAV,CAAkB,IAAI3E,IAAJ,CAAS;AAAEkE,YAAAA,QAAQ,EAAEjE,QAAQ,CAACkE;AAArB,WAAT,CAAlB;AACH;;AACDf,QAAAA,SAAS,CAACsB,WAAV,CAAsB,KAAKvE,MAAL,CAAYkD,aAAZ,CAA0B,IAA1B,EAAgC;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAhC,CAAtB;AACAF,QAAAA,SAAS,CAACsB,WAAV,CAAsBlB,UAAtB;AACAtB,QAAAA,EAAE,CAAC0C,UAAH,CAAcC,YAAd,CAA2BzB,SAA3B,EAAsClB,EAAE,CAAC4C,WAAzC;;AACA,YAAIvD,IAAI,CAACwD,cAAT,EAAyB;AACrB,cAAIC,eAAe,GAAG,KAAK7E,MAAL,CAAY8E,OAAZ,IAAuB,OAAQ1D,IAAI,CAACwD,cAAb,KAAiC,QAA9E;AACA,cAAIG,gBAAgB,GAAG3D,IAAI,CAAC4D,OAAL,CAAaC,EAAb,GAAkB,gBAAzC;;AACA,cAAIJ,eAAJ,EAAqB;AACjBzD,YAAAA,IAAI,CAAC2B,iBAAL,GAAyBN,IAAzB,EAA+BrB,IAA/B,EAAqC,gBAArC,EAAuD2D,gBAAvD,EAAyE,IAAzE,EAA+E,IAA/E,EAAqF1B,UAArF;AACA,iBAAKrD,MAAL,CAAYkF,eAAZ;AACH,WAHD,MAIK;AACDzF,YAAAA,cAAc,CAAC4D,UAAD,EAAajC,IAAI,CAAC2B,iBAAL,GAAyBN,IAAzB,EAA+BrB,IAA/B,EAAqC,gBAArC,EAAuD2D,gBAAvD,CAAb,CAAd;AACH;;AACD,cAAI/F,QAAQ,EAAZ,EAAgB;AACZK,YAAAA,oBAAoB,CAAC0F,gBAAD,EAAmB,gBAAnB,EAAqC3D,IAArC,EAA2C,KAA3C,CAApB;AACH;AACJ,SAbD,MAcK;AACDO,UAAAA,SAAS,GAAG,IAAIrC,IAAJ,CAAS,KAAK6F,YAAL,CAAkB/D,IAAlB,EAAwBe,MAAxB,EAAgCf,IAAI,CAACgE,SAArC,CAAT,CAAZ;;AACA,cAAIzD,SAAS,CAAC0D,KAAd,EAAqB;AACjB1D,YAAAA,SAAS,CAAC0D,KAAV,GAAkB1D,SAAS,CAAC0D,KAAV,CAAgBC,KAAhB,EAAlB;AACH;;AACD3D,UAAAA,SAAS,CAAC3B,MAAD,CAAT,GAAoB;AAChBuF,YAAAA,QAAQ,EAAEnE,IAAI,CAAC4D,OAAL,CAAaC,EADP;AAEhBO,YAAAA,iBAAiB,EAAEpE,IAAI,CAACqE,uBAAL,EAFH;AAGhBC,YAAAA,cAAc,EAAEtE,IAAI,CAACO,SAAL,CAAegE,WAHf;AAIhBC,YAAAA,mBAAmB,EAAEnD,IAAI,CAACrB,IAAI,CAACO,SAAL,CAAegE,WAAhB,CAJT;AAKhBE,YAAAA,aAAa,EAAEpD;AALC,WAApB;;AAOA,cAAIrB,IAAI,CAAC0E,UAAT,EAAqB;AACjBnE,YAAAA,SAAS,CAACmE,UAAV,GAAuB,IAAvB;AACAnE,YAAAA,SAAS,CAACrB,EAAV,CAAaZ,MAAM,CAACqG,YAApB,EAAkC,KAAKC,cAAL,CAAoBrE,SAApB,CAAlC,EAAkE,IAAlE;AACAA,YAAAA,SAAS,CAACrB,EAAV,CAAaZ,MAAM,CAACuG,OAApB,EAA6B,KAAKD,cAAL,CAAoBrE,SAApB,CAA7B,EAA6D,IAA7D;AACH;;AACDQ,UAAAA,MAAM,CAACR,SAAP,GAAmBA,SAAnB;AACA,cAAIuE,OAAO,GAAGvE,SAAS,CAACwE,kBAAV,EAAd;AACA,cAAIC,cAAc,GAAGhF,IAAI,CAAC+E,kBAAL,EAArB;;AACA,cAAI,CAACD,OAAD,IAAYA,OAAO,CAACzE,MAAR,KAAmB2E,cAAc,CAAC3E,MAAlD,EAA0D;AACtDE,YAAAA,SAAS,CAAC0E,kBAAV,CAA6BD,cAA7B;AACH;;AACD,cAAIE,QAAQ,GAAG,KAAKtG,MAAL,CAAYkD,aAAZ,CAA0B,KAA1B,EAAiC;AAC5C+B,YAAAA,EAAE,EAAE,UAAU1F,OAAO,CAACwC,EAAD,EAAK,QAAL,CAAP,CAAsBN,MAAhC,GACA,OADA,GACUM,EAAE,CAACS,QADb,GACwBhD,MAAM,CAAC,EAAD;AAFU,WAAjC,CAAf;AAIA6D,UAAAA,UAAU,CAACkB,WAAX,CAAuB+B,QAAvB;AACA3E,UAAAA,SAAS,CAAC4E,QAAV,CAAmBD,QAAnB;AACH;;AACDrD,QAAAA,SAAS,CAACsB,WAAV,CAAsBlB,UAAtB;;AACA,YAAItB,EAAE,CAAC4C,WAAP,EAAoB;AAChB5C,UAAAA,EAAE,CAAC0C,UAAH,CAAcC,YAAd,CAA2BzB,SAA3B,EAAsClB,EAAE,CAAC4C,WAAzC;AACH,SAFD,MAGK;AACD5C,UAAAA,EAAE,CAAC0C,UAAH,CAAcF,WAAd,CAA0BtB,SAA1B;AACH;;AACD7B,QAAAA,IAAI,CAACoF,OAAL,GAAeC,MAAf,CAAsB1E,EAAE,CAACS,QAAH,GAAc,CAApC,EAAuC,CAAvC,EAA0CS,SAA1C;AACA7B,QAAAA,IAAI,CAACsF,aAAL,GAAqBD,MAArB,CAA4BtE,MAAM,CAACwE,KAAP,GAAe,CAA3C,EAA8C,CAA9C,EAAiDhD,GAAjD;AACAvC,QAAAA,IAAI,CAACwF,OAAL,CAAalH,MAAM,CAACmH,eAApB,EAAqC;AAAE/D,UAAAA,aAAa,EAAEO,UAAjB;AAA6BZ,UAAAA,IAAI,EAAEA,IAAnC;AAAyCd,UAAAA,SAAS,EAAEA;AAApD,SAArC;AACAP,QAAAA,IAAI,CAACU,MAAL,CAAYpC,MAAM,CAACmH,eAAnB,EAAoC;AAAEC,UAAAA,IAAI,EAAE1F,IAAI,CAACsF,aAAL;AAAR,SAApC;AACH;;AACDtH,MAAAA,SAAS,CAAC+B,MAAD,EAAS,CAAC,mBAAD,CAAT,EAAgC,CAAC,qBAAD,CAAhC,CAAT;AACA/B,MAAAA,SAAS,CAAC+B,MAAM,CAAC4F,iBAAR,EAA2B,CAAC,kBAAD,EAAqB,mBAArB,CAA3B,EAAsE,CAAC,mBAAD,EAAsB,oBAAtB,CAAtE,CAAT;AACA5E,MAAAA,MAAM,CAAC0B,QAAP,GAAkB,IAAlB;;AACA,UAAI1C,MAAM,CAAC/B,SAAP,CAAiByC,QAAjB,CAA0B,eAA1B,KAA8C,KAAK7B,MAAL,CAAYgH,UAAZ,GAAyBC,YAAzB,GAAwC5F,KAAK,CAAC6F,YAAhG,EAA8G;AAC1GjI,QAAAA,WAAW,CAACkC,MAAM,CAACa,aAAP,CAAqBmF,gBAArB,CAAsC,IAAtC,CAAD,EAA8C,eAA9C,CAAX;AACA,YAAIC,YAAY,GAAG/F,KAAK,CAACiB,aAAN,CAAoB,OAApB,EAA6B6E,gBAA7B,CAA8C,cAA9C,EAA8D1F,MAA9D,GAAuE,CAA1F;AACAvC,QAAAA,QAAQ,CAACmC,KAAK,CAACiB,aAAN,CAAoB,OAApB,EAA6B6E,gBAA7B,CAA8C,cAA9C,EAA8DC,YAA9D,EAA4EC,UAA7E,EAAyF,CAAC,eAAD,CAAzF,CAAR;AACA,aAAKC,WAAL,GAAmB,IAAnB;AACH;;AACD,WAAKpH,IAAL,CAAUqH,SAAV,CAAoBpG,MAApB,EAA4B,IAA5B;AACH,KAhGD,MAiGK;AACD,UAAI,KAAKuB,WAAL,CAAiBL,OAAjB,CAAJ,EAA+B;AAC3BA,QAAAA,OAAO,CAACM,KAAR,CAAcC,OAAd,GAAwB,MAAxB;AACAxB,QAAAA,IAAI,CAACU,MAAL,CAAYpC,MAAM,CAACmD,iBAAnB,EAAsC;AAAEJ,UAAAA,IAAI,EAAEN,MAAM,CAACM,IAAf;AAClCd,UAAAA,SAAS,EAAEP,IAAI,CAACO,SADkB;AACPmB,UAAAA,aAAa,EAAE3B,MADR;AACgBS,UAAAA,UAAU,EAAEA;AAD5B,SAAtC;AAEH;;AACDxC,MAAAA,SAAS,CAAC+B,MAAD,EAAS,CAAC,qBAAD,CAAT,EAAkC,CAAC,mBAAD,CAAlC,CAAT;AACA/B,MAAAA,SAAS,CAAC+B,MAAM,CAAC4F,iBAAR,EAA2B,CAAC,mBAAD,EAAsB,oBAAtB,CAA3B,EAAwE,CAAC,kBAAD,EAAqB,mBAArB,CAAxE,CAAT;;AACA,UAAIS,QAAQ,CAACzF,EAAE,CAACG,YAAH,CAAgB,eAAhB,CAAD,EAAmC,EAAnC,CAAR,KAAmDX,UAAnD,IAAiE,KAAK+F,WAA1E,EAAuF;AACnFpI,QAAAA,QAAQ,CAACiC,MAAM,CAACa,aAAP,CAAqBmF,gBAArB,CAAsC,IAAtC,CAAD,EAA8C,eAA9C,CAAR;AACA,aAAKG,WAAL,GAAmB,KAAnB;AACH;;AACDnF,MAAAA,MAAM,CAAC0B,QAAP,GAAkB,KAAlB;AACA,WAAK3D,IAAL,CAAUqH,SAAV,CAAoBpG,MAApB,EAA4B,KAA5B;AACH;AACJ,GAnID;AAoIA;AACJ;AACA;AACA;AACA;;;AACIpB,EAAAA,SAAS,CAACiB,SAAV,CAAoBmE,YAApB,GAAmC,UAAU/D,IAAV,EAAgBe,MAAhB,EAAwBiD,SAAxB,EAAmC;AAClE,QAAIqC,SAAJ;;AACA,QAAIrG,IAAI,CAAC0E,UAAL,IAAmB3D,MAAM,CAAC0B,QAA1B,IAAsCzC,IAAI,CAACsG,YAA3C,IACAtG,IAAI,CAACsG,YAAL,CAAkBvF,MAAM,CAACwE,KAAzB,CADA,IACmCvF,IAAI,CAACsG,YAAL,CAAkBvF,MAAM,CAACwE,KAAzB,EAAgCc,SADvE,EACkF;AAC9ErG,MAAAA,IAAI,CAACsG,YAAL,CAAkBvF,MAAM,CAACwE,KAAzB,EAAgCc,SAAhC,CAA0CE,kBAA1C,GAA+DvG,IAAI,CAACO,SAAL,CAAegG,kBAA9E;AACAF,MAAAA,SAAS,GAAGrG,IAAI,CAACsG,YAAL,CAAkBvF,MAAM,CAACwE,KAAzB,EAAgCc,SAA5C;AACH,KAJD,MAKK;AACD,UAAIrG,IAAI,CAAC0E,UAAL,IAAmB1E,IAAI,CAACO,SAAL,CAAeiG,WAAtC,EAAmD;AAC/CxG,QAAAA,IAAI,CAACO,SAAL,CAAeiG,WAAf,GAA6BxC,SAAS,KAAK,aAA3C;AACAqC,QAAAA,SAAS,GAAGrG,IAAI,CAACO,SAAjB;AACH,OAHD,MAIK;AACD8F,QAAAA,SAAS,GAAGrG,IAAI,CAACO,SAAjB;AACH;AACJ;;AACD,WAAO8F,SAAP;AACH,GAjBD;;AAkBA1H,EAAAA,SAAS,CAACiB,SAAV,CAAoBgF,cAApB,GAAqC,UAAU6B,IAAV,EAAgB;AACjD,QAAIC,KAAK,GAAG,IAAZ;;AACA,WAAO,YAAY;AACfD,MAAAA,IAAI,CAACE,GAAL,CAASrI,MAAM,CAACqG,YAAhB,EAA8B+B,KAAK,CAAC9B,cAApC;AACA6B,MAAAA,IAAI,CAACE,GAAL,CAASrI,MAAM,CAACuG,OAAhB,EAAyB6B,KAAK,CAAC9B,cAA/B;AACA6B,MAAAA,IAAI,CAAC/F,MAAL,CAAYpC,MAAM,CAACsI,cAAnB,EAAmC,EAAnC;AACH,KAJD;AAKH,GAPD;;AAQAjI,EAAAA,SAAS,CAACiB,SAAV,CAAoB0B,WAApB,GAAkC,UAAUiB,GAAV,EAAe;AAC7C,WAAOA,GAAG,IAAIA,GAAG,CAACvE,SAAJ,CAAcyC,QAAd,CAAuB,aAAvB,CAAd;AACH,GAFD;;AAGA9B,EAAAA,SAAS,CAACiB,SAAV,CAAoBP,OAApB,GAA8B,YAAY;AACtC,QAAIwH,WAAW,GAAG,KAAKjI,MAAL,CAAYgF,OAA9B;;AACA,QAAI,KAAKhF,MAAL,CAAYG,WAAZ,IAA2B,CAAC8H,WAA5B,IAA4C,CAACA,WAAW,CAAC3F,aAAZ,CAA0B,eAA1B,CAAD,IAC5C,CAAC2F,WAAW,CAAC3F,aAAZ,CAA0B,gBAA1B,CADL,EACmD;AAC/C;AACH;;AACD,SAAKtC,MAAL,CAAY+H,GAAZ,CAAgBrI,MAAM,CAACa,KAAvB,EAA8B,KAAKC,YAAnC;AACA,SAAKR,MAAL,CAAY+H,GAAZ,CAAgBrI,MAAM,CAACe,OAAvB,EAAgC,KAAKA,OAArC;AACA,SAAKT,MAAL,CAAY+H,GAAZ,CAAgBrI,MAAM,CAACgB,UAAvB,EAAmC,KAAKC,eAAxC;AACA,SAAKX,MAAL,CAAY+H,GAAZ,CAAgBrI,MAAM,CAACkB,eAAvB,EAAwC,KAAKC,MAA7C;AACA,SAAKb,MAAL,CAAY+H,GAAZ,CAAgBrI,MAAM,CAACoB,uBAAvB,EAAgD,KAAKC,cAArD;AACH,GAXD;;AAYAhB,EAAAA,SAAS,CAACiB,SAAV,CAAoBkH,cAApB,GAAqC,UAAUvB,KAAV,EAAiBxD,SAAjB,EAA4B;AAC7D,QAAIpB,EAAE,GAAG,KAAK/B,MAAL,CAAYmI,WAAZ,GAA0BxB,KAA1B,CAAT;;AACA,QAAI5E,EAAE,IAAIA,EAAE,CAACO,aAAH,CAAiBa,SAAjB,CAAV,EAAuC;AACnC,aAAOpB,EAAE,CAACO,aAAH,CAAiBa,SAAjB,CAAP;AACH;;AACD,WAAO,IAAP;AACH,GAND;AAOA;AACJ;AACA;AACA;AACA;;;AACIpD,EAAAA,SAAS,CAACiB,SAAV,CAAoBH,MAApB,GAA6B,UAAUM,MAAV,EAAkB;AAC3C,QAAI,CAACiH,KAAK,CAACjH,MAAD,CAAV,EAAoB;AAChBA,MAAAA,MAAM,GAAG,KAAK+G,cAAL,CAAoB/G,MAApB,EAA4B,sBAA5B,CAAT;AACH;;AACD,QAAIA,MAAM,IAAIA,MAAM,CAAC/B,SAAP,CAAiByC,QAAjB,CAA0B,qBAA1B,CAAd,EAAgE;AAC5D,WAAKX,oBAAL,CAA0BC,MAA1B;AACH;AACJ,GAPD;AAQA;AACJ;AACA;AACA;AACA;;;AACIpB,EAAAA,SAAS,CAACiB,SAAV,CAAoBqH,QAApB,GAA+B,UAAUlH,MAAV,EAAkB;AAC7C,QAAI,CAACiH,KAAK,CAACjH,MAAD,CAAV,EAAoB;AAChBA,MAAAA,MAAM,GAAG,KAAK+G,cAAL,CAAoB/G,MAApB,EAA4B,oBAA5B,CAAT;AACH;;AACD,QAAIA,MAAM,IAAIA,MAAM,CAAC/B,SAAP,CAAiByC,QAAjB,CAA0B,mBAA1B,CAAd,EAA8D;AAC1D,WAAKX,oBAAL,CAA0BC,MAA1B;AACH;AACJ,GAPD;AAQA;AACJ;AACA;AACA;;;AACIpB,EAAAA,SAAS,CAACiB,SAAV,CAAoBsH,SAApB,GAAgC,YAAY;AACxC,SAAKC,cAAL,CAAoB,IAApB;AACA,SAAKvI,MAAL,CAAY4G,OAAZ,CAAoBlH,MAAM,CAAC8I,cAA3B,EAA2C;AAAEC,MAAAA,WAAW,EAAE,mBAAf;AAAoCC,MAAAA,IAAI,EAAEhJ,MAAM,CAAC8I,cAAjD;AAAiEG,MAAAA,SAAS,EAAE;AAA5E,KAA3C;AACH,GAHD;AAIA;AACJ;AACA;AACA;;;AACI5I,EAAAA,SAAS,CAACiB,SAAV,CAAoB4H,WAApB,GAAkC,YAAY;AAC1C,SAAKL,cAAL,CAAoB,KAApB;AACA,SAAKvI,MAAL,CAAY4G,OAAZ,CAAoBlH,MAAM,CAAC8I,cAA3B,EAA2C;AAAEC,MAAAA,WAAW,EAAE,qBAAf;AAAsCC,MAAAA,IAAI,EAAEhJ,MAAM,CAAC8I,cAAnD;AAAmEG,MAAAA,SAAS,EAAE;AAA9E,KAA3C;AACH,GAHD;;AAIA5I,EAAAA,SAAS,CAACiB,SAAV,CAAoBuH,cAApB,GAAqC,UAAU1E,QAAV,EAAoB;AACrD,QAAIgF,EAAJ;AACA,QAAI/B,IAAI,GAAG,KAAK9G,MAAL,CAAYmI,WAAZ,EAAX;;AACA,SAAK,IAAIhE,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAG0C,IAAI,CAACrF,MAA3B,EAAmC0C,CAAC,GAAGC,GAAvC,EAA4CD,CAAC,EAA7C,EAAiD;AAC7C0E,MAAAA,EAAE,GAAG/B,IAAI,CAAC3C,CAAD,CAAJ,CAAQ7B,aAAR,CAAsB,0CAAtB,CAAL;AACAuB,MAAAA,QAAQ,GAAG,KAAKhD,MAAL,CAAYgI,EAAZ,CAAH,GAAqB,KAAKR,QAAL,CAAcQ,EAAd,CAA7B;AACH;AACJ,GAPD;;AAQA9I,EAAAA,SAAS,CAACiB,SAAV,CAAoBL,eAApB,GAAsC,UAAUM,CAAV,EAAa;AAC/C,QAAIG,IAAI,GAAG,KAAKpB,MAAhB;;AACA,YAAQiB,CAAC,CAAC6H,MAAV;AACI,WAAK,eAAL;AACI,aAAKR,SAAL;AACA;;AACJ,WAAK,aAAL;AACI,aAAKM,WAAL;AACA;;AACJ,WAAK,YAAL;AACA,WAAK,cAAL;AACI,YAAIG,QAAQ,GAAG3H,IAAI,CAAC4H,cAAL,GAAsB5H,IAAI,CAAC6H,qBAAL,EAAtB,GAAqD,EAApE;;AACA,YAAIF,QAAQ,CAACtH,MAAb,EAAqB;AACjB,cAAIyH,OAAO,GAAG9H,IAAI,CAAC+G,WAAL,GAAmBY,QAAQ,CAACA,QAAQ,CAACtH,MAAT,GAAkB,CAAnB,CAA3B,CAAd;AACA,cAAIoH,EAAE,GAAGK,OAAO,CAAC5G,aAAR,CAAsB,0CAAtB,CAAT;AACArB,UAAAA,CAAC,CAAC6H,MAAF,KAAa,cAAb,GAA8B,KAAKjI,MAAL,CAAYgI,EAAZ,CAA9B,GAAgD,KAAKR,QAAL,CAAcQ,EAAd,CAAhD;AACH;;AACD;;AACJ,WAAK,OAAL;AACI,YAAI,KAAK7I,MAAL,CAAYmJ,MAAhB,EAAwB;AACpB;AACH;;AACD,YAAInE,OAAO,GAAG,KAAK5E,KAAL,CAAWgJ,iBAAX,EAAd;;AACA,YAAI,CAACnI,CAAC,CAACE,MAAF,CAAS/B,SAAT,CAAmByC,QAAnB,CAA4B,qBAA5B,CAAD,IACA,CAACZ,CAAC,CAACE,MAAF,CAAS/B,SAAT,CAAmByC,QAAnB,CAA4B,mBAA5B,CADL,EACuD;AACnD;AACH;;AACD,aAAKX,oBAAL,CAA0B8D,OAA1B;AACA;AA1BR;AA4BH,GA9BD;;AA+BAjF,EAAAA,SAAS,CAACiB,SAAV,CAAoBD,cAApB,GAAqC,YAAY;AAC7C,QAAIsI,UAAU,GAAG,KAAKrJ,MAAL,CAAYsJ,aAAZ,CAA0BC,QAA1B,GAAqCpC,gBAArC,CAAsD,gBAAtD,CAAjB;AACA,QAAI7D,OAAO,GAAG,KAAKtD,MAAL,CAAYuD,iBAAZ,GAAgC9B,MAA9C;;AACA,SAAK,IAAI0C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkF,UAAU,CAAC5H,MAA/B,EAAuC0C,CAAC,EAAxC,EAA4C;AACxCkF,MAAAA,UAAU,CAAClF,CAAD,CAAV,CAAc7B,aAAd,CAA4B,eAA5B,EAA6CmB,YAA7C,CAA0D,SAA1D,EAAqEH,OAAO,GAAG,EAA/E;AACH;AACJ,GAND;AAOA;AACJ;AACA;AACA;;;AACIvD,EAAAA,SAAS,CAACiB,SAAV,CAAoBwI,aAApB,GAAoC,YAAY;AAC5C,WAAO,WAAP;AACH,GAFD;;AAGA,SAAOzJ,SAAP;AACH,CAhT8B,EAA/B;;AAiTA,SAASA,SAAT","sourcesContent":["import { isBlazor, removeClass, addClass } from '@syncfusion/ej2-base';\nimport { closest, classList, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Grid } from '../base/grid';\nimport { parents, getUid, appendChildren } from '../base/util';\nimport * as events from '../base/constant';\nimport { AriaService } from '../services/aria-service';\nimport { Row } from '../models/row';\nimport { Cell } from '../models/cell';\nimport { CellType } from '../base/enum';\n/**\n * The `DetailRow` module is used to handle detail template and hierarchy Grid operations.\n */\nvar DetailRow = /** @class */ (function () {\n    /**\n     * Constructor for the Grid detail template module\n     * @hidden\n     */\n    function DetailRow(parent, locator) {\n        //Internal variables\n        this.aria = new AriaService();\n        this.parent = parent;\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.focus = locator.getService('focus');\n        this.parent.on(events.click, this.clickHandler, this);\n        this.parent.on(events.destroy, this.destroy, this);\n        this.parent.on(events.keyPressed, this.keyPressHandler, this);\n        this.parent.on(events.expandChildGrid, this.expand, this);\n        this.parent.on(events.columnVisibilityChanged, this.refreshColSpan, this);\n    }\n    DetailRow.prototype.clickHandler = function (e) {\n        this.toogleExpandcollapse(closest(e.target, 'td'));\n    };\n    // tslint:disable-next-line:max-func-body-length\n    DetailRow.prototype.toogleExpandcollapse = function (target) {\n        var gObj = this.parent;\n        var table = this.parent.getContentTable();\n        var lastrowIdx = this.parent.getCurrentViewRecords().length - 1;\n        var parent = 'parentDetails';\n        var isServerRendered = 'isServerRendered';\n        var childGrid;\n        var isExpanded = target && target.classList.contains('e-detailrowcollapse');\n        if (!(target && (target.classList.contains('e-detailrowcollapse') || target.classList.contains('e-detailrowexpand')))) {\n            return;\n        }\n        if (isBlazor() && this.parent[isServerRendered]) {\n            this.parent.notify('detailclick', target);\n            return;\n        }\n        var tr = target.parentElement;\n        var uid = tr.getAttribute('data-uid');\n        var rowObj = gObj.getRowObjectFromUID(uid);\n        var nextRow = this.parent.getContentTable().querySelector('tbody').children[tr.rowIndex + 1];\n        if (target.classList.contains('e-detailrowcollapse')) {\n            var data = rowObj.data;\n            if (this.isDetailRow(nextRow)) {\n                nextRow.style.display = '';\n                gObj.notify(events.detailStateChange, { data: data,\n                    childGrid: gObj.childGrid, detailElement: target, isExpanded: isExpanded });\n            }\n            else if (gObj.getDetailTemplate() || gObj.childGrid) {\n                var rowId = getUid('grid-row');\n                var detailRow = this.parent.createElement('tr', { className: 'e-detailrow', attrs: { 'data-uid': rowId } });\n                var detailCell = this.parent.createElement('td', { className: 'e-detailcell' });\n                var colSpan = this.parent.getVisibleColumns().length;\n                if (this.parent.allowRowDragAndDrop) {\n                    colSpan++;\n                }\n                detailCell.setAttribute('colspan', colSpan.toString());\n                var row = new Row({\n                    isDataRow: true,\n                    isExpand: true,\n                    uid: rowId,\n                    isDetailRow: true,\n                    cells: [new Cell({ cellType: CellType.Indent }), new Cell({ isDataCell: true, visible: true })]\n                });\n                for (var i = 0, len = gObj.groupSettings.columns.length; i < len; i++) {\n                    detailRow.appendChild(this.parent.createElement('td', { className: 'e-indentcell' }));\n                    row.cells.unshift(new Cell({ cellType: CellType.Indent }));\n                }\n                detailRow.appendChild(this.parent.createElement('td', { className: 'e-detailindentcell' }));\n                detailRow.appendChild(detailCell);\n                tr.parentNode.insertBefore(detailRow, tr.nextSibling);\n                if (gObj.detailTemplate) {\n                    var isReactCompiler = this.parent.isReact && typeof (gObj.detailTemplate) !== 'string';\n                    var detailTemplateID = gObj.element.id + 'detailTemplate';\n                    if (isReactCompiler) {\n                        gObj.getDetailTemplate()(data, gObj, 'detailTemplate', detailTemplateID, null, null, detailCell);\n                        this.parent.renderTemplates();\n                    }\n                    else {\n                        appendChildren(detailCell, gObj.getDetailTemplate()(data, gObj, 'detailTemplate', detailTemplateID));\n                    }\n                    if (isBlazor()) {\n                        updateBlazorTemplate(detailTemplateID, 'DetailTemplate', gObj, false);\n                    }\n                }\n                else {\n                    childGrid = new Grid(this.getGridModel(gObj, rowObj, gObj.printMode));\n                    if (childGrid.query) {\n                        childGrid.query = childGrid.query.clone();\n                    }\n                    childGrid[parent] = {\n                        parentID: gObj.element.id,\n                        parentPrimaryKeys: gObj.getPrimaryKeyFieldNames(),\n                        parentKeyField: gObj.childGrid.queryString,\n                        parentKeyFieldValue: data[gObj.childGrid.queryString],\n                        parentRowData: data\n                    };\n                    if (gObj.isPrinting) {\n                        childGrid.isPrinting = true;\n                        childGrid.on(events.contentReady, this.promiseResolve(childGrid), this);\n                        childGrid.on(events.onEmpty, this.promiseResolve(childGrid), this);\n                    }\n                    rowObj.childGrid = childGrid;\n                    var modules = childGrid.getInjectedModules();\n                    var injectedModues = gObj.getInjectedModules();\n                    if (!modules || modules.length !== injectedModues.length) {\n                        childGrid.setInjectedModules(injectedModues);\n                    }\n                    var gridElem = this.parent.createElement('div', {\n                        id: 'child' + parents(tr, 'e-grid').length +\n                            '_grid' + tr.rowIndex + getUid('')\n                    });\n                    detailCell.appendChild(gridElem);\n                    childGrid.appendTo(gridElem);\n                }\n                detailRow.appendChild(detailCell);\n                if (tr.nextSibling) {\n                    tr.parentNode.insertBefore(detailRow, tr.nextSibling);\n                }\n                else {\n                    tr.parentNode.appendChild(detailRow);\n                }\n                gObj.getRows().splice(tr.rowIndex + 1, 0, detailRow);\n                gObj.getRowsObject().splice(rowObj.index + 1, 0, row);\n                gObj.trigger(events.detailDataBound, { detailElement: detailCell, data: data, childGrid: childGrid });\n                gObj.notify(events.detailDataBound, { rows: gObj.getRowsObject() });\n            }\n            classList(target, ['e-detailrowexpand'], ['e-detailrowcollapse']);\n            classList(target.firstElementChild, ['e-dtdiagonaldown', 'e-icon-gdownarrow'], ['e-dtdiagonalright', 'e-icon-grightarrow']);\n            rowObj.isExpand = true;\n            if (target.classList.contains('e-lastrowcell') && this.parent.getContent().clientHeight > table.scrollHeight) {\n                removeClass(target.parentElement.querySelectorAll('td'), 'e-lastrowcell');\n                var detailrowIdx = table.querySelector('tbody').querySelectorAll('.e-detailrow').length - 1;\n                addClass(table.querySelector('tbody').querySelectorAll('.e-detailrow')[detailrowIdx].childNodes, ['e-lastrowcell']);\n                this.lastrowcell = true;\n            }\n            this.aria.setExpand(target, true);\n        }\n        else {\n            if (this.isDetailRow(nextRow)) {\n                nextRow.style.display = 'none';\n                gObj.notify(events.detailStateChange, { data: rowObj.data,\n                    childGrid: gObj.childGrid, detailElement: target, isExpanded: isExpanded });\n            }\n            classList(target, ['e-detailrowcollapse'], ['e-detailrowexpand']);\n            classList(target.firstElementChild, ['e-dtdiagonalright', 'e-icon-grightarrow'], ['e-dtdiagonaldown', 'e-icon-gdownarrow']);\n            if (parseInt(tr.getAttribute('aria-rowindex'), 10) === lastrowIdx && this.lastrowcell) {\n                addClass(target.parentElement.querySelectorAll('td'), 'e-lastrowcell');\n                this.lastrowcell = false;\n            }\n            rowObj.isExpand = false;\n            this.aria.setExpand(target, false);\n        }\n    };\n    /**\n     * @hidden\n     * @param gObj\n     * @param rowObj\n     */\n    DetailRow.prototype.getGridModel = function (gObj, rowObj, printMode) {\n        var gridModel;\n        if (gObj.isPrinting && rowObj.isExpand && gObj.expandedRows &&\n            gObj.expandedRows[rowObj.index] && gObj.expandedRows[rowObj.index].gridModel) {\n            gObj.expandedRows[rowObj.index].gridModel.hierarchyPrintMode = gObj.childGrid.hierarchyPrintMode;\n            gridModel = gObj.expandedRows[rowObj.index].gridModel;\n        }\n        else {\n            if (gObj.isPrinting && gObj.childGrid.allowPaging) {\n                gObj.childGrid.allowPaging = printMode === 'CurrentPage';\n                gridModel = gObj.childGrid;\n            }\n            else {\n                gridModel = gObj.childGrid;\n            }\n        }\n        return gridModel;\n    };\n    DetailRow.prototype.promiseResolve = function (grid) {\n        var _this = this;\n        return function () {\n            grid.off(events.contentReady, _this.promiseResolve);\n            grid.off(events.onEmpty, _this.promiseResolve);\n            grid.notify(events.hierarchyPrint, {});\n        };\n    };\n    DetailRow.prototype.isDetailRow = function (row) {\n        return row && row.classList.contains('e-detailrow');\n    };\n    DetailRow.prototype.destroy = function () {\n        var gridElement = this.parent.element;\n        if (this.parent.isDestroyed || !gridElement || (!gridElement.querySelector('.e-gridheader') &&\n            !gridElement.querySelector('.e-gridcontent'))) {\n            return;\n        }\n        this.parent.off(events.click, this.clickHandler);\n        this.parent.off(events.destroy, this.destroy);\n        this.parent.off(events.keyPressed, this.keyPressHandler);\n        this.parent.off(events.expandChildGrid, this.expand);\n        this.parent.off(events.columnVisibilityChanged, this.refreshColSpan);\n    };\n    DetailRow.prototype.getTDfromIndex = function (index, className) {\n        var tr = this.parent.getDataRows()[index];\n        if (tr && tr.querySelector(className)) {\n            return tr.querySelector(className);\n        }\n        return null;\n    };\n    /**\n     * Expands a detail row with the given target.\n     * @param  {Element} target - Defines the collapsed element to expand.\n     * @return {void}\n     */\n    DetailRow.prototype.expand = function (target) {\n        if (!isNaN(target)) {\n            target = this.getTDfromIndex(target, '.e-detailrowcollapse');\n        }\n        if (target && target.classList.contains('e-detailrowcollapse')) {\n            this.toogleExpandcollapse(target);\n        }\n    };\n    /**\n     * Collapses a detail row with the given target.\n     * @param  {Element} target - Defines the expanded element to collapse.\n     * @return {void}\n     */\n    DetailRow.prototype.collapse = function (target) {\n        if (!isNaN(target)) {\n            target = this.getTDfromIndex(target, '.e-detailrowexpand');\n        }\n        if (target && target.classList.contains('e-detailrowexpand')) {\n            this.toogleExpandcollapse(target);\n        }\n    };\n    /**\n     * Expands all the detail rows of the Grid.\n     * @return {void}\n     */\n    DetailRow.prototype.expandAll = function () {\n        this.expandCollapse(true);\n        this.parent.trigger(events.actionComplete, { requestType: 'expandAllComplete', type: events.actionComplete, moduleObj: this });\n    };\n    /**\n     * Collapses all the detail rows of the Grid.\n     * @return {void}\n     */\n    DetailRow.prototype.collapseAll = function () {\n        this.expandCollapse(false);\n        this.parent.trigger(events.actionComplete, { requestType: 'collapseAllComplete', type: events.actionComplete, moduleObj: this });\n    };\n    DetailRow.prototype.expandCollapse = function (isExpand) {\n        var td;\n        var rows = this.parent.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            td = rows[i].querySelector('.e-detailrowcollapse, .e-detailrowexpand');\n            isExpand ? this.expand(td) : this.collapse(td);\n        }\n    };\n    DetailRow.prototype.keyPressHandler = function (e) {\n        var gObj = this.parent;\n        switch (e.action) {\n            case 'ctrlDownArrow':\n                this.expandAll();\n                break;\n            case 'ctrlUpArrow':\n                this.collapseAll();\n                break;\n            case 'altUpArrow':\n            case 'altDownArrow':\n                var selected = gObj.allowSelection ? gObj.getSelectedRowIndexes() : [];\n                if (selected.length) {\n                    var dataRow = gObj.getDataRows()[selected[selected.length - 1]];\n                    var td = dataRow.querySelector('.e-detailrowcollapse, .e-detailrowexpand');\n                    e.action === 'altDownArrow' ? this.expand(td) : this.collapse(td);\n                }\n                break;\n            case 'enter':\n                if (this.parent.isEdit) {\n                    return;\n                }\n                var element = this.focus.getFocusedElement();\n                if (!e.target.classList.contains('e-detailrowcollapse') &&\n                    !e.target.classList.contains('e-detailrowexpand')) {\n                    break;\n                }\n                this.toogleExpandcollapse(element);\n                break;\n        }\n    };\n    DetailRow.prototype.refreshColSpan = function () {\n        var detailrows = this.parent.contentModule.getTable().querySelectorAll('tr.e-detailrow');\n        var colSpan = this.parent.getVisibleColumns().length;\n        for (var i = 0; i < detailrows.length; i++) {\n            detailrows[i].querySelector('.e-detailcell').setAttribute('colspan', colSpan + '');\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n"]},"metadata":{},"sourceType":"module"}