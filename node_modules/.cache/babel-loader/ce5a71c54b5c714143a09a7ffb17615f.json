{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\appsk\\\\Documents\\\\Projects\\\\PredictiveMaintenance\\\\React PDM\\\\env\\\\frontend\\\\src\\\\App.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { ExcelRenderer } from \"react-excel-renderer\"; //import ExcelPage from \"./components/excelPage\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onFileChange = fileList => {\n      console.log(\"fileList\", fileList);\n      let fileObj = fileList;\n\n      if (!fileObj) {\n        this.setState({\n          errorMessage: \"No file uploaded!\"\n        });\n        return false;\n      }\n\n      console.log(\"fileObj.type:\", fileObj.type);\n\n      if (!(fileObj.type === \"application/vnd.ms-excel\" || fileObj.type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\")) {\n        this.setState({\n          errorMessage: \"Unknown file format. Only Excel files are uploaded!\"\n        });\n        return false;\n      } //just pass the fileObj as parameter\n\n\n      ExcelRenderer(fileObj, (err, resp) => {\n        if (err) {\n          console.log(err);\n        } else {\n          let newRows = [];\n          resp.rows.slice(1).map((row, index) => {\n            if (row && row !== \"undefined\") {\n              newRows.push({\n                key: index,\n                name: row[0],\n                age: row[1],\n                gender: row[2]\n              });\n            }\n          });\n\n          if (newRows.length === 0) {\n            this.setState({\n              errorMessage: \"No data found in file!\"\n            });\n            return false;\n          } else {\n            this.setState({\n              cols: resp.cols,\n              rows: newRows,\n              errorMessage: null\n            });\n          }\n        }\n      });\n      return false;\n    };\n\n    this.onFileUpload = async () => {\n      console.log(\"submitting: \", this.state.rows); //submit to API\n      //if successful, banigate and clear the data\n      //this.setState({ rows: [] })\n    };\n\n    this.state = {\n      // Initially, no file is selected \n      selectedFile: null\n    };\n  }\n\n  checkFile(file) {\n    let errorMessage = \"\";\n\n    if (!file || !file[0]) {\n      return;\n    }\n\n    const isExcel = file[0].type === \"application/vnd.ms-excel\" || file[0].type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n\n    if (!isExcel) {\n      errorMessage = \"You can only upload Excel file!\";\n    }\n\n    console.log(\"file\", file[0].type);\n    const isLt2M = file[0].size / 1024 / 1024 < 2;\n\n    if (!isLt2M) {\n      errorMessage = \"File must be smaller than 2MB!\";\n    }\n\n    console.log(\"errorMessage\", errorMessage);\n    return errorMessage;\n  }\n\n  // On file select (from the pop up) \n  // onFileChange = event => { \n  //   // Update the state \n  //   this.setState({ selectedFile: event.target.files[0] }); \n  // }; \n  // // On file upload (click the upload button) \n  // onFileUpload = () => { \n  //   // Create an object of formData \n  //   const formData = new FormData(); \n  //   // Update the formData object \n  //   formData.append( \n  //     \"myFile\", \n  //     this.state.selectedFile, \n  //     this.state.selectedFile.name \n  //   ); \n  //   // Details of the uploaded file \n  //   console.log(this.state.selectedFile); \n  //   // Request made to the backend api \n  //   // Send formData object \n  //   axios.post(\"api/uploadfile\", formData); \n  // }; \n  // File content to be displayed after \n  // file upload is complete \n  // fileData = () => { \n  //   if (this.state.selectedFile) { \n  //     return ( \n  //       <div> \n  //         <h2>File Details:</h2> \n  //         <p>File Name: {this.state.selectedFile.name}</p> \n  //         <p>File Type: {this.state.selectedFile.type}</p> \n  //         <p> \n  //           Last Modified:{\" \"} \n  //           {this.state.selectedFile.lastModifiedDate.toDateString()} \n  //         </p> \n  //       </div> \n  //     ); \n  //   } else { \n  //     return ( \n  //       <div> \n  //         <br /> \n  //         <h4>Choose before Pressing the Upload button</h4> \n  //       </div> \n  //     ); \n  //   } \n  // }; \n  render() {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      gutter: 16,\n      justify: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          marginBottom: \"5%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page-title\",\n            children: \"Upload Farmer Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://res.cloudinary.com/bryta/raw/upload/v1562751445/Sample_Excel_Sheet_muxx6s.xlsx\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          download: true,\n          children: \"Sample excel sheet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        align: \"right\",\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        },\n        children: this.state.rows.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.handleAdd,\n            size: \"large\",\n            type: \"info\",\n            style: {\n              marginBottom: 16\n            },\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              type: \"plus\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 11\n            }, this), \"Add a row\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 9\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.handleSubmit,\n            size: \"large\",\n            type: \"primary\",\n            style: {\n              marginBottom: 16,\n              marginLeft: 10\n            },\n            children: \"Submit Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 1\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/appsk/Documents/Projects/PredictiveMaintenance/React PDM/env/frontend/src/App.js"],"names":["axios","React","Component","ExcelRenderer","App","onFileChange","fileList","console","log","fileObj","setState","errorMessage","type","err","resp","newRows","rows","slice","map","row","index","push","key","name","age","gender","length","cols","onFileUpload","state","selectedFile","checkFile","file","isExcel","isLt2M","size","render","display","justifyContent","alignItems","marginBottom","handleAdd","handleSubmit","marginLeft"],"mappings":"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","sourcesContent":["import axios from 'axios'; \n  \nimport React,{Component} from 'react';\nimport { ExcelRenderer } from \"react-excel-renderer\";\n//import ExcelPage from \"./components/excelPage\";\n  \nclass App extends Component { \n\n  checkFile(file) {\n    let errorMessage = \"\";\n    if (!file || !file[0]) {\n      return;\n    }\n    const isExcel =\n      file[0].type === \"application/vnd.ms-excel\" ||\n      file[0].type ===\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n    if (!isExcel) {\n      errorMessage = \"You can only upload Excel file!\";\n    }\n    console.log(\"file\", file[0].type);\n    const isLt2M = file[0].size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      errorMessage = \"File must be smaller than 2MB!\";\n    }\n    console.log(\"errorMessage\", errorMessage);\n    return errorMessage;\n  }\n\n\n  onFileChange = fileList => {\n    console.log(\"fileList\", fileList)\n    let fileObj = fileList\n    if (!fileObj) {\n      this.setState({\n        errorMessage: \"No file uploaded!\",\n      })\n      return false\n    }\n    console.log(\"fileObj.type:\", fileObj.type)\n    if (\n      !(\n        fileObj.type === \"application/vnd.ms-excel\" ||\n        fileObj.type ===\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n      )\n    ) {\n      this.setState({\n        errorMessage: \"Unknown file format. Only Excel files are uploaded!\",\n      })\n      return false\n    }\n    //just pass the fileObj as parameter\n    ExcelRenderer(fileObj, (err, resp) => {\n      if (err) {\n        console.log(err)\n      } else {\n        let newRows = []\n        resp.rows.slice(1).map((row, index) => {\n          if (row && row !== \"undefined\") {\n            newRows.push({\n              key: index,\n              name: row[0],\n              age: row[1],\n              gender: row[2],\n            })\n          }\n        })\n        if (newRows.length === 0) {\n          this.setState({\n            errorMessage: \"No data found in file!\",\n          })\n          return false\n        } else {\n          this.setState({\n            cols: resp.cols,\n            rows: newRows,\n            errorMessage: null,\n          })\n        }\n      }\n    })\n    return false\n  }\n\n  onFileUpload = async () => {\n  console.log(\"submitting: \", this.state.rows)\n  //submit to API\n  //if successful, banigate and clear the data\n  //this.setState({ rows: [] })\n}\n\n\n   \n    state = { \n  \n      // Initially, no file is selected \n      selectedFile: null\n    }; \n     \n    // On file select (from the pop up) \n    // onFileChange = event => { \n     \n    //   // Update the state \n    //   this.setState({ selectedFile: event.target.files[0] }); \n     \n    // }; \n     \n    // // On file upload (click the upload button) \n    // onFileUpload = () => { \n     \n    //   // Create an object of formData \n    //   const formData = new FormData(); \n     \n    //   // Update the formData object \n    //   formData.append( \n    //     \"myFile\", \n    //     this.state.selectedFile, \n    //     this.state.selectedFile.name \n    //   ); \n     \n    //   // Details of the uploaded file \n    //   console.log(this.state.selectedFile); \n     \n    //   // Request made to the backend api \n    //   // Send formData object \n    //   axios.post(\"api/uploadfile\", formData); \n    // }; \n     \n    // File content to be displayed after \n    // file upload is complete \n    // fileData = () => { \n     \n    //   if (this.state.selectedFile) { \n          \n    //     return ( \n    //       <div> \n    //         <h2>File Details:</h2> \n    //         <p>File Name: {this.state.selectedFile.name}</p> \n    //         <p>File Type: {this.state.selectedFile.type}</p> \n    //         <p> \n    //           Last Modified:{\" \"} \n    //           {this.state.selectedFile.lastModifiedDate.toDateString()} \n    //         </p> \n    //       </div> \n    //     ); \n    //   } else { \n    //     return ( \n    //       <div> \n    //         <br /> \n    //         <h4>Choose before Pressing the Upload button</h4> \n    //       </div> \n    //     ); \n    //   } \n    // }; \n     \n    render() { \n     \n      return ( \n<Row gutter={16} justify=\"space-between\">\n  <Col\n    span={8}\n    style={{\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      marginBottom: \"5%\",\n    }}\n  >\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <div className=\"page-title\">Upload Farmer Data</div>\n    </div>\n  </Col>\n  <Col span={8}>\n    <a\n      href=\"https://res.cloudinary.com/bryta/raw/upload/v1562751445/Sample_Excel_Sheet_muxx6s.xlsx\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      download\n    >\n      Sample excel sheet\n    </a>\n  </Col>\n  <Col\n    span={8}\n    align=\"right\"\n    style={{ display: \"flex\", justifyContent: \"space-between\" }}\n  >\n    {this.state.rows.length > 0 && (\n      <>\n        <Button\n          onClick={this.handleAdd}\n          size=\"large\"\n          type=\"info\"\n          style={{ marginBottom: 16 }}\n        >\n          <Icon type=\"plus\" />\n          Add a row\n        </Button>{\" \"}\n        <Button\n          onClick={this.handleSubmit}\n          size=\"large\"\n          type=\"primary\"\n          style={{ marginBottom: 16, marginLeft: 10 }}\n        >\n          Submit Data\n        </Button>\n      </>\n    )}\n  </Col>\n</Row>\n      ); \n    } \n  } \n  \n  export default App; "]},"metadata":{},"sourceType":"module"}