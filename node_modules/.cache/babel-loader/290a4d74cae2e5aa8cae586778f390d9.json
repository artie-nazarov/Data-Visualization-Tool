{"ast":null,"code":"import { Droppable, isBlazor, addClass } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { setStyleAttribute, remove, updateBlazorTemplate, removeClass } from '@syncfusion/ej2-base';\nimport { getUpdateUsingRaf, appendChildren, parentsUntil } from '../base/util';\nimport * as events from '../base/constant';\nimport { Row } from '../models/row';\nimport { RowRenderer } from './row-renderer';\nimport { CellMergeRender } from './cell-merge-renderer';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { GroupModelGenerator } from '../services/group-model-generator';\nimport { getScrollBarWidth, isGroupAdaptive } from '../base/util';\n/**\n * Content module is used to render grid content\n * @hidden\n */\n\nvar ContentRender =\n/** @class */\nfunction () {\n  /**\n   * Constructor for content renderer module\n   */\n  function ContentRender(parent, serviceLocator) {\n    var _this = this;\n\n    this.rows = [];\n    this.freezeRows = [];\n    this.movableRows = [];\n    this.freezeRowElements = [];\n    /** @hidden */\n\n    this.currentInfo = {};\n    /** @hidden */\n\n    this.prevCurrentView = [];\n    this.isLoaded = true;\n    this.viewColIndexes = [];\n\n    this.drop = function (e) {\n      if (parentsUntil(e.target, 'e-row') || parentsUntil(e.target, 'e-emptyrow')) {\n        _this.parent.notify(events.columnDrop, {\n          target: e.target,\n          droppedElement: e.droppedElement\n        });\n\n        remove(e.droppedElement);\n      }\n    };\n\n    this.infiniteCache = {};\n    this.isRemove = false;\n    this.visibleRows = [];\n    this.visibleFrozenRows = [];\n    this.rightFreezeRows = [];\n    this.isAddRows = false;\n    this.isInfiniteFreeze = false;\n    this.useGroupCache = false;\n    this.mutableData = false;\n\n    this.rafCallback = function (args) {\n      var arg = args;\n      return function () {\n        if (_this.parent.isFrozenGrid() && _this.parent.enableVirtualization) {\n          var mContentRows = [].slice.call(_this.parent.getMovableVirtualContent().querySelectorAll('.e-row'));\n          var fContentRows = [].slice.call(_this.parent.getFrozenVirtualContent().querySelectorAll('.e-row'));\n          _this.isLoaded = !mContentRows ? false : mContentRows.length === fContentRows.length;\n\n          if (_this.parent.enableColumnVirtualization && args.requestType === 'virtualscroll' && _this.isLoaded) {\n            var mHdr = [].slice.call(_this.parent.getMovableVirtualHeader().querySelectorAll('.e-row'));\n            var fHdr = [].slice.call(_this.parent.getFrozenVirtualHeader().querySelectorAll('.e-row'));\n            _this.isLoaded = mHdr.length === fHdr.length;\n          }\n        }\n\n        _this.ariaService.setBusy(_this.getPanel().querySelector('.e-content'), false);\n\n        if (_this.parent.isDestroyed) {\n          return;\n        }\n\n        var rows = _this.rows.slice(0);\n\n        if (_this.parent.isFrozenGrid()) {\n          rows = args.isFrozen ? _this.freezeRows : args.renderFrozenRightContent ? _this.parent.getFrozenRightRowsObject() : _this.movableRows;\n        }\n\n        _this.parent.notify(events.contentReady, {\n          rows: rows,\n          args: arg\n        });\n\n        if (_this.isLoaded) {\n          _this.parent.trigger(events.dataBound, {}, function () {\n            if (_this.parent.allowTextWrap) {\n              _this.parent.notify(events.freezeRender, {\n                case: 'textwrap'\n              });\n            }\n          });\n        }\n\n        if (arg) {\n          var action = (arg.requestType || '').toLowerCase() + '-complete';\n\n          _this.parent.notify(action, arg);\n\n          if (args.requestType === 'batchsave') {\n            args.cancel = false;\n\n            _this.parent.trigger(events.actionComplete, args);\n          }\n        }\n\n        if (_this.isLoaded) {\n          _this.parent.hideSpinner();\n        }\n      };\n    };\n\n    this.parent = parent;\n    this.serviceLocator = serviceLocator;\n    this.ariaService = this.serviceLocator.getService('ariaService');\n    this.mutableData = this.parent.getDataModule().isRemote();\n    this.generator = this.getModelGenerator();\n\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    if (!this.parent.enableColumnVirtualization && !this.parent.enableVirtualization && !this.parent.groupSettings.enableLazyLoading) {\n      this.parent.on(events.columnVisibilityChanged, this.setVisible, this);\n    }\n\n    this.parent.on(events.colGroupRefresh, this.colGroupRefresh, this);\n    this.parent.on(events.uiUpdate, this.enableAfterRender, this);\n    this.parent.on(events.refreshInfiniteModeBlocks, this.refreshContentRows, this);\n    this.parent.on(events.beforeCellFocused, this.beforeCellFocused, this);\n    this.parent.on(events.destroy, this.droppableDestroy, this);\n  }\n\n  ContentRender.prototype.beforeCellFocused = function (e) {\n    if (e.byKey && (e.keyArgs.action === 'upArrow' || e.keyArgs.action === 'downArrow')) {\n      this.pressedKey = e.keyArgs.action;\n    } else {\n      this.pressedKey = undefined;\n    }\n  };\n  /**\n   * The function is used to render grid content div\n   */\n\n\n  ContentRender.prototype.renderPanel = function () {\n    var gObj = this.parent;\n    var div = this.parent.element.querySelector('.e-gridcontent');\n\n    if (div) {\n      this.ariaService.setOptions(this.parent.element.querySelector('.e-content'), {\n        busy: false\n      });\n      this.setPanel(div);\n      return;\n    }\n\n    div = this.parent.createElement('div', {\n      className: 'e-gridcontent'\n    });\n    var innerDiv = this.parent.createElement('div', {\n      className: 'e-content'\n    });\n    this.ariaService.setOptions(innerDiv, {\n      busy: false\n    });\n    div.appendChild(innerDiv);\n    this.setPanel(div);\n    gObj.element.appendChild(div);\n  };\n  /**\n   * The function is used to render grid content table\n   */\n\n\n  ContentRender.prototype.renderTable = function () {\n    var contentDiv = this.getPanel();\n    var virtualTable = contentDiv.querySelector('.e-virtualtable');\n    var virtualTrack = contentDiv.querySelector('.e-virtualtrack');\n\n    if (this.parent.enableVirtualization && !isNullOrUndefined(virtualTable) && !isNullOrUndefined(virtualTrack) && (!isBlazor() || isBlazor() && !this.parent.isServerRendered)) {\n      remove(virtualTable);\n      remove(virtualTrack);\n    }\n\n    contentDiv.appendChild(this.createContentTable('_content_table'));\n    this.setTable(contentDiv.querySelector('.e-table'));\n    this.ariaService.setOptions(this.getTable(), {\n      multiselectable: this.parent.selectionSettings.type === 'Multiple'\n    });\n    this.initializeContentDrop();\n\n    if (this.parent.frozenRows) {\n      this.parent.getHeaderContent().classList.add('e-frozenhdrcont');\n    }\n  };\n  /**\n   * The function is used to create content table elements\n   * @return {Element}\n   * @hidden\n   */\n\n\n  ContentRender.prototype.createContentTable = function (id) {\n    var innerDiv = this.getPanel().firstElementChild;\n\n    if (!isBlazor()) {\n      if (this.getTable()) {\n        remove(this.getTable());\n      }\n    }\n\n    var table = innerDiv.querySelector('.e-table') ? innerDiv.querySelector('.e-table') : this.parent.createElement('table', {\n      className: 'e-table',\n      attrs: {\n        cellspacing: '0.25px',\n        role: 'grid',\n        id: this.parent.element.id + id\n      }\n    });\n    this.setColGroup(this.parent.getHeaderTable().querySelector('colgroup').cloneNode(true));\n    table.appendChild(this.getColGroup());\n    table.appendChild(this.parent.createElement('tbody'));\n    innerDiv.appendChild(table);\n    return innerDiv;\n  };\n  /**\n   * Refresh the content of the Grid.\n   * @return {void}\n   */\n  // tslint:disable-next-line:max-func-body-length\n\n\n  ContentRender.prototype.refreshContentRows = function (args) {\n    var _this = this;\n\n    if (args === void 0) {\n      args = {};\n    }\n\n    var gObj = this.parent;\n\n    if (gObj.currentViewData.length === 0) {\n      return;\n    }\n\n    var dataSource = this.currentMovableRows || gObj.currentViewData;\n    var contentModule = this.parent.contentModule;\n    var isReact = gObj.isReact && !isNullOrUndefined(gObj.rowTemplate);\n    var frag = isReact ? gObj.createElement('tbody') : document.createDocumentFragment();\n\n    if (!this.initialPageRecords) {\n      this.initialPageRecords = extend([], dataSource);\n    }\n\n    var hdrfrag = isReact ? gObj.createElement('tbody') : document.createDocumentFragment();\n    var columns = gObj.getColumns();\n    var tr;\n    var hdrTbody;\n    var frzCols = gObj.getFrozenColumns();\n    var isFrozenGrid = this.parent.isFrozenGrid();\n    var trElement;\n    var row = new RowRenderer(this.serviceLocator, null, this.parent);\n    var isInfiniteScroll = this.parent.enableInfiniteScrolling && args.requestType === 'infiniteScroll';\n    this.rowElements = [];\n    this.rows = [];\n    var fCont = this.getPanel().querySelector('.e-frozencontent');\n    var mCont = this.getPanel().querySelector('.e-movablecontent');\n    var cont = this.getPanel().querySelector('.e-content');\n    var tbdy;\n    var tableName;\n\n    if (isGroupAdaptive(gObj)) {\n      if (['sorting', 'filtering', 'searching', 'grouping', 'ungrouping', 'reorder'].some(function (value) {\n        return args.requestType === value;\n      })) {\n        gObj.vcRows = [];\n        gObj.vRows = [];\n      }\n    }\n\n    var modelData;\n    var isServerRendered = 'isServerRendered';\n\n    if (isBlazor() && this.parent[isServerRendered]) {\n      modelData = this.generator.generateRows(dataSource, args);\n\n      if (this.parent.enableVirtualization) {\n        this.prevInfo = this.prevInfo ? this.prevInfo : args.virtualInfo;\n        this.prevInfo = args.virtualInfo.sentinelInfo && args.virtualInfo.sentinelInfo.axis === 'Y' && this.currentInfo.page && this.currentInfo.page !== args.virtualInfo.page ? this.currentInfo : args.virtualInfo;\n      }\n\n      this.rows = modelData;\n      this.freezeRows = modelData;\n      this.rowElements = [].slice.call(this.getTable().querySelectorAll('tr.e-row[data-uid]'));\n\n      if (frzCols) {\n        this.movableRows = modelData.map(function (mRow) {\n          var sRow = new Row(mRow);\n          sRow.cells = mRow.cells.slice(frzCols, mRow.cells.length);\n          mRow.cells = mRow.cells.slice(0, frzCols);\n          return sRow;\n        });\n        this.freezeRowElements = this.rowElements;\n      }\n\n      this.isLoaded = true;\n      this.parent.hideSpinner();\n      args.isFrozen = this.parent.getFrozenColumns() !== 0 && !args.isFrozen;\n      var arg = extend({\n        rows: this.rows\n      }, args);\n\n      if (this.getTable().querySelector('.e-emptyrow')) {\n        remove(this.getTable().querySelector('.e-emptyrow'));\n\n        if (!isNullOrUndefined(this.getTable().querySelectorAll('.e-table > tbody')[1])) {\n          remove(this.getTable().querySelectorAll('.e-table > tbody')[1]);\n        }\n      }\n\n      this.parent.notify('contentcolgroup', {});\n      this.rafCallback(arg)();\n\n      if (frzCols) {\n        cont.style.overflowY = 'hidden';\n        fCont.style.height = mCont.offsetHeight - getScrollBarWidth() + 'px';\n        mCont.style.overflowY = this.parent.height !== 'auto' ? 'scroll' : 'auto';\n        fCont.style.borderRightWidth = '1px';\n        this.parent.notify(events.contentReady, {\n          rows: this.movableRows,\n          args: extend({}, arg, {\n            isFrozen: false\n          })\n        });\n      }\n\n      if (!(this.parent.isCheckBoxSelection || this.parent.selectionSettings.type === 'Multiple') || !this.parent.isPersistSelection && !this.parent.enableVirtualization) {\n        var rowIndex = 'editRowIndex';\n\n        if (this.parent.editSettings.mode === 'Normal' && !isNullOrUndefined(args[rowIndex])) {\n          this.parent.selectRow(args[rowIndex]);\n        }\n      }\n\n      if (this.parent.enableVirtualization && !this.parent.getHeaderContent().querySelectorAll('.e-check').length) {\n        var removeClassByUid = this.parent.getRows().filter(function (x) {\n          return x.getAttribute('aria-selected');\n        }).map(function (y) {\n          return y.getAttribute('data-uid');\n        });\n        var addClassByUid = this.parent.getRows().filter(function (x) {\n          return x.getAttribute('aria-selected') === null;\n        }).map(function (y) {\n          return y.getAttribute('data-uid');\n        });\n\n        for (var i = 0; i < removeClassByUid.length; i++) {\n          if (!isNullOrUndefined(this.parent.getRowObjectFromUID(removeClassByUid[i])) && !this.parent.getRowObjectFromUID(removeClassByUid[i]).isSelected) {\n            this.parent.getRowElementByUID(removeClassByUid[i]).removeAttribute('aria-selected');\n\n            if (!isNullOrUndefined(this.parent.getRowElementByUID(removeClassByUid[i]).querySelector('.e-check'))) {\n              removeClass([this.parent.getRowElementByUID(removeClassByUid[i]).querySelector('.e-check')], ['e-check']);\n            }\n\n            for (var j = 0; j < this.parent.getRowElementByUID(removeClassByUid[i]).children.length; j++) {\n              this.parent.getRowElementByUID(removeClassByUid[i]).children[j].classList.remove('e-selectionbackground', 'e-active');\n            }\n          }\n        }\n\n        for (var i = 0; i < addClassByUid.length; i++) {\n          if (!isNullOrUndefined(this.parent.getRowObjectFromUID(addClassByUid[i])) && this.parent.getRowObjectFromUID(addClassByUid[i]).isSelected) {\n            this.parent.getRowElementByUID(addClassByUid[i]).setAttribute('aria-selected', 'true');\n\n            if (!isNullOrUndefined(this.parent.getRowElementByUID(addClassByUid[i]).querySelector('.e-frame'))) {\n              addClass([this.parent.getRowElementByUID(addClassByUid[i]).querySelector('.e-frame')], ['e-check']);\n            }\n\n            for (var j = 0; j < this.parent.getRowElementByUID(addClassByUid[i]).children.length; j++) {\n              this.parent.getRowElementByUID(addClassByUid[i]).children[j].classList.add('e-selectionbackground', 'e-active');\n            }\n          }\n        }\n      }\n\n      return;\n    }\n\n    if (this.parent.enableVirtualization && this.parent.isFrozenGrid()) {\n      if (this.parent.enableColumnVirtualization && args.requestType === 'virtualscroll' && args.virtualInfo.sentinelInfo.axis === 'X') {\n        modelData = this.parent.contentModule.generateRows(dataSource, args);\n        args.renderMovableContent = true;\n      }\n\n      modelData = this.parent.contentModule.generateRows(dataSource, args);\n    } else {\n      modelData = this.checkCache(modelData, args);\n\n      if (!this.isAddRows && !this.useGroupCache) {\n        modelData = this.generator.generateRows(dataSource, args);\n      }\n    }\n\n    this.setGroupCache(modelData, args);\n    this.parent.notify(events.setInfiniteCache, {\n      isInfiniteScroll: isInfiniteScroll,\n      modelData: modelData,\n      args: args\n    });\n    var idx = modelData[0].cells[0].index;\n\n    if (isFrozenGrid) {\n      tableName = contentModule.setTbody(modelData, args);\n      tbdy = contentModule.getTbody(tableName);\n    }\n    /* tslint:disable:no-any */\n\n\n    if (args.requestType !== 'infiniteScroll' && this.parent.registeredTemplate && this.parent.registeredTemplate.template && !args.isFrozen) {\n      var templatetoclear = [];\n\n      for (var i = 0; i < this.parent.registeredTemplate.template.length; i++) {\n        for (var j = 0; j < this.parent.registeredTemplate.template[i].rootNodes.length; j++) {\n          if (isNullOrUndefined(this.parent.registeredTemplate.template[i].rootNodes[j].parentNode)) {\n            templatetoclear.push(this.parent.registeredTemplate.template[i]);\n            /* tslint:enable:no-any */\n          }\n        }\n      }\n\n      this.parent.destroyTemplate(['template'], templatetoclear);\n    }\n\n    if (this.parent.isReact && args.requestType !== 'infiniteScroll' && !args.isFrozen) {\n      this.parent.destroyTemplate(['columnTemplate', 'rowTemplate', 'detailTemplate', 'captionTemplate', 'commandsTemplate']);\n      this.parent.renderTemplates();\n    }\n\n    if (this.parent.enableColumnVirtualization) {\n      var cellMerge = new CellMergeRender(this.serviceLocator, this.parent);\n      cellMerge.updateVirtualCells(modelData);\n    }\n\n    if (!isFrozenGrid) {\n      this.tbody = this.getTable().querySelector('tbody');\n    }\n\n    var startIndex = 0;\n    var blockLoad = true;\n\n    if (isGroupAdaptive(gObj) && gObj.vcRows.length) {\n      var top_1 = 'top';\n      var scrollTop = !isNullOrUndefined(args.virtualInfo.offsets) ? args.virtualInfo.offsets.top : !isNullOrUndefined(args.scrollTop) ? args.scrollTop[top_1] : 0;\n\n      if (scrollTop !== 0) {\n        var offsets_1 = gObj.vGroupOffsets;\n        var bSize = gObj.pageSettings.pageSize / 2;\n        var values = Object.keys(offsets_1).map(function (key) {\n          return offsets_1[key];\n        });\n\n        for (var m = 0; m < values.length; m++) {\n          if (scrollTop < values[m]) {\n            if (!isNullOrUndefined(args.virtualInfo) && args.virtualInfo.direction === 'up') {\n              args.virtualInfo.blockIndexes = m === 0 || m === 1 ? [1, 2] : [m, m + 1];\n              startIndex = m === 0 || m === 1 ? 0 : m * bSize;\n              break;\n            } else {\n              args.virtualInfo.blockIndexes = m === 0 || m === 1 ? [1, 2] : [m, m + 1];\n              startIndex = m === 0 || m === 1 ? 0 : m * bSize;\n              break;\n            }\n          }\n        }\n\n        if (scrollTop + this.contentPanel.firstElementChild.offsetHeight === this.contentPanel.firstElementChild.scrollHeight && !args.rowObject) {\n          blockLoad = false;\n        }\n      }\n    }\n\n    var isVFFrozenOnly = gObj.frozenRows && !gObj.isFrozenGrid() && this.parent.enableVirtualization && args.requestType === 'reorder';\n\n    if (gObj.frozenRows && args.requestType === 'virtualscroll' && args.virtualInfo.sentinelInfo.axis === 'X' || isVFFrozenOnly) {\n      var bIndex = args.virtualInfo.blockIndexes;\n      var page = args.virtualInfo.page;\n      args.virtualInfo.blockIndexes = [1, 2];\n\n      if (isVFFrozenOnly) {\n        args.virtualInfo.page = 1;\n      }\n\n      var data = isVFFrozenOnly ? this.initialPageRecords : dataSource;\n      var mhdrData = this.vgenerator.generateRows(data, args);\n      mhdrData.splice(this.parent.frozenRows);\n\n      for (var i = 0; i < this.parent.frozenRows; i++) {\n        mhdrData[i].cells.splice(0, this.parent.getFrozenColumns());\n        tr = row.render(mhdrData[i], columns);\n        hdrfrag.appendChild(tr);\n      }\n\n      args.virtualInfo.blockIndexes = bIndex;\n      args.virtualInfo.page = page;\n\n      if (isVFFrozenOnly && args.virtualInfo.page === 1) {\n        modelData.splice(0, this.parent.frozenRows);\n      }\n    }\n\n    this.virtualFrozenHdrRefresh(hdrfrag, modelData, row, args, dataSource, columns);\n\n    for (var i = startIndex, len = modelData.length; i < len; i++) {\n      this.rows.push(modelData[i]);\n\n      if (this.parent.groupSettings.enableLazyLoading && !this.useGroupCache && this.parent.groupSettings.columns.length) {\n        this.setRowsInLazyGroup(modelData[i], i);\n\n        if (isNullOrUndefined(modelData[i].indent)) {\n          continue;\n        }\n      }\n\n      this.setInfiniteVisibleRows(args, modelData[i], tableName);\n\n      if (isGroupAdaptive(gObj) && this.rows.length >= gObj.pageSettings.pageSize && blockLoad) {\n        break;\n      }\n\n      if (!gObj.rowTemplate) {\n        tr = row.render(modelData[i], columns);\n        var isVFreorder = this.ensureFrozenHeaderRender(args);\n\n        if (gObj.frozenRows && i < gObj.frozenRows && !isInfiniteScroll && args.requestType !== 'virtualscroll' && isVFreorder && this.ensureVirtualFrozenHeaderRender(args)) {\n          hdrfrag.appendChild(tr);\n        } else {\n          frag.appendChild(tr);\n        }\n\n        if (modelData[i].isExpand) {\n          gObj.notify(events.expandChildGrid, tr.cells[gObj.groupSettings.columns.length]);\n        }\n      } else {\n        var rowTemplateID = gObj.element.id + 'rowTemplate';\n        var elements = void 0;\n\n        if (gObj.isReact) {\n          var isHeader = gObj.frozenRows && i < gObj.frozenRows;\n          var copied = extend({\n            index: i\n          }, dataSource[i]);\n          gObj.getRowTemplate()(copied, gObj, 'rowTemplate', rowTemplateID, null, null, isHeader ? hdrfrag : frag);\n          gObj.renderTemplates();\n        } else {\n          elements = gObj.getRowTemplate()(extend({\n            index: i\n          }, dataSource[i]), gObj, 'rowTemplate', rowTemplateID);\n        }\n\n        if (!gObj.isReact && elements[0].tagName === 'TBODY') {\n          for (var j = 0; j < elements.length; j++) {\n            var isTR = elements[j].nodeName.toLowerCase() === 'tr';\n\n            if (isTR || elements[j].querySelectorAll && elements[j].querySelectorAll('tr').length) {\n              tr = isTR ? elements[j] : elements[j].querySelector('tr');\n            }\n          }\n\n          if (gObj.frozenRows && i < gObj.frozenRows) {\n            hdrfrag.appendChild(tr);\n          } else {\n            frag.appendChild(tr);\n          }\n        } else {\n          if (gObj.frozenRows && i < gObj.frozenRows) {\n            tr = !gObj.isReact ? appendChildren(hdrfrag, elements) : hdrfrag.lastElementChild;\n          } else {\n            // frag.appendChild(tr);\n            if (!gObj.isReact) {\n              tr = appendChildren(frag, elements);\n            }\n\n            trElement = gObj.isReact ? frag.lastElementChild : tr.lastElementChild;\n          }\n        }\n\n        var arg = {\n          data: modelData[i].data,\n          row: trElement ? trElement : tr\n        };\n        this.parent.trigger(events.rowDataBound, arg);\n      }\n\n      if (modelData[i].isDataRow) {\n        this.rowElements.push(tr);\n      }\n\n      this.ariaService.setOptions(this.getTable(), {\n        colcount: gObj.getColumns().length.toString()\n      });\n    }\n\n    if (isFrozenGrid) {\n      contentModule.splitRows(tableName);\n    }\n\n    if (gObj.frozenRows && args.requestType !== 'virtualscroll' && !isInfiniteScroll && this.ensureVirtualFrozenHeaderRender(args) || args.requestType === 'virtualscroll' && args.virtualInfo.sentinelInfo && args.virtualInfo.sentinelInfo.axis === 'X') {\n      hdrTbody = isFrozenGrid ? contentModule.getFrozenHeader(tableName) : gObj.getHeaderTable().querySelector('tbody');\n\n      if (isReact) {\n        var parentTable = hdrTbody.parentElement;\n        remove(hdrTbody);\n        parentTable.appendChild(hdrfrag);\n      } else {\n        hdrTbody.innerHTML = '';\n        hdrTbody.appendChild(hdrfrag);\n      }\n    }\n\n    if (!gObj.enableVirtualization && gObj.frozenRows && idx === 0 && cont.offsetHeight === Number(gObj.height)) {\n      cont.style.height = cont.offsetHeight - hdrTbody.offsetHeight + 'px';\n    }\n\n    if (!isBlazor() || this.parent.isJsComponent) {\n      args.rows = this.rows.slice(0);\n    }\n\n    if (isFrozenGrid) {\n      contentModule.setIsFrozen(args, tableName);\n    }\n\n    this.index = idx;\n    getUpdateUsingRaf(function () {\n      _this.parent.notify(events.beforeFragAppend, args);\n\n      var isVFTable = _this.parent.enableVirtualization && _this.parent.isFrozenGrid();\n\n      if (!_this.parent.enableVirtualization && !isInfiniteScroll) {\n        if (_this.parent.isFrozenGrid()) {\n          remove(tbdy);\n          tbdy = _this.parent.createElement('tbody');\n        } else {\n          remove(_this.tbody);\n          _this.tbody = _this.parent.createElement('tbody');\n        }\n      }\n\n      if (isFrozenGrid && !isVFTable && !_this.parent.enableInfiniteScrolling) {\n        _this.appendContent(tbdy, frag, args, tableName);\n      } else {\n        if (gObj.rowTemplate) {\n          updateBlazorTemplate(gObj.element.id + 'rowTemplate', 'RowTemplate', gObj);\n        }\n\n        if (isVFTable) {\n          if (args.renderFrozenRightContent) {\n            var frCont = gObj.getContent().querySelector('.e-frozen-right-content').querySelector('tbody');\n\n            _this.appendContent(frCont, frag, args);\n          } else if (!args.renderMovableContent) {\n            _this.appendContent(fCont.querySelector('tbody'), frag, args);\n          } else {\n            _this.appendContent(mCont.querySelector('tbody'), frag, args);\n\n            args.renderMovableContent = false;\n          }\n\n          if (!_this.parent.getFrozenColumns()) {\n            contentModule.renderNextFrozentPart(args, tableName);\n          }\n        } else {\n          if (!isNullOrUndefined(_this.parent.infiniteScrollModule) && _this.parent.enableInfiniteScrolling) {\n            _this.isAddRows = false;\n\n            _this.parent.notify(events.removeInfiniteRows, {\n              args: args\n            });\n\n            _this.parent.notify(events.appendInfiniteContent, {\n              tbody: tbdy ? tbdy : _this.tbody,\n              frag: frag,\n              args: args,\n              rows: _this.rows,\n              rowElements: _this.rowElements,\n              visibleRows: _this.visibleRows,\n              tableName: tableName\n            });\n\n            if (!frzCols && isFrozenGrid) {\n              var count = _this.parent.getTablesCount();\n\n              if (count === 2 && (tableName === 'frozen-left' || tableName === 'frozen-right') || count === 3 && (tableName === 'frozen-left' || tableName === 'movable')) {\n                _this.refreshContentRows(extend({}, args));\n              }\n            }\n          } else {\n            _this.useGroupCache = false;\n\n            _this.appendContent(_this.tbody, frag, args);\n          }\n        }\n      }\n\n      if (frzCols) {\n        contentModule.renderNextFrozentPart(args, tableName);\n      }\n\n      frag = null;\n    }, this.rafCallback(extend({}, args)));\n  };\n\n  ContentRender.prototype.appendContent = function (tbody, frag, args, tableName) {\n    var isReact = this.parent.isReact && !isNullOrUndefined(this.parent.rowTemplate);\n\n    if (isReact) {\n      this.getTable().appendChild(frag);\n    } else {\n      tbody.appendChild(frag);\n      this.getTable().appendChild(tbody);\n    }\n  };\n\n  ContentRender.prototype.setRowsInLazyGroup = function (row, index) {\n    if (this.parent.groupSettings.enableLazyLoading && !this.useGroupCache && this.parent.groupSettings.columns.length) {\n      this.parent.contentModule.maintainRows(row, index);\n    }\n  };\n\n  ContentRender.prototype.setGroupCache = function (data, args) {\n    if (!this.useGroupCache && this.parent.groupSettings.enableLazyLoading) {\n      this.parent.notify(events.setGroupCache, {\n        args: args,\n        data: data\n      });\n    }\n  };\n\n  ContentRender.prototype.ensureFrozenHeaderRender = function (args) {\n    return !(this.parent.enableVirtualization && (args.requestType === 'reorder' || args.requestType === 'refresh') || this.parent.infiniteScrollSettings.enableCache && this.parent.frozenRows && this.parent.infiniteScrollModule.requestType === 'delete' && this.parent.pageSettings.currentPage !== 1);\n  };\n\n  ContentRender.prototype.ensureVirtualFrozenHeaderRender = function (args) {\n    return !(this.parent.enableVirtualization && args.requestType === 'delete');\n  };\n\n  ContentRender.prototype.checkCache = function (modelData, args) {\n    if (this.parent.infiniteScrollSettings.enableCache && args.requestType === 'infiniteScroll') {\n      var index = args.isFrozen ? 1 : 0;\n      var frozenCols = this.parent.isFrozenGrid();\n      this.isAddRows = !isNullOrUndefined(this.infiniteCache[this.parent.pageSettings.currentPage]);\n\n      if (frozenCols && !isNullOrUndefined(this.infiniteCache[this.parent.pageSettings.currentPage])) {\n        this.isAddRows = this.infiniteCache[this.parent.pageSettings.currentPage][index].length !== 0;\n      }\n\n      if (this.isAddRows) {\n        var data = !frozenCols ? this.infiniteCache[this.parent.pageSettings.currentPage] : this.infiniteCache[this.parent.pageSettings.currentPage][index];\n        modelData = this.parent.pageSettings.currentPage === 1 ? data.slice(this.parent.frozenRows) : data;\n      }\n\n      return modelData;\n    }\n\n    if (this.parent.groupSettings.enableLazyLoading && this.parent.groupSettings.columns.length && (args.requestType === 'paging' || args.requestType === 'columnstate' || args.requestType === 'reorder') && this.parent.contentModule.getGroupCache()[this.parent.pageSettings.currentPage]) {\n      this.useGroupCache = true;\n      return this.parent.contentModule.initialGroupRows(args.requestType === 'reorder');\n    }\n\n    return null;\n  };\n\n  ContentRender.prototype.setInfiniteVisibleRows = function (args, data, tableName) {\n    var frozenCols = this.parent.isFrozenGrid();\n\n    if (this.parent.enableInfiniteScrolling && !this.parent.infiniteScrollSettings.enableCache) {\n      if (frozenCols) {\n        if (tableName === 'frozen-left' || this.parent.getFrozenMode() === 'Right' && tableName === 'frozen-right') {\n          this.visibleFrozenRows.push(data);\n        } else if (tableName === 'movable') {\n          this.visibleRows.push(data);\n        } else {\n          this.rightFreezeRows.push(data);\n        }\n      } else if (!this.parent.infiniteScrollSettings.enableCache) {\n        this.visibleRows.push(data);\n      }\n    }\n  };\n\n  ContentRender.prototype.getCurrentBlockInfiniteRecords = function (isFreeze) {\n    var data = [];\n\n    if (this.parent.infiniteScrollSettings.enableCache) {\n      if (!Object.keys(this.infiniteCache).length) {\n        return [];\n      }\n\n      var frozenCols = this.parent.isFrozenGrid();\n      var rows = this.parent.getRows();\n      var index = parseInt(rows[this.parent.frozenRows].getAttribute('aria-rowindex'), 10);\n      var first = Math.ceil((index + 1) / this.parent.pageSettings.pageSize);\n      index = parseInt(rows[rows.length - 1].getAttribute('aria-rowindex'), 10);\n      var last = Math.ceil(index / this.parent.pageSettings.pageSize);\n\n      if (frozenCols) {\n        var idx = isFreeze ? 0 : 1;\n\n        for (var i = first; i <= last; i++) {\n          data = !data.length ? this.infiniteCache[i][idx] : data.concat(this.infiniteCache[i][idx]);\n        }\n\n        if (this.parent.frozenRows && this.parent.pageSettings.currentPage > 1) {\n          data = this.infiniteCache[1][idx].slice(0, this.parent.frozenRows).concat(data);\n        }\n      } else {\n        for (var i = first; i <= last; i++) {\n          data = !data.length ? this.infiniteCache[i] : data.concat(this.infiniteCache[i]);\n        }\n\n        if (this.parent.frozenRows && this.parent.pageSettings.currentPage > 1) {\n          data = this.infiniteCache[1].slice(0, this.parent.frozenRows).concat(data);\n        }\n      }\n    }\n\n    return data;\n  };\n\n  ContentRender.prototype.getReorderedVFRows = function (args) {\n    return this.parent.contentModule.getReorderedFrozenRows(args);\n  };\n\n  ContentRender.prototype.virtualFrozenHdrRefresh = function (hdrfrag, modelData, row, args, dataSource, columns) {\n    if (this.parent.frozenRows && this.parent.isFrozenGrid() && this.parent.enableVirtualization && (args.requestType === 'reorder' || args.requestType === 'refresh')) {\n      var tr = void 0;\n      this.currentMovableRows = dataSource;\n      var fhdrData = this.getReorderedVFRows(args);\n\n      for (var i = 0; i < fhdrData.length; i++) {\n        tr = row.render(fhdrData[i], columns);\n        hdrfrag.appendChild(tr);\n      }\n\n      if (args.virtualInfo.page === 1) {\n        modelData.splice(0, this.parent.frozenRows);\n      }\n\n      if (args.renderMovableContent) {\n        this.parent.currentViewData = this.currentMovableRows;\n        this.currentMovableRows = null;\n      }\n    }\n  };\n\n  ContentRender.prototype.getInfiniteRows = function () {\n    var rows = [];\n    var frozenCols = this.parent.isFrozenGrid();\n\n    if (this.parent.enableInfiniteScrolling) {\n      if (this.parent.infiniteScrollSettings.enableCache) {\n        var keys = Object.keys(this.infiniteCache);\n\n        for (var i = 0; i < keys.length; i++) {\n          rows = !frozenCols ? rows.concat(this.infiniteCache[keys[i]]) : rows.concat(this.infiniteCache[keys[i]][0]);\n        }\n      } else {\n        rows = frozenCols ? this.visibleFrozenRows : this.visibleRows;\n      }\n    }\n\n    return rows;\n  };\n\n  ContentRender.prototype.getInfiniteMovableRows = function () {\n    var infiniteCacheRows = this.getCurrentBlockInfiniteRecords();\n    var infiniteRows = this.parent.enableInfiniteScrolling ? infiniteCacheRows.length ? infiniteCacheRows : this.visibleRows : [];\n    return infiniteRows;\n  };\n  /**\n   * Get the content div element of grid\n   * @return {Element}\n   */\n\n\n  ContentRender.prototype.getPanel = function () {\n    return this.contentPanel;\n  };\n  /**\n   * Set the content div element of grid\n   * @param  {Element} panel\n   */\n\n\n  ContentRender.prototype.setPanel = function (panel) {\n    this.contentPanel = panel;\n  };\n  /**\n   * Get the content table element of grid\n   * @return {Element}\n   */\n\n\n  ContentRender.prototype.getTable = function () {\n    return this.contentTable;\n  };\n  /**\n   * Set the content table element of grid\n   * @param  {Element} table\n   */\n\n\n  ContentRender.prototype.setTable = function (table) {\n    this.contentTable = table;\n  };\n  /**\n   * Get the Row collection in the Grid.\n   * @returns {Row[] | HTMLCollectionOf<HTMLTableRowElement>}\n   */\n\n\n  ContentRender.prototype.getRows = function () {\n    var infiniteRows = this.getInfiniteRows();\n    return infiniteRows.length ? infiniteRows : this.parent.getFrozenColumns() ? this.freezeRows : this.rows;\n  };\n  /**\n   * Get the Movable Row collection in the Freeze pane Grid.\n   * @returns {Row[] | HTMLCollectionOf<HTMLTableRowElement>}\n   */\n\n\n  ContentRender.prototype.getMovableRows = function () {\n    var infiniteRows = this.getInfiniteMovableRows();\n    return infiniteRows.length ? infiniteRows : this.movableRows;\n  };\n  /**\n   * Get the content table data row elements\n   * @return {Element}\n   */\n\n\n  ContentRender.prototype.getRowElements = function () {\n    return this.parent.getFrozenColumns() ? this.freezeRowElements : this.rowElements;\n  };\n  /**\n   * Get the Freeze pane movable content table data row elements\n   * @return {Element}\n   */\n\n\n  ContentRender.prototype.getMovableRowElements = function () {\n    return this.rowElements;\n  };\n  /**\n   * Get the content table data row elements\n   * @return {Element}\n   */\n\n\n  ContentRender.prototype.setRowElements = function (elements) {\n    this.rowElements = elements;\n  };\n  /**\n   * Get the header colgroup element\n   * @returns {Element}\n   */\n\n\n  ContentRender.prototype.getColGroup = function () {\n    return this.colgroup;\n  };\n  /**\n   * Set the header colgroup element\n   * @param {Element} colgroup\n   * @returns {Element}\n   */\n\n\n  ContentRender.prototype.setColGroup = function (colGroup) {\n    if (!isNullOrUndefined(colGroup)) {\n      colGroup.id = 'content-' + colGroup.id;\n    }\n\n    return this.colgroup = colGroup;\n  };\n  /**\n   * Function to hide content table column based on visible property\n   * @param  {Column[]} columns?\n   */\n\n\n  ContentRender.prototype.setVisible = function (columns) {\n    var gObj = this.parent;\n\n    if (isBlazor() && gObj.isServerRendered) {\n      this.parent.notify('setvisibility', columns);\n    }\n\n    var isFrozenGrid = this.parent.isFrozenGrid();\n    var frzCols = gObj.getFrozenColumns();\n    var rows = [];\n\n    if (isFrozenGrid) {\n      var fRows = this.freezeRows;\n      var mRows = this.movableRows;\n      var rowLen = fRows.length;\n      var cellLen = void 0;\n      var rightRows = [];\n\n      if (gObj.getTablesCount() === 3) {\n        rightRows = gObj.getFrozenRightRowsObject();\n      }\n\n      for (var i = 0, row = void 0; i < rowLen; i++) {\n        cellLen = mRows[i].cells.length;\n        var rightLen = rightRows.length ? rightRows[i].cells.length : 0;\n        row = fRows[i].clone();\n\n        for (var j = 0; j < cellLen; j++) {\n          row.cells.push(mRows[i].cells[j]);\n        }\n\n        for (var k = 0; k < rightLen; k++) {\n          row.cells.push(rightRows[i].cells[k]);\n        }\n\n        rows.push(row);\n      }\n    } else {\n      rows = this.getRows();\n    }\n\n    var element;\n    var testRow;\n    rows.some(function (r) {\n      if (r.isDataRow) {\n        testRow = r;\n      }\n\n      return r.isDataRow;\n    });\n    var tasks = [];\n    var needFullRefresh = true;\n\n    if (!gObj.groupSettings.columns.length && testRow) {\n      needFullRefresh = false;\n    }\n\n    var tr = gObj.getDataRows();\n    var args = {};\n    var infiniteData = this.infiniteRowVisibility();\n    var contentrows = infiniteData ? infiniteData : this.rows.filter(function (row) {\n      return !row.isDetailRow;\n    });\n\n    for (var c = 0, clen = columns.length; c < clen; c++) {\n      var column = columns[c];\n      var idx = this.parent.getNormalizedColumnIndex(column.uid);\n      var colIdx = this.parent.getColumnIndexByUid(column.uid);\n      var displayVal = column.visible === true ? '' : 'none';\n\n      if (idx !== -1 && testRow && idx < testRow.cells.length) {\n        if (isFrozenGrid) {\n          if (column.getFreezeTableName() !== 'movable') {\n            if (column.getFreezeTableName() === 'frozen-right') {\n              var left = this.parent.getFrozenLeftColumnsCount();\n              var movable = this.parent.getMovableColumnsCount();\n              colIdx = idx = idx - (left + movable);\n              var colG = this.parent.getContent().querySelector('.e-frozen-right-content').querySelector('colgroup');\n              setStyleAttribute(colG.childNodes[idx], {\n                'display': displayVal\n              });\n              contentrows = gObj.getFrozenRightRowsObject();\n              tr = gObj.getFrozenRightDataRows();\n            } else {\n              setStyleAttribute(this.getColGroup().childNodes[idx], {\n                'display': displayVal\n              });\n              var infiniteFreezeData = this.infiniteRowVisibility(true);\n              contentrows = infiniteFreezeData ? infiniteFreezeData : this.freezeRows;\n              tr = gObj.getDataRows();\n            }\n          } else {\n            var mTable = gObj.getContent().querySelector('.e-movablecontent').querySelector('colgroup');\n            colIdx = idx = idx - frzCols - this.parent.getFrozenLeftColumnsCount();\n            setStyleAttribute(mTable.childNodes[idx], {\n              'display': displayVal\n            });\n            tr = gObj.getMovableDataRows();\n            var infiniteMovableData = this.infiniteRowVisibility();\n            contentrows = infiniteMovableData ? infiniteMovableData : this.movableRows;\n          }\n        } else {\n          setStyleAttribute(this.getColGroup().childNodes[idx], {\n            'display': displayVal\n          });\n        }\n      }\n\n      if (!needFullRefresh) {\n        this.setDisplayNone(tr, colIdx, displayVal, contentrows);\n      }\n\n      if (!this.parent.invokedFromMedia && column.hideAtMedia) {\n        this.parent.updateMediaColumns(column);\n      }\n\n      this.parent.invokedFromMedia = false;\n    }\n\n    if (needFullRefresh) {\n      this.refreshContentRows({\n        requestType: 'refresh'\n      });\n    } else {\n      if (!this.parent.getFrozenColumns()) {\n        this.parent.notify(events.partialRefresh, {\n          rows: contentrows,\n          args: args\n        });\n      } else {\n        this.parent.notify(events.partialRefresh, {\n          rows: this.freezeRows,\n          args: {\n            isFrozen: true,\n            rows: this.freezeRows\n          }\n        });\n        this.parent.notify(events.partialRefresh, {\n          rows: this.movableRows,\n          args: {\n            isFrozen: false,\n            rows: this.movableRows\n          }\n        });\n      }\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  ContentRender.prototype.setDisplayNone = function (tr, idx, displayVal, rows) {\n    var trs = Object.keys(tr);\n\n    for (var i = 0; i < trs.length; i++) {\n      var td = tr[trs[i]].querySelectorAll('td.e-rowcell')[idx];\n\n      if (tr[trs[i]].querySelectorAll('td.e-rowcell').length && td) {\n        setStyleAttribute(tr[trs[i]].querySelectorAll('td.e-rowcell')[idx], {\n          'display': displayVal\n        });\n\n        if (tr[trs[i]].querySelectorAll('td.e-rowcell')[idx].classList.contains('e-hide')) {\n          removeClass([tr[trs[i]].querySelectorAll('td.e-rowcell')[idx]], ['e-hide']);\n        }\n\n        if (this.parent.isRowDragable()) {\n          var index = this.parent.getFrozenColumns() ? idx : idx + 1;\n          rows[trs[i]].cells[index].visible = displayVal === '' ? true : false;\n        } else {\n          rows[trs[i]].cells[idx].visible = displayVal === '' ? true : false;\n        }\n      }\n    }\n\n    this.parent.notify(events.infiniteShowHide, {\n      visible: displayVal,\n      index: idx,\n      isFreeze: this.isInfiniteFreeze\n    });\n  };\n\n  ContentRender.prototype.infiniteRowVisibility = function (isFreeze) {\n    var infiniteData;\n\n    if (this.parent.enableInfiniteScrolling) {\n      this.isInfiniteFreeze = isFreeze;\n\n      if (this.parent.infiniteScrollSettings.enableCache) {\n        infiniteData = isFreeze ? this.getCurrentBlockInfiniteRecords(true) : this.getCurrentBlockInfiniteRecords();\n      } else {\n        infiniteData = isFreeze ? this.visibleFrozenRows : this.visibleRows;\n      }\n    }\n\n    return infiniteData;\n  };\n\n  ContentRender.prototype.colGroupRefresh = function () {\n    if (this.getColGroup()) {\n      var colGroup = void 0;\n\n      if (this.parent.enableColumnVirtualization && this.parent.getFrozenColumns() && this.parent.contentModule.isXaxis()) {\n        colGroup = this.parent.getMovableVirtualHeader().querySelector('colgroup').cloneNode(true);\n      } else {\n        colGroup = this.getHeaderColGroup();\n      }\n\n      this.getTable().replaceChild(colGroup, this.getColGroup());\n      this.setColGroup(colGroup);\n    }\n  };\n\n  ContentRender.prototype.getHeaderColGroup = function () {\n    return isBlazor() ? this.parent.getHeaderTable().querySelector('colgroup').cloneNode(true) : this.parent.element.querySelector('.e-gridheader').querySelector('colgroup').cloneNode(true);\n  };\n\n  ContentRender.prototype.initializeContentDrop = function () {\n    var gObj = this.parent;\n    this.droppable = new Droppable(gObj.element, {\n      accept: '.e-dragclone',\n      drop: this.drop\n    });\n  };\n\n  ContentRender.prototype.droppableDestroy = function () {\n    if (this.droppable && !this.droppable.isDestroyed) {\n      this.droppable.destroy();\n    }\n  };\n\n  ContentRender.prototype.canSkip = function (column, row, index) {\n    /**\n     * Skip the toggle visiblity operation when one of the following success\n     * 1. Grid has empty records\n     * 2. column visible property is unchanged\n     * 3. cell`s isVisible property is same as column`s visible property.\n     */\n    return isNullOrUndefined(row) || //(1)\n    isNullOrUndefined(column.visible) || //(2)    \n    row.cells[index].visible === column.visible; //(3)\n  };\n\n  ContentRender.prototype.getModelGenerator = function () {\n    return this.generator = this.parent.allowGrouping ? new GroupModelGenerator(this.parent) : new RowModelGenerator(this.parent);\n  };\n\n  ContentRender.prototype.renderEmpty = function (tbody) {\n    if (isBlazor() && !this.parent.isJsComponent && this.parent.frozenRows) {\n      return;\n    }\n\n    this.getTable().appendChild(tbody);\n\n    if (this.parent.frozenRows) {\n      this.parent.getHeaderContent().querySelector('tbody').innerHTML = '';\n    }\n  };\n\n  ContentRender.prototype.setSelection = function (uid, set, clearAll) {\n    this.parent.notify(events.setFreezeSelection, {\n      uid: uid,\n      set: set,\n      clearAll: clearAll\n    });\n    var isFrozen = this.parent.isFrozenGrid();\n\n    if (isFrozen && this.parent.enableVirtualization) {\n      return;\n    }\n\n    if (isFrozen) {\n      var rows = this.getMovableRows().filter(function (row) {\n        return clearAll || uid === row.uid;\n      });\n\n      for (var i = 0; i < rows.length; i++) {\n        rows[i].isSelected = set;\n      }\n    }\n\n    var row = this.getRows().filter(function (row) {\n      return clearAll || uid === row.uid;\n    });\n\n    for (var j = 0; j < row.length; j++) {\n      row[j].isSelected = set;\n      var cells = row[j].cells;\n\n      for (var k = 0; k < cells.length; k++) {\n        cells[k].isSelected = set;\n      }\n    }\n  };\n\n  ContentRender.prototype.getRowByIndex = function (index) {\n    index = this.getInfiniteRowIndex(index);\n    return this.parent.getDataRows()[index];\n  };\n\n  ContentRender.prototype.getInfiniteRowIndex = function (index) {\n    if (this.parent.infiniteScrollSettings.enableCache) {\n      var fRows = this.parent.frozenRows;\n      var idx = fRows > index ? 0 : fRows;\n      var firstRowIndex = parseInt(this.parent.getRows()[idx].getAttribute('aria-rowindex'), 10);\n      index = fRows > index ? index : index - firstRowIndex + fRows;\n    }\n\n    return index;\n  };\n\n  ContentRender.prototype.getVirtualRowIndex = function (index) {\n    return index;\n  };\n\n  ContentRender.prototype.getMovableRowByIndex = function (index) {\n    index = this.getInfiniteRowIndex(index);\n    return this.parent.getMovableDataRows()[index];\n  };\n\n  ContentRender.prototype.enableAfterRender = function (e) {\n    if (e.module === 'group' && e.enable) {\n      this.generator = this.getModelGenerator();\n    }\n  };\n\n  ContentRender.prototype.setRowObjects = function (rows) {\n    this.rows = rows;\n  };\n  /** @hidden */\n\n\n  ContentRender.prototype.immutableModeRendering = function (args) {\n    var _this = this;\n\n    if (args === void 0) {\n      args = {};\n    }\n\n    var gObj = this.parent;\n    gObj.hideSpinner();\n    var key = gObj.getPrimaryKeyFieldNames()[0];\n    var oldKeys = {};\n    var newKeys = {};\n    var newRowObjs = [];\n    var oldIndexes = {};\n    var oldRowObjs = gObj.getRowsObject().slice();\n    var batchChangeKeys = this.getBatchEditedRecords(key, oldRowObjs);\n    var newIndexes = {};\n    var hasBatch = Object.keys(batchChangeKeys).length !== 0;\n\n    if (gObj.getContent().querySelector('.e-emptyrow') || args.requestType === 'reorder' || this.parent.groupSettings.columns.length) {\n      this.refreshContentRows(args);\n    } else {\n      if (gObj.currentViewData.length === 0) {\n        return;\n      }\n\n      var oldRowElements = {};\n      var tbody = gObj.createElement('tbody');\n      var dataSource = gObj.currentViewData;\n      var trs = [].slice.call(this.getTable().querySelector('tbody').children);\n\n      if (this.prevCurrentView.length) {\n        var prevLen = this.prevCurrentView.length;\n        var currentLen = dataSource.length;\n\n        if (prevLen === currentLen) {\n          for (var i = 0; i < currentLen; i++) {\n            if (this.parent.editSettings.mode === 'Batch' && trs[i].classList.contains('e-insertedrow')) {\n              trs.splice(i, 1);\n              --i;\n              continue;\n            }\n\n            newKeys[dataSource[i][key]] = oldKeys[this.prevCurrentView[i][key]] = i;\n            newIndexes[i] = dataSource[i][key];\n            oldRowElements[oldRowObjs[i].uid] = trs[i];\n            oldIndexes[i] = this.prevCurrentView[i][key];\n          }\n        } else {\n          for (var i = 0; i < currentLen; i++) {\n            newKeys[dataSource[i][key]] = i;\n            newIndexes[i] = dataSource[i][key];\n          }\n\n          for (var i = 0; i < prevLen; i++) {\n            if (this.parent.editSettings.mode === 'Batch' && trs[i].classList.contains('e-insertedrow')) {\n              trs.splice(i, 1);\n              --i;\n              continue;\n            }\n\n            oldRowElements[oldRowObjs[i].uid] = trs[i];\n            oldKeys[this.prevCurrentView[i][key]] = i;\n            oldIndexes[i] = this.prevCurrentView[i][key];\n          }\n        }\n      }\n\n      for (var i = 0; i < dataSource.length; i++) {\n        var oldIndex = oldKeys[dataSource[i][key]];\n\n        if (!isNullOrUndefined(oldIndex)) {\n          var isEqual = false;\n\n          if (this.mutableData) {\n            isEqual = this.objectEqualityChecker(this.prevCurrentView[i], dataSource[i]);\n          }\n\n          var tr = oldRowElements[oldRowObjs[oldIndex].uid];\n          newRowObjs.push(oldRowObjs[oldIndex]);\n\n          if (this.rowElements[i] && this.rowElements[i].getAttribute('data-uid') === newRowObjs[i].uid && (hasBatch && isNullOrUndefined(batchChangeKeys[newIndexes[i]]) || !hasBatch && (isEqual || this.prevCurrentView[i] === dataSource[i]))) {\n            if (oldIndex !== i) {\n              this.refreshImmutableContent(i, tr, newRowObjs[i]);\n            }\n\n            tbody.appendChild(tr);\n            continue;\n          }\n\n          if (hasBatch && !isNullOrUndefined(batchChangeKeys[newIndexes[i]]) || !this.mutableData && dataSource[i] !== this.prevCurrentView[oldIndex] || this.mutableData && !isEqual) {\n            oldRowObjs[oldIndex].setRowValue(dataSource[i]);\n          }\n\n          tbody.appendChild(tr);\n          this.refreshImmutableContent(i, tr, newRowObjs[i]);\n        } else {\n          var row = new RowRenderer(this.serviceLocator, null, gObj);\n          var modelData = this.generator.generateRows([dataSource[i]]);\n          newRowObjs.push(modelData[0]);\n          var tr = row.render(modelData[0], gObj.getColumns());\n          tbody.appendChild(tr);\n          this.refreshImmutableContent(i, tr, newRowObjs[i]);\n        }\n      }\n\n      this.rows = newRowObjs;\n      this.rowElements = [].slice.call(tbody.children);\n      remove(this.getTable().querySelector('tbody'));\n      this.getTable().appendChild(tbody);\n      this.parent.trigger(events.dataBound, {}, function () {\n        if (_this.parent.allowTextWrap) {\n          _this.parent.notify(events.freezeRender, {\n            case: 'textwrap'\n          });\n        }\n      });\n\n      if (args) {\n        var action = (args.requestType || '').toLowerCase() + '-complete';\n        this.parent.notify(action, args);\n      }\n    }\n  };\n\n  ContentRender.prototype.objectEqualityChecker = function (old, next) {\n    var keys = Object.keys(old);\n    var isEqual = true;\n\n    for (var i = 0; i < keys.length; i++) {\n      if (old[keys[i]] !== next[keys[i]]) {\n        isEqual = false;\n        break;\n      }\n    }\n\n    return isEqual;\n  };\n\n  ContentRender.prototype.getBatchEditedRecords = function (primaryKey, rows) {\n    var keys = {};\n    var changes = this.parent.getBatchChanges();\n    var changedRecords = [];\n    var addedRecords = [];\n\n    if (Object.keys(changes).length) {\n      changedRecords = changes.changedRecords;\n      addedRecords = changes.addedRecords;\n    }\n\n    var args = {\n      cancel: false\n    };\n    this.parent.notify(events.immutableBatchCancel, {\n      rows: rows,\n      args: args\n    });\n\n    if (addedRecords.length) {\n      if (this.parent.editSettings.newRowPosition === 'Bottom') {\n        rows.splice(rows.length - 1, addedRecords.length);\n      } else {\n        if (!args.cancel) {\n          rows.splice(0, addedRecords.length);\n        }\n      }\n    }\n\n    for (var i = 0; i < changedRecords.length; i++) {\n      keys[changedRecords[i][primaryKey]] = i;\n    }\n\n    return keys;\n  };\n\n  ContentRender.prototype.refreshImmutableContent = function (index, tr, row) {\n    row.isAltRow = this.parent.enableAltRow ? index % 2 !== 0 : false;\n    row.isAltRow ? tr.classList.add('e-altrow') : tr.classList.remove('e-altrow');\n    row.index = index;\n    row.edit = undefined;\n    row.isDirty = false;\n    tr.setAttribute('aria-rowindex', index.toString());\n    this.updateCellIndex(tr, index);\n  };\n\n  ContentRender.prototype.updateCellIndex = function (rowEle, index) {\n    for (var i = 0; i < rowEle.cells.length; i++) {\n      rowEle.cells[i].setAttribute('index', index.toString());\n    }\n  };\n\n  return ContentRender;\n}();\n\nexport { ContentRender };","map":{"version":3,"sources":["C:/Users/appsk/Documents/Projects/PredictiveMaintenance/React PDM/env/frontend/node_modules/@syncfusion/ej2-grids/src/grid/renderer/content-renderer.js"],"names":["Droppable","isBlazor","addClass","isNullOrUndefined","extend","setStyleAttribute","remove","updateBlazorTemplate","removeClass","getUpdateUsingRaf","appendChildren","parentsUntil","events","Row","RowRenderer","CellMergeRender","RowModelGenerator","GroupModelGenerator","getScrollBarWidth","isGroupAdaptive","ContentRender","parent","serviceLocator","_this","rows","freezeRows","movableRows","freezeRowElements","currentInfo","prevCurrentView","isLoaded","viewColIndexes","drop","e","target","notify","columnDrop","droppedElement","infiniteCache","isRemove","visibleRows","visibleFrozenRows","rightFreezeRows","isAddRows","isInfiniteFreeze","useGroupCache","mutableData","rafCallback","args","arg","isFrozenGrid","enableVirtualization","mContentRows","slice","call","getMovableVirtualContent","querySelectorAll","fContentRows","getFrozenVirtualContent","length","enableColumnVirtualization","requestType","mHdr","getMovableVirtualHeader","fHdr","getFrozenVirtualHeader","ariaService","setBusy","getPanel","querySelector","isDestroyed","isFrozen","renderFrozenRightContent","getFrozenRightRowsObject","contentReady","trigger","dataBound","allowTextWrap","freezeRender","case","action","toLowerCase","cancel","actionComplete","hideSpinner","getService","getDataModule","isRemote","generator","getModelGenerator","groupSettings","enableLazyLoading","on","columnVisibilityChanged","setVisible","colGroupRefresh","uiUpdate","enableAfterRender","refreshInfiniteModeBlocks","refreshContentRows","beforeCellFocused","destroy","droppableDestroy","prototype","byKey","keyArgs","pressedKey","undefined","renderPanel","gObj","div","element","setOptions","busy","setPanel","createElement","className","innerDiv","appendChild","renderTable","contentDiv","virtualTable","virtualTrack","isServerRendered","createContentTable","setTable","getTable","multiselectable","selectionSettings","type","initializeContentDrop","frozenRows","getHeaderContent","classList","add","id","firstElementChild","table","attrs","cellspacing","role","setColGroup","getHeaderTable","cloneNode","getColGroup","currentViewData","dataSource","currentMovableRows","contentModule","isReact","rowTemplate","frag","document","createDocumentFragment","initialPageRecords","hdrfrag","columns","getColumns","tr","hdrTbody","frzCols","getFrozenColumns","trElement","row","isInfiniteScroll","enableInfiniteScrolling","rowElements","fCont","mCont","cont","tbdy","tableName","some","value","vcRows","vRows","modelData","generateRows","prevInfo","virtualInfo","sentinelInfo","axis","page","map","mRow","sRow","cells","style","overflowY","height","offsetHeight","borderRightWidth","isCheckBoxSelection","isPersistSelection","rowIndex","editSettings","mode","selectRow","removeClassByUid","getRows","filter","x","getAttribute","y","addClassByUid","i","getRowObjectFromUID","isSelected","getRowElementByUID","removeAttribute","j","children","setAttribute","renderMovableContent","checkCache","setGroupCache","setInfiniteCache","idx","index","setTbody","getTbody","registeredTemplate","template","templatetoclear","rootNodes","parentNode","push","destroyTemplate","renderTemplates","cellMerge","updateVirtualCells","tbody","startIndex","blockLoad","top_1","scrollTop","offsets","top","offsets_1","vGroupOffsets","bSize","pageSettings","pageSize","values","Object","keys","key","m","direction","blockIndexes","contentPanel","scrollHeight","rowObject","isVFFrozenOnly","bIndex","data","mhdrData","vgenerator","splice","render","virtualFrozenHdrRefresh","len","setRowsInLazyGroup","indent","setInfiniteVisibleRows","isVFreorder","ensureFrozenHeaderRender","ensureVirtualFrozenHeaderRender","isExpand","expandChildGrid","rowTemplateID","elements","isHeader","copied","getRowTemplate","tagName","isTR","nodeName","lastElementChild","rowDataBound","isDataRow","colcount","toString","splitRows","getFrozenHeader","parentTable","parentElement","innerHTML","Number","isJsComponent","setIsFrozen","beforeFragAppend","isVFTable","appendContent","frCont","getContent","renderNextFrozentPart","infiniteScrollModule","removeInfiniteRows","appendInfiniteContent","count","getTablesCount","maintainRows","infiniteScrollSettings","enableCache","currentPage","frozenCols","getGroupCache","initialGroupRows","getFrozenMode","getCurrentBlockInfiniteRecords","isFreeze","parseInt","first","Math","ceil","last","concat","getReorderedVFRows","getReorderedFrozenRows","fhdrData","getInfiniteRows","getInfiniteMovableRows","infiniteCacheRows","infiniteRows","panel","contentTable","getMovableRows","getRowElements","getMovableRowElements","setRowElements","colgroup","colGroup","fRows","mRows","rowLen","cellLen","rightRows","rightLen","clone","k","testRow","r","tasks","needFullRefresh","getDataRows","infiniteData","infiniteRowVisibility","contentrows","isDetailRow","c","clen","column","getNormalizedColumnIndex","uid","colIdx","getColumnIndexByUid","displayVal","visible","getFreezeTableName","left","getFrozenLeftColumnsCount","movable","getMovableColumnsCount","colG","childNodes","getFrozenRightDataRows","infiniteFreezeData","mTable","getMovableDataRows","infiniteMovableData","setDisplayNone","invokedFromMedia","hideAtMedia","updateMediaColumns","partialRefresh","trs","td","contains","isRowDragable","infiniteShowHide","isXaxis","getHeaderColGroup","replaceChild","droppable","accept","canSkip","allowGrouping","renderEmpty","setSelection","set","clearAll","setFreezeSelection","getRowByIndex","getInfiniteRowIndex","firstRowIndex","getVirtualRowIndex","getMovableRowByIndex","module","enable","setRowObjects","immutableModeRendering","getPrimaryKeyFieldNames","oldKeys","newKeys","newRowObjs","oldIndexes","oldRowObjs","getRowsObject","batchChangeKeys","getBatchEditedRecords","newIndexes","hasBatch","oldRowElements","prevLen","currentLen","oldIndex","isEqual","objectEqualityChecker","refreshImmutableContent","setRowValue","old","next","primaryKey","changes","getBatchChanges","changedRecords","addedRecords","immutableBatchCancel","newRowPosition","isAltRow","enableAltRow","edit","isDirty","updateCellIndex","rowEle"],"mappings":"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","sourcesContent":["import { Droppable, isBlazor, addClass } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { setStyleAttribute, remove, updateBlazorTemplate, removeClass } from '@syncfusion/ej2-base';\nimport { getUpdateUsingRaf, appendChildren, parentsUntil } from '../base/util';\nimport * as events from '../base/constant';\nimport { Row } from '../models/row';\nimport { RowRenderer } from './row-renderer';\nimport { CellMergeRender } from './cell-merge-renderer';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { GroupModelGenerator } from '../services/group-model-generator';\nimport { getScrollBarWidth, isGroupAdaptive } from '../base/util';\n/**\n * Content module is used to render grid content\n * @hidden\n */\nvar ContentRender = /** @class */ (function () {\n    /**\n     * Constructor for content renderer module\n     */\n    function ContentRender(parent, serviceLocator) {\n        var _this = this;\n        this.rows = [];\n        this.freezeRows = [];\n        this.movableRows = [];\n        this.freezeRowElements = [];\n        /** @hidden */\n        this.currentInfo = {};\n        /** @hidden */\n        this.prevCurrentView = [];\n        this.isLoaded = true;\n        this.viewColIndexes = [];\n        this.drop = function (e) {\n            if (parentsUntil(e.target, 'e-row') || parentsUntil(e.target, 'e-emptyrow')) {\n                _this.parent.notify(events.columnDrop, { target: e.target, droppedElement: e.droppedElement });\n                remove(e.droppedElement);\n            }\n        };\n        this.infiniteCache = {};\n        this.isRemove = false;\n        this.visibleRows = [];\n        this.visibleFrozenRows = [];\n        this.rightFreezeRows = [];\n        this.isAddRows = false;\n        this.isInfiniteFreeze = false;\n        this.useGroupCache = false;\n        this.mutableData = false;\n        this.rafCallback = function (args) {\n            var arg = args;\n            return function () {\n                if (_this.parent.isFrozenGrid() && _this.parent.enableVirtualization) {\n                    var mContentRows = [].slice.call(_this.parent.getMovableVirtualContent().querySelectorAll('.e-row'));\n                    var fContentRows = [].slice.call(_this.parent.getFrozenVirtualContent().querySelectorAll('.e-row'));\n                    _this.isLoaded = !mContentRows ? false : mContentRows.length === fContentRows.length;\n                    if (_this.parent.enableColumnVirtualization && args.requestType === 'virtualscroll' && _this.isLoaded) {\n                        var mHdr = [].slice.call(_this.parent.getMovableVirtualHeader().querySelectorAll('.e-row'));\n                        var fHdr = [].slice.call(_this.parent.getFrozenVirtualHeader().querySelectorAll('.e-row'));\n                        _this.isLoaded = mHdr.length === fHdr.length;\n                    }\n                }\n                _this.ariaService.setBusy(_this.getPanel().querySelector('.e-content'), false);\n                if (_this.parent.isDestroyed) {\n                    return;\n                }\n                var rows = _this.rows.slice(0);\n                if (_this.parent.isFrozenGrid()) {\n                    rows = args.isFrozen ? _this.freezeRows : args.renderFrozenRightContent ? _this.parent.getFrozenRightRowsObject()\n                        : _this.movableRows;\n                }\n                _this.parent.notify(events.contentReady, { rows: rows, args: arg });\n                if (_this.isLoaded) {\n                    _this.parent.trigger(events.dataBound, {}, function () {\n                        if (_this.parent.allowTextWrap) {\n                            _this.parent.notify(events.freezeRender, { case: 'textwrap' });\n                        }\n                    });\n                }\n                if (arg) {\n                    var action = (arg.requestType || '').toLowerCase() + '-complete';\n                    _this.parent.notify(action, arg);\n                    if (args.requestType === 'batchsave') {\n                        args.cancel = false;\n                        _this.parent.trigger(events.actionComplete, args);\n                    }\n                }\n                if (_this.isLoaded) {\n                    _this.parent.hideSpinner();\n                }\n            };\n        };\n        this.parent = parent;\n        this.serviceLocator = serviceLocator;\n        this.ariaService = this.serviceLocator.getService('ariaService');\n        this.mutableData = this.parent.getDataModule().isRemote();\n        this.generator = this.getModelGenerator();\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        if (!this.parent.enableColumnVirtualization && !this.parent.enableVirtualization\n            && !this.parent.groupSettings.enableLazyLoading) {\n            this.parent.on(events.columnVisibilityChanged, this.setVisible, this);\n        }\n        this.parent.on(events.colGroupRefresh, this.colGroupRefresh, this);\n        this.parent.on(events.uiUpdate, this.enableAfterRender, this);\n        this.parent.on(events.refreshInfiniteModeBlocks, this.refreshContentRows, this);\n        this.parent.on(events.beforeCellFocused, this.beforeCellFocused, this);\n        this.parent.on(events.destroy, this.droppableDestroy, this);\n    }\n    ContentRender.prototype.beforeCellFocused = function (e) {\n        if (e.byKey && (e.keyArgs.action === 'upArrow' || e.keyArgs.action === 'downArrow')) {\n            this.pressedKey = e.keyArgs.action;\n        }\n        else {\n            this.pressedKey = undefined;\n        }\n    };\n    /**\n     * The function is used to render grid content div\n     */\n    ContentRender.prototype.renderPanel = function () {\n        var gObj = this.parent;\n        var div = this.parent.element.querySelector('.e-gridcontent');\n        if (div) {\n            this.ariaService.setOptions(this.parent.element.querySelector('.e-content'), { busy: false });\n            this.setPanel(div);\n            return;\n        }\n        div = this.parent.createElement('div', { className: 'e-gridcontent' });\n        var innerDiv = this.parent.createElement('div', {\n            className: 'e-content'\n        });\n        this.ariaService.setOptions(innerDiv, { busy: false });\n        div.appendChild(innerDiv);\n        this.setPanel(div);\n        gObj.element.appendChild(div);\n    };\n    /**\n     * The function is used to render grid content table\n     */\n    ContentRender.prototype.renderTable = function () {\n        var contentDiv = this.getPanel();\n        var virtualTable = contentDiv.querySelector('.e-virtualtable');\n        var virtualTrack = contentDiv.querySelector('.e-virtualtrack');\n        if (this.parent.enableVirtualization && !isNullOrUndefined(virtualTable) && !isNullOrUndefined(virtualTrack)\n            && (!isBlazor() || (isBlazor() && !this.parent.isServerRendered))) {\n            remove(virtualTable);\n            remove(virtualTrack);\n        }\n        contentDiv.appendChild(this.createContentTable('_content_table'));\n        this.setTable(contentDiv.querySelector('.e-table'));\n        this.ariaService.setOptions(this.getTable(), {\n            multiselectable: this.parent.selectionSettings.type === 'Multiple'\n        });\n        this.initializeContentDrop();\n        if (this.parent.frozenRows) {\n            this.parent.getHeaderContent().classList.add('e-frozenhdrcont');\n        }\n    };\n    /**\n     * The function is used to create content table elements\n     * @return {Element}\n     * @hidden\n     */\n    ContentRender.prototype.createContentTable = function (id) {\n        var innerDiv = this.getPanel().firstElementChild;\n        if (!isBlazor()) {\n            if (this.getTable()) {\n                remove(this.getTable());\n            }\n        }\n        var table = innerDiv.querySelector('.e-table') ? innerDiv.querySelector('.e-table') :\n            this.parent.createElement('table', { className: 'e-table', attrs: {\n                    cellspacing: '0.25px', role: 'grid',\n                    id: this.parent.element.id + id\n                }\n            });\n        this.setColGroup(this.parent.getHeaderTable().querySelector('colgroup').cloneNode(true));\n        table.appendChild(this.getColGroup());\n        table.appendChild(this.parent.createElement('tbody'));\n        innerDiv.appendChild(table);\n        return innerDiv;\n    };\n    /**\n     * Refresh the content of the Grid.\n     * @return {void}\n     */\n    // tslint:disable-next-line:max-func-body-length\n    ContentRender.prototype.refreshContentRows = function (args) {\n        var _this = this;\n        if (args === void 0) { args = {}; }\n        var gObj = this.parent;\n        if (gObj.currentViewData.length === 0) {\n            return;\n        }\n        var dataSource = this.currentMovableRows || gObj.currentViewData;\n        var contentModule = this.parent.contentModule;\n        var isReact = gObj.isReact && !isNullOrUndefined(gObj.rowTemplate);\n        var frag = isReact ? gObj.createElement('tbody') : document.createDocumentFragment();\n        if (!this.initialPageRecords) {\n            this.initialPageRecords = extend([], dataSource);\n        }\n        var hdrfrag = isReact ? gObj.createElement('tbody') : document.createDocumentFragment();\n        var columns = gObj.getColumns();\n        var tr;\n        var hdrTbody;\n        var frzCols = gObj.getFrozenColumns();\n        var isFrozenGrid = this.parent.isFrozenGrid();\n        var trElement;\n        var row = new RowRenderer(this.serviceLocator, null, this.parent);\n        var isInfiniteScroll = this.parent.enableInfiniteScrolling\n            && args.requestType === 'infiniteScroll';\n        this.rowElements = [];\n        this.rows = [];\n        var fCont = this.getPanel().querySelector('.e-frozencontent');\n        var mCont = this.getPanel().querySelector('.e-movablecontent');\n        var cont = this.getPanel().querySelector('.e-content');\n        var tbdy;\n        var tableName;\n        if (isGroupAdaptive(gObj)) {\n            if (['sorting', 'filtering', 'searching', 'grouping', 'ungrouping', 'reorder']\n                .some(function (value) { return args.requestType === value; })) {\n                gObj.vcRows = [];\n                gObj.vRows = [];\n            }\n        }\n        var modelData;\n        var isServerRendered = 'isServerRendered';\n        if (isBlazor() && this.parent[isServerRendered]) {\n            modelData = this.generator.generateRows(dataSource, args);\n            if (this.parent.enableVirtualization) {\n                this.prevInfo = this.prevInfo ? this.prevInfo : args.virtualInfo;\n                this.prevInfo = args.virtualInfo.sentinelInfo && args.virtualInfo.sentinelInfo.axis === 'Y' && this.currentInfo.page &&\n                    this.currentInfo.page !== args.virtualInfo.page ? this.currentInfo : args.virtualInfo;\n            }\n            this.rows = modelData;\n            this.freezeRows = modelData;\n            this.rowElements = [].slice.call(this.getTable().querySelectorAll('tr.e-row[data-uid]'));\n            if (frzCols) {\n                this.movableRows = modelData.map(function (mRow) {\n                    var sRow = new Row(mRow);\n                    sRow.cells = mRow.cells.slice(frzCols, mRow.cells.length);\n                    mRow.cells = mRow.cells.slice(0, frzCols);\n                    return sRow;\n                });\n                this.freezeRowElements = this.rowElements;\n            }\n            this.isLoaded = true;\n            this.parent.hideSpinner();\n            args.isFrozen = this.parent.getFrozenColumns() !== 0 && !args.isFrozen;\n            var arg = extend({ rows: this.rows }, args);\n            if (this.getTable().querySelector('.e-emptyrow')) {\n                remove(this.getTable().querySelector('.e-emptyrow'));\n                if (!isNullOrUndefined(this.getTable().querySelectorAll('.e-table > tbody')[1])) {\n                    remove(this.getTable().querySelectorAll('.e-table > tbody')[1]);\n                }\n            }\n            this.parent.notify('contentcolgroup', {});\n            this.rafCallback(arg)();\n            if (frzCols) {\n                cont.style.overflowY = 'hidden';\n                fCont.style.height = ((mCont.offsetHeight) - getScrollBarWidth()) + 'px';\n                mCont.style.overflowY = this.parent.height !== 'auto' ? 'scroll' : 'auto';\n                fCont.style.borderRightWidth = '1px';\n                this.parent.notify(events.contentReady, { rows: this.movableRows, args: extend({}, arg, { isFrozen: false }) });\n            }\n            if (!(this.parent.isCheckBoxSelection || this.parent.selectionSettings.type === 'Multiple')\n                || (!this.parent.isPersistSelection && !this.parent.enableVirtualization)) {\n                var rowIndex = 'editRowIndex';\n                if (this.parent.editSettings.mode === 'Normal' && !isNullOrUndefined(args[rowIndex])) {\n                    this.parent.selectRow(args[rowIndex]);\n                }\n            }\n            if (this.parent.enableVirtualization && !this.parent.getHeaderContent().querySelectorAll('.e-check').length) {\n                var removeClassByUid = this.parent.getRows().filter(function (x) { return x.getAttribute('aria-selected'); })\n                    .map(function (y) { return y.getAttribute('data-uid'); });\n                var addClassByUid = this.parent.getRows().filter(function (x) { return x.getAttribute('aria-selected') === null; })\n                    .map(function (y) { return y.getAttribute('data-uid'); });\n                for (var i = 0; i < removeClassByUid.length; i++) {\n                    if (!isNullOrUndefined(this.parent.getRowObjectFromUID(removeClassByUid[i])) &&\n                        !this.parent.getRowObjectFromUID(removeClassByUid[i]).isSelected) {\n                        this.parent.getRowElementByUID(removeClassByUid[i]).removeAttribute('aria-selected');\n                        if (!isNullOrUndefined(this.parent.getRowElementByUID(removeClassByUid[i]).querySelector('.e-check'))) {\n                            removeClass([this.parent.getRowElementByUID(removeClassByUid[i]).querySelector('.e-check')], ['e-check']);\n                        }\n                        for (var j = 0; j < this.parent.getRowElementByUID(removeClassByUid[i]).children.length; j++) {\n                            this.parent.getRowElementByUID(removeClassByUid[i])\n                                .children[j].classList.remove('e-selectionbackground', 'e-active');\n                        }\n                    }\n                }\n                for (var i = 0; i < addClassByUid.length; i++) {\n                    if (!isNullOrUndefined(this.parent.getRowObjectFromUID(addClassByUid[i]))\n                        && this.parent.getRowObjectFromUID(addClassByUid[i]).isSelected) {\n                        this.parent.getRowElementByUID(addClassByUid[i]).setAttribute('aria-selected', 'true');\n                        if (!isNullOrUndefined(this.parent.getRowElementByUID(addClassByUid[i]).querySelector('.e-frame'))) {\n                            addClass([this.parent.getRowElementByUID(addClassByUid[i]).querySelector('.e-frame')], ['e-check']);\n                        }\n                        for (var j = 0; j < this.parent.getRowElementByUID(addClassByUid[i]).children.length; j++) {\n                            this.parent.getRowElementByUID(addClassByUid[i])\n                                .children[j].classList.add('e-selectionbackground', 'e-active');\n                        }\n                    }\n                }\n            }\n            return;\n        }\n        if (this.parent.enableVirtualization && this.parent.isFrozenGrid()) {\n            if (this.parent.enableColumnVirtualization && args.requestType === 'virtualscroll'\n                && args.virtualInfo.sentinelInfo.axis === 'X') {\n                modelData = this.parent.contentModule.generateRows(dataSource, args);\n                args.renderMovableContent = true;\n            }\n            modelData = this.parent.contentModule.generateRows(dataSource, args);\n        }\n        else {\n            modelData = this.checkCache(modelData, args);\n            if (!this.isAddRows && !this.useGroupCache) {\n                modelData = this.generator.generateRows(dataSource, args);\n            }\n        }\n        this.setGroupCache(modelData, args);\n        this.parent.notify(events.setInfiniteCache, { isInfiniteScroll: isInfiniteScroll, modelData: modelData, args: args });\n        var idx = modelData[0].cells[0].index;\n        if (isFrozenGrid) {\n            tableName = contentModule.setTbody(modelData, args);\n            tbdy = contentModule.getTbody(tableName);\n        }\n        /* tslint:disable:no-any */\n        if (args.requestType !== 'infiniteScroll' && this.parent.registeredTemplate\n            && this.parent.registeredTemplate.template && !args.isFrozen) {\n            var templatetoclear = [];\n            for (var i = 0; i < this.parent.registeredTemplate.template.length; i++) {\n                for (var j = 0; j < this.parent.registeredTemplate.template[i].rootNodes.length; j++) {\n                    if (isNullOrUndefined(this.parent.registeredTemplate.template[i].rootNodes[j].parentNode)) {\n                        templatetoclear.push(this.parent.registeredTemplate.template[i]);\n                        /* tslint:enable:no-any */\n                    }\n                }\n            }\n            this.parent.destroyTemplate(['template'], templatetoclear);\n        }\n        if (this.parent.isReact && args.requestType !== 'infiniteScroll' && !args.isFrozen) {\n            this.parent.destroyTemplate(['columnTemplate', 'rowTemplate', 'detailTemplate', 'captionTemplate', 'commandsTemplate']);\n            this.parent.renderTemplates();\n        }\n        if (this.parent.enableColumnVirtualization) {\n            var cellMerge = new CellMergeRender(this.serviceLocator, this.parent);\n            cellMerge.updateVirtualCells(modelData);\n        }\n        if (!isFrozenGrid) {\n            this.tbody = this.getTable().querySelector('tbody');\n        }\n        var startIndex = 0;\n        var blockLoad = true;\n        if (isGroupAdaptive(gObj) && gObj.vcRows.length) {\n            var top_1 = 'top';\n            var scrollTop = !isNullOrUndefined(args.virtualInfo.offsets) ? args.virtualInfo.offsets.top :\n                (!isNullOrUndefined(args.scrollTop) ? args.scrollTop[top_1] : 0);\n            if (scrollTop !== 0) {\n                var offsets_1 = gObj.vGroupOffsets;\n                var bSize = gObj.pageSettings.pageSize / 2;\n                var values = Object.keys(offsets_1).map(function (key) { return offsets_1[key]; });\n                for (var m = 0; m < values.length; m++) {\n                    if (scrollTop < values[m]) {\n                        if (!isNullOrUndefined(args.virtualInfo) && args.virtualInfo.direction === 'up') {\n                            args.virtualInfo.blockIndexes = m === 0 || m === 1 ? [1, 2] : [m, m + 1];\n                            startIndex = m === 0 || m === 1 ? 0 : (m * bSize);\n                            break;\n                        }\n                        else {\n                            args.virtualInfo.blockIndexes = m === 0 || m === 1 ? [1, 2] : [m, m + 1];\n                            startIndex = m === 0 || m === 1 ? 0 : (m) * bSize;\n                            break;\n                        }\n                    }\n                }\n                if (scrollTop + this.contentPanel.firstElementChild.offsetHeight ===\n                    this.contentPanel.firstElementChild.scrollHeight && !args.rowObject) {\n                    blockLoad = false;\n                }\n            }\n        }\n        var isVFFrozenOnly = gObj.frozenRows && !gObj.isFrozenGrid() && this.parent.enableVirtualization\n            && args.requestType === 'reorder';\n        if ((gObj.frozenRows && args.requestType === 'virtualscroll' && args.virtualInfo.sentinelInfo.axis === 'X') || isVFFrozenOnly) {\n            var bIndex = args.virtualInfo.blockIndexes;\n            var page = args.virtualInfo.page;\n            args.virtualInfo.blockIndexes = [1, 2];\n            if (isVFFrozenOnly) {\n                args.virtualInfo.page = 1;\n            }\n            var data = isVFFrozenOnly ? this.initialPageRecords : dataSource;\n            var mhdrData = this.vgenerator\n                .generateRows(data, args);\n            mhdrData.splice(this.parent.frozenRows);\n            for (var i = 0; i < this.parent.frozenRows; i++) {\n                mhdrData[i].cells.splice(0, this.parent.getFrozenColumns());\n                tr = row.render(mhdrData[i], columns);\n                hdrfrag.appendChild(tr);\n            }\n            args.virtualInfo.blockIndexes = bIndex;\n            args.virtualInfo.page = page;\n            if (isVFFrozenOnly && args.virtualInfo.page === 1) {\n                modelData.splice(0, this.parent.frozenRows);\n            }\n        }\n        this.virtualFrozenHdrRefresh(hdrfrag, modelData, row, args, dataSource, columns);\n        for (var i = startIndex, len = modelData.length; i < len; i++) {\n            this.rows.push(modelData[i]);\n            if (this.parent.groupSettings.enableLazyLoading && !this.useGroupCache && this.parent.groupSettings.columns.length) {\n                this.setRowsInLazyGroup(modelData[i], i);\n                if (isNullOrUndefined(modelData[i].indent)) {\n                    continue;\n                }\n            }\n            this.setInfiniteVisibleRows(args, modelData[i], tableName);\n            if (isGroupAdaptive(gObj) && this.rows.length >= (gObj.pageSettings.pageSize) && blockLoad) {\n                break;\n            }\n            if (!gObj.rowTemplate) {\n                tr = row.render(modelData[i], columns);\n                var isVFreorder = this.ensureFrozenHeaderRender(args);\n                if (gObj.frozenRows && i < gObj.frozenRows && !isInfiniteScroll && args.requestType !== 'virtualscroll' && isVFreorder\n                    && this.ensureVirtualFrozenHeaderRender(args)) {\n                    hdrfrag.appendChild(tr);\n                }\n                else {\n                    frag.appendChild(tr);\n                }\n                if (modelData[i].isExpand) {\n                    gObj.notify(events.expandChildGrid, tr.cells[gObj.groupSettings.columns.length]);\n                }\n            }\n            else {\n                var rowTemplateID = gObj.element.id + 'rowTemplate';\n                var elements = void 0;\n                if (gObj.isReact) {\n                    var isHeader = gObj.frozenRows && i < gObj.frozenRows;\n                    var copied = extend({ index: i }, dataSource[i]);\n                    gObj.getRowTemplate()(copied, gObj, 'rowTemplate', rowTemplateID, null, null, isHeader ? hdrfrag : frag);\n                    gObj.renderTemplates();\n                }\n                else {\n                    elements = gObj.getRowTemplate()(extend({ index: i }, dataSource[i]), gObj, 'rowTemplate', rowTemplateID);\n                }\n                if (!gObj.isReact && elements[0].tagName === 'TBODY') {\n                    for (var j = 0; j < elements.length; j++) {\n                        var isTR = elements[j].nodeName.toLowerCase() === 'tr';\n                        if (isTR || (elements[j].querySelectorAll && elements[j].querySelectorAll('tr').length)) {\n                            tr = isTR ? elements[j] : elements[j].querySelector('tr');\n                        }\n                    }\n                    if (gObj.frozenRows && i < gObj.frozenRows) {\n                        hdrfrag.appendChild(tr);\n                    }\n                    else {\n                        frag.appendChild(tr);\n                    }\n                }\n                else {\n                    if (gObj.frozenRows && i < gObj.frozenRows) {\n                        tr = !gObj.isReact ? appendChildren(hdrfrag, elements) : hdrfrag.lastElementChild;\n                    }\n                    else {\n                        // frag.appendChild(tr);\n                        if (!gObj.isReact) {\n                            tr = appendChildren(frag, elements);\n                        }\n                        trElement = gObj.isReact ? frag.lastElementChild : tr.lastElementChild;\n                    }\n                }\n                var arg = { data: modelData[i].data, row: trElement ? trElement : tr };\n                this.parent.trigger(events.rowDataBound, arg);\n            }\n            if (modelData[i].isDataRow) {\n                this.rowElements.push(tr);\n            }\n            this.ariaService.setOptions(this.getTable(), { colcount: gObj.getColumns().length.toString() });\n        }\n        if (isFrozenGrid) {\n            contentModule.splitRows(tableName);\n        }\n        if ((gObj.frozenRows && args.requestType !== 'virtualscroll' && !isInfiniteScroll && this.ensureVirtualFrozenHeaderRender(args))\n            || (args.requestType === 'virtualscroll' && args.virtualInfo.sentinelInfo && args.virtualInfo.sentinelInfo.axis === 'X')) {\n            hdrTbody = isFrozenGrid ? contentModule.getFrozenHeader(tableName) : gObj.getHeaderTable().querySelector('tbody');\n            if (isReact) {\n                var parentTable = hdrTbody.parentElement;\n                remove(hdrTbody);\n                parentTable.appendChild(hdrfrag);\n            }\n            else {\n                hdrTbody.innerHTML = '';\n                hdrTbody.appendChild(hdrfrag);\n            }\n        }\n        if (!gObj.enableVirtualization && gObj.frozenRows && idx === 0 && cont.offsetHeight === Number(gObj.height)) {\n            cont.style.height = (cont.offsetHeight - hdrTbody.offsetHeight) + 'px';\n        }\n        if (!isBlazor() || this.parent.isJsComponent) {\n            args.rows = this.rows.slice(0);\n        }\n        if (isFrozenGrid) {\n            contentModule.setIsFrozen(args, tableName);\n        }\n        this.index = idx;\n        getUpdateUsingRaf(function () {\n            _this.parent.notify(events.beforeFragAppend, args);\n            var isVFTable = _this.parent.enableVirtualization && _this.parent.isFrozenGrid();\n            if (!_this.parent.enableVirtualization && !isInfiniteScroll) {\n                if (_this.parent.isFrozenGrid()) {\n                    remove(tbdy);\n                    tbdy = _this.parent.createElement('tbody');\n                }\n                else {\n                    remove(_this.tbody);\n                    _this.tbody = _this.parent.createElement('tbody');\n                }\n            }\n            if (isFrozenGrid && !isVFTable && !_this.parent.enableInfiniteScrolling) {\n                _this.appendContent(tbdy, frag, args, tableName);\n            }\n            else {\n                if (gObj.rowTemplate) {\n                    updateBlazorTemplate(gObj.element.id + 'rowTemplate', 'RowTemplate', gObj);\n                }\n                if (isVFTable) {\n                    if (args.renderFrozenRightContent) {\n                        var frCont = gObj.getContent().querySelector('.e-frozen-right-content').querySelector('tbody');\n                        _this.appendContent(frCont, frag, args);\n                    }\n                    else if (!args.renderMovableContent) {\n                        _this.appendContent(fCont.querySelector('tbody'), frag, args);\n                    }\n                    else {\n                        _this.appendContent(mCont.querySelector('tbody'), frag, args);\n                        args.renderMovableContent = false;\n                    }\n                    if (!_this.parent.getFrozenColumns()) {\n                        contentModule.renderNextFrozentPart(args, tableName);\n                    }\n                }\n                else {\n                    if (!isNullOrUndefined(_this.parent.infiniteScrollModule) && _this.parent.enableInfiniteScrolling) {\n                        _this.isAddRows = false;\n                        _this.parent.notify(events.removeInfiniteRows, { args: args });\n                        _this.parent.notify(events.appendInfiniteContent, {\n                            tbody: tbdy ? tbdy : _this.tbody, frag: frag, args: args, rows: _this.rows,\n                            rowElements: _this.rowElements, visibleRows: _this.visibleRows,\n                            tableName: tableName\n                        });\n                        if (!frzCols && isFrozenGrid) {\n                            var count = _this.parent.getTablesCount();\n                            if ((count === 2 && (tableName === 'frozen-left' || tableName === 'frozen-right'))\n                                || (count === 3 && (tableName === 'frozen-left' || tableName === 'movable'))) {\n                                _this.refreshContentRows(extend({}, args));\n                            }\n                        }\n                    }\n                    else {\n                        _this.useGroupCache = false;\n                        _this.appendContent(_this.tbody, frag, args);\n                    }\n                }\n            }\n            if (frzCols) {\n                contentModule.renderNextFrozentPart(args, tableName);\n            }\n            frag = null;\n        }, this.rafCallback(extend({}, args)));\n    };\n    ContentRender.prototype.appendContent = function (tbody, frag, args, tableName) {\n        var isReact = this.parent.isReact && !isNullOrUndefined(this.parent.rowTemplate);\n        if (isReact) {\n            this.getTable().appendChild(frag);\n        }\n        else {\n            tbody.appendChild(frag);\n            this.getTable().appendChild(tbody);\n        }\n    };\n    ContentRender.prototype.setRowsInLazyGroup = function (row, index) {\n        if (this.parent.groupSettings.enableLazyLoading && !this.useGroupCache && this.parent.groupSettings.columns.length) {\n            this.parent.contentModule.maintainRows(row, index);\n        }\n    };\n    ContentRender.prototype.setGroupCache = function (data, args) {\n        if (!this.useGroupCache && this.parent.groupSettings.enableLazyLoading) {\n            this.parent.notify(events.setGroupCache, { args: args, data: data });\n        }\n    };\n    ContentRender.prototype.ensureFrozenHeaderRender = function (args) {\n        return !((this.parent.enableVirtualization\n            && (args.requestType === 'reorder' || args.requestType === 'refresh')) || (this.parent.infiniteScrollSettings.enableCache\n            && this.parent.frozenRows && this.parent.infiniteScrollModule.requestType === 'delete'\n            && this.parent.pageSettings.currentPage !== 1));\n    };\n    ContentRender.prototype.ensureVirtualFrozenHeaderRender = function (args) {\n        return !(this.parent.enableVirtualization && args.requestType === 'delete');\n    };\n    ContentRender.prototype.checkCache = function (modelData, args) {\n        if (this.parent.infiniteScrollSettings.enableCache && args.requestType === 'infiniteScroll') {\n            var index = args.isFrozen ? 1 : 0;\n            var frozenCols = this.parent.isFrozenGrid();\n            this.isAddRows = !isNullOrUndefined(this.infiniteCache[this.parent.pageSettings.currentPage]);\n            if (frozenCols && !isNullOrUndefined(this.infiniteCache[this.parent.pageSettings.currentPage])) {\n                this.isAddRows = this.infiniteCache[this.parent.pageSettings.currentPage][index].length !== 0;\n            }\n            if (this.isAddRows) {\n                var data = !frozenCols ? this.infiniteCache[this.parent.pageSettings.currentPage]\n                    : this.infiniteCache[this.parent.pageSettings.currentPage][index];\n                modelData = this.parent.pageSettings.currentPage === 1 ? data.slice(this.parent.frozenRows) : data;\n            }\n            return modelData;\n        }\n        if (this.parent.groupSettings.enableLazyLoading && this.parent.groupSettings.columns.length &&\n            (args.requestType === 'paging' || args.requestType === 'columnstate' || args.requestType === 'reorder')\n            && this.parent.contentModule.getGroupCache()[this.parent.pageSettings.currentPage]) {\n            this.useGroupCache = true;\n            return this.parent.contentModule.initialGroupRows(args.requestType === 'reorder');\n        }\n        return null;\n    };\n    ContentRender.prototype.setInfiniteVisibleRows = function (args, data, tableName) {\n        var frozenCols = this.parent.isFrozenGrid();\n        if (this.parent.enableInfiniteScrolling && !this.parent.infiniteScrollSettings.enableCache) {\n            if (frozenCols) {\n                if (tableName === 'frozen-left' || (this.parent.getFrozenMode() === 'Right' && tableName === 'frozen-right')) {\n                    this.visibleFrozenRows.push(data);\n                }\n                else if (tableName === 'movable') {\n                    this.visibleRows.push(data);\n                }\n                else {\n                    this.rightFreezeRows.push(data);\n                }\n            }\n            else if (!this.parent.infiniteScrollSettings.enableCache) {\n                this.visibleRows.push(data);\n            }\n        }\n    };\n    ContentRender.prototype.getCurrentBlockInfiniteRecords = function (isFreeze) {\n        var data = [];\n        if (this.parent.infiniteScrollSettings.enableCache) {\n            if (!Object.keys(this.infiniteCache).length) {\n                return [];\n            }\n            var frozenCols = this.parent.isFrozenGrid();\n            var rows = this.parent.getRows();\n            var index = parseInt(rows[this.parent.frozenRows].getAttribute('aria-rowindex'), 10);\n            var first = Math.ceil((index + 1) / this.parent.pageSettings.pageSize);\n            index = parseInt(rows[rows.length - 1].getAttribute('aria-rowindex'), 10);\n            var last = Math.ceil(index / this.parent.pageSettings.pageSize);\n            if (frozenCols) {\n                var idx = isFreeze ? 0 : 1;\n                for (var i = first; i <= last; i++) {\n                    data = !data.length ? this.infiniteCache[i][idx]\n                        : data.concat(this.infiniteCache[i][idx]);\n                }\n                if (this.parent.frozenRows && this.parent.pageSettings.currentPage > 1) {\n                    data = this.infiniteCache[1][idx].slice(0, this.parent.frozenRows).concat(data);\n                }\n            }\n            else {\n                for (var i = first; i <= last; i++) {\n                    data = !data.length ? this.infiniteCache[i] : data.concat(this.infiniteCache[i]);\n                }\n                if (this.parent.frozenRows && this.parent.pageSettings.currentPage > 1) {\n                    data = this.infiniteCache[1].slice(0, this.parent.frozenRows).concat(data);\n                }\n            }\n        }\n        return data;\n    };\n    ContentRender.prototype.getReorderedVFRows = function (args) {\n        return this.parent.contentModule.getReorderedFrozenRows(args);\n    };\n    ContentRender.prototype.virtualFrozenHdrRefresh = function (hdrfrag, modelData, row, args, dataSource, columns) {\n        if (this.parent.frozenRows && this.parent.isFrozenGrid() && this.parent.enableVirtualization\n            && (args.requestType === 'reorder' || args.requestType === 'refresh')) {\n            var tr = void 0;\n            this.currentMovableRows = dataSource;\n            var fhdrData = this.getReorderedVFRows(args);\n            for (var i = 0; i < fhdrData.length; i++) {\n                tr = row.render(fhdrData[i], columns);\n                hdrfrag.appendChild(tr);\n            }\n            if (args.virtualInfo.page === 1) {\n                modelData.splice(0, this.parent.frozenRows);\n            }\n            if (args.renderMovableContent) {\n                this.parent.currentViewData = this.currentMovableRows;\n                this.currentMovableRows = null;\n            }\n        }\n    };\n    ContentRender.prototype.getInfiniteRows = function () {\n        var rows = [];\n        var frozenCols = this.parent.isFrozenGrid();\n        if (this.parent.enableInfiniteScrolling) {\n            if (this.parent.infiniteScrollSettings.enableCache) {\n                var keys = Object.keys(this.infiniteCache);\n                for (var i = 0; i < keys.length; i++) {\n                    rows = !frozenCols ? rows.concat(this.infiniteCache[keys[i]]) : rows.concat(this.infiniteCache[keys[i]][0]);\n                }\n            }\n            else {\n                rows = frozenCols ? this.visibleFrozenRows : this.visibleRows;\n            }\n        }\n        return rows;\n    };\n    ContentRender.prototype.getInfiniteMovableRows = function () {\n        var infiniteCacheRows = this.getCurrentBlockInfiniteRecords();\n        var infiniteRows = this.parent.enableInfiniteScrolling ? infiniteCacheRows.length ? infiniteCacheRows\n            : this.visibleRows : [];\n        return infiniteRows;\n    };\n    /**\n     * Get the content div element of grid\n     * @return {Element}\n     */\n    ContentRender.prototype.getPanel = function () {\n        return this.contentPanel;\n    };\n    /**\n     * Set the content div element of grid\n     * @param  {Element} panel\n     */\n    ContentRender.prototype.setPanel = function (panel) {\n        this.contentPanel = panel;\n    };\n    /**\n     * Get the content table element of grid\n     * @return {Element}\n     */\n    ContentRender.prototype.getTable = function () {\n        return this.contentTable;\n    };\n    /**\n     * Set the content table element of grid\n     * @param  {Element} table\n     */\n    ContentRender.prototype.setTable = function (table) {\n        this.contentTable = table;\n    };\n    /**\n     * Get the Row collection in the Grid.\n     * @returns {Row[] | HTMLCollectionOf<HTMLTableRowElement>}\n     */\n    ContentRender.prototype.getRows = function () {\n        var infiniteRows = this.getInfiniteRows();\n        return infiniteRows.length ? infiniteRows : this.parent.getFrozenColumns() ? this.freezeRows : this.rows;\n    };\n    /**\n     * Get the Movable Row collection in the Freeze pane Grid.\n     * @returns {Row[] | HTMLCollectionOf<HTMLTableRowElement>}\n     */\n    ContentRender.prototype.getMovableRows = function () {\n        var infiniteRows = this.getInfiniteMovableRows();\n        return infiniteRows.length ? infiniteRows : this.movableRows;\n    };\n    /**\n     * Get the content table data row elements\n     * @return {Element}\n     */\n    ContentRender.prototype.getRowElements = function () {\n        return this.parent.getFrozenColumns() ? this.freezeRowElements : this.rowElements;\n    };\n    /**\n     * Get the Freeze pane movable content table data row elements\n     * @return {Element}\n     */\n    ContentRender.prototype.getMovableRowElements = function () {\n        return this.rowElements;\n    };\n    /**\n     * Get the content table data row elements\n     * @return {Element}\n     */\n    ContentRender.prototype.setRowElements = function (elements) {\n        this.rowElements = elements;\n    };\n    /**\n     * Get the header colgroup element\n     * @returns {Element}\n     */\n    ContentRender.prototype.getColGroup = function () {\n        return this.colgroup;\n    };\n    /**\n     * Set the header colgroup element\n     * @param {Element} colgroup\n     * @returns {Element}\n     */\n    ContentRender.prototype.setColGroup = function (colGroup) {\n        if (!isNullOrUndefined(colGroup)) {\n            colGroup.id = 'content-' + colGroup.id;\n        }\n        return this.colgroup = colGroup;\n    };\n    /**\n     * Function to hide content table column based on visible property\n     * @param  {Column[]} columns?\n     */\n    ContentRender.prototype.setVisible = function (columns) {\n        var gObj = this.parent;\n        if (isBlazor() && gObj.isServerRendered) {\n            this.parent.notify('setvisibility', columns);\n        }\n        var isFrozenGrid = this.parent.isFrozenGrid();\n        var frzCols = gObj.getFrozenColumns();\n        var rows = [];\n        if (isFrozenGrid) {\n            var fRows = this.freezeRows;\n            var mRows = this.movableRows;\n            var rowLen = fRows.length;\n            var cellLen = void 0;\n            var rightRows = [];\n            if (gObj.getTablesCount() === 3) {\n                rightRows = gObj.getFrozenRightRowsObject();\n            }\n            for (var i = 0, row = void 0; i < rowLen; i++) {\n                cellLen = mRows[i].cells.length;\n                var rightLen = rightRows.length ? rightRows[i].cells.length : 0;\n                row = fRows[i].clone();\n                for (var j = 0; j < cellLen; j++) {\n                    row.cells.push(mRows[i].cells[j]);\n                }\n                for (var k = 0; k < rightLen; k++) {\n                    row.cells.push(rightRows[i].cells[k]);\n                }\n                rows.push(row);\n            }\n        }\n        else {\n            rows = this.getRows();\n        }\n        var element;\n        var testRow;\n        rows.some(function (r) { if (r.isDataRow) {\n            testRow = r;\n        } return r.isDataRow; });\n        var tasks = [];\n        var needFullRefresh = true;\n        if (!gObj.groupSettings.columns.length && testRow) {\n            needFullRefresh = false;\n        }\n        var tr = gObj.getDataRows();\n        var args = {};\n        var infiniteData = this.infiniteRowVisibility();\n        var contentrows = infiniteData ? infiniteData\n            : this.rows.filter(function (row) { return !row.isDetailRow; });\n        for (var c = 0, clen = columns.length; c < clen; c++) {\n            var column = columns[c];\n            var idx = this.parent.getNormalizedColumnIndex(column.uid);\n            var colIdx = this.parent.getColumnIndexByUid(column.uid);\n            var displayVal = column.visible === true ? '' : 'none';\n            if (idx !== -1 && testRow && idx < testRow.cells.length) {\n                if (isFrozenGrid) {\n                    if (column.getFreezeTableName() !== 'movable') {\n                        if (column.getFreezeTableName() === 'frozen-right') {\n                            var left = this.parent.getFrozenLeftColumnsCount();\n                            var movable = this.parent.getMovableColumnsCount();\n                            colIdx = idx = idx - (left + movable);\n                            var colG = this.parent.getContent().querySelector('.e-frozen-right-content').querySelector('colgroup');\n                            setStyleAttribute(colG.childNodes[idx], { 'display': displayVal });\n                            contentrows = gObj.getFrozenRightRowsObject();\n                            tr = gObj.getFrozenRightDataRows();\n                        }\n                        else {\n                            setStyleAttribute(this.getColGroup().childNodes[idx], { 'display': displayVal });\n                            var infiniteFreezeData = this.infiniteRowVisibility(true);\n                            contentrows = infiniteFreezeData ? infiniteFreezeData : this.freezeRows;\n                            tr = gObj.getDataRows();\n                        }\n                    }\n                    else {\n                        var mTable = gObj.getContent().querySelector('.e-movablecontent').querySelector('colgroup');\n                        colIdx = idx = idx - frzCols - this.parent.getFrozenLeftColumnsCount();\n                        setStyleAttribute(mTable.childNodes[idx], { 'display': displayVal });\n                        tr = gObj.getMovableDataRows();\n                        var infiniteMovableData = this.infiniteRowVisibility();\n                        contentrows = infiniteMovableData ? infiniteMovableData : this.movableRows;\n                    }\n                }\n                else {\n                    setStyleAttribute(this.getColGroup().childNodes[idx], { 'display': displayVal });\n                }\n            }\n            if (!needFullRefresh) {\n                this.setDisplayNone(tr, colIdx, displayVal, contentrows);\n            }\n            if (!this.parent.invokedFromMedia && column.hideAtMedia) {\n                this.parent.updateMediaColumns(column);\n            }\n            this.parent.invokedFromMedia = false;\n        }\n        if (needFullRefresh) {\n            this.refreshContentRows({ requestType: 'refresh' });\n        }\n        else {\n            if (!this.parent.getFrozenColumns()) {\n                this.parent.notify(events.partialRefresh, { rows: contentrows, args: args });\n            }\n            else {\n                this.parent.notify(events.partialRefresh, { rows: this.freezeRows, args: { isFrozen: true, rows: this.freezeRows } });\n                this.parent.notify(events.partialRefresh, { rows: this.movableRows, args: { isFrozen: false, rows: this.movableRows } });\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    ContentRender.prototype.setDisplayNone = function (tr, idx, displayVal, rows) {\n        var trs = Object.keys(tr);\n        for (var i = 0; i < trs.length; i++) {\n            var td = tr[trs[i]].querySelectorAll('td.e-rowcell')[idx];\n            if (tr[trs[i]].querySelectorAll('td.e-rowcell').length && td) {\n                setStyleAttribute(tr[trs[i]].querySelectorAll('td.e-rowcell')[idx], { 'display': displayVal });\n                if (tr[trs[i]].querySelectorAll('td.e-rowcell')[idx].classList.contains('e-hide')) {\n                    removeClass([tr[trs[i]].querySelectorAll('td.e-rowcell')[idx]], ['e-hide']);\n                }\n                if (this.parent.isRowDragable()) {\n                    var index = this.parent.getFrozenColumns() ? idx : idx + 1;\n                    rows[trs[i]].cells[index].visible = displayVal === '' ? true : false;\n                }\n                else {\n                    rows[trs[i]].cells[idx].visible = displayVal === '' ? true : false;\n                }\n            }\n        }\n        this.parent.notify(events.infiniteShowHide, { visible: displayVal, index: idx, isFreeze: this.isInfiniteFreeze });\n    };\n    ContentRender.prototype.infiniteRowVisibility = function (isFreeze) {\n        var infiniteData;\n        if (this.parent.enableInfiniteScrolling) {\n            this.isInfiniteFreeze = isFreeze;\n            if (this.parent.infiniteScrollSettings.enableCache) {\n                infiniteData = isFreeze ? this.getCurrentBlockInfiniteRecords(true) : this.getCurrentBlockInfiniteRecords();\n            }\n            else {\n                infiniteData = isFreeze ? this.visibleFrozenRows : this.visibleRows;\n            }\n        }\n        return infiniteData;\n    };\n    ContentRender.prototype.colGroupRefresh = function () {\n        if (this.getColGroup()) {\n            var colGroup = void 0;\n            if (this.parent.enableColumnVirtualization && this.parent.getFrozenColumns()\n                && this.parent.contentModule.isXaxis()) {\n                colGroup = this.parent.getMovableVirtualHeader().querySelector('colgroup').cloneNode(true);\n            }\n            else {\n                colGroup = this.getHeaderColGroup();\n            }\n            this.getTable().replaceChild(colGroup, this.getColGroup());\n            this.setColGroup(colGroup);\n        }\n    };\n    ContentRender.prototype.getHeaderColGroup = function () {\n        return isBlazor() ? this.parent.getHeaderTable().querySelector('colgroup').cloneNode(true) :\n            this.parent.element.querySelector('.e-gridheader').querySelector('colgroup').cloneNode(true);\n    };\n    ContentRender.prototype.initializeContentDrop = function () {\n        var gObj = this.parent;\n        this.droppable = new Droppable(gObj.element, {\n            accept: '.e-dragclone',\n            drop: this.drop\n        });\n    };\n    ContentRender.prototype.droppableDestroy = function () {\n        if (this.droppable && !this.droppable.isDestroyed) {\n            this.droppable.destroy();\n        }\n    };\n    ContentRender.prototype.canSkip = function (column, row, index) {\n        /**\n         * Skip the toggle visiblity operation when one of the following success\n         * 1. Grid has empty records\n         * 2. column visible property is unchanged\n         * 3. cell`s isVisible property is same as column`s visible property.\n         */\n        return isNullOrUndefined(row) || //(1)\n            isNullOrUndefined(column.visible) || //(2)    \n            row.cells[index].visible === column.visible; //(3)\n    };\n    ContentRender.prototype.getModelGenerator = function () {\n        return this.generator = this.parent.allowGrouping ? new GroupModelGenerator(this.parent) : new RowModelGenerator(this.parent);\n    };\n    ContentRender.prototype.renderEmpty = function (tbody) {\n        if (isBlazor() && !this.parent.isJsComponent && this.parent.frozenRows) {\n            return;\n        }\n        this.getTable().appendChild(tbody);\n        if (this.parent.frozenRows) {\n            this.parent.getHeaderContent().querySelector('tbody').innerHTML = '';\n        }\n    };\n    ContentRender.prototype.setSelection = function (uid, set, clearAll) {\n        this.parent.notify(events.setFreezeSelection, { uid: uid, set: set, clearAll: clearAll });\n        var isFrozen = this.parent.isFrozenGrid();\n        if (isFrozen && this.parent.enableVirtualization) {\n            return;\n        }\n        if (isFrozen) {\n            var rows = this.getMovableRows().filter(function (row) { return clearAll || uid === row.uid; });\n            for (var i = 0; i < rows.length; i++) {\n                rows[i].isSelected = set;\n            }\n        }\n        var row = this.getRows().filter(function (row) { return clearAll || uid === row.uid; });\n        for (var j = 0; j < row.length; j++) {\n            row[j].isSelected = set;\n            var cells = row[j].cells;\n            for (var k = 0; k < cells.length; k++) {\n                cells[k].isSelected = set;\n            }\n        }\n    };\n    ContentRender.prototype.getRowByIndex = function (index) {\n        index = this.getInfiniteRowIndex(index);\n        return this.parent.getDataRows()[index];\n    };\n    ContentRender.prototype.getInfiniteRowIndex = function (index) {\n        if (this.parent.infiniteScrollSettings.enableCache) {\n            var fRows = this.parent.frozenRows;\n            var idx = fRows > index ? 0 : fRows;\n            var firstRowIndex = parseInt(this.parent.getRows()[idx].getAttribute('aria-rowindex'), 10);\n            index = fRows > index ? index : (index - firstRowIndex) + fRows;\n        }\n        return index;\n    };\n    ContentRender.prototype.getVirtualRowIndex = function (index) {\n        return index;\n    };\n    ContentRender.prototype.getMovableRowByIndex = function (index) {\n        index = this.getInfiniteRowIndex(index);\n        return this.parent.getMovableDataRows()[index];\n    };\n    ContentRender.prototype.enableAfterRender = function (e) {\n        if (e.module === 'group' && e.enable) {\n            this.generator = this.getModelGenerator();\n        }\n    };\n    ContentRender.prototype.setRowObjects = function (rows) {\n        this.rows = rows;\n    };\n    /** @hidden */\n    ContentRender.prototype.immutableModeRendering = function (args) {\n        var _this = this;\n        if (args === void 0) { args = {}; }\n        var gObj = this.parent;\n        gObj.hideSpinner();\n        var key = gObj.getPrimaryKeyFieldNames()[0];\n        var oldKeys = {};\n        var newKeys = {};\n        var newRowObjs = [];\n        var oldIndexes = {};\n        var oldRowObjs = gObj.getRowsObject().slice();\n        var batchChangeKeys = this.getBatchEditedRecords(key, oldRowObjs);\n        var newIndexes = {};\n        var hasBatch = Object.keys(batchChangeKeys).length !== 0;\n        if (gObj.getContent().querySelector('.e-emptyrow') || args.requestType === 'reorder'\n            || this.parent.groupSettings.columns.length) {\n            this.refreshContentRows(args);\n        }\n        else {\n            if (gObj.currentViewData.length === 0) {\n                return;\n            }\n            var oldRowElements = {};\n            var tbody = gObj.createElement('tbody');\n            var dataSource = gObj.currentViewData;\n            var trs = [].slice.call(this.getTable().querySelector('tbody').children);\n            if (this.prevCurrentView.length) {\n                var prevLen = this.prevCurrentView.length;\n                var currentLen = dataSource.length;\n                if (prevLen === currentLen) {\n                    for (var i = 0; i < currentLen; i++) {\n                        if (this.parent.editSettings.mode === 'Batch'\n                            && trs[i].classList.contains('e-insertedrow')) {\n                            trs.splice(i, 1);\n                            --i;\n                            continue;\n                        }\n                        newKeys[dataSource[i][key]] = oldKeys[this.prevCurrentView[i][key]] = i;\n                        newIndexes[i] = dataSource[i][key];\n                        oldRowElements[oldRowObjs[i].uid] = trs[i];\n                        oldIndexes[i] = this.prevCurrentView[i][key];\n                    }\n                }\n                else {\n                    for (var i = 0; i < currentLen; i++) {\n                        newKeys[dataSource[i][key]] = i;\n                        newIndexes[i] = dataSource[i][key];\n                    }\n                    for (var i = 0; i < prevLen; i++) {\n                        if (this.parent.editSettings.mode === 'Batch'\n                            && trs[i].classList.contains('e-insertedrow')) {\n                            trs.splice(i, 1);\n                            --i;\n                            continue;\n                        }\n                        oldRowElements[oldRowObjs[i].uid] = trs[i];\n                        oldKeys[this.prevCurrentView[i][key]] = i;\n                        oldIndexes[i] = this.prevCurrentView[i][key];\n                    }\n                }\n            }\n            for (var i = 0; i < dataSource.length; i++) {\n                var oldIndex = oldKeys[dataSource[i][key]];\n                if (!isNullOrUndefined(oldIndex)) {\n                    var isEqual = false;\n                    if (this.mutableData) {\n                        isEqual = this.objectEqualityChecker(this.prevCurrentView[i], dataSource[i]);\n                    }\n                    var tr = oldRowElements[oldRowObjs[oldIndex].uid];\n                    newRowObjs.push(oldRowObjs[oldIndex]);\n                    if (this.rowElements[i] && this.rowElements[i].getAttribute('data-uid') === newRowObjs[i].uid\n                        && ((hasBatch && isNullOrUndefined(batchChangeKeys[newIndexes[i]]))\n                            || (!hasBatch && (isEqual || this.prevCurrentView[i] === dataSource[i])))) {\n                        if (oldIndex !== i) {\n                            this.refreshImmutableContent(i, tr, newRowObjs[i]);\n                        }\n                        tbody.appendChild(tr);\n                        continue;\n                    }\n                    if ((hasBatch && !isNullOrUndefined(batchChangeKeys[newIndexes[i]]))\n                        || (!this.mutableData && dataSource[i] !== this.prevCurrentView[oldIndex])\n                        || (this.mutableData && !isEqual)) {\n                        oldRowObjs[oldIndex].setRowValue(dataSource[i]);\n                    }\n                    tbody.appendChild(tr);\n                    this.refreshImmutableContent(i, tr, newRowObjs[i]);\n                }\n                else {\n                    var row = new RowRenderer(this.serviceLocator, null, gObj);\n                    var modelData = this.generator.generateRows([dataSource[i]]);\n                    newRowObjs.push(modelData[0]);\n                    var tr = row.render(modelData[0], gObj.getColumns());\n                    tbody.appendChild(tr);\n                    this.refreshImmutableContent(i, tr, newRowObjs[i]);\n                }\n            }\n            this.rows = newRowObjs;\n            this.rowElements = [].slice.call(tbody.children);\n            remove(this.getTable().querySelector('tbody'));\n            this.getTable().appendChild(tbody);\n            this.parent.trigger(events.dataBound, {}, function () {\n                if (_this.parent.allowTextWrap) {\n                    _this.parent.notify(events.freezeRender, { case: 'textwrap' });\n                }\n            });\n            if (args) {\n                var action = (args.requestType || '').toLowerCase() + '-complete';\n                this.parent.notify(action, args);\n            }\n        }\n    };\n    ContentRender.prototype.objectEqualityChecker = function (old, next) {\n        var keys = Object.keys(old);\n        var isEqual = true;\n        for (var i = 0; i < keys.length; i++) {\n            if (old[keys[i]] !== next[keys[i]]) {\n                isEqual = false;\n                break;\n            }\n        }\n        return isEqual;\n    };\n    ContentRender.prototype.getBatchEditedRecords = function (primaryKey, rows) {\n        var keys = {};\n        var changes = this.parent.getBatchChanges();\n        var changedRecords = [];\n        var addedRecords = [];\n        if (Object.keys(changes).length) {\n            changedRecords = changes.changedRecords;\n            addedRecords = changes.addedRecords;\n        }\n        var args = { cancel: false };\n        this.parent.notify(events.immutableBatchCancel, { rows: rows, args: args });\n        if (addedRecords.length) {\n            if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                rows.splice(rows.length - 1, addedRecords.length);\n            }\n            else {\n                if (!args.cancel) {\n                    rows.splice(0, addedRecords.length);\n                }\n            }\n        }\n        for (var i = 0; i < changedRecords.length; i++) {\n            keys[changedRecords[i][primaryKey]] = i;\n        }\n        return keys;\n    };\n    ContentRender.prototype.refreshImmutableContent = function (index, tr, row) {\n        row.isAltRow = this.parent.enableAltRow ? index % 2 !== 0 : false;\n        row.isAltRow ? tr.classList.add('e-altrow') : tr.classList.remove('e-altrow');\n        row.index = index;\n        row.edit = undefined;\n        row.isDirty = false;\n        tr.setAttribute('aria-rowindex', index.toString());\n        this.updateCellIndex(tr, index);\n    };\n    ContentRender.prototype.updateCellIndex = function (rowEle, index) {\n        for (var i = 0; i < rowEle.cells.length; i++) {\n            rowEle.cells[i].setAttribute('index', index.toString());\n        }\n    };\n    return ContentRender;\n}());\nexport { ContentRender };\n"]},"metadata":{},"sourceType":"module"}