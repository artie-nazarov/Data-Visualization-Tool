{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { addClass, removeClass, attributes, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Button } from '@syncfusion/ej2-buttons';\nimport { CellRenderer } from './cell-renderer';\nimport { appendChildren } from '../base/util';\n/**\n * `CommandColumn` used to render command column in grid\n * @hidden\n */\n\nvar CommandColumnRenderer =\n/** @class */\nfunction (_super) {\n  __extends(CommandColumnRenderer, _super);\n\n  function CommandColumnRenderer(parent, locator) {\n    var _this = _super.call(this, parent, locator) || this;\n\n    _this.buttonElement = _this.parent.createElement('button', {});\n    _this.unbounDiv = _this.parent.createElement('div', {\n      className: 'e-unboundcelldiv',\n      styles: 'display: inline-block'\n    });\n    _this.element = _this.parent.createElement('TD', {\n      className: 'e-rowcell e-unboundcell',\n      attrs: {\n        role: 'gridcell',\n        tabindex: '-1'\n      }\n    });\n    return _this;\n  }\n  /**\n   * Function to render the cell content based on Column object.\n   * @param  {Column} column\n   * @param  {Object} data\n   * @param  {{[x:string]:Object}} attributes?\n   * @param  {Element}\n   */\n\n\n  CommandColumnRenderer.prototype.render = function (cell, data, attributes) {\n    var node = this.element.cloneNode();\n    var uid = 'uid';\n    node.appendChild(this.unbounDiv.cloneNode());\n    node.setAttribute('aria-label', 'is Command column column header ' + cell.column.headerText);\n\n    if (cell.column.commandsTemplate) {\n      if (this.parent.isReact && typeof cell.column.commandsTemplate !== 'string') {\n        var tempID = this.parent + 'commandsTemplate';\n        cell.column.getColumnTemplate()(data, this.parent, 'commandsTemplate', tempID, null, null, node.firstElementChild);\n        this.parent.renderTemplates();\n      } else {\n        appendChildren(node.firstElementChild, cell.column.getColumnTemplate()(data));\n      }\n    } else {\n      for (var _i = 0, _a = cell.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        node = this.renderButton(node, command, attributes.index, command[uid]);\n      }\n    }\n\n    this.setAttributes(node, cell, attributes);\n\n    if (this.parent.isEdit) {\n      addClass(node.querySelectorAll('.e-edit-delete'), 'e-hide');\n      removeClass(node.querySelectorAll('.e-save-cancel'), 'e-hide');\n    } else {\n      addClass(node.querySelectorAll('.e-save-cancel'), 'e-hide');\n      removeClass(node.querySelectorAll('.e-edit-delete'), 'e-hide');\n    }\n\n    return node;\n  };\n\n  CommandColumnRenderer.prototype.renderButton = function (node, buttonOption, index, uid) {\n    var button = this.buttonElement.cloneNode();\n    attributes(button, {\n      'id': this.parent.element.id + (buttonOption.type || '') + '_' + index + '_' + uid,\n      'type': 'button',\n      title: !isNullOrUndefined(buttonOption.title) ? buttonOption.title : buttonOption.buttonOption.content || this.localizer.getConstant(buttonOption.type) || buttonOption.type,\n      'data-uid': uid\n    });\n    button.onclick = buttonOption.buttonOption.click;\n    var buttonObj = new Button(buttonOption.buttonOption, button);\n    buttonObj.commandType = buttonOption.type;\n    node.firstElementChild.appendChild(buttonObj.element);\n\n    switch (buttonOption.type) {\n      case 'Edit':\n      case 'Delete':\n        addClass([button], ['e-edit-delete', 'e-' + buttonOption.type.toLowerCase() + 'button']);\n        break;\n\n      case 'Cancel':\n      case 'Save':\n        addClass([button], ['e-save-cancel', 'e-' + buttonOption.type.toLowerCase() + 'button']);\n        break;\n    }\n\n    return node;\n  };\n\n  return CommandColumnRenderer;\n}(CellRenderer);\n\nexport { CommandColumnRenderer };","map":{"version":3,"sources":["C:/Users/appsk/Documents/Projects/PredictiveMaintenance/React PDM/env/frontend/node_modules/@syncfusion/ej2-grids/src/grid/renderer/command-column-renderer.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","addClass","removeClass","attributes","isNullOrUndefined","Button","CellRenderer","appendChildren","CommandColumnRenderer","_super","parent","locator","_this","call","buttonElement","createElement","unbounDiv","className","styles","element","attrs","role","tabindex","render","cell","data","node","cloneNode","uid","appendChild","setAttribute","column","headerText","commandsTemplate","isReact","tempID","getColumnTemplate","firstElementChild","renderTemplates","_i","_a","commands","length","command","renderButton","index","setAttributes","isEdit","querySelectorAll","buttonOption","button","id","type","title","content","localizer","getConstant","onclick","click","buttonObj","commandType","toLowerCase"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { addClass, removeClass, attributes, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Button } from '@syncfusion/ej2-buttons';\nimport { CellRenderer } from './cell-renderer';\nimport { appendChildren } from '../base/util';\n/**\n * `CommandColumn` used to render command column in grid\n * @hidden\n */\nvar CommandColumnRenderer = /** @class */ (function (_super) {\n    __extends(CommandColumnRenderer, _super);\n    function CommandColumnRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.buttonElement = _this.parent.createElement('button', {});\n        _this.unbounDiv = _this.parent.createElement('div', { className: 'e-unboundcelldiv', styles: 'display: inline-block' });\n        _this.element = _this.parent.createElement('TD', {\n            className: 'e-rowcell e-unboundcell', attrs: {\n                role: 'gridcell', tabindex: '-1'\n            }\n        });\n        return _this;\n    }\n    /**\n     * Function to render the cell content based on Column object.\n     * @param  {Column} column\n     * @param  {Object} data\n     * @param  {{[x:string]:Object}} attributes?\n     * @param  {Element}\n     */\n    CommandColumnRenderer.prototype.render = function (cell, data, attributes) {\n        var node = this.element.cloneNode();\n        var uid = 'uid';\n        node.appendChild(this.unbounDiv.cloneNode());\n        node.setAttribute('aria-label', 'is Command column column header ' + cell.column.headerText);\n        if (cell.column.commandsTemplate) {\n            if (this.parent.isReact && typeof (cell.column.commandsTemplate) !== 'string') {\n                var tempID = this.parent + 'commandsTemplate';\n                cell.column.getColumnTemplate()(data, this.parent, 'commandsTemplate', tempID, null, null, node.firstElementChild);\n                this.parent.renderTemplates();\n            }\n            else {\n                appendChildren(node.firstElementChild, cell.column.getColumnTemplate()(data));\n            }\n        }\n        else {\n            for (var _i = 0, _a = cell.commands; _i < _a.length; _i++) {\n                var command = _a[_i];\n                node = this.renderButton(node, command, attributes.index, command[uid]);\n            }\n        }\n        this.setAttributes(node, cell, attributes);\n        if (this.parent.isEdit) {\n            addClass(node.querySelectorAll('.e-edit-delete'), 'e-hide');\n            removeClass(node.querySelectorAll('.e-save-cancel'), 'e-hide');\n        }\n        else {\n            addClass(node.querySelectorAll('.e-save-cancel'), 'e-hide');\n            removeClass(node.querySelectorAll('.e-edit-delete'), 'e-hide');\n        }\n        return node;\n    };\n    CommandColumnRenderer.prototype.renderButton = function (node, buttonOption, index, uid) {\n        var button = this.buttonElement.cloneNode();\n        attributes(button, {\n            'id': this.parent.element.id + (buttonOption.type || '') + '_' + index + '_' + uid, 'type': 'button',\n            title: !isNullOrUndefined(buttonOption.title) ? buttonOption.title :\n                buttonOption.buttonOption.content || this.localizer.getConstant(buttonOption.type) || buttonOption.type,\n            'data-uid': uid\n        });\n        button.onclick = buttonOption.buttonOption.click;\n        var buttonObj = new Button(buttonOption.buttonOption, button);\n        buttonObj.commandType = buttonOption.type;\n        node.firstElementChild.appendChild(buttonObj.element);\n        switch (buttonOption.type) {\n            case 'Edit':\n            case 'Delete':\n                addClass([button], ['e-edit-delete', 'e-' + buttonOption.type.toLowerCase() + 'button']);\n                break;\n            case 'Cancel':\n            case 'Save':\n                addClass([button], ['e-save-cancel', 'e-' + buttonOption.type.toLowerCase() + 'button']);\n                break;\n        }\n        return node;\n    };\n    return CommandColumnRenderer;\n}(CellRenderer));\nexport { CommandColumnRenderer };\n"]},"metadata":{},"sourceType":"module"}