{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\appsk\\\\Documents\\\\Projects\\\\PredictiveMaintenance\\\\React PDM\\\\env\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport XLSX from 'xlsx';\nimport { make_cols } from './MakeColumns';\nimport { SheetJSFT } from './types';\nimport { GridComponent, ColumnDirective, ColumnsDirective, Page, Inject, Filter, gridObserver } from '@syncfusion/ej2-react-grids';\n\nfunction App() {\n  // Table data\n  var eqtableData = null;\n  var file = {};\n  var data = [];\n  var cols = [];\n\n  const groupBy = require('json-groupby');\n\n  const selectionOptions = {\n    type: 'Multiple'\n  };\n  let grid = null;\n\n  const rowSelected = () => {\n    if (grid) {\n      const selectedRowIndexes = grid.getSelectedRecords();\n      console.log(selectedRowIndexes);\n    }\n  };\n\n  function renderChart() {\n    var Chart = require('chart.js');\n\n    const ctx = document.getElementById('chart').getContext('2d');\n    const myChart = new Chart(ctx, {\n      type: 'bar',\n      data: {\n        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n        datasets: [{\n          label: '# of Votes',\n          data: [12, 19, 3, 5, 2, 3],\n          backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n          borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    });\n  }\n\n  function download(content, fileName, contentType) {\n    var a = document.createElement(\"a\");\n    var file = new Blob([content], {\n      type: contentType\n    });\n    a.href = URL.createObjectURL(file);\n    a.download = fileName;\n    a.click();\n  }\n\n  function handleChange(e) {\n    const files = e.target.files;\n    if (files && files[0]) file = files[0];\n  }\n\n  ;\n\n  function handleFile() {\n    /* Boilerplate to set up FileReader */\n    const reader = new FileReader();\n    const rABS = !!reader.readAsBinaryString;\n\n    reader.onload = e => {\n      const bstr = e.target.result;\n      const wb = XLSX.read(bstr, {\n        type: rABS ? 'binary' : 'array',\n        bookVBA: true\n      });\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      data = XLSX.utils.sheet_to_json(ws);\n      cols = make_cols(ws['!ref']); // Refactor data\n\n      const strData = JSON.stringify(data, null, 2);\n      eqtableData = strData;\n      var jsonObject = JSON.parse(strData);\n      var i;\n\n      for (i = 0; i < jsonObject.length; i++) {\n        if (!(\"Part Number\" in jsonObject[i] && \"Code\" in jsonObject[i] && \"Date\" in jsonObject[i])) {\n          delete jsonObject[i];\n        } else {\n          if (typeof jsonObject[i].Code !== 'number') {\n            delete jsonObject[i];\n          }\n        }\n      }\n\n      console.log(groupBy(jsonObject, ['Equipment ID', 'Part Number']));\n      renderChart();\n    };\n\n    if (rABS) {\n      reader.readAsBinaryString(file);\n    } else {\n      reader.readAsArrayBuffer(file);\n    }\n\n    ;\n  } // Load table\n\n\n  function loadInTable() {\n    if (eqtableData !== null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"parent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"EqID\",\n          style: {\n            marginTop: '20%',\n            margin: '10%'\n          },\n          children: /*#__PURE__*/_jsxDEV(GridComponent, {\n            dataSource: eqtableData,\n            allowPaging: true,\n            pageSettings: {\n              pageSize: 10\n            },\n            allowFiltering: true,\n            rowSelected: rowSelected,\n            ref: g => grid = g,\n            children: [/*#__PURE__*/_jsxDEV(ColumnsDirective, {\n              children: /*#__PURE__*/_jsxDEV(ColumnDirective, {\n                field: \"Equipment ID\",\n                headerText: \"Equipment List\",\n                textAlign: \"Center\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Inject, {\n              services: [Page, Filter]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 7\n        }, this), \",\", /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"PID\",\n          style: {\n            marginTop: '20%',\n            margin: '10%'\n          },\n          children: /*#__PURE__*/_jsxDEV(GridComponent, {\n            dataSource: data,\n            allowPaging: true,\n            pageSettings: {\n              pageSize: 10\n            },\n            allowFiltering: true //selectionSettings={selectionOptions}\n            ,\n            children: [/*#__PURE__*/_jsxDEV(ColumnsDirective, {\n              children: [/*#__PURE__*/_jsxDEV(ColumnDirective, {\n                type: \"checkbox\",\n                width: \"50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(ColumnDirective, {\n                field: \"Part Number\",\n                headerText: \"Part Number\",\n                textAlign: \"Center\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Inject, {\n              services: [Page, Filter]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"RC\",\n          style: {\n            marginTop: '20%',\n            margin: '10%'\n          },\n          children: /*#__PURE__*/_jsxDEV(GridComponent, {\n            dataSource: data,\n            allowPaging: true,\n            pageSettings: {\n              pageSize: 10\n            },\n            allowFiltering: true //selectionSettings={selectionOptions}\n            ,\n            children: [/*#__PURE__*/_jsxDEV(ColumnsDirective, {\n              children: [/*#__PURE__*/_jsxDEV(ColumnDirective, {\n                type: \"checkbox\",\n                width: \"50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(ColumnDirective, {\n                field: \"Code\",\n                headerText: \"Repair Code\",\n                textAlign: \"Center\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Inject, {\n              services: [Page, Filter]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"file\",\n      children: \"Upload your Excel File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      id: \"file\",\n      accept: SheetJSFT,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Update\",\n      onClick: handleFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"loadInTable\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"chart\",\n        width: \"400\",\n        height: \"400\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 7\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/appsk/Documents/Projects/PredictiveMaintenance/React PDM/env/frontend/src/App.js"],"names":["React","Component","Fabric","DefaultButton","XLSX","make_cols","SheetJSFT","GridComponent","ColumnDirective","ColumnsDirective","Page","Inject","Filter","gridObserver","App","eqtableData","file","data","cols","groupBy","require","selectionOptions","type","grid","rowSelected","selectedRowIndexes","getSelectedRecords","console","log","renderChart","Chart","ctx","document","getElementById","getContext","myChart","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero","download","content","fileName","contentType","a","createElement","Blob","href","URL","createObjectURL","click","handleChange","e","files","target","handleFile","reader","FileReader","rABS","readAsBinaryString","onload","bstr","result","wb","read","bookVBA","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","strData","JSON","stringify","jsonObject","parse","i","length","Code","readAsArrayBuffer","loadInTable","marginTop","margin","pageSize","g"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport XLSX from 'xlsx';\nimport { make_cols } from './MakeColumns';\nimport { SheetJSFT } from './types';\nimport {GridComponent, ColumnDirective, ColumnsDirective,\n  Page, Inject, Filter, gridObserver} from '@syncfusion/ej2-react-grids';\n \nfunction App() {\n\n    // Table data\n    var eqtableData = null;\n \n    \n     var file = {};\n     var data = [];\n     var cols = [];\n    \n     const groupBy = require('json-groupby');\n\n     const selectionOptions = {\n      type: 'Multiple'\n    };\n  \n    let grid = null;\n    const rowSelected = () => { \n      if(grid){\n        const selectedRowIndexes = grid.getSelectedRecords();\n        console.log(selectedRowIndexes);\n      }\n    }\n  \n  function renderChart() {\n    var Chart = require('chart.js');\n    const ctx = document.getElementById('chart').getContext('2d');\n    const myChart = new Chart(ctx, {\n    type: 'bar',\n    data: {\n        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n        datasets: [{\n            label: '# of Votes',\n            data: [12, 19, 3, 5, 2, 3],\n            backgroundColor: [\n                'rgba(255, 99, 132, 0.2)',\n                'rgba(54, 162, 235, 0.2)',\n                'rgba(255, 206, 86, 0.2)',\n                'rgba(75, 192, 192, 0.2)',\n                'rgba(153, 102, 255, 0.2)',\n                'rgba(255, 159, 64, 0.2)'\n            ],\n            borderColor: [\n                'rgba(255, 99, 132, 1)',\n                'rgba(54, 162, 235, 1)',\n                'rgba(255, 206, 86, 1)',\n                'rgba(75, 192, 192, 1)',\n                'rgba(153, 102, 255, 1)',\n                'rgba(255, 159, 64, 1)'\n            ],\n            borderWidth: 1\n        }]\n    },\n    options: {\n        scales: {\n            yAxes: [{\n                ticks: {\n                    beginAtZero: true\n                }\n            }]\n        }\n    }\n});\n  }\n\n\n  function download(content, fileName, contentType) {\n    var a = document.createElement(\"a\");\n    var file = new Blob([content], {type: contentType});\n    a.href = URL.createObjectURL(file);\n    a.download = fileName;\n    a.click();\n}\n \n function handleChange(e) {\n    const files = e.target.files;\n    if (files && files[0]) file = files[0];\n  };\n \n function handleFile() {\n    /* Boilerplate to set up FileReader */\n    const reader = new FileReader();\n    const rABS = !!reader.readAsBinaryString;\n \n    reader.onload = (e) => {\n      const bstr = e.target.result;\n      const wb = XLSX.read(bstr, { type: rABS ? 'binary' : 'array', bookVBA : true });\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      data = XLSX.utils.sheet_to_json(ws);\n      cols = make_cols(ws['!ref'])\n\n        // Refactor data\n        const strData = JSON.stringify(data, null, 2)\n        eqtableData = strData;\n        var jsonObject = JSON.parse(strData);\n        var i;\n        for(i = 0; i < jsonObject.length; i++){\n          if (!(\"Part Number\" in jsonObject[i] && \"Code\" in jsonObject[i] && \"Date\" in jsonObject[i])) {\n            delete jsonObject[i];\n          }\n          else {\n            if(typeof jsonObject[i].Code !== 'number') {\n              delete jsonObject[i];\n            }\n          }\n        }\n\n        console.log(groupBy(jsonObject, ['Equipment ID', 'Part Number']))\n        renderChart();\n\n    };\n    if (rABS) {\n      reader.readAsBinaryString(file);\n    } else {\n      reader.readAsArrayBuffer(file);\n    };\n  }\n\n  // Load table\n  function loadInTable() {\n    if(eqtableData !== null) {\n      return <div id=\"parent\">\n      <div id=\"EqID\" style={{ marginTop: '20%', margin:'10%'}}>\n        <GridComponent dataSource={eqtableData}  \n          allowPaging={true}\n          pageSettings={{pageSize:10}}\n          allowFiltering={true}\n          rowSelected={rowSelected}\n          ref={g => grid = g}\n          >\n          <ColumnsDirective>\n        <ColumnDirective field='Equipment ID' headerText='Equipment List' textAlign='Center'/>\n        </ColumnsDirective>\n        <Inject services={[Page, Filter]}/>\n        </GridComponent>\n      </div>,\n\n      <div id=\"PID\" style={{ marginTop: '20%', margin:'10%'}}>\n      <GridComponent dataSource={data}\n      allowPaging={true}\n      pageSettings={{pageSize:10}}\n      allowFiltering={true}\n      //selectionSettings={selectionOptions}\n      >\n        <ColumnsDirective>\n        <ColumnDirective type='checkbox' width='50'/>\n      <ColumnDirective field='Part Number' headerText='Part Number' textAlign='Center'/>\n      </ColumnsDirective>\n      <Inject services={[Page, Filter]}/>\n      </GridComponent>\n      </div> \n\n      <div id=\"RC\" style={{ marginTop: '20%', margin:'10%'}}>\n      <GridComponent dataSource={data}\n      allowPaging={true}\n      pageSettings={{pageSize:10}}\n      allowFiltering={true}\n      //selectionSettings={selectionOptions}\n      >\n        <ColumnsDirective>\n        <ColumnDirective type='checkbox' width='50'/>\n      <ColumnDirective field='Code' headerText='Repair Code' textAlign='Center'/>\n      </ColumnsDirective>\n      <Inject services={[Page, Filter]}/>\n      </GridComponent>\n      </div>\n\n    </div>\n    }\n    else{\n      return (<div>empty</div>)\n    }\n  }\n\n \n    return (\n      <div>\n        <label htmlFor=\"file\">Upload your Excel File</label>\n        <br />\n        <input type=\"file\" className=\"form-control\" id=\"file\" accept={SheetJSFT} onChange={handleChange} />\n        <br />\n        <input type='submit' \n          value=\"Update\"\n          onClick={handleFile} />\n        <div>\n        <loadInTable/>\n        </div>\n        <div>\n          <canvas id=\"chart\" width=\"400\" height=\"400\"></canvas>\n        </div>\n      </div>       \n\n    )\n  }\n\n \nexport default App;"]},"metadata":{},"sourceType":"module"}