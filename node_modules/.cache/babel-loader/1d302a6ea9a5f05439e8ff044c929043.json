{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component, ChildProperty, Browser, closest, extend } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, setValue, getValue, isBlazor, blazorTemplates } from '@syncfusion/ej2-base';\nimport { addClass, removeClass, append, remove, updateBlazorTemplate, classList, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { Property, Collection, Complex, Event, NotifyPropertyChanges, L10n } from '@syncfusion/ej2-base';\nimport { EventHandler, KeyboardEvents } from '@syncfusion/ej2-base';\nimport { DataManager, DataUtil } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner, Tooltip } from '@syncfusion/ej2-popups';\nimport { iterateArrayOrObject, prepareColumns, parentsUntil, wrap, templateCompiler, isGroupAdaptive, refreshForeignData } from './util';\nimport { getRowHeight, setColumnIndex, Global, ispercentageWidth, renderMovable } from './util';\nimport { setRowElements, resetRowIndex, compareChanges, getCellByColAndRowIndex } from './util';\nimport * as events from '../base/constant';\nimport { Render } from '../renderer/render';\nimport { RenderType } from './enum';\nimport { RowRenderer } from '../renderer/row-renderer';\nimport { CellRenderer } from '../renderer/cell-renderer';\nimport { CellRendererFactory } from '../services/cell-render-factory';\nimport { ServiceLocator } from '../services/service-locator';\nimport { ValueFormatter } from '../services/value-formatter';\nimport { RendererFactory } from '../services/renderer-factory';\nimport { ColumnWidthService } from '../services/width-controller';\nimport { AriaService } from '../services/aria-service';\nimport { FocusStrategy } from '../services/focus-strategy';\nimport { PageSettings } from '../models/page-settings';\nimport { ColumnChooserSettings } from '../models/column-chooser-settings';\nimport { Selection } from '../actions/selection';\nimport { Search } from '../actions/search';\nimport { ShowHide } from '../actions/show-hide';\nimport { Scroll } from '../actions/scroll';\nimport { Print } from '../actions/print';\nimport { AggregateRow } from '../models/aggregate';\nimport { Clipboard } from '../actions/clipboard';\nimport { gridObserver } from '../actions/blazor-action';\nimport { RowModelGenerator } from '../services/row-model-generator';\n/**\n * Represents the field name and direction of sort column.\n */\n\nvar SortDescriptor =\n/** @class */\nfunction (_super) {\n  __extends(SortDescriptor, _super);\n\n  function SortDescriptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property()], SortDescriptor.prototype, \"field\", void 0);\n\n  __decorate([Property()], SortDescriptor.prototype, \"direction\", void 0);\n\n  __decorate([Property(false)], SortDescriptor.prototype, \"isFromGroup\", void 0);\n\n  return SortDescriptor;\n}(ChildProperty);\n\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of Grid.\n */\n\nvar SortSettings =\n/** @class */\nfunction (_super) {\n  __extends(SortSettings, _super);\n\n  function SortSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Collection([], SortDescriptor)], SortSettings.prototype, \"columns\", void 0);\n\n  __decorate([Property(true)], SortSettings.prototype, \"allowUnsort\", void 0);\n\n  return SortSettings;\n}(ChildProperty);\n\nexport { SortSettings };\n/**\n * Represents the predicate for the filter column.\n */\n\nvar Predicate =\n/** @class */\nfunction (_super) {\n  __extends(Predicate, _super);\n\n  function Predicate() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property()], Predicate.prototype, \"field\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"operator\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"value\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"matchCase\", void 0);\n\n  __decorate([Property(false)], Predicate.prototype, \"ignoreAccent\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"predicate\", void 0);\n\n  __decorate([Property({})], Predicate.prototype, \"actualFilterValue\", void 0);\n\n  __decorate([Property({})], Predicate.prototype, \"actualOperator\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"type\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"ejpredicate\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"uid\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"isForeignKey\", void 0);\n\n  return Predicate;\n}(ChildProperty);\n\nexport { Predicate };\n/**\n * Configures the infinite scroll behavior of Grid.\n */\n\nvar InfiniteScrollSettings =\n/** @class */\nfunction (_super) {\n  __extends(InfiniteScrollSettings, _super);\n\n  function InfiniteScrollSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(false)], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n\n  __decorate([Property(3)], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n\n  __decorate([Property(3)], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n\n  return InfiniteScrollSettings;\n}(ChildProperty);\n\nexport { InfiniteScrollSettings };\n/**\n * Configures the filtering behavior of the Grid.\n */\n\nvar FilterSettings =\n/** @class */\nfunction (_super) {\n  __extends(FilterSettings, _super);\n\n  function FilterSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Collection([], Predicate)], FilterSettings.prototype, \"columns\", void 0);\n\n  __decorate([Property('FilterBar')], FilterSettings.prototype, \"type\", void 0);\n\n  __decorate([Property()], FilterSettings.prototype, \"mode\", void 0);\n\n  __decorate([Property(true)], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n\n  __decorate([Property(1500)], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n\n  __decorate([Property()], FilterSettings.prototype, \"operators\", void 0);\n\n  __decorate([Property(false)], FilterSettings.prototype, \"ignoreAccent\", void 0);\n\n  __decorate([Property(false)], FilterSettings.prototype, \"enableCaseSensitivity\", void 0);\n\n  __decorate([Property(false)], FilterSettings.prototype, \"showFilterBarOperator\", void 0);\n\n  return FilterSettings;\n}(ChildProperty);\n\nexport { FilterSettings };\n/**\n * Configures the selection behavior of the Grid.\n */\n\nvar SelectionSettings =\n/** @class */\nfunction (_super) {\n  __extends(SelectionSettings, _super);\n\n  function SelectionSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('Row')], SelectionSettings.prototype, \"mode\", void 0);\n\n  __decorate([Property('Flow')], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n\n  __decorate([Property('Single')], SelectionSettings.prototype, \"type\", void 0);\n\n  __decorate([Property(false)], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n\n  __decorate([Property(false)], SelectionSettings.prototype, \"persistSelection\", void 0);\n\n  __decorate([Property('Default')], SelectionSettings.prototype, \"checkboxMode\", void 0);\n\n  __decorate([Property(false)], SelectionSettings.prototype, \"enableSimpleMultiRowSelection\", void 0);\n\n  __decorate([Property(true)], SelectionSettings.prototype, \"enableToggle\", void 0);\n\n  __decorate([Property(false)], SelectionSettings.prototype, \"allowColumnSelection\", void 0);\n\n  return SelectionSettings;\n}(ChildProperty);\n\nexport { SelectionSettings };\n/**\n * Configures the search behavior of the Grid.\n */\n\nvar SearchSettings =\n/** @class */\nfunction (_super) {\n  __extends(SearchSettings, _super);\n\n  function SearchSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property([])], SearchSettings.prototype, \"fields\", void 0);\n\n  __decorate([Property('')], SearchSettings.prototype, \"key\", void 0);\n\n  __decorate([Property('contains')], SearchSettings.prototype, \"operator\", void 0);\n\n  __decorate([Property(true)], SearchSettings.prototype, \"ignoreCase\", void 0);\n\n  __decorate([Property(false)], SearchSettings.prototype, \"ignoreAccent\", void 0);\n\n  return SearchSettings;\n}(ChildProperty);\n\nexport { SearchSettings };\n/**\n * Configures the row drop settings of the Grid.\n */\n\nvar RowDropSettings =\n/** @class */\nfunction (_super) {\n  __extends(RowDropSettings, _super);\n\n  function RowDropSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property()], RowDropSettings.prototype, \"targetID\", void 0);\n\n  return RowDropSettings;\n}(ChildProperty);\n\nexport { RowDropSettings };\n/**\n * Configures the text wrap settings of the Grid.\n */\n\nvar TextWrapSettings =\n/** @class */\nfunction (_super) {\n  __extends(TextWrapSettings, _super);\n\n  function TextWrapSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('Both')], TextWrapSettings.prototype, \"wrapMode\", void 0);\n\n  return TextWrapSettings;\n}(ChildProperty);\n\nexport { TextWrapSettings };\n/**\n * Configures the resize behavior of the Grid.\n */\n\nvar ResizeSettings =\n/** @class */\nfunction (_super) {\n  __extends(ResizeSettings, _super);\n\n  function ResizeSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('Normal')], ResizeSettings.prototype, \"mode\", void 0);\n\n  return ResizeSettings;\n}(ChildProperty);\n\nexport { ResizeSettings };\n/**\n * Configures the group behavior of the Grid.\n */\n\nvar GroupSettings =\n/** @class */\nfunction (_super) {\n  __extends(GroupSettings, _super);\n\n  function GroupSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(true)], GroupSettings.prototype, \"showDropArea\", void 0);\n\n  __decorate([Property(false)], GroupSettings.prototype, \"allowReordering\", void 0);\n\n  __decorate([Property(false)], GroupSettings.prototype, \"showToggleButton\", void 0);\n\n  __decorate([Property(false)], GroupSettings.prototype, \"showGroupedColumn\", void 0);\n\n  __decorate([Property(true)], GroupSettings.prototype, \"showUngroupButton\", void 0);\n\n  __decorate([Property(false)], GroupSettings.prototype, \"disablePageWiseAggregates\", void 0);\n\n  __decorate([Property([])], GroupSettings.prototype, \"columns\", void 0);\n\n  __decorate([Property()], GroupSettings.prototype, \"captionTemplate\", void 0);\n\n  __decorate([Property(false)], GroupSettings.prototype, \"enableLazyLoading\", void 0);\n\n  return GroupSettings;\n}(ChildProperty);\n\nexport { GroupSettings };\n/**\n * Configures the edit behavior of the Grid.\n */\n\nvar EditSettings =\n/** @class */\nfunction (_super) {\n  __extends(EditSettings, _super);\n\n  function EditSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(false)], EditSettings.prototype, \"allowAdding\", void 0);\n\n  __decorate([Property(false)], EditSettings.prototype, \"allowEditing\", void 0);\n\n  __decorate([Property(false)], EditSettings.prototype, \"allowDeleting\", void 0);\n\n  __decorate([Property('Normal')], EditSettings.prototype, \"mode\", void 0);\n\n  __decorate([Property(true)], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n\n  __decorate([Property(true)], EditSettings.prototype, \"showConfirmDialog\", void 0);\n\n  __decorate([Property(false)], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n\n  __decorate([Property('')], EditSettings.prototype, \"template\", void 0);\n\n  __decorate([Property('')], EditSettings.prototype, \"headerTemplate\", void 0);\n\n  __decorate([Property('')], EditSettings.prototype, \"footerTemplate\", void 0);\n\n  __decorate([Property('Top')], EditSettings.prototype, \"newRowPosition\", void 0);\n\n  __decorate([Property({})], EditSettings.prototype, \"dialog\", void 0);\n\n  __decorate([Property(false)], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n\n  return EditSettings;\n}(ChildProperty);\n\nexport { EditSettings };\n/**\n * Represents the Grid component.\n * ```html\n * <div id=\"grid\"></div>\n * <script>\n *  var gridObj = new Grid({ allowPaging: true });\n *  gridObj.appendTo(\"#grid\");\n * </script>\n * ```\n */\n\nvar Grid =\n/** @class */\nfunction (_super) {\n  __extends(Grid, _super);\n  /**\n   * Constructor for creating the component\n   * @hidden\n   */\n\n\n  function Grid(options, element) {\n    var _this = _super.call(this, options, element) || this;\n\n    _this.isPreventScrollEvent = false;\n    _this.inViewIndexes = [];\n    _this.keyA = false;\n    _this.frozenRightCount = 0;\n    _this.frozenLeftCount = 0;\n    _this.tablesCount = 1;\n    _this.movableCount = 0;\n    _this.visibleFrozenLeft = 0;\n    _this.visibleFrozenRight = 0;\n    _this.visibleMovable = 0;\n    _this.frozenLeftColumns = [];\n    _this.frozenRightColumns = [];\n    _this.movableColumns = [];\n    _this.media = {};\n    /** @hidden */\n\n    _this.tableIndex = 0;\n    _this.componentRefresh = Component.prototype.refresh;\n    /** @hidden */\n\n    _this.isVirtualAdaptive = false;\n    /** @hidden */\n\n    _this.vRows = [];\n    /** @hidden */\n\n    _this.vcRows = [];\n    /** @hidden */\n\n    _this.vGroupOffsets = {};\n    /** @hidden */\n\n    _this.rowUid = 0;\n    /**\n     * Gets the currently visible records of the Grid.\n     */\n\n    _this.currentViewData = [];\n    /** @hidden */\n\n    _this.lockcolPositionCount = 0;\n    /** @hidden */\n\n    _this.prevPageMoving = false;\n    /** @hidden */\n\n    _this.pageTemplateChange = false;\n    /** @hidden */\n\n    _this.isAutoGen = false;\n    _this.mediaBindInstance = {};\n    /** @hidden */\n\n    _this.commandDelIndex = undefined;\n    /** @hidden */\n\n    _this.asyncTimeOut = 50; // enable/disable logger for MVC & Core\n\n    _this.enableLogger = true;\n    _this.needsID = true;\n    Grid_1.Inject(Selection);\n    setValue('mergePersistData', _this.mergePersistGridData, _this);\n    return _this;\n  }\n\n  Grid_1 = Grid;\n  /**\n   * Get the properties to be maintained in the persisted state.\n   * @return {string}\n   */\n\n  Grid.prototype.getPersistData = function () {\n    var keyEntity = ['pageSettings', 'sortSettings', 'filterSettings', 'groupSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'scrollPosition'];\n    var ignoreOnPersist = {\n      pageSettings: ['template', 'pageSizes', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n      filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent'],\n      groupSettings: ['showDropArea', 'showToggleButton', 'showGroupedColumn', 'showUngroupButton', 'disablePageWiseAggregates', 'hideCaptionCount'],\n      searchSettings: ['fields', 'operator', 'ignoreCase'],\n      sortSettings: [],\n      columns: [],\n      selectedRowIndex: [],\n      scrollPosition: []\n    };\n    var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template', 'commandTemplate', 'commands', 'dataSource', 'headerText'];\n\n    for (var i = 0; i < keyEntity.length; i++) {\n      var currentObject = this[keyEntity[i]];\n\n      for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n        var val = _a[_i];\n        delete currentObject[val];\n      }\n    }\n\n    this.pageSettings.template = undefined;\n    /* tslint:disable-next-line:no-any */\n\n    if (this.isAngular) {\n      /* tslint:disable:no-string-literal */\n      delete this.groupSettings['properties']['captionTemplate'];\n    }\n\n    this.pageTemplateChange = !isNullOrUndefined(this.pagerTemplate);\n    return this.addOnPersist(keyEntity);\n  };\n  /**\n   * To provide the array of modules needed for component rendering\n   * @return {ModuleDeclaration[]}\n   * @hidden\n   */\n  // tslint:disable-next-line:max-func-body-length\n\n\n  Grid.prototype.requiredModules = function () {\n    this.setFrozenCount();\n    var modules = [];\n\n    if (this.isDestroyed) {\n      return modules;\n    }\n\n    if (this.allowFiltering) {\n      modules.push({\n        member: 'filter',\n        args: [this, this.filterSettings, this.serviceLocator]\n      });\n    }\n\n    if (this.allowExcelExport) {\n      modules.push({\n        member: 'ExcelExport',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.allowPdfExport) {\n      modules.push({\n        member: 'PdfExport',\n        args: [this]\n      });\n    }\n\n    if (this.allowSorting) {\n      modules.push({\n        member: 'sort',\n        args: [this, this.sortSettings, this.sortedColumns, this.serviceLocator]\n      });\n    }\n\n    if (this.allowPaging) {\n      modules.push({\n        member: 'pager',\n        args: [this, this.pageSettings]\n      });\n    }\n\n    if (this.allowSelection) {\n      modules.push({\n        member: 'selection',\n        args: [this, this.selectionSettings, this.serviceLocator]\n      });\n    }\n\n    modules.push({\n      member: 'resize',\n      args: [this]\n    });\n\n    if (this.allowReordering) {\n      modules.push({\n        member: 'reorder',\n        args: [this]\n      });\n    }\n\n    if (this.allowRowDragAndDrop) {\n      modules.push({\n        member: 'rowDragAndDrop',\n        args: [this]\n      });\n    }\n\n    if (this.allowGrouping) {\n      modules.push({\n        member: 'group',\n        args: [this, this.groupSettings, this.sortedColumns, this.serviceLocator]\n      });\n    }\n\n    if (this.aggregates.length) {\n      modules.push({\n        member: 'aggregate',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.isDetail()) {\n      modules.push({\n        member: 'detailRow',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.toolbar || this.toolbarTemplate) {\n      modules.push({\n        member: 'toolbar',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.enableVirtualization || this.enableColumnVirtualization) {\n      modules.push({\n        member: 'virtualscroll',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.getFrozenColumns() || this.frozenRows || this.frozenRightCount || this.frozenLeftCount) {\n      modules.push({\n        member: 'freeze',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.isCommandColumn(this.columns)) {\n      modules.push({\n        member: 'commandColumn',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n      modules.push({\n        member: 'edit',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    this.extendRequiredModules(modules);\n    return modules;\n  };\n\n  Grid.prototype.extendRequiredModules = function (modules) {\n    if (this.enableInfiniteScrolling) {\n      modules.push({\n        member: 'infiniteScroll',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.groupSettings.enableLazyLoading) {\n      modules.push({\n        member: 'lazyLoadGroup',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.contextMenuItems) {\n      modules.push({\n        member: 'contextMenu',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.showColumnMenu) {\n      modules.push({\n        member: 'columnMenu',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.showColumnChooser) {\n      modules.push({\n        member: 'columnChooser',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.isForeignKeyEnabled(this.columns)) {\n      modules.push({\n        member: 'foreignKey',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.enableLogger) {\n      modules.push({\n        member: 'logger',\n        args: [this]\n      });\n    }\n\n    if (isBlazor()) {\n      modules.push({\n        member: 'blazor',\n        args: [this]\n      });\n    }\n  };\n  /**\n   * For internal use only - Initialize the event handler;\n   * @private\n   */\n\n\n  Grid.prototype.preRender = function () {\n    this.serviceLocator = new ServiceLocator();\n    this.initProperties();\n    this.initializeServices();\n  };\n\n  Grid.prototype.initProperties = function () {\n    /* tslint:disable */\n    this.isInitial = true;\n    this.sortedColumns = [];\n    this.inViewIndexes = [];\n    this.mediaCol = [];\n    this.isInitialLoad = false;\n    this.allowServerDataBinding = false;\n    this.ignoreCollectionWatch = true;\n\n    if (isBlazor() && this.enableVirtualization && this.allowGrouping) {\n      var isExpanded = 'isExpanded';\n      this[isExpanded] = false;\n    }\n\n    this.mergeCells = {};\n    this.isEdit = false;\n    this.checkAllRows = 'None';\n    this.isCheckBoxSelection = false;\n    this.isPersistSelection = false;\n    this.componentRefresh = Component.prototype.refresh;\n    this.filterOperators = {\n      contains: 'contains',\n      endsWith: 'endswith',\n      equal: 'equal',\n      greaterThan: 'greaterthan',\n      greaterThanOrEqual: 'greaterthanorequal',\n      lessThan: 'lessthan',\n      lessThanOrEqual: 'lessthanorequal',\n      notEqual: 'notequal',\n      startsWith: 'startswith'\n    };\n    this.defaultLocale = {\n      EmptyRecord: 'No records to display',\n      True: 'true',\n      False: 'false',\n      InvalidFilterMessage: 'Invalid Filter Data',\n      GroupDropArea: 'Drag a column header here to group its column',\n      UnGroup: 'Click here to ungroup',\n      UnGroupButton: 'Click here to ungroup',\n      GroupDisable: 'Grouping is disabled for this column',\n      FilterbarTitle: '\\'s filter bar cell',\n      EmptyDataSourceError: 'DataSource must not be empty at initial load since columns are generated from dataSource in AutoGenerate Column Grid',\n      // Toolbar Items\n      Add: 'Add',\n      Edit: 'Edit',\n      Cancel: 'Cancel',\n      Update: 'Update',\n      Delete: 'Delete',\n      Print: 'Print',\n      Pdfexport: 'PDF Export',\n      Excelexport: 'Excel Export',\n      Wordexport: 'Word Export',\n      Csvexport: 'CSV Export',\n      Search: 'Search',\n      Columnchooser: 'Columns',\n      Save: 'Save',\n      Item: 'item',\n      Items: 'items',\n      EditOperationAlert: 'No records selected for edit operation',\n      DeleteOperationAlert: 'No records selected for delete operation',\n      SaveButton: 'Save',\n      OKButton: 'OK',\n      CancelButton: 'Cancel',\n      EditFormTitle: 'Details of ',\n      AddFormTitle: 'Add New Record',\n      BatchSaveConfirm: 'Are you sure you want to save changes?',\n      BatchSaveLostChanges: 'Unsaved changes will be lost. Are you sure you want to continue?',\n      ConfirmDelete: 'Are you sure you want to Delete Record?',\n      CancelEdit: 'Are you sure you want to Cancel the changes?',\n      ChooseColumns: 'Choose Column',\n      SearchColumns: 'search columns',\n      Matchs: 'No Matches Found',\n      FilterButton: 'Filter',\n      ClearButton: 'Clear',\n      StartsWith: 'Starts With',\n      EndsWith: 'Ends With',\n      Contains: 'Contains',\n      Equal: 'Equal',\n      NotEqual: 'Not Equal',\n      LessThan: 'Less Than',\n      LessThanOrEqual: 'Less Than Or Equal',\n      GreaterThan: 'Greater Than',\n      GreaterThanOrEqual: 'Greater Than Or Equal',\n      ChooseDate: 'Choose a Date',\n      EnterValue: 'Enter the value',\n      Copy: 'Copy',\n      Group: 'Group by this column',\n      Ungroup: 'Ungroup by this column',\n      autoFitAll: 'Autofit all columns',\n      autoFit: 'Autofit this column',\n      AutoFitAll: 'Autofit all columns',\n      AutoFit: 'Autofit this column',\n      Export: 'Export',\n      FirstPage: 'First Page',\n      LastPage: 'Last Page',\n      PreviousPage: 'Previous Page',\n      NextPage: 'Next Page',\n      SortAscending: 'Sort Ascending',\n      SortDescending: 'Sort Descending',\n      EditRecord: 'Edit Record',\n      DeleteRecord: 'Delete Record',\n      FilterMenu: 'Filter',\n      SelectAll: 'Select All',\n      Blanks: 'Blanks',\n      FilterTrue: 'True',\n      FilterFalse: 'False',\n      NoResult: 'No Matches Found',\n      ClearFilter: 'Clear Filter',\n      NumberFilter: 'Number Filters',\n      TextFilter: 'Text Filters',\n      DateFilter: 'Date Filters',\n      DateTimeFilter: 'DateTime Filters',\n      MatchCase: 'Match Case',\n      Between: 'Between',\n      CustomFilter: 'Custom Filter',\n      CustomFilterPlaceHolder: 'Enter the value',\n      CustomFilterDatePlaceHolder: 'Choose a date',\n      AND: 'AND',\n      OR: 'OR',\n      ShowRowsWhere: 'Show rows where:',\n      FilterMenuDialogARIA: 'Filter menu dialog',\n      ExcelFilterDialogARIA: 'Excel filter dialog',\n      DialogEditARIA: 'Edit dialog',\n      ColumnChooserDialogARIA: 'Column chooser dialog',\n      ColumnMenuDialogARIA: 'Column menu dialog',\n      CustomFilterDialogARIA: 'Customer filter dialog',\n      SortAtoZ: 'Sort A to Z',\n      SortZtoA: 'Sort Z to A',\n      SortByOldest: 'Sort by Oldest',\n      SortByNewest: 'Sort by Newest',\n      SortSmallestToLargest: 'Sort Smallest to Largest',\n      SortLargestToSmallest: 'Sort Largest to Smallest'\n    };\n    this.keyConfigs = {\n      downArrow: 'downarrow',\n      upArrow: 'uparrow',\n      rightArrow: 'rightarrow',\n      leftArrow: 'leftarrow',\n      shiftDown: 'shift+downarrow',\n      shiftUp: 'shift+uparrow',\n      shiftRight: 'shift+rightarrow',\n      shiftLeft: 'shift+leftarrow',\n      home: 'home',\n      end: 'end',\n      escape: 'escape',\n      ctrlHome: 'ctrl+home',\n      ctrlEnd: 'ctrl+end',\n      pageUp: 'pageup',\n      pageDown: 'pagedown',\n      ctrlAltPageUp: 'ctrl+alt+pageup',\n      ctrlAltPageDown: 'ctrl+alt+pagedown',\n      altPageUp: 'alt+pageup',\n      altPageDown: 'alt+pagedown',\n      altDownArrow: 'alt+downarrow',\n      altUpArrow: 'alt+uparrow',\n      ctrlDownArrow: 'ctrl+downarrow',\n      ctrlUpArrow: 'ctrl+uparrow',\n      ctrlPlusA: 'ctrl+A',\n      ctrlPlusP: 'ctrl+P',\n      insert: 'insert',\n      delete: 'delete',\n      f2: 'f2',\n      enter: 'enter',\n      ctrlEnter: 'ctrl+enter',\n      shiftEnter: 'shift+enter',\n      tab: 'tab',\n      shiftTab: 'shift+tab',\n      space: 'space',\n      ctrlPlusC: 'ctrl+C',\n      ctrlShiftPlusH: 'ctrl+shift+H',\n      ctrlSpace: 'ctrl+space',\n      ctrlLeftArrow: 'ctrl+leftarrow',\n      ctrlRightArrow: 'ctrl+rightarrow'\n    };\n    /* tslint:enable */\n  };\n  /**\n   * For internal use only - To Initialize the component rendering.\n   * @private\n   */\n\n\n  Grid.prototype.render = function () {\n    this.log(['module_missing', 'promise_enabled', 'locale_missing', 'check_datasource_columns']);\n    this.ariaService.setOptions(this.element, {\n      role: 'grid'\n    });\n\n    if (isBlazor()) {\n      this.renderComplete();\n    }\n\n    createSpinner({\n      target: this.element\n    }, this.createElement);\n    this.renderModule = new Render(this, this.serviceLocator);\n    this.searchModule = new Search(this);\n    this.scrollModule = new Scroll(this);\n    this.notify(events.initialLoad, {});\n\n    if (this.getDataModule().dataManager.dataSource.offline === true || this.getDataModule().dataManager.dataSource.url === undefined) {\n      this.isVirtualAdaptive = true;\n    }\n\n    this.trigger(events.load);\n    prepareColumns(this.columns, this.enableColumnVirtualization, this);\n\n    if (this.enablePersistence) {\n      this.notify(events.columnsPrepared, {});\n    }\n\n    if (!(isBlazor() && this.isServerRendered)) {\n      this.getMediaColumns();\n      setColumnIndex(this.columns);\n    }\n\n    this.checkLockColumns(this.columns);\n    this.getColumns();\n    this.processModel();\n    this.gridRender();\n    this.wireEvents();\n    this.addListener();\n    this.updateDefaultCursor();\n    this.updateStackedFilter();\n    this.showSpinner();\n    this.notify(events.initialEnd, {});\n\n    if (isBlazor() && this.isServerRendered) {\n      gridObserver.notify(events.componentRendered, {\n        id: this.element.id,\n        grid: this\n      });\n    }\n  };\n  /**\n   * By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n   */\n\n\n  Grid.prototype.showSpinner = function () {\n    showSpinner(this.element);\n  };\n  /**\n   * Manually showed spinner needs to hide by `hideSpinnner`.\n   */\n\n\n  Grid.prototype.hideSpinner = function () {\n    hideSpinner(this.element);\n  };\n\n  Grid.prototype.updateStackedFilter = function () {\n    if (this.allowFiltering && this.filterSettings.type === 'FilterBar' && this.getHeaderContent().querySelectorAll('.e-stackedheadercell').length) {\n      this.getHeaderContent().classList.add('e-stackedfilter');\n    } else {\n      this.getHeaderContent().classList.remove('e-stackedfilter');\n    }\n  };\n\n  Grid.prototype.getMediaColumns = function () {\n    if (!this.enableColumnVirtualization) {\n      var gcol = this.getColumns();\n      this.getShowHideService = this.serviceLocator.getService('showHideService');\n\n      if (!isNullOrUndefined(gcol)) {\n        for (var index = 0; index < gcol.length; index++) {\n          if (!isNullOrUndefined(gcol[index].hideAtMedia) && (isNullOrUndefined(gcol[index].visible) || gcol[index].visible)) {\n            this.pushMediaColumn(gcol[index], index);\n          }\n        }\n      }\n    }\n  };\n\n  Grid.prototype.pushMediaColumn = function (col, index) {\n    this.mediaCol.push(col);\n    this.media[col.uid] = window.matchMedia(col.hideAtMedia);\n    this.mediaQueryUpdate(index, this.media[col.uid]);\n    this.mediaBindInstance[index] = this.mediaQueryUpdate.bind(this, index);\n    this.media[col.uid].addListener(this.mediaBindInstance[index]);\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.updateMediaColumns = function (col) {\n    if (!this.enableColumnVirtualization) {\n      var index = this.getColumnIndexByUid(col.uid);\n\n      for (var i = 0; i < this.mediaCol.length; i++) {\n        if (col.uid === this.mediaCol[i].uid) {\n          this.mediaCol.splice(i, 1);\n          return;\n        }\n      }\n\n      this.pushMediaColumn(col, index);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.mediaQueryUpdate = function (columnIndex, e) {\n    var col = this.getColumns()[columnIndex];\n\n    if (this.mediaCol.some(function (mediaColumn) {\n      return mediaColumn.uid === col.uid;\n    })) {\n      col.visible = e.matches;\n\n      if (this.isInitialLoad) {\n        this.invokedFromMedia = true;\n\n        if (col.visible) {\n          this.showHider.show(col.headerText, 'headerText');\n        } else {\n          this.showHider.hide(col.headerText, 'headerText');\n        }\n      }\n    }\n  };\n\n  Grid.prototype.refreshMediaCol = function () {\n    this.isInitialLoad = true;\n    var footerContent = this.element.querySelector('.e-gridfooter');\n\n    if (this.aggregates.length && this.element.scrollHeight > this.height && footerContent) {\n      addClass([footerContent], ['e-footerpadding']);\n    }\n\n    var checkboxColumn = this.getColumns().filter(function (col) {\n      return col.type === 'checkbox';\n    });\n\n    if (checkboxColumn.length && this.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n      this.isCheckBoxSelection = false;\n    }\n  };\n\n  Grid.prototype.removeMediaListener = function () {\n    for (var i = 0; i < this.mediaCol.length; i++) {\n      this.media[this.mediaCol[i].uid].removeListener(this.mediaBindInstance[this.mediaCol[i].index]);\n    }\n  };\n  /**\n   * For internal use only - Initialize the event handler\n   * @private\n   */\n\n\n  Grid.prototype.eventInitializer = function () {//eventInitializer\n  };\n  /**\n   * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n   * @method destroy\n   * @return {void}\n   */\n\n\n  Grid.prototype.destroy = function () {\n    var gridElement = this.element;\n\n    if (!gridElement) {\n      return;\n    }\n\n    var hasGridChild = gridElement.querySelector('.e-gridheader') && gridElement.querySelector('.e-gridcontent') ? true : false;\n\n    if (hasGridChild) {\n      this.unwireEvents();\n    }\n\n    this.removeListener();\n    this.removeMediaListener();\n    this.notify(events.destroy, {});\n    this.destroyDependentModules();\n\n    if (hasGridChild) {\n      _super.prototype.destroy.call(this);\n    }\n\n    this.toolTipObj.destroy();\n    var modules = ['renderModule', 'headerModule', 'contentModule', 'valueFormatterService', 'serviceLocator', 'ariaService', 'keyboardModule', 'widthService', 'searchModule', 'showHider', 'scrollModule', 'printModule', 'clipboardModule', 'focusModule'];\n\n    for (var i = 0; i < modules.length; i++) {\n      if (this[modules[i]]) {\n        this[modules[i]] = null;\n      }\n    }\n\n    if (!(isBlazor() && this.isServerRendered)) {\n      this.element.innerHTML = '';\n    } else {\n      this.element.style.display = 'none';\n    }\n\n    classList(this.element, [], ['e-rtl', 'e-gridhover', 'e-responsive', 'e-default', 'e-device', 'e-grid-min-height']);\n  };\n\n  Grid.prototype.destroyDependentModules = function () {\n    var gridElement = this.element;\n\n    if (!gridElement || !gridElement.querySelector('.e-gridheader') && !gridElement.querySelector('.e-gridcontent')) {\n      return;\n    }\n\n    this.scrollModule.destroy();\n    this.keyboardModule.destroy();\n    this.focusModule.destroy();\n  };\n  /**\n   * For internal use only - Get the module name.\n   * @private\n   */\n\n\n  Grid.prototype.getModuleName = function () {\n    return 'grid';\n  };\n\n  Grid.prototype.enableBoxSelection = function () {\n    if (this.enableAutoFill) {\n      this.selectionSettings.cellSelectionMode = 'BoxWithBorder';\n      this.element.classList.add('e-afenabled');\n    } else {\n      this.element.classList.remove('e-afenabled');\n    }\n  };\n  /**\n   * Called internally if any of the property value changed.\n   * @hidden\n   */\n\n  /* tslint:disable-next-line:max-line-length */\n  // tslint:disable-next-line:max-func-body-length\n\n\n  Grid.prototype.onPropertyChanged = function (newProp, oldProp) {\n    var requireRefresh = false;\n    var requireGridRefresh = false;\n    var freezeRefresh = false;\n    var checkCursor;\n    var args = {\n      requestType: 'refresh'\n    };\n\n    if (this.isDestroyed) {\n      return;\n    }\n\n    this.log('module_missing');\n\n    if (this.isEllipsisTooltip()) {\n      this.toolTipObj.close();\n    }\n\n    var properties = Object.keys(newProp);\n\n    if (properties.indexOf('columns') > -1) {\n      this.updateColumnObject();\n      requireGridRefresh = true;\n    }\n\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n      var prop = properties_1[_i];\n\n      switch (prop) {\n        case 'allowPaging':\n          this.notify(events.uiUpdate, {\n            module: 'pager',\n            enable: this.allowPaging\n          });\n          requireRefresh = true;\n          break;\n\n        case 'pageSettings':\n          if (this.pageTemplateChange) {\n            this.pageTemplateChange = false;\n            this.notify(events.inBoundModelChanged, {\n              module: 'pager',\n              properties: newProp.pageSettings\n            });\n            break;\n          }\n\n          this.notify(events.inBoundModelChanged, {\n            module: 'pager',\n            properties: newProp.pageSettings\n          });\n\n          if (isNullOrUndefined(newProp.pageSettings.currentPage) && isNullOrUndefined(newProp.pageSettings.pageSize) && isNullOrUndefined(newProp.pageSettings.totalRecordsCount) || !isNullOrUndefined(oldProp.pageSettings) && newProp.pageSettings.currentPage !== oldProp.pageSettings.currentPage && !this.enableColumnVirtualization && !this.enableVirtualization && this.pageSettings.totalRecordsCount <= this.pageSettings.pageSize) {\n            requireRefresh = true;\n          }\n\n          break;\n\n        case 'allowSorting':\n          this.notify(events.uiUpdate, {\n            module: 'sort',\n            enable: this.allowSorting\n          });\n          requireRefresh = true;\n          checkCursor = true;\n          break;\n\n        case 'allowFiltering':\n          this.updateStackedFilter();\n          this.notify(events.uiUpdate, {\n            module: 'filter',\n            enable: this.allowFiltering\n          });\n          requireRefresh = true;\n\n          if (this.filterSettings.type !== 'FilterBar') {\n            this.refreshHeader();\n          }\n\n          break;\n\n        case 'height':\n        case 'width':\n          this.notify(events.uiUpdate, {\n            module: 'scroll',\n            properties: {\n              width: newProp.width,\n              height: newProp.height\n            }\n          });\n          break;\n\n        case 'allowReordering':\n          this.headerModule.refreshUI();\n          checkCursor = true;\n          break;\n\n        case 'allowRowDragAndDrop':\n          this.notify(events.uiUpdate, {\n            module: 'rowDragAndDrop',\n            enable: this.allowRowDragAndDrop\n          });\n          this.renderModule.refresh();\n          this.headerModule.refreshUI();\n          break;\n\n        case 'allowSelection':\n          this.notify(events.uiUpdate, {\n            module: 'selection',\n            enable: this.allowSelection\n          });\n          break;\n\n        case 'enableAutoFill':\n          if (this.selectionModule) {\n            this.enableBoxSelection();\n            this.selectionModule.updateAutoFillPosition();\n          }\n\n          break;\n\n        case 'rowTemplate':\n          this.rowTemplateFn = templateCompiler(this.rowTemplate);\n          requireRefresh = true;\n          break;\n\n        case 'detailTemplate':\n          this.detailTemplateFn = templateCompiler(this.detailTemplate);\n          requireRefresh = true;\n          break;\n\n        case 'allowGrouping':\n          this.notify(events.uiUpdate, {\n            module: 'group',\n            enable: this.allowGrouping\n          });\n          this.headerModule.refreshUI();\n          requireRefresh = true;\n          checkCursor = true;\n          break;\n\n        case 'enableInfiniteScrolling':\n        case 'childGrid':\n          requireRefresh = true;\n          break;\n\n        case 'toolbar':\n          this.notify(events.uiUpdate, {\n            module: 'toolbar'\n          });\n          break;\n\n        case 'groupSettings':\n          this.notify(events.inBoundModelChanged, {\n            module: 'group',\n            properties: newProp.groupSettings,\n            oldProperties: oldProp.groupSettings\n          });\n          break;\n\n        case 'aggregates':\n          if (!this.aggregates.length && this.allowGrouping && this.groupSettings.columns.length) {\n            requireRefresh = true;\n          }\n\n          this.notify(events.uiUpdate, {\n            module: 'aggregate',\n            properties: newProp\n          });\n          break;\n\n        case 'frozenColumns':\n        case 'frozenRows':\n        case 'enableVirtualization':\n        case 'currencyCode':\n        case 'locale':\n          this.log('frozen_rows_columns');\n          freezeRefresh = true;\n          requireGridRefresh = true;\n          break;\n\n        case 'query':\n          if (!this.getDataModule().isQueryInvokedFromData) {\n            requireRefresh = true;\n          }\n\n          this.getDataModule().isQueryInvokedFromData = false;\n          break;\n\n        default:\n          this.extendedPropertyChange(prop, newProp, requireGridRefresh);\n      }\n    }\n\n    if (checkCursor) {\n      this.updateDefaultCursor();\n    }\n\n    if (requireGridRefresh) {\n      if (freezeRefresh || this.getFrozenColumns() || this.frozenRows) {\n        if (!(isBlazor() && this.isServerRendered)) {\n          this.freezeRefresh();\n        }\n      } else {\n        this.refresh();\n      }\n    } else if (requireRefresh) {\n      this.notify(events.modelChanged, args);\n      requireRefresh = false;\n      this.maintainSelection(newProp.selectedRowIndex);\n    }\n  };\n  /* tslint:disable */\n\n\n  Grid.prototype.extendedPropertyChange = function (prop, newProp, requireGridRefresh) {\n    switch (prop) {\n      case 'enableRtl':\n        this.updateRTL();\n\n        if (this.allowPaging) {\n          this.element.querySelector('.e-gridpager').ej2_instances[0].enableRtl = newProp.enableRtl;\n          this.element.querySelector('.e-gridpager').ej2_instances[0].dataBind();\n        }\n\n        if (this.height !== 'auto') {\n          this.scrollModule.removePadding(!newProp.enableRtl);\n          this.scrollModule.setPadding();\n        }\n\n        if (this.toolbar && this.toolbarModule) {\n          this.toolbarModule.getToolbar().ej2_instances[0].enableRtl = newProp.enableRtl;\n          this.toolbarModule.getToolbar().ej2_instances[0].dataBind();\n        }\n\n        if (this.contextMenuItems && this.contextMenuModule) {\n          this.contextMenuModule.getContextMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n          this.contextMenuModule.getContextMenu().ej2_instances[0].dataBind();\n        }\n\n        if (this.showColumnMenu && this.columnMenuModule) {\n          this.columnMenuModule.getColumnMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n          this.columnMenuModule.getColumnMenu().ej2_instances[0].dataBind();\n        }\n\n        if (this.filterSettings.type === 'FilterBar' && this.filterSettings.showFilterBarOperator) {\n          this.refreshHeader();\n        }\n\n        this.notify(events.rtlUpdated, {});\n        break;\n\n      case 'enableAltRow':\n        this.renderModule.refresh();\n        break;\n\n      case 'allowResizing':\n        this.headerModule.refreshUI();\n        this.updateResizeLines();\n        break;\n\n      case 'rowHeight':\n        if (this.rowHeight) {\n          addClass([this.element], 'e-grid-min-height');\n        } else {\n          removeClass([this.element], 'e-grid-min-height');\n        }\n\n        this.renderModule.refresh();\n        this.headerModule.refreshUI();\n        break;\n\n      case 'gridLines':\n        this.updateGridLines();\n        break;\n\n      case 'showColumnMenu':\n        this.headerModule.refreshUI();\n        this.notify(events.uiUpdate, {\n          module: 'columnMenu',\n          enable: true\n        });\n        break;\n\n      case 'columnMenuItems':\n        this.notify(events.uiUpdate, {\n          module: 'columnMenu',\n          enable: this.columnMenuItems\n        });\n        break;\n\n      case 'contextMenuItems':\n        this.notify(events.uiUpdate, {\n          module: 'contextMenu',\n          enable: this.contextMenuItems\n        });\n        break;\n\n      case 'showColumnChooser':\n        this.notify(events.uiUpdate, {\n          module: 'columnChooser',\n          enable: this.showColumnChooser\n        });\n        break;\n\n      case 'filterSettings':\n        this.updateStackedFilter();\n        this.notify(events.inBoundModelChanged, {\n          module: 'filter',\n          properties: newProp.filterSettings\n        });\n        break;\n\n      case 'searchSettings':\n        this.notify(events.inBoundModelChanged, {\n          module: 'search',\n          properties: newProp.searchSettings\n        });\n        break;\n\n      case 'sortSettings':\n        this.notify(events.inBoundModelChanged, {\n          module: 'sort'\n        });\n        break;\n\n      case 'selectionSettings':\n        this.notify(events.inBoundModelChanged, {\n          module: 'selection',\n          properties: newProp.selectionSettings\n        });\n        break;\n\n      case 'editSettings':\n        this.notify(events.inBoundModelChanged, {\n          module: 'edit',\n          properties: newProp.editSettings\n        });\n        break;\n\n      case 'allowTextWrap':\n      case 'textWrapSettings':\n        if (this.allowTextWrap) {\n          this.applyTextWrap();\n        } else {\n          this.removeTextWrap();\n        }\n\n        this.notify(events.freezeRender, {\n          case: 'textwrap',\n          isModeChg: prop === 'textWrapSettings'\n        });\n        break;\n\n      case 'dataSource':\n        var pending_1 = this.getDataModule().getState();\n\n        if (Object.getPrototypeOf(newProp).deepWatch) {\n          var pKeyField = this.getPrimaryKeyFieldNames()[0];\n\n          for (var i = 0, props = Object.keys(newProp.dataSource); i < props.length; i++) {\n            this.setRowData(getValue(pKeyField, this.dataSource[props[i]]), this.dataSource[props[i]]);\n          }\n        } else if (pending_1.isPending) {\n          var gResult = !isNullOrUndefined(this.dataSource) ? this.dataSource.result : [];\n          var names = pending_1.group || [];\n\n          for (var i = 0; i < names.length; i++) {\n            gResult = DataUtil.group(gResult, names[i], pending_1.aggregates || []);\n          }\n\n          this.dataSource = {\n            result: gResult,\n            count: this.dataSource.count,\n            aggregates: this.dataSource.aggregates\n          };\n          this.getDataModule().setState({});\n          pending_1.resolver(this.dataSource);\n        } else {\n          this.getDataModule().setState({\n            isDataChanged: false\n          });\n          this.notify(events.dataSourceModified, {});\n\n          if (!requireGridRefresh) {\n            this.renderModule.refresh();\n\n            if (this.isCheckBoxSelection) {\n              this.notify(events.beforeRefreshOnDataChange, {});\n            }\n          }\n        }\n\n        this.scrollRefresh();\n        break;\n\n      case 'enableHover':\n        var action = newProp.enableHover ? addClass : removeClass;\n        action([this.element], 'e-gridhover');\n        break;\n\n      case 'selectedRowIndex':\n        if (!this.isSelectedRowIndexUpdating) {\n          this.selectRow(newProp.selectedRowIndex);\n        }\n\n        this.isSelectedRowIndexUpdating = false;\n        break;\n\n      case 'resizeSettings':\n        this.widthService.setWidthToTable();\n        break;\n    }\n  };\n\n  Grid.prototype.maintainSelection = function (index) {\n    var _this = this;\n\n    if (index !== -1) {\n      var fn_1 = function () {\n        _this.selectRow(index);\n\n        _this.off(events.contentReady, fn_1);\n      };\n\n      this.on(events.contentReady, fn_1, this);\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  Grid.prototype.setProperties = function (prop, muteOnChange) {\n    _super.prototype.setProperties.call(this, prop, muteOnChange);\n\n    var filterSettings = 'filterSettings';\n\n    if (prop[filterSettings] && this.filterModule && muteOnChange) {\n      this.filterModule.refreshFilter();\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.setTablesCount = function () {\n    var frozenCols = this.getFrozenColumns();\n    var frozenLeft = this.getFrozenLeftColumnsCount();\n    var frozenRight = this.getFrozenRightColumnsCount();\n\n    if (frozenCols && !frozenLeft && !frozenRight) {\n      this.tablesCount = 2;\n    } else if (!frozenCols && (frozenLeft || frozenRight)) {\n      if (frozenLeft && !frozenRight || frozenRight && !frozenLeft) {\n        this.tablesCount = 2;\n      } else if (frozenLeft && frozenRight) {\n        this.tablesCount = 3;\n      }\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getTablesCount = function () {\n    return this.tablesCount;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.updateDefaultCursor = function () {\n    var headerCells = [].slice.call(this.getHeaderContent().querySelectorAll('.e-headercell:not(.e-stackedheadercell)'));\n    var stdHdrCell = [].slice.call(this.getHeaderContent().querySelectorAll('.e-stackedheadercell'));\n    var cols = this.getColumns();\n\n    if (this.enableColumnVirtualization && this.getFrozenColumns()) {\n      var cells = this.contentModule.getHeaderCells();\n      headerCells = cells.length ? cells : headerCells;\n    }\n\n    for (var i = 0; i < headerCells.length; i++) {\n      var cell = headerCells[i];\n\n      if (this.allowGrouping || this.allowReordering || this.allowSorting) {\n        if (!cols[i].allowReordering || !cols[i].allowSorting || !cols[i].allowGrouping) {\n          cell.classList.add('e-defaultcursor');\n        } else {\n          cell.classList.add('e-mousepointer');\n        }\n      }\n    }\n\n    for (var count = 0; count < stdHdrCell.length; count++) {\n      if (this.allowReordering) {\n        stdHdrCell[count].classList.add('e-mousepointer');\n      }\n    }\n  };\n\n  Grid.prototype.updateColumnModel = function (columns) {\n    for (var i = 0, len = columns.length; i < len; i++) {\n      if (columns[i].columns) {\n        this.updateColumnModel(columns[i].columns);\n      } else {\n        this.columnModel.push(columns[i]);\n      }\n    }\n\n    this.updateColumnLevelFrozen();\n    this.updateFrozenColumns();\n    this.updateLockableColumns();\n  };\n\n  Grid.prototype.updateColumnLevelFrozen = function () {\n    var cols = this.columnModel;\n    var leftCols = [];\n    var rightCols = [];\n    var movableCols = [];\n\n    if (this.frozenLeftCount || this.frozenRightCount) {\n      for (var i = 0, len = cols.length; i < len; i++) {\n        /* tslint:disable-next-line:no-any */\n        var col = cols[i];\n\n        if (col.freeze === 'Left') {\n          col.freezeTable = 'frozen-left';\n          leftCols.push(col);\n        } else if (col.freeze === 'Right') {\n          col.freezeTable = 'frozen-right';\n          rightCols.push(col);\n        } else {\n          col.freezeTable = 'movable';\n          movableCols.push(col);\n        }\n      }\n\n      this.columnModel = leftCols.concat(movableCols).concat(rightCols);\n    }\n  };\n\n  Grid.prototype.updateFrozenColumns = function () {\n    if (this.frozenLeftCount || this.frozenRightCount) {\n      return;\n    }\n\n    var cols = this.columnModel;\n    var directFrozenCount = this.frozenColumns;\n    var totalFrozenCount = this.getFrozenColumns();\n    var count = 0;\n\n    for (var i = 0, len = cols.length; i < len; i++) {\n      /* tslint:disable-next-line:no-any */\n      var col = cols[i];\n\n      if (directFrozenCount) {\n        if (i < directFrozenCount) {\n          col.freezeTable = 'frozen-left';\n        } else {\n          col.freezeTable = 'movable';\n        }\n      }\n\n      if (col.isFrozen && i >= directFrozenCount) {\n        col.freezeTable = 'frozen-left';\n        cols.splice(this.frozenColumns + count, 0, cols.splice(i, 1)[0]);\n        count++;\n      } else if (totalFrozenCount && !directFrozenCount) {\n        col.freezeTable = 'movable';\n      }\n    }\n  };\n\n  Grid.prototype.getFrozenLeftCount = function () {\n    return this.getFrozenColumns() || this.getFrozenLeftColumnsCount();\n  };\n\n  Grid.prototype.isFrozenGrid = function () {\n    return this.getFrozenColumns() !== 0 || this.getFrozenLeftColumnsCount() !== 0 || this.getFrozenRightColumnsCount() !== 0;\n  };\n\n  Grid.prototype.getFrozenMode = function () {\n    return this.frozenName;\n  };\n\n  Grid.prototype.updateLockableColumns = function () {\n    var cols = this.columnModel;\n    var frozenCount = 0;\n    var movableCount = 0;\n    var frozenColumns = this.getFrozenColumns();\n\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[i].lockColumn) {\n        if (i < frozenColumns) {\n          cols.splice(frozenCount, 0, cols.splice(i, 1)[0]);\n          frozenCount++;\n        } else {\n          cols.splice(frozenColumns + movableCount, 0, cols.splice(i, 1)[0]);\n          movableCount++;\n        }\n      }\n    }\n  };\n\n  Grid.prototype.checkLockColumns = function (cols) {\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[i].columns) {\n        this.checkLockColumns(cols[i].columns);\n      } else if (cols[i].lockColumn) {\n        this.lockcolPositionCount++;\n      }\n    }\n  };\n  /**\n   * Gets the columns from the Grid.\n   * @return {Column[]}\n   * @blazorType List<GridColumn>\n   */\n\n\n  Grid.prototype.getColumns = function (isRefresh) {\n    var _this = this;\n\n    var inview = this.inViewIndexes.map(function (v) {\n      return v - _this.groupSettings.columns.length;\n    }).filter(function (v) {\n      return v > -1;\n    });\n    var vLen = inview.length;\n\n    if (!this.enableColumnVirtualization || isNullOrUndefined(this.columnModel) || this.columnModel.length === 0 || isRefresh) {\n      this.columnModel = [];\n      this.updateColumnModel(this.columns);\n    }\n\n    var columns = vLen === 0 ? this.columnModel : this.columnModel.slice(inview[0], inview[vLen - 1] + 1);\n\n    if (this.contentModule && this.enableColumnVirtualization && this.isFrozenGrid() && inview.length && inview[0] > 0) {\n      var frozenCols = this.contentModule.ensureFrozenCols(columns);\n      columns = frozenCols;\n    }\n\n    return columns;\n  };\n  /**\n   * @private\n   */\n\n\n  Grid.prototype.getStackedHeaderColumnByHeaderText = function (stackedHeader, col) {\n    for (var i = 0; i < col.length; i++) {\n      var individualColumn = col[i];\n\n      if (individualColumn.field === stackedHeader || individualColumn.headerText === stackedHeader) {\n        this.stackedColumn = individualColumn;\n        break;\n      } else if (individualColumn.columns) {\n        this.getStackedHeaderColumnByHeaderText(stackedHeader, individualColumn.columns);\n      }\n    }\n\n    return this.stackedColumn;\n  };\n  /**\n   * @private\n   */\n\n\n  Grid.prototype.getColumnIndexesInView = function () {\n    return this.inViewIndexes;\n  };\n  /**\n   * @private\n   */\n\n\n  Grid.prototype.getQuery = function () {\n    return this.query;\n  };\n  /**\n   * @private\n   */\n\n\n  Grid.prototype.getLocaleConstants = function () {\n    return this.defaultLocale;\n  };\n  /**\n   * @private\n   */\n\n\n  Grid.prototype.setColumnIndexesInView = function (indexes) {\n    this.inViewIndexes = indexes;\n  };\n  /**\n   * Gets the visible columns from the Grid.\n   * @return {Column[]}\n   * @blazorType List<GridColumn>\n   */\n\n\n  Grid.prototype.getVisibleColumns = function () {\n    var cols = [];\n\n    for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n      var col = _a[_i];\n\n      if (col.visible) {\n        cols.push(col);\n      }\n    }\n\n    return cols;\n  };\n  /**\n   * Gets the header div of the Grid.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getHeaderContent = function () {\n    return this.headerModule.getPanel();\n  };\n  /**\n   * Sets the header div of the Grid to replace the old header.\n   * @param  {Element} element - Specifies the Grid header.\n   * @return {void}\n   */\n\n\n  Grid.prototype.setGridHeaderContent = function (element) {\n    this.headerModule.setPanel(element);\n  };\n  /**\n   * Gets the content table of the Grid.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getContentTable = function () {\n    return this.contentModule.getTable();\n  };\n  /**\n   * Sets the content table of the Grid to replace the old content table.\n   * @param  {Element} element - Specifies the Grid content table.\n   * @return {void}\n   */\n\n\n  Grid.prototype.setGridContentTable = function (element) {\n    this.contentModule.setTable(element);\n  };\n  /**\n   * Gets the content div of the Grid.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getContent = function () {\n    return this.contentModule.getPanel();\n  };\n  /**\n   * Sets the content div of the Grid to replace the old Grid content.\n   * @param  {Element} element - Specifies the Grid content.\n   * @return {void}\n   */\n\n\n  Grid.prototype.setGridContent = function (element) {\n    this.contentModule.setPanel(element);\n  };\n  /**\n   * Gets the header table element of the Grid.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getHeaderTable = function () {\n    return this.headerModule.getTable();\n  };\n  /**\n   * Sets the header table of the Grid to replace the old one.\n   * @param  {Element} element - Specifies the Grid header table.\n   * @return {void}\n   */\n\n\n  Grid.prototype.setGridHeaderTable = function (element) {\n    this.headerModule.setTable(element);\n  };\n  /**\n   * Gets the footer div of the Grid.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getFooterContent = function () {\n    this.footerElement = this.element.getElementsByClassName('e-gridfooter')[0];\n    return this.footerElement;\n  };\n  /**\n   * Gets the footer table element of the Grid.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getFooterContentTable = function () {\n    this.footerElement = this.element.getElementsByClassName('e-gridfooter')[0];\n    return this.footerElement.firstChild.firstChild;\n  };\n  /**\n   * Gets the pager of the Grid.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getPager = function () {\n    return this.gridPager; //get element from pager\n  };\n  /**\n   * Sets the pager of the Grid to replace the old pager.\n   * @param  {Element} element - Specifies the Grid pager.\n   * @return {void}\n   */\n\n\n  Grid.prototype.setGridPager = function (element) {\n    this.gridPager = element;\n  };\n  /**\n   * Gets a row by index.\n   * @param  {number} index - Specifies the row index.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getRowByIndex = function (index) {\n    return this.contentModule.getRowByIndex(index);\n  };\n  /**\n   * Gets a movable tables row by index.\n   * @param  {number} index - Specifies the row index.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getMovableRowByIndex = function (index) {\n    return this.contentModule.getMovableRowByIndex(index);\n  };\n  /**\n   * Gets a frozen tables row by index.\n   * @param  {number} index - Specifies the row index.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getFrozenRowByIndex = function (index) {\n    return this.getFrozenDataRows()[index];\n  };\n  /**\n   * Gets all the data rows of the Grid.\n   * @return {Element[]}\n   */\n\n\n  Grid.prototype.getRows = function () {\n    return this.contentModule.getRowElements();\n  };\n  /**\n  * Gets a frozen right tables row element by index.\n  * @param  {number} index - Specifies the row index.\n  * @return {Element}\n  */\n\n\n  Grid.prototype.getFrozenRightRowByIndex = function (index) {\n    return this.contentModule.getFrozenRightRowByIndex(index);\n  };\n  /**\n   * Get a row information based on cell\n   * @param {Element}\n   * @return RowInfo\n   */\n\n\n  Grid.prototype.getRowInfo = function (target) {\n    var ele = target;\n    var args = {\n      target: target\n    };\n\n    if (!isNullOrUndefined(target) && isNullOrUndefined(parentsUntil(ele, 'e-detailrowcollapse') && isNullOrUndefined(parentsUntil(ele, 'e-recordplusexpand')))) {\n      var cell = closest(ele, '.e-rowcell');\n\n      if (!cell) {\n        var row = closest(ele, '.e-row');\n\n        if (!isNullOrUndefined(row)) {\n          var rowObj = this.getRowObjectFromUID(row.getAttribute('data-uid'));\n          var rowIndex = parseInt(row.getAttribute('aria-rowindex'), 10);\n          args = {\n            row: row,\n            rowData: rowObj.data,\n            rowIndex: rowIndex\n          };\n        }\n\n        return args;\n      }\n\n      var cellIndex = parseInt(cell.getAttribute('aria-colindex'), 10);\n\n      if (!isNullOrUndefined(cell) && !isNaN(cellIndex)) {\n        var row_1 = closest(cell, '.e-row');\n        var rowIndex = parseInt(row_1.getAttribute('aria-rowindex'), 10);\n        var frzCols = this.getFrozenColumns();\n        var tableName = this.columnModel[cellIndex].getFreezeTableName();\n        var rows = this.contentModule.getRows();\n        var index = cellIndex + this.getIndentCount();\n\n        if (this.isFrozenGrid()) {\n          if (tableName === 'frozen-left') {\n            rows = this.contentModule.getRows();\n          } else if (tableName === 'movable') {\n            index = cellIndex - frzCols - this.frozenLeftCount;\n            rows = this.contentModule.getMovableRows();\n          } else if (tableName === 'frozen-right') {\n            index = cellIndex - (this.frozenLeftCount + this.movableCount);\n            rows = this.contentModule.getFrozenRightRows();\n          }\n        }\n\n        var rowsObject = rows.filter(function (r) {\n          return r.uid === row_1.getAttribute('data-uid');\n        });\n        var rowData = {};\n        var column = void 0;\n\n        if (Object.keys(rowsObject).length) {\n          rowData = rowsObject[0].data;\n          column = rowsObject[0].cells[index].column;\n        }\n\n        args = {\n          cell: cell,\n          cellIndex: cellIndex,\n          row: row_1,\n          rowIndex: rowIndex,\n          rowData: rowData,\n          column: column,\n          target: target\n        };\n      }\n    }\n\n    return args;\n  };\n  /**\n   * Gets the Grid's movable content rows from frozen grid.\n   * @return {Element[]}\n   */\n\n\n  Grid.prototype.getMovableRows = function () {\n    return this.contentModule.getMovableRowElements();\n  };\n  /**\n   * Gets the Grid's frozen right content rows from frozen grid.\n   * @return {Element[]}\n   */\n\n\n  Grid.prototype.getFrozenRightRows = function () {\n    return this.contentModule.getFrozenRightRowElements();\n  };\n  /**\n   * Gets all the Grid's data rows.\n   * @return {Element[]}\n   */\n\n\n  Grid.prototype.getDataRows = function () {\n    return this.getAllDataRows();\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getAllDataRows = function (includeAdd) {\n    if (isNullOrUndefined(this.getContentTable().querySelector('tbody'))) {\n      return [];\n    }\n\n    var tbody = this.isFrozenGrid() ? this.getFrozenLeftContentTbody() : this.getContentTable().querySelector('tbody');\n    var rows = [].slice.call(tbody.children);\n\n    if (this.frozenRows) {\n      var hdrTbody = this.isFrozenGrid() ? this.getHeaderContent().querySelector('.e-frozenheader').querySelector('tbody') : this.getHeaderTable().querySelector('tbody');\n      var freezeRows = [].slice.call(hdrTbody.children);\n      rows = this.addMovableRows(freezeRows, rows);\n    }\n\n    var dataRows = this.generateDataRows(rows, includeAdd);\n    return dataRows;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.addMovableRows = function (fRows, mrows) {\n    for (var i = 0, len = mrows.length; i < len; i++) {\n      fRows.push(mrows[i]);\n    }\n\n    return fRows;\n  };\n\n  Grid.prototype.generateDataRows = function (rows, includAdd) {\n    var dRows = [];\n\n    for (var i = 0, len = rows.length; i < len; i++) {\n      if (rows[i].classList.contains('e-row') && (!rows[i].classList.contains('e-hiddenrow') || includAdd)) {\n        if (this.isCollapseStateEnabled()) {\n          dRows[parseInt(rows[i].getAttribute(\"aria-rowindex\"))] = rows[i];\n        } else {\n          dRows.push(rows[i]);\n        }\n      }\n    }\n\n    return dRows;\n  };\n  /**\n   * Gets all the Grid's movable table data rows.\n   * @return {Element[]}\n   */\n\n\n  Grid.prototype.getMovableDataRows = function () {\n    return this.getAllMovableDataRows();\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getAllMovableDataRows = function (includeAdd) {\n    if (!this.isFrozenGrid()) {\n      return [];\n    }\n\n    var rows = [].slice.call(this.getContent().querySelector('.e-movablecontent').querySelector('tbody').children);\n\n    if (this.frozenRows) {\n      var freezeRows = [].slice.call(this.getHeaderContent().querySelector('.e-movableheader').querySelector('tbody').children);\n      rows = this.addMovableRows(freezeRows, rows);\n    }\n\n    var dataRows = this.generateDataRows(rows, includeAdd);\n    return dataRows;\n  };\n  /**\n   * Gets all the Grid's frozen table data rows.\n   * @return {Element[]}\n   */\n\n\n  Grid.prototype.getFrozenDataRows = function () {\n    return this.getAllFrozenDataRows();\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getAllFrozenDataRows = function (includeAdd) {\n    var rows = [].slice.call(this.getContent().querySelector('.e-frozencontent').querySelector('tbody').children);\n\n    if (this.frozenRows) {\n      var freezeRows = [].slice.call(this.getHeaderContent().querySelector('.e-frozenheader').querySelector('tbody').children);\n      rows = this.addMovableRows(freezeRows, rows);\n    }\n\n    var dataRows = this.generateDataRows(rows, includeAdd);\n    return dataRows;\n  };\n  /**\n   * Gets all the Grid's frozen right table data rows.\n   * @return {Element[]}\n   */\n\n\n  Grid.prototype.getFrozenRightDataRows = function () {\n    return this.getAllFrozenRightDataRows();\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getAllFrozenRightDataRows = function (includeAdd) {\n    if (this.getFrozenMode() !== 'Right' && this.getFrozenMode() !== 'Left-Right') {\n      return [];\n    }\n\n    var rows = [].slice.call(this.getContent().querySelector('.e-frozen-right-content').querySelector('tbody').children);\n\n    if (this.frozenRows) {\n      var freezeRows = [].slice.call(this.getHeaderContent().querySelector('.e-frozen-right-header').querySelector('tbody').children);\n      rows = this.addMovableRows(freezeRows, rows);\n    }\n\n    var dataRows = this.generateDataRows(rows, includeAdd);\n    return dataRows;\n  };\n  /**\n   * Updates particular cell value based on the given primary key value.\n   * > Primary key column must be specified using `columns.isPrimaryKey` property.\n   * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n   * @param {string } field - Specifies the field name which you want to update.\n   * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n   */\n\n\n  Grid.prototype.setCellValue = function (key, field, value) {\n    var cells = 'cells';\n    var rowData = 'data';\n    var rowIdx = 'index';\n    var rowuID = 'uid';\n    var fieldIdx;\n    var col;\n    var tr;\n    var mTr;\n    var pkName = this.getPrimaryKeyFieldNames()[0];\n    var cell = new CellRenderer(this, this.serviceLocator);\n    var selectedRow = {};\n    var movableSelectedRow = {};\n    var rowObjects = this.contentModule.getRows();\n    var movableRowObjects = this.contentModule.getMovableRows();\n    fieldIdx = this.getColumnIndexByField(field);\n\n    if (this.groupSettings.columns.length) {\n      fieldIdx = fieldIdx + this.groupSettings.columns.length;\n    }\n\n    if (this.childGrid || this.detailTemplate) {\n      fieldIdx++;\n    }\n\n    if (this.isRowDragable()) {\n      fieldIdx++;\n    }\n\n    col = this.getColumnByField(field);\n    selectedRow = rowObjects.filter(function (r) {\n      return getValue(pkName, r.data) === key;\n    })[0];\n    movableSelectedRow = movableRowObjects.filter(function (r) {\n      return getValue(pkName, r.data) === key;\n    })[0];\n    tr = !isNullOrUndefined(selectedRow) ? this.element.querySelector('[data-uid=' + selectedRow[rowuID] + ']') : null;\n    mTr = !isNullOrUndefined(movableSelectedRow) ? this.element.querySelector('[data-uid=' + movableSelectedRow[rowuID] + ']') : null;\n\n    if (!isNullOrUndefined(tr)) {\n      setValue(field, value, selectedRow[rowData]);\n      var td = !isNullOrUndefined(tr[cells][fieldIdx]) ? tr[cells][fieldIdx] : mTr[cells][fieldIdx - this.frozenColumns];\n\n      if (!isNullOrUndefined(td)) {\n        var sRow = selectedRow[cells][fieldIdx];\n        var mRow = void 0;\n\n        if (this.frozenColumns) {\n          mRow = movableSelectedRow[cells][fieldIdx - this.frozenColumns];\n        }\n\n        cell.refreshTD(td, !isNullOrUndefined(sRow) ? sRow : mRow, selectedRow[rowData], {\n          index: selectedRow[rowIdx]\n        });\n\n        if (this.aggregates.length > 0) {\n          this.notify(events.refreshFooterRenderer, {});\n\n          if (this.groupSettings.columns.length > 0) {\n            this.notify(events.groupAggregates, {});\n          }\n        }\n        /* tslint:disable:no-string-literal */\n\n\n        if (!isNullOrUndefined(movableSelectedRow) && !isNullOrUndefined(movableSelectedRow['changes'])) {\n          movableSelectedRow['changes'][field] = value;\n        }\n        /* tslint:disable:no-string-literal */\n\n\n        this.trigger(events.queryCellInfo, {\n          cell: td,\n          column: col,\n          data: selectedRow[rowData]\n        });\n      }\n    } else {\n      return;\n    }\n  };\n  /**\n   * Updates and refresh the particular row values based on the given primary key value.\n   * > Primary key column must be specified using `columns.isPrimaryKey` property.\n   *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n   *  @param {Object} rowData - To update new data for the particular row.\n   */\n\n\n  Grid.prototype.setRowData = function (key, rowData) {\n    var rwdata = 'data';\n    var rowuID = 'uid';\n    var rowObjects = this.contentModule.getRows();\n    var selectedRow;\n    var pkName = this.getPrimaryKeyFieldNames()[0];\n    var rowRenderer = new RowRenderer(this.serviceLocator, null, this);\n\n    if (this.groupSettings.columns.length > 0 && this.aggregates.length > 0) {\n      rowObjects = rowObjects.filter(function (row) {\n        return row.isDataRow;\n      });\n    }\n\n    selectedRow = rowObjects.filter(function (r) {\n      return getValue(pkName, r.data) === key;\n    })[0];\n\n    if (!isNullOrUndefined(selectedRow) && this.element.querySelectorAll('[data-uid=' + selectedRow[rowuID] + ']').length) {\n      selectedRow.changes = rowData;\n      refreshForeignData(selectedRow, this.getForeignKeyColumns(), selectedRow.changes);\n      rowRenderer.refresh(selectedRow, this.getColumns(), true);\n\n      if (this.aggregates.length > 0) {\n        this.notify(events.refreshFooterRenderer, {});\n\n        if (this.groupSettings.columns.length > 0) {\n          this.notify(events.groupAggregates, {});\n        }\n      }\n    } else {\n      return;\n    }\n  };\n  /**\n   * Gets a cell by row and column index.\n   * @param  {number} rowIndex - Specifies the row index.\n   * @param  {number} columnIndex - Specifies the column index.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n    var col = this.getColumnByIndex(columnIndex);\n    return getCellByColAndRowIndex(this, col, rowIndex, columnIndex);\n  };\n  /**\n   * Gets a movable table cell by row and column index.\n   * @param  {number} rowIndex - Specifies the row index.\n   * @param  {number} columnIndex - Specifies the column index.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n    if (this.frozenName === 'Left-Right' && columnIndex >= this.movableCount) {\n      return undefined;\n    }\n\n    var index = this.getFrozenColumns() || this.getFrozenLeftColumnsCount();\n    return this.getMovableDataRows()[rowIndex] && this.getMovableDataRows()[rowIndex].querySelectorAll('.e-rowcell')[columnIndex - index];\n  };\n  /**\n   * Gets a frozen right table cell by row and column index.\n   * @param  {number} rowIndex - Specifies the row index.\n   * @param  {number} columnIndex - Specifies the column index.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getFrozenRightCellFromIndex = function (rowIndex, columnIndex) {\n    var index = this.getFrozenLeftColumnsCount() + this.getMovableColumnsCount();\n    var rows = this.getFrozenRightDataRows();\n    return rows[rowIndex] && rows[rowIndex].querySelectorAll('.e-rowcell')[columnIndex - index];\n  };\n  /**\n   * Gets a column header by column index.\n   * @param  {number} index - Specifies the column index.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getColumnHeaderByIndex = function (index) {\n    return this.getHeaderTable().querySelectorAll('.e-headercell')[index];\n  };\n  /**\n   * Gets a movable column header by column index.\n   * @param  {number} index - Specifies the column index.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getMovableColumnHeaderByIndex = function (index) {\n    var left = this.getFrozenColumns() || this.getFrozenLeftColumnsCount();\n    return this.getMovableVirtualHeader().querySelectorAll('.e-headercell')[index - left];\n  };\n  /**\n   * Gets a frozen right column header by column index.\n   * @param  {number} index - Specifies the column index.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getFrozenRightColumnHeaderByIndex = function (index) {\n    var left = this.getFrozenLeftColumnsCount() + this.getMovableColumnsCount();\n    return this.getFrozenRightHeader().querySelectorAll('.e-headercell')[index - left];\n  };\n  /**\n   * Gets a frozen left column header by column index.\n   * @param  {number} index - Specifies the column index.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getFrozenLeftColumnHeaderByIndex = function (index) {\n    return this.getFrozenVirtualHeader().querySelectorAll('.e-headercell')[index];\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getRowObjectFromUID = function (uid, isMovable, isFrozenRight) {\n    var rows = this.contentModule.getRows();\n    var row = this.rowObject(rows, uid);\n\n    if (this.isFrozenGrid()) {\n      if (!row || isMovable || isFrozenRight) {\n        row = this.rowObject(this.contentModule.getMovableRows(), uid);\n\n        if (!row && this.getFrozenMode() === 'Left-Right' || isFrozenRight) {\n          row = this.rowObject(this.contentModule.getFrozenRightRows(), uid);\n        }\n\n        return row;\n      }\n    }\n\n    if (isNullOrUndefined(row) && this.enableVirtualization && this.groupSettings.columns.length > 0) {\n      row = this.rowObject(this.vRows, uid);\n      return row;\n    }\n\n    return row;\n  };\n\n  Grid.prototype.rowObject = function (rows, uid) {\n    for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n      var row = rows_1[_i];\n\n      if (row.uid === uid) {\n        return row;\n      }\n    }\n\n    return null;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getRowsObject = function () {\n    return this.contentModule.getRows();\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getMovableRowsObject = function () {\n    var rows = [];\n\n    if (this.isFrozenGrid()) {\n      rows = this.contentModule.getMovableRows();\n    }\n\n    return rows;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getFrozenRightRowsObject = function () {\n    var rows = [];\n\n    if (this.getFrozenMode() === 'Right' || this.getFrozenMode() === 'Left-Right') {\n      rows = this.contentModule.getFrozenRightRows();\n    }\n\n    return rows;\n  };\n  /**\n   * Gets a column header by column name.\n   * @param  {string} field - Specifies the column name.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getColumnHeaderByField = function (field) {\n    var column = this.getColumnByField(field);\n    return column ? this.getColumnHeaderByUid(column.uid) : undefined;\n  };\n  /**\n   * Gets a column header by UID.\n   * @param  {string} field - Specifies the column uid.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getColumnHeaderByUid = function (uid) {\n    var element = this.getHeaderContent().querySelector('[e-mappinguid=' + uid + ']');\n    return element ? element.parentElement : undefined;\n  };\n  /**\n   * @hidden\n   * @blazorType GridColumn\n   */\n\n\n  Grid.prototype.getColumnByIndex = function (index) {\n    var column;\n    this.getColumns().some(function (col, i) {\n      column = col;\n      return i === index;\n    });\n    return column;\n  };\n  /**\n   * Gets a Column by column name.\n   * @param  {string} field - Specifies the column name.\n   * @return {Column}\n   * @blazorType GridColumn\n   */\n\n\n  Grid.prototype.getColumnByField = function (field) {\n    return iterateArrayOrObject(this.getColumns(), function (item, index) {\n      if (item.field === field) {\n        return item;\n      }\n\n      return undefined;\n    })[0];\n  };\n  /**\n   * Gets a column index by column name.\n   * @param  {string} field - Specifies the column name.\n   * @return {number}\n   */\n\n\n  Grid.prototype.getColumnIndexByField = function (field) {\n    var cols = this.getColumns();\n\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[i].field === field) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n  /**\n   * Gets a column by UID.\n   * @param  {string} uid - Specifies the column UID.\n   * @return {Column}\n   * @blazorType GridColumn\n   */\n\n\n  Grid.prototype.getColumnByUid = function (uid) {\n    return iterateArrayOrObject(this.getColumns().concat(this.getStackedColumns(this.columns)), function (item, index) {\n      if (item.uid === uid) {\n        return item;\n      }\n\n      return undefined;\n    })[0];\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getStackedColumns = function (columns, stackedColumn) {\n    if (stackedColumn === void 0) {\n      stackedColumn = [];\n    }\n\n    for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n      var column = columns_1[_i];\n\n      if (column.columns) {\n        stackedColumn.push(column);\n        this.getStackedColumns(column.columns, stackedColumn);\n      }\n    }\n\n    return stackedColumn;\n  };\n  /**\n   * Gets a column index by UID.\n   * @param  {string} uid - Specifies the column UID.\n   * @return {number}\n   */\n\n\n  Grid.prototype.getColumnIndexByUid = function (uid) {\n    var index = iterateArrayOrObject(this.getColumns(), function (item, index) {\n      if (item.uid === uid) {\n        return index;\n      }\n\n      return undefined;\n    })[0];\n    return !isNullOrUndefined(index) ? index : -1;\n  };\n  /**\n   * Gets UID by column name.\n   * @param  {string} field - Specifies the column name.\n   * @return {string}\n   */\n\n\n  Grid.prototype.getUidByColumnField = function (field) {\n    return iterateArrayOrObject(this.getColumns(), function (item, index) {\n      if (item.field === field) {\n        return item.uid;\n      }\n\n      return undefined;\n    })[0];\n  };\n  /**\n   * Gets TH index by column uid value.\n   * @private\n   * @param  {string} uid - Specifies the column uid.\n   * @return {number}\n   */\n\n\n  Grid.prototype.getNormalizedColumnIndex = function (uid) {\n    var index = this.getColumnIndexByUid(uid);\n    return index + this.getIndentCount();\n  };\n  /**\n  * Gets indent cell count.\n  * @private\n  * @return {number}\n  */\n\n\n  Grid.prototype.getIndentCount = function () {\n    var index = 0;\n\n    if (this.allowGrouping) {\n      index += this.groupSettings.columns.length;\n    }\n\n    if (this.isDetail()) {\n      index++;\n    }\n\n    if (this.isRowDragable() && isNullOrUndefined(this.rowDropSettings.targetID)) {\n      index++;\n    }\n    /**\n     * TODO: index normalization based on the stacked header, grouping and detailTemplate\n     * and frozen should be handled here\n     */\n\n\n    return index;\n  };\n  /**\n   * Gets the collection of column fields.\n   * @return {string[]}\n   */\n\n\n  Grid.prototype.getColumnFieldNames = function () {\n    var columnNames = [];\n    var column;\n\n    for (var i = 0, len = this.getColumns().length; i < len; i++) {\n      column = this.getColumns()[i];\n\n      if (column.visible) {\n        columnNames.push(column.field);\n      }\n    }\n\n    return columnNames;\n  };\n  /**\n   * Gets a compiled row template.\n   * @return {Function}\n   * @private\n   */\n\n\n  Grid.prototype.getRowTemplate = function () {\n    return this.rowTemplateFn;\n  };\n  /**\n   * Gets a compiled detail row template.\n   * @private\n   * @return {Function}\n   */\n\n\n  Grid.prototype.getDetailTemplate = function () {\n    return this.detailTemplateFn;\n  };\n  /**\n   * Gets a compiled detail row template.\n   * @private\n   * @return {Function}\n   */\n\n\n  Grid.prototype.getEditTemplate = function () {\n    return this.editTemplateFn;\n  };\n  /**\n   * Gets a compiled dialog edit header template.\n   * @private\n   * @return {Function}\n   */\n\n\n  Grid.prototype.getEditHeaderTemplate = function () {\n    return this.editHeaderTemplateFn;\n  };\n  /**\n   * Gets a compiled dialog edit footer template.\n   * @private\n   * @return {Function}\n   */\n\n\n  Grid.prototype.getEditFooterTemplate = function () {\n    return this.editFooterTemplateFn;\n  };\n  /**\n   * Get the names of the primary key columns of the Grid.\n   * @return {string[]}\n   */\n\n\n  Grid.prototype.getPrimaryKeyFieldNames = function () {\n    var keys = [];\n\n    for (var k = 0; k < this.columnModel.length; k++) {\n      if (this.columnModel[k].isPrimaryKey) {\n        keys.push(this.columnModel[k].field);\n      }\n    }\n\n    return keys;\n  };\n  /**\n   * Refreshes the Grid header and content.\n   */\n\n\n  Grid.prototype.refresh = function () {\n    this.headerModule.refreshUI();\n    this.updateStackedFilter();\n    this.renderModule.refresh();\n  };\n  /**\n   * Refreshes the Grid header.\n   */\n\n\n  Grid.prototype.refreshHeader = function () {\n    this.headerModule.refreshUI();\n  };\n  /**\n   * Gets the collection of selected rows.\n   * @return {Element[]}\n   */\n\n\n  Grid.prototype.getSelectedRows = function () {\n    return this.selectionModule ? this.selectionModule.selectedRecords : [];\n  };\n  /**\n   * Gets the collection of selected row indexes.\n   * @return {number[]}\n   */\n\n\n  Grid.prototype.getSelectedRowIndexes = function () {\n    return this.selectionModule ? this.selectionModule.selectedRowIndexes : [];\n  };\n  /**\n   * Gets the collection of selected row and cell indexes.\n   * @return {number[]}\n   */\n\n\n  Grid.prototype.getSelectedRowCellIndexes = function () {\n    return this.selectionModule ? this.selectionModule.selectedRowCellIndexes : [];\n  };\n  /**\n   * Gets the collection of selected records.\n   * @return {Object[]}\n   * @isGenericType true\n   */\n\n\n  Grid.prototype.getSelectedRecords = function () {\n    return this.selectionModule ? this.selectionModule.getSelectedRecords() : [];\n  };\n  /**\n   * Gets the collection of selected columns uid.\n   * @return {string[]}\n   * @isGenericType true\n   */\n\n\n  Grid.prototype.getSelectedColumnsUid = function () {\n    var _this = this;\n\n    var uid = [];\n\n    if (this.selectionModule) {\n      this.selectionModule.selectedColumnsIndexes.filter(function (i) {\n        return uid.push(_this.getColumns()[i].uid);\n      });\n    }\n\n    return uid;\n  };\n  /**\n   * Gets the data module.\n   * @return {Data}\n   */\n\n\n  Grid.prototype.getDataModule = function () {\n    return this.renderModule.data;\n  };\n  /**\n   * Shows a column by its column name.\n   * @param  {string|string[]} keys - Defines a single or collection of column names.\n   * @param  {string} showBy - Defines the column key either as field name or header text.\n   * @return {void}\n   */\n\n\n  Grid.prototype.showColumns = function (keys, showBy) {\n    showBy = showBy ? showBy : 'headerText';\n    this.showHider.show(keys, showBy);\n  };\n  /**\n   * Hides a column by column name.\n   * @param  {string|string[]} keys - Defines a single or collection of column names.\n   * @param  {string} hideBy - Defines the column key either as field name or header text.\n   * @return {void}\n   */\n\n\n  Grid.prototype.hideColumns = function (keys, hideBy) {\n    hideBy = hideBy ? hideBy : 'headerText';\n    this.showHider.hide(keys, hideBy);\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getFrozenColumns = function () {\n    return this.frozenColumns + this.getFrozenCount(this.columns, 0, 0);\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getFrozenRightColumnsCount = function () {\n    return this.frozenRightCount;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getFrozenLeftColumnsCount = function () {\n    return this.frozenLeftCount;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getMovableColumnsCount = function () {\n    return this.movableCount;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.setFrozenCount = function () {\n    this.frozenLeftCount = this.frozenRightCount = this.movableCount = 0;\n    this.visibleFrozenLeft = this.visibleFrozenRight = this.visibleMovable = 0;\n    this.frozenLeftColumns = [];\n    this.frozenRightColumns = [];\n    this.movableColumns = [];\n    this.splitFrozenCount(this.columns);\n\n    if (this.frozenColumns && (this.frozenLeftCount || this.frozenRightCount)) {\n      this.setProperties({\n        frozenColumns: 0\n      }, true);\n    }\n\n    this.setTablesCount();\n\n    if (this.frozenLeftCount && !this.frozenRightCount) {\n      this.frozenName = 'Left';\n    } else if (this.frozenRightCount && !this.frozenLeftCount) {\n      this.frozenName = 'Right';\n    } else if (this.frozenLeftCount && this.frozenRightCount) {\n      this.frozenName = 'Left-Right';\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getVisibleFrozenLeftCount = function () {\n    return this.visibleFrozenLeft;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getVisibleFrozenRightCount = function () {\n    return this.visibleFrozenRight;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getVisibleMovableCount = function () {\n    return this.visibleMovable;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getFrozenRightColumns = function () {\n    return this.frozenRightColumns;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getFrozenLeftColumns = function () {\n    return this.frozenLeftColumns;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getMovableColumns = function () {\n    return this.movableColumns;\n  };\n\n  Grid.prototype.splitFrozenCount = function (columns) {\n    for (var i = 0; i < columns.length; i++) {\n      if (columns[i].columns) {\n        this.splitFrozenCount(columns[i].columns);\n      } else {\n        if (columns[i].freeze === 'Right') {\n          if (columns[i].visible !== false) {\n            this.visibleFrozenRight++;\n          }\n\n          ;\n          this.frozenRightColumns.push(columns[i]);\n          this.frozenRightCount++;\n        } else if (columns[i].freeze === 'Left') {\n          if (columns[i].visible !== false) {\n            this.visibleFrozenLeft++;\n          }\n\n          ;\n          this.frozenLeftColumns.push(columns[i]);\n          this.frozenLeftCount++;\n        } else {\n          if (columns[i].visible !== false) {\n            this.visibleMovable++;\n          }\n\n          ;\n          this.movableColumns.push(columns[i]);\n          this.movableCount++;\n        }\n      }\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getVisibleFrozenColumns = function () {\n    return this.getVisibleFrozenColumnsCount() + this.getVisibleFrozenCount(this.columns, 0);\n  };\n  /**\n   * Get the current Filter operator and field.\n   * @return {Object}\n   */\n\n\n  Grid.prototype.getFilterUIInfo = function () {\n    return this.filterModule ? this.filterModule.getFilterUIInfo() : {};\n  };\n\n  Grid.prototype.getVisibleFrozenColumnsCount = function () {\n    var visibleFrozenColumns = 0;\n    var columns = this.columnModel;\n\n    for (var i = 0; i < this.frozenColumns; i++) {\n      if (columns[i].visible) {\n        visibleFrozenColumns++;\n      }\n    }\n\n    if (this.frozenLeftCount || this.frozenRightCount) {\n      for (var i = 0; i < columns.length; i++) {\n        if (columns[i].visible && (columns[i].freeze === 'Left' || columns[i].freeze === 'Right')) {\n          visibleFrozenColumns++;\n        }\n      }\n    }\n\n    return visibleFrozenColumns;\n  };\n\n  Grid.prototype.getVisibleFrozenCount = function (cols, cnt) {\n    if (!this.frozenLeftCount && !this.frozenRightCount) {\n      for (var i = 0, len = cols.length; i < len; i++) {\n        if (cols[i].columns) {\n          cnt = this.getVisibleFrozenCount(cols[i].columns, cnt);\n        } else {\n          if (cols[i].isFrozen && cols[i].visible) {\n            cnt++;\n          }\n        }\n      }\n    }\n\n    return cnt;\n  };\n\n  Grid.prototype.getFrozenCount = function (cols, cnt, index) {\n    for (var i = 0, len = cols.length; i < len; i++) {\n      if (cols[i].columns) {\n        cnt = this.getFrozenCount(cols[i].columns, cnt, index);\n      } else {\n        if (cols[i].isFrozen && index > this.frozenColumns - 1) {\n          cnt++;\n        }\n\n        index++;\n      }\n    }\n\n    return cnt;\n  };\n  /**\n   * Navigates to the specified target page.\n   * @param  {number} pageNo - Defines the page number to navigate.\n   * @return {void}\n   */\n\n\n  Grid.prototype.goToPage = function (pageNo) {\n    if (this.pagerModule) {\n      this.pagerModule.goToPage(pageNo);\n    }\n  };\n  /**\n   * Defines the text of external message.\n   * @param  {string} message - Defines the message to update.\n   * @return {void}\n   */\n\n\n  Grid.prototype.updateExternalMessage = function (message) {\n    if (this.pagerModule) {\n      this.pagerModule.updateExternalMessage(message);\n    }\n  };\n  /**\n   * Sorts a column with the given options.\n   * @param {string} columnName - Defines the column name to be sorted.\n   * @param {SortDirection} direction - Defines the direction of sorting field.\n   * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n   * @return {void}\n   */\n\n\n  Grid.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n    if (this.sortModule) {\n      this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    }\n  };\n  /**\n   * Clears all the sorted columns of the Grid.\n   * @return {void}\n   */\n\n\n  Grid.prototype.clearSorting = function () {\n    if (this.sortModule) {\n      this.sortModule.clearSorting();\n    }\n  };\n  /**\n   * Remove sorted column by field name.\n   * @param {string} field - Defines the column field name to remove sort.\n   * @return {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.removeSortColumn = function (field) {\n    if (this.sortModule) {\n      this.sortModule.removeSortColumn(field);\n    }\n  };\n  /**\n   * Filters grid row by column name with the given options.\n   * @param  {string} fieldName - Defines the field name of the column.\n   * @param  {string} filterOperator - Defines the operator to filter records.\n   * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n   * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n   * @param  {boolean} matchCase - If match case is set to true, the grid filters the records with exact match. if false, it filters case\n   * insensitive records (uppercase and lowercase letters treated the same).\n   * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n   * then filter ignores the diacritic characters or accents while filtering.\n   * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n   * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n   * @return {void}\n   */\n\n\n  Grid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n    if (this.filterModule) {\n      this.filterModule.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    }\n  };\n  /**\n   * Clears all the filtered rows of the Grid.\n   * @return {void}\n   */\n\n\n  Grid.prototype.clearFiltering = function (fields) {\n    if (this.filterModule) {\n      this.filterModule.clearFiltering(fields);\n    }\n  };\n  /**\n   * Removes filtered column by field name.\n   * @param  {string} field - Defines column field name to remove filter.\n   * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n   * @return {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n    if (this.filterModule) {\n      this.filterModule.removeFilteredColsByField(field, isClearFilterBar);\n    }\n  };\n  /**\n   * Selects a row by given index.\n   * @param  {number} index - Defines the row index.\n   * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n   * @return {void}\n   */\n\n\n  Grid.prototype.selectRow = function (index, isToggle) {\n    if (this.selectionModule) {\n      this.selectionModule.selectRow(index, isToggle);\n    }\n  };\n  /**\n   * Selects a collection of rows by indexes.\n   * @param  {number[]} rowIndexes - Specifies the row indexes.\n   * @return {void}\n   */\n\n\n  Grid.prototype.selectRows = function (rowIndexes) {\n    if (this.selectionModule) {\n      this.selectionModule.selectRows(rowIndexes);\n    }\n  };\n  /**\n   * Deselects the current selected rows and cells.\n   * @return {void}\n   */\n\n\n  Grid.prototype.clearSelection = function () {\n    if (this.selectionModule) {\n      this.selectionModule.clearSelection();\n    }\n  };\n  /**\n   * Selects a cell by the given index.\n   * @param  {IIndex} cellIndex - Defines the row and column indexes.\n   * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n   * @return {void}\n   */\n\n\n  Grid.prototype.selectCell = function (cellIndex, isToggle) {\n    if (this.selectionModule) {\n      this.selectionModule.selectCell(cellIndex, isToggle);\n    }\n  };\n  /**\n   * Selects a range of cells from start and end indexes.\n   * @param  {IIndex} startIndex - Specifies the row and column's start index.\n   * @param  {IIndex} endIndex - Specifies the row and column's end index.\n   * @return {void}\n   */\n\n\n  Grid.prototype.selectCellsByRange = function (startIndex, endIndex) {\n    this.selectionModule.selectCellsByRange(startIndex, endIndex);\n  };\n  /**\n   * Searches Grid records using the given key.\n   * You can customize the default search option by using the\n   * [`searchSettings`](./#searchsettings/).\n   * @param  {string} searchString - Defines the key.\n   * @return {void}\n   */\n\n\n  Grid.prototype.search = function (searchString) {\n    if (this.searchModule) {\n      this.searchModule.search(searchString);\n    }\n  };\n  /**\n   * By default, prints all the pages of the Grid and hides the pager.\n   * > You can customize print options using the\n   * [`printMode`](./#printmode).\n   * @return {void}\n   */\n\n\n  Grid.prototype.print = function () {\n    if (this.printModule) {\n      this.printModule.print();\n    }\n  };\n  /**\n   * Delete a record with Given options. If fieldname and data is not given then grid will delete the selected record.\n   * > `editSettings.allowDeleting` should be true.\n   * @param {string} fieldname - Defines the primary key field, 'Name of the column'.\n   * @param {Object} data - Defines the JSON data of the record to be deleted.\n   */\n\n\n  Grid.prototype.deleteRecord = function (fieldname, data) {\n    if (this.editModule) {\n      this.editModule.deleteRecord(fieldname, data);\n    }\n  };\n  /**\n   * Starts edit the selected row. At least one row must be selected before invoking this method.\n   * `editSettings.allowEditing` should be true.\n   * {% codeBlock src='grid/startEdit/index.md' %}{% endcodeBlock %}\n   * @return {void}\n   */\n\n\n  Grid.prototype.startEdit = function () {\n    if (this.editModule) {\n      this.editModule.startEdit();\n    }\n  };\n  /**\n   * If Grid is in editable state, you can save a record by invoking endEdit.\n   */\n\n\n  Grid.prototype.endEdit = function () {\n    if (this.editModule) {\n      this.editModule.endEdit();\n    }\n  };\n  /**\n   * Cancels edited state.\n   */\n\n\n  Grid.prototype.closeEdit = function () {\n    if (this.editModule) {\n      this.editModule.closeEdit();\n    }\n  };\n  /**\n   * Adds a new record to the Grid. Without passing parameters, it adds empty rows.\n   * > `editSettings.allowEditing` should be true.\n   * @param {Object} data - Defines the new add record data.\n   * @param {number} index - Defines the row index to be added\n   */\n\n\n  Grid.prototype.addRecord = function (data, index) {\n    if (this.editModule) {\n      this.editModule.addRecord(data, index);\n    }\n  };\n  /**\n   * Delete any visible row by TR element.\n   * @param {HTMLTableRowElement} tr - Defines the table row element.\n   */\n\n\n  Grid.prototype.deleteRow = function (tr) {\n    if (this.editModule) {\n      this.editModule.deleteRow(tr);\n    }\n  };\n  /**\n   * Changes a particular cell into edited state based on the row index and field name provided in the `batch` mode.\n   * @param {number} index - Defines row index to edit a particular cell.\n   * @param {string} field - Defines the field name of the column to perform batch edit.\n   */\n\n\n  Grid.prototype.editCell = function (index, field) {\n    if (this.editModule) {\n      this.editModule.editCell(index, field);\n    }\n  };\n  /**\n   * Saves the cell that is currently edited. It does not save the value to the DataSource.\n   * {% codeBlock src='grid/saveCell/index.md' %}{% endcodeBlock %}\n   */\n\n\n  Grid.prototype.saveCell = function () {\n    if (this.editModule) {\n      this.editModule.saveCell();\n    }\n  };\n  /**\n   * To update the specified cell by given value without changing into edited state.\n   * @param {number} rowIndex Defines the row index.\n   * @param {string} field Defines the column field.\n   * @param {string | number | boolean | Date} value - Defines the value to be changed.\n   */\n\n\n  Grid.prototype.updateCell = function (rowIndex, field, value) {\n    if (this.editModule) {\n      this.editModule.updateCell(rowIndex, field, value);\n    }\n  };\n  /**\n   * To update the specified row by given values without changing into edited state.\n   * @param {number} index Defines the row index.\n   * @param {Object} data Defines the data object to be updated.\n   * {% codeBlock src='grid/updateRow/index.md' %}{% endcodeBlock %}\n   */\n\n\n  Grid.prototype.updateRow = function (index, data) {\n    if (this.editModule) {\n      this.editModule.updateRow(index, data);\n    }\n  };\n  /**\n   * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n   * @return {Object}\n   */\n\n\n  Grid.prototype.getBatchChanges = function () {\n    if (this.editModule) {\n      return this.editModule.getBatchChanges();\n    }\n\n    return {};\n  };\n  /**\n   * Enables or disables ToolBar items.\n   * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n   * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n   * @return {void}\n   */\n\n\n  Grid.prototype.enableToolbarItems = function (items, isEnable) {\n    if (this.toolbarModule) {\n      this.toolbarModule.enableItems(items, isEnable);\n    }\n  };\n  /**\n   * Copy the selected rows or cells data into clipboard.\n   * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n   */\n\n\n  Grid.prototype.copy = function (withHeader) {\n    if (this.clipboardModule) {\n      this.clipboardModule.copy(withHeader);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.recalcIndentWidth = function () {\n    var _this = this;\n\n    if (!this.getHeaderTable().querySelector('.e-emptycell')) {\n      return;\n    }\n\n    if (!this.groupSettings.columns.length && !this.isDetail() && !this.isRowDragable() || this.getHeaderTable().querySelector('.e-emptycell').getAttribute('indentRefreshed') || !this.getContentTable()) {\n      return;\n    }\n\n    var indentWidth = this.getHeaderTable().querySelector('.e-emptycell').parentElement.offsetWidth;\n    var headerCol = [].slice.call(this.getHeaderTable().querySelector('colgroup').childNodes);\n    var contentCol = [].slice.call(this.getContentTable().querySelector('colgroup').childNodes);\n    var perPixel = indentWidth / 30;\n    var i = this.getFrozenMode() === 'Right' ? this.frozenRightCount : 0;\n    var parentOffset = this.element.offsetWidth;\n\n    var applyWidth = function (index, width) {\n      if (ispercentageWidth(_this)) {\n        var newWidth = (width / parentOffset * 100).toFixed(1) + '%';\n        headerCol[index].style.width = newWidth;\n        contentCol[index].style.width = newWidth;\n      } else {\n        headerCol[index].style.width = width + 'px';\n        contentCol[index].style.width = width + 'px';\n      }\n\n      _this.notify(events.columnWidthChanged, {\n        index: index,\n        width: width\n      });\n    };\n\n    if (perPixel >= 1) {\n      indentWidth = 30 / perPixel;\n    }\n\n    if (this.enableColumnVirtualization || this.isAutoGen) {\n      indentWidth = 30;\n    }\n\n    while (i < this.groupSettings.columns.length) {\n      applyWidth(i, indentWidth);\n      i++;\n    }\n\n    if (this.isDetail()) {\n      applyWidth(i, indentWidth);\n      i++;\n    }\n\n    if (this.isRowDragable()) {\n      applyWidth(i, indentWidth);\n    }\n\n    this.isAutoGen = false;\n    this.getHeaderTable().querySelector('.e-emptycell').setAttribute('indentRefreshed', 'true');\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.resetIndentWidth = function () {\n    if (ispercentageWidth(this)) {\n      this.getHeaderTable().querySelector('.e-emptycell').removeAttribute('indentRefreshed');\n      this.widthService.setWidthToColumns();\n      this.recalcIndentWidth();\n    }\n\n    if ((this.width === 'auto' || typeof this.width === 'string' && this.width.indexOf('%') !== -1) && this.getColumns().filter(function (col) {\n      return (!col.width || col.width === 'auto') && col.minWidth;\n    }).length > 0) {\n      var tgridWidth = this.widthService.getTableWidth(this.getColumns());\n      this.widthService.setMinwidthBycalculation(tgridWidth);\n    }\n\n    if (this.isFrozenGrid() && this.widthService) {\n      this.widthService.refreshFrozenScrollbar();\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.isRowDragable = function () {\n    return this.allowRowDragAndDrop && !this.rowDropSettings.targetID && !this.enableVirtualization;\n  };\n  /**\n   * Changes the Grid column positions by field names.\n   * @param  {string} fromFName - Defines the origin field name.\n   * @param  {string} toFName - Defines the destination field name.\n   * @return {void}\n   */\n\n\n  Grid.prototype.reorderColumns = function (fromFName, toFName) {\n    if (this.reorderModule) {\n      this.reorderModule.reorderColumns(fromFName, toFName);\n    }\n  };\n  /**\n   * Changes the Grid column positions by field index. If you invoke reorderColumnByIndex multiple times,\n   * then you won't get the same results every time.\n   * @param  {number} fromIndex - Defines the origin field index.\n   * @param  {number} toIndex - Defines the destination field index.\n   * @return {void}\n   */\n\n\n  Grid.prototype.reorderColumnByIndex = function (fromIndex, toIndex) {\n    if (this.reorderModule) {\n      this.reorderModule.reorderColumnByIndex(fromIndex, toIndex);\n    }\n  };\n  /**\n   * Changes the Grid column positions by field index. If you invoke reorderColumnByTargetIndex multiple times,\n   * then you will get the same results every time.\n   * @param  {string} fieldName - Defines the field name.\n   * @param  {number} toIndex - Defines the destination field index.\n   * @return {void}\n   */\n\n\n  Grid.prototype.reorderColumnByTargetIndex = function (fieldName, toIndex) {\n    if (this.reorderModule) {\n      this.reorderModule.reorderColumnByTargetIndex(fieldName, toIndex);\n    }\n  };\n  /**\n   * Changes the Grid Row position with given indexes.\n   * @param  {number} fromIndexes - Defines the origin Indexes.\n   * @param  {number} toIndex - Defines the destination Index.\n   * @return {void}\n   */\n\n\n  Grid.prototype.reorderRows = function (fromIndexes, toIndex) {\n    if (this.rowDragAndDropModule) {\n      this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.refreshDataSource = function (e, args) {\n    this.notify('refreshdataSource', e);\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.disableRowDD = function (enable) {\n    var headerTable = this.getHeaderTable();\n    var contentTable = this.getContentTable();\n    var headerRows = headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell');\n    var rows = this.getRows();\n    var disValue = enable ? 'none' : '';\n    setStyleAttribute(headerTable.querySelector('colgroup').childNodes[0], {\n      'display': disValue\n    });\n    setStyleAttribute(contentTable.querySelector('colgroup').childNodes[0], {\n      'display': disValue\n    });\n\n    for (var i = 0; i < this.getRows().length; i++) {\n      var ele = rows[i].firstElementChild;\n      enable ? addClass([ele], 'e-hide') : removeClass([ele], ['e-hide']);\n    }\n\n    for (var j = 0; j < headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell').length; j++) {\n      var ele = headerRows[j];\n      enable ? addClass([ele], 'e-hide') : removeClass([ele], ['e-hide']);\n    }\n  };\n  /**\n   * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n   * > * This method ignores the hidden columns.\n   * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n   * @param  {string |string[]} fieldNames - Defines the column names.\n   * @return {void}\n   *\n   *\n   * ```typescript\n   * <div id=\"Grid\"></div>\n   * <script>\n   * let gridObj: Grid = new Grid({\n   *     dataSource: employeeData,\n   *     columns: [\n   *         { field: 'OrderID', headerText: 'Order ID', width:100 },\n   *         { field: 'EmployeeID', headerText: 'Employee ID' }],\n   *     dataBound: () => gridObj.autoFitColumns('EmployeeID')\n   * });\n   * gridObj.appendTo('#Grid');\n   * </script>\n   * ```\n   *\n   */\n\n\n  Grid.prototype.autoFitColumns = function (fieldNames) {\n    if (this.resizeModule) {\n      this.resizeModule.autoFitColumns(fieldNames);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.createColumnchooser = function (x, y, target) {\n    if (this.columnChooserModule) {\n      this.columnChooserModule.renderColumnChooser(x, y, target);\n    }\n  };\n\n  Grid.prototype.initializeServices = function () {\n    this.serviceLocator.register('widthService', this.widthService = new ColumnWidthService(this));\n    this.serviceLocator.register('cellRendererFactory', new CellRendererFactory());\n    this.serviceLocator.register('rendererFactory', new RendererFactory());\n    this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    this.serviceLocator.register('valueFormatter', this.valueFormatterService = new ValueFormatter(this.locale));\n    this.serviceLocator.register('showHideService', this.showHider = new ShowHide(this));\n    this.serviceLocator.register('ariaService', this.ariaService = new AriaService());\n    this.serviceLocator.register('focus', this.focusModule = new FocusStrategy(this));\n  };\n\n  Grid.prototype.processModel = function () {\n    var gCols = this.groupSettings.columns;\n    var sCols = this.sortSettings.columns;\n    var flag;\n    var j;\n\n    if (this.allowGrouping) {\n      var _loop_1 = function (i, len) {\n        j = 0;\n\n        for (var sLen = sCols.length; j < sLen; j++) {\n          if (sCols[j].field === gCols[i]) {\n            flag = true;\n            break;\n          }\n        }\n\n        if (!flag) {\n          sCols.push({\n            field: gCols[i],\n            direction: 'Ascending',\n            isFromGroup: true\n          });\n        } else {\n          if (this_1.allowSorting) {\n            this_1.sortedColumns.push(sCols[j].field);\n          } else {\n            sCols[j].direction = 'Ascending';\n          }\n        }\n\n        if (!this_1.groupSettings.showGroupedColumn) {\n          var column = this_1.enableColumnVirtualization ? this_1.columns.filter(function (c) {\n            return c.field === gCols[i];\n          })[0] : this_1.getColumnByField(gCols[i]);\n\n          if (column) {\n            column.visible = false;\n          } else {\n            this_1.log('initial_action', {\n              moduleName: 'group',\n              columnName: gCols[i]\n            });\n          }\n        }\n      };\n\n      var this_1 = this;\n\n      for (var i = 0, len = gCols.length; i < len; i++) {\n        _loop_1(i, len);\n      }\n    }\n\n    if (!gCols.length) {\n      for (var i = 0; i < sCols.length; i++) {\n        this.sortedColumns.push(sCols[i].field);\n      }\n    }\n\n    this.rowTemplateFn = templateCompiler(this.rowTemplate);\n    this.detailTemplateFn = templateCompiler(this.detailTemplate);\n    this.editTemplateFn = templateCompiler(this.editSettings.template);\n    this.editHeaderTemplateFn = templateCompiler(this.editSettings.headerTemplate);\n    this.editFooterTemplateFn = templateCompiler(this.editSettings.footerTemplate);\n\n    if (!isNullOrUndefined(this.parentDetails)) {\n      var value = isNullOrUndefined(this.parentDetails.parentKeyFieldValue) ? 'undefined' : this.parentDetails.parentKeyFieldValue;\n      this.query.where(this.queryString, 'equal', value, true);\n    }\n\n    this.initForeignColumn();\n  };\n\n  Grid.prototype.initForeignColumn = function () {\n    if (this.isForeignKeyEnabled(this.getColumns())) {\n      this.notify(events.initForeignKeyColumn, this.getForeignKeyColumns());\n    }\n  };\n\n  Grid.prototype.gridRender = function () {\n    this.updateRTL();\n\n    if (this.enableHover) {\n      this.element.classList.add('e-gridhover');\n    }\n\n    if (Browser.isDevice) {\n      this.element.classList.add('e-device');\n    }\n\n    if (this.rowHeight) {\n      this.element.classList.add('e-grid-min-height');\n    }\n\n    classList(this.element, ['e-responsive', 'e-default'], []);\n    var rendererFactory = this.serviceLocator.getService('rendererFactory');\n    this.headerModule = rendererFactory.getRenderer(RenderType.Header);\n    this.contentModule = rendererFactory.getRenderer(RenderType.Content);\n    this.printModule = new Print(this, this.scrollModule);\n    this.clipboardModule = new Clipboard(this);\n    this.renderModule.render();\n    this.eventInitializer();\n    this.createGridPopUpElement();\n    this.widthService.setWidthToColumns();\n    this.updateGridLines();\n    this.applyTextWrap();\n    this.createTooltip(); //for clip mode ellipsis\n\n    this.enableBoxSelection();\n  };\n\n  Grid.prototype.dataReady = function () {\n    this.scrollModule.setWidth();\n    this.scrollModule.setHeight();\n\n    if (this.height !== 'auto') {\n      this.scrollModule.setPadding();\n    }\n  };\n\n  Grid.prototype.updateRTL = function () {\n    if (this.enableRtl) {\n      this.element.classList.add('e-rtl');\n    } else {\n      this.element.classList.remove('e-rtl');\n    }\n  };\n\n  Grid.prototype.createGridPopUpElement = function () {\n    var popup = this.createElement('div', {\n      className: 'e-gridpopup',\n      styles: 'display:none;'\n    });\n    var content = this.createElement('div', {\n      className: 'e-content',\n      attrs: {\n        tabIndex: '-1'\n      }\n    });\n    append([content, this.createElement('div', {\n      className: 'e-uptail e-tail'\n    })], popup);\n    content.appendChild(this.createElement('span'));\n    append([content, this.createElement('div', {\n      className: 'e-downtail e-tail'\n    })], popup);\n    this.element.appendChild(popup);\n  };\n\n  Grid.prototype.updateGridLines = function () {\n    classList(this.element, [], ['e-verticallines', 'e-horizontallines', 'e-hidelines', 'e-bothlines']);\n\n    switch (this.gridLines) {\n      case 'Horizontal':\n        this.element.classList.add('e-horizontallines');\n        break;\n\n      case 'Vertical':\n        this.element.classList.add('e-verticallines');\n        break;\n\n      case 'None':\n        this.element.classList.add('e-hidelines');\n        break;\n\n      case 'Both':\n        this.element.classList.add('e-bothlines');\n        break;\n    }\n\n    this.updateResizeLines();\n  };\n\n  Grid.prototype.updateResizeLines = function () {\n    if (this.allowResizing && !(this.gridLines === 'Vertical' || this.gridLines === 'Both')) {\n      this.element.classList.add('e-resize-lines');\n    } else {\n      this.element.classList.remove('e-resize-lines');\n    }\n  };\n  /**\n   * The function is used to apply text wrap\n   * @return {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.applyTextWrap = function () {\n    if (this.allowTextWrap) {\n      var headerRows = [].slice.call(this.element.querySelectorAll('.e-columnheader'));\n\n      switch (this.textWrapSettings.wrapMode) {\n        case 'Header':\n          wrap(this.element, false);\n          wrap(this.getContent(), false);\n          wrap(headerRows, true);\n          break;\n\n        case 'Content':\n          wrap(this.getContent(), true);\n          wrap(this.element, false);\n          wrap(headerRows, false);\n          break;\n\n        default:\n          wrap(this.element, true);\n          wrap(this.getContent(), false);\n          wrap(headerRows, false);\n      }\n\n      if (this.textWrapSettings.wrapMode !== 'Content') {\n        this.notify(events.refreshHandlers, {});\n      }\n    }\n  };\n  /**\n   * The function is used to remove text wrap\n   * @return {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.removeTextWrap = function () {\n    wrap(this.element, false);\n    var headerRows = [].slice.call(this.element.querySelectorAll('.e-columnheader'));\n    wrap(headerRows, false);\n    wrap(this.getContent(), false);\n\n    if (this.textWrapSettings.wrapMode !== 'Content') {\n      this.notify(events.refreshHandlers, {});\n    }\n  };\n  /**\n   * The function is used to add Tooltip to the grid cell that has ellipsiswithtooltip clip mode.\n   * @return {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.createTooltip = function () {\n    this.toolTipObj = new Tooltip({\n      opensOn: 'custom',\n      content: ''\n    }, this.element);\n  };\n  /** @hidden */\n\n\n  Grid.prototype.freezeRefresh = function () {\n    if (this.enableVirtualization) {\n      this.pageSettings.currentPage = 1;\n    }\n\n    this.componentRefresh();\n  };\n\n  Grid.prototype.getTooltipStatus = function (element) {\n    var width;\n    var headerTable = this.getHeaderTable();\n    var contentTable = this.getContentTable();\n    var headerDivTag = 'e-gridheader';\n    var contentDivTag = 'e-gridcontent';\n    var htable = this.createTable(headerTable, headerDivTag, 'header');\n    var ctable = this.createTable(headerTable, headerDivTag, 'content');\n    var td = element;\n    var table = element.classList.contains('e-headercell') ? htable : ctable;\n    var ele = element.classList.contains('e-headercell') ? 'th' : 'tr';\n    table.querySelector(ele).className = element.className;\n    table.querySelector(ele).innerHTML = element.innerHTML;\n    width = table.querySelector(ele).getBoundingClientRect().width;\n    document.body.removeChild(htable);\n    document.body.removeChild(ctable);\n\n    if (width > element.getBoundingClientRect().width) {\n      return true;\n    }\n\n    return false;\n  };\n\n  Grid.prototype.mouseMoveHandler = function (e) {\n    if (this.isEllipsisTooltip()) {\n      var element = parentsUntil(e.target, 'e-ellipsistooltip');\n\n      if (this.prevElement !== element || e.type === 'mouseout') {\n        this.toolTipObj.close();\n      }\n\n      var tagName = e.target.tagName;\n      var elemNames = ['A', 'BUTTON', 'INPUT'];\n\n      if (element && e.type !== 'mouseout' && !(Browser.isDevice && elemNames.indexOf(tagName) !== -1)) {\n        if (element.getAttribute('aria-describedby')) {\n          return;\n        }\n\n        if (this.getTooltipStatus(element)) {\n          if (element.getElementsByClassName('e-headertext').length) {\n            this.toolTipObj.content = element.getElementsByClassName('e-headertext')[0].innerText;\n          } else {\n            this.toolTipObj.content = element.innerText;\n          }\n\n          this.prevElement = element;\n          this.toolTipObj.open(element);\n        }\n      }\n    }\n\n    this.hoverFrozenRows(e);\n  };\n  /** @hidden */\n\n\n  Grid.prototype.hoverFrozenRows = function (e) {\n    if (this.isFrozenGrid()) {\n      var row = parentsUntil(e.target, 'e-row');\n\n      if ([].slice.call(this.element.querySelectorAll('.e-frozenhover')).length && e.type === 'mouseout') {\n        var rows = [].slice.call(this.element.querySelectorAll('.e-frozenhover'));\n\n        for (var i = 0; i < rows.length; i++) {\n          rows[i].classList.remove('e-frozenhover');\n        }\n      } else if (row) {\n        var rows = [].slice.call(this.element.querySelectorAll('tr[aria-rowindex=\"' + row.getAttribute('aria-rowindex') + '\"]'));\n        rows.splice(rows.indexOf(row), 1);\n\n        for (var i = 0; i < rows.length; i++) {\n          if (row.getAttribute('aria-selected') != 'true' && rows[i]) {\n            rows[i].classList.add('e-frozenhover');\n          } else if (rows[i]) {\n            rows[i].classList.remove('e-frozenhover');\n          }\n        }\n      }\n    }\n  };\n\n  Grid.prototype.isEllipsisTooltip = function () {\n    var cols = this.getColumns();\n\n    if (this.clipMode === 'EllipsisWithTooltip') {\n      return true;\n    }\n\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[i].clipMode === 'EllipsisWithTooltip') {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  Grid.prototype.scrollHandler = function () {\n    if (this.isEllipsisTooltip()) {\n      this.toolTipObj.close();\n    }\n  };\n  /**\n   * To create table for ellipsiswithtooltip\n   * @hidden\n   */\n\n\n  Grid.prototype.createTable = function (table, tag, type) {\n    var myTableDiv = this.createElement('div');\n    myTableDiv.className = this.element.className;\n    myTableDiv.style.cssText = 'display: inline-block;visibility:hidden;position:absolute';\n    var mySubDiv = this.createElement('div');\n    mySubDiv.className = tag;\n    var myTable = this.createElement('table');\n    myTable.className = table.className;\n    myTable.style.cssText = 'table-layout: auto;width: auto';\n    var ele = type === 'header' ? 'th' : 'td';\n    var myTr = this.createElement('tr');\n    var mytd = this.createElement(ele);\n    myTr.appendChild(mytd);\n    myTable.appendChild(myTr);\n    mySubDiv.appendChild(myTable);\n    myTableDiv.appendChild(mySubDiv);\n    document.body.appendChild(myTableDiv);\n    return myTableDiv;\n  };\n\n  Grid.prototype.onKeyPressed = function (e) {\n    if (e.action === 'tab' || e.action === 'shiftTab') {\n      this.toolTipObj.close();\n    }\n  };\n  /**\n   * Binding events to the element while component creation.\n   * @hidden\n   */\n\n\n  Grid.prototype.wireEvents = function () {\n    EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n    EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n    EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);\n    EventHandler.add(this.element, 'dblclick', this.dblClickHandler, this);\n    EventHandler.add(this.element, 'keydown', this.keyPressHandler, this);\n    /* tslint:disable-next-line:no-any */\n\n    EventHandler.add(window, 'resize', this.resetIndentWidth, this);\n\n    if (this.allowKeyboard) {\n      this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n    }\n\n    this.keyboardModule = new KeyboardEvents(this.element, {\n      keyAction: this.keyActionHandler.bind(this),\n      keyConfigs: this.keyConfigs,\n      eventName: 'keydown'\n    });\n    EventHandler.add(this.getContent().firstElementChild, 'scroll', this.scrollHandler, this);\n    EventHandler.add(this.element, 'mousemove', this.mouseMoveHandler, this);\n    EventHandler.add(this.element, 'mouseout', this.mouseMoveHandler, this);\n    EventHandler.add(this.getContent(), 'touchstart', this.tapEvent, this);\n    EventHandler.add(document.body, 'keydown', this.keyDownHandler, this);\n  };\n  /**\n   * Unbinding events from the element while component destroy.\n   * @hidden\n   */\n\n\n  Grid.prototype.unwireEvents = function () {\n    EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n    EventHandler.remove(this.element, 'touchend', this.mouseClickHandler);\n    EventHandler.remove(this.element, 'focusout', this.focusOutHandler);\n    EventHandler.remove(this.element, 'dblclick', this.dblClickHandler);\n    EventHandler.remove(this.getContent().firstElementChild, 'scroll', this.scrollHandler);\n    EventHandler.remove(this.element, 'mousemove', this.mouseMoveHandler);\n    EventHandler.remove(this.element, 'mouseout', this.mouseMoveHandler);\n    EventHandler.remove(this.element, 'keydown', this.keyPressHandler);\n    EventHandler.remove(this.getContent(), 'touchstart', this.tapEvent);\n    EventHandler.remove(document.body, 'keydown', this.keyDownHandler);\n    /* tslint:disable-next-line:no-any */\n\n    EventHandler.remove(window, 'resize', this.resetIndentWidth);\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.addListener = function () {\n    if (this.isDestroyed) {\n      return;\n    }\n\n    this.on(events.dataReady, this.dataReady, this);\n    this.on(events.contentReady, this.recalcIndentWidth, this);\n    this.on(events.headerRefreshed, this.recalcIndentWidth, this);\n    this.dataBoundFunction = this.refreshMediaCol.bind(this);\n    this.addEventListener(events.dataBound, this.dataBoundFunction);\n    this.on(events.keyPressed, this.onKeyPressed, this);\n    this.on(events.contentReady, this.blazorTemplate, this);\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.removeListener = function () {\n    if (this.isDestroyed) {\n      return;\n    }\n\n    this.off(events.dataReady, this.dataReady);\n    this.off(events.contentReady, this.recalcIndentWidth);\n    this.off(events.headerRefreshed, this.recalcIndentWidth);\n    this.removeEventListener(events.dataBound, this.dataBoundFunction);\n    this.off(events.keyPressed, this.onKeyPressed);\n  };\n\n  Grid.prototype.blazorTemplate = function () {\n    if (isBlazor()) {\n      if (this.pageSettings.template) {\n        updateBlazorTemplate(this.element.id + \"_template\", 'Template', this.pageSettings);\n      }\n\n      for (var i = 0; i < this.columnModel.length; i++) {\n        if (this.columnModel[i].template) {\n          updateBlazorTemplate(this.element.id + this.columnModel[i].uid, 'Template', this.columnModel[i], false);\n        }\n\n        if (this.columnModel[i].headerTemplate) {\n          updateBlazorTemplate(this.element.id + this.columnModel[i].uid + 'headerTemplate', 'HeaderTemplate', this.columnModel[i], false);\n        }\n\n        if (this.filterSettings.type == 'FilterBar' && this.columnModel[i].filterTemplate) {\n          var fieldName = this.columnModel[i].field;\n          var tempID = this.element.id + this.columnModel[i].uid + 'filterTemplate';\n          var filteredColumns = this.filterSettings.columns;\n\n          for (var k = 0; k < filteredColumns.length; k++) {\n            if (fieldName == filteredColumns[k].field) {\n              blazorTemplates[tempID][0][fieldName] = filteredColumns[k].value;\n            }\n          }\n\n          updateBlazorTemplate(this.element.id + this.columnModel[i].uid + 'filterTemplate', 'FilterTemplate', this.columnModel[i], false);\n        }\n\n        if (this.filterSettings.type != 'FilterBar' && this.columnModel[i].filterTemplate) {\n          updateBlazorTemplate(this.element.id + this.columnModel[i].uid + 'filterTemplate', 'FilterTemplate', this.columnModel[i]);\n        }\n      }\n\n      if (this.groupSettings.captionTemplate) {\n        updateBlazorTemplate(this.element.id + 'captionTemplate', 'CaptionTemplate', this.groupSettings);\n      }\n\n      var guid = 'guid';\n\n      for (var k = 0; k < this.aggregates.length; k++) {\n        for (var j = 0; j < this.aggregates[k].columns.length; j++) {\n          if (this.aggregates[k].columns[j].footerTemplate) {\n            updateBlazorTemplate(this.element.id + this.aggregates[k].columns[j][guid] + 'footerTemplate', 'FooterTemplate', this.aggregates[k].columns[j]);\n          }\n\n          if (this.aggregates[k].columns[j].groupFooterTemplate) {\n            updateBlazorTemplate(this.element.id + this.aggregates[k].columns[j][guid] + 'groupFooterTemplate', 'GroupFooterTemplate', this.aggregates[k].columns[j]);\n          }\n\n          if (this.aggregates[k].columns[j].groupCaptionTemplate) {\n            updateBlazorTemplate(this.element.id + this.aggregates[k].columns[j][guid] + 'groupCaptionTemplate', 'GroupCaptionTemplate', this.aggregates[k].columns[j]);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * Get current visible data of grid.\n   * @return {Object[]}\n   * @isGenericType true\n   */\n\n\n  Grid.prototype.getCurrentViewRecords = function () {\n    if (isGroupAdaptive(this)) {\n      return isNullOrUndefined(this.currentViewData.records) ? this.currentViewData : this.currentViewData.records;\n    }\n\n    if (this.groupSettings.enableLazyLoading) {\n      return this.currentViewData;\n    }\n\n    ;\n    return this.allowGrouping && this.groupSettings.columns.length && this.currentViewData.length && this.currentViewData.records ? this.currentViewData.records : this.currentViewData;\n  };\n\n  Grid.prototype.mouseClickHandler = function (e) {\n    if (this.isChildGrid(e) || parentsUntil(e.target, 'e-gridpopup') && e.touches || this.element.querySelectorAll('.e-cloneproperties').length || this.checkEdit(e)) {\n      return;\n    }\n\n    if ((!this.allowRowDragAndDrop && (parentsUntil(e.target, 'e-gridcontent') || e.target.tagName === 'TD') || !(this.allowGrouping || this.allowReordering) && parentsUntil(e.target, 'e-gridheader')) && e.touches) {\n      return;\n    }\n\n    if (parentsUntil(e.target, 'e-gridheader') && this.allowRowDragAndDrop && !parentsUntil(e.target, 'e-filterbarcell')) {\n      e.preventDefault();\n    }\n\n    var args = this.getRowInfo(e.target);\n    var cancel = 'cancel';\n    args[cancel] = false;\n    var isDataRow = false;\n    var tr = closest(e.target, 'tr');\n\n    if (tr && tr.getAttribute('data-uid')) {\n      var rowObj = this.getRowObjectFromUID(tr.getAttribute('data-uid'));\n      isDataRow = rowObj ? rowObj.isDataRow : false;\n    }\n\n    if (isBlazor()) {\n      var clonedColumn = extend({}, args.column);\n      args = {\n        rowData: args.rowData,\n        rowIndex: args.rowIndex,\n        cellIndex: args.cellIndex,\n        column: clonedColumn\n      };\n    }\n\n    if (isDataRow) {\n      this.trigger(events.recordClick, args);\n    }\n\n    this.notify(events.click, e);\n  };\n\n  Grid.prototype.checkEdit = function (e) {\n    var tr = parentsUntil(e.target, 'e-row');\n    var isEdit = this.editSettings.mode !== 'Batch' && this.isEdit && tr && (tr.classList.contains('e-editedrow') || tr.classList.contains('e-addedrow'));\n    return !parentsUntil(e.target, 'e-unboundcelldiv') && (isEdit || parentsUntil(e.target, 'e-rowcell') && parentsUntil(e.target, 'e-rowcell').classList.contains('e-editedbatchcell'));\n  };\n\n  Grid.prototype.dblClickHandler = function (e) {\n    var grid = parentsUntil(e.target, 'e-grid');\n\n    if (isNullOrUndefined(grid) || grid.id !== this.element.id || closest(e.target, '.e-unboundcelldiv')) {\n      return;\n    }\n\n    var dataRow = false;\n    var tr = closest(e.target, 'tr');\n\n    if (tr && tr.getAttribute('data-uid')) {\n      var rowObj = this.getRowObjectFromUID(tr.getAttribute('data-uid'));\n      dataRow = rowObj ? rowObj.isDataRow : false;\n    }\n\n    var args = this.getRowInfo(e.target);\n    args.target = e.target;\n\n    if (dataRow) {\n      this.trigger(events.recordDoubleClick, args);\n    }\n\n    this.notify(events.dblclick, e);\n  };\n\n  Grid.prototype.focusOutHandler = function (e) {\n    if (this.isChildGrid(e)) {\n      return;\n    }\n\n    if (!parentsUntil(e.target, 'e-grid')) {\n      this.element.querySelector('.e-gridpopup').style.display = 'None';\n    }\n\n    var filterClear = this.element.querySelector('.e-cancel:not(.e-hide)');\n\n    if (filterClear) {\n      filterClear.classList.add('e-hide');\n    }\n\n    var relatedTarget = e.relatedTarget;\n    var ariaOwns = relatedTarget ? relatedTarget.getAttribute('aria-owns') : null;\n\n    if ((!relatedTarget || !parentsUntil(relatedTarget, 'e-grid') && (!isNullOrUndefined(ariaOwns) && ariaOwns) !== e.target.getAttribute('aria-owns')) && !this.keyPress && this.isEdit && !Browser.isDevice) {\n      if (this.editSettings.mode === 'Batch') {\n        this.editModule.saveCell();\n        this.notify(events.editNextValCell, {});\n      }\n\n      if (this.editSettings.mode === 'Normal') {\n        this.editModule.editFormValidate();\n      }\n    }\n\n    this.keyPress = false;\n  };\n\n  Grid.prototype.isChildGrid = function (e) {\n    var gridElement = parentsUntil(e.target, 'e-grid');\n\n    if (gridElement && gridElement.id !== this.element.id) {\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.mergePersistGridData = function (persistedData) {\n    var data = this.getLocalData();\n\n    if (!(isNullOrUndefined(data) || data === '') || !isNullOrUndefined(persistedData)) {\n      var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n\n      if (this.enableVirtualization) {\n        dataObj.pageSettings.currentPage = 1;\n      }\n\n      var keys = Object.keys(dataObj);\n      this.isProtectedOnChange = true;\n\n      for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n\n        if (typeof this[key] === 'object' && !isNullOrUndefined(this[key])) {\n          if (Array.isArray(this[key]) && key === 'columns') {\n            if (!(isBlazor() && this.isServerRendered)) {\n              setColumnIndex(this[key]);\n            }\n\n            this.mergeColumns(dataObj[key], this[key]);\n            this[key] = dataObj[key];\n          } else {\n            extend(this[key], dataObj[key]);\n          }\n        } else {\n          this[key] = dataObj[key];\n        }\n      }\n\n      this.isProtectedOnChange = false;\n    }\n  };\n\n  Grid.prototype.mergeColumns = function (storedColumn, columns) {\n    var storedColumns = storedColumn;\n\n    var _loop_2 = function (i) {\n      var localCol = columns.filter(function (tCol) {\n        return tCol.index === storedColumns[i].index;\n      })[0];\n\n      if (!isNullOrUndefined(localCol)) {\n        if (localCol.columns && localCol.columns.length) {\n          this_2.mergeColumns(storedColumns[i].columns, localCol.columns);\n          storedColumns[i] = extend(localCol, storedColumns[i], {}, true);\n        } else {\n          if (isBlazor()) {\n            var guid = 'guid';\n            storedColumns[i][guid] = localCol[guid];\n            storedColumns[i].uid = localCol.uid;\n          }\n\n          storedColumns[i] = extend(localCol, storedColumns[i], {}, true);\n        }\n      }\n    };\n\n    var this_2 = this;\n\n    for (var i = 0; i < storedColumns.length; i++) {\n      _loop_2(i);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.isDetail = function () {\n    return !isNullOrUndefined(this.detailTemplate) || !isNullOrUndefined(this.childGrid);\n  };\n\n  Grid.prototype.isCommandColumn = function (columns) {\n    var _this = this;\n\n    return columns.some(function (col) {\n      if (col.columns) {\n        return _this.isCommandColumn(col.columns);\n      }\n\n      return !!(col.commands || col.commandsTemplate);\n    });\n  };\n\n  Grid.prototype.isForeignKeyEnabled = function (columns) {\n    var _this = this;\n\n    return columns.some(function (col) {\n      if (col.columns) {\n        return _this.isForeignKeyEnabled(col.columns);\n      }\n\n      return !!(col.dataSource && col.foreignKeyValue);\n    });\n  };\n\n  Grid.prototype.keyPressHandler = function (e) {\n    var presskey = extend(e, {\n      cancel: false\n    });\n    this.trigger(\"keyPressed\", presskey);\n\n    if (presskey.cancel === true) {\n      e.stopImmediatePropagation();\n    }\n  };\n\n  Grid.prototype.keyDownHandler = function (e) {\n    if (e.altKey) {\n      if (e.keyCode === 74) {\n        //alt j\n        if (this.keyA) {\n          //alt A J\n          this.notify(events.groupCollapse, {\n            target: e.target,\n            collapse: false\n          });\n          this.keyA = false;\n        } else {\n          this.focusModule.focusHeader();\n          this.focusModule.addOutline();\n        }\n      }\n\n      if (e.keyCode === 87) {\n        //alt w\n        this.focusModule.focusContent();\n        this.focusModule.addOutline();\n      }\n\n      if (e.keyCode === 65) {\n        //alt A\n        this.keyA = true;\n      }\n\n      if (e.keyCode === 72 && this.keyA) {\n        //alt A H\n        this.notify(events.groupCollapse, {\n          target: e.target,\n          collapse: true\n        });\n        this.keyA = false;\n      }\n    }\n  };\n\n  Grid.prototype.keyActionHandler = function (e) {\n    if (this.isChildGrid(e) || this.isEdit && e.action !== 'escape' && e.action !== 'enter' && e.action !== 'shiftEnter' && e.action !== 'tab' && e.action !== 'shiftTab') {\n      return;\n    } else {\n      this.keyPress = true;\n    }\n\n    if (this.allowKeyboard) {\n      if (e.action === 'ctrlPlusP') {\n        e.preventDefault();\n        this.print();\n      }\n\n      this.notify(events.keyPressed, e);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.setInjectedModules = function (modules) {\n    this.injectedModules = modules;\n  };\n\n  Grid.prototype.updateColumnObject = function () {\n    prepareColumns(this.columns, this.enableColumnVirtualization, this);\n\n    if (!(isBlazor() && this.isServerRendered)) {\n      setColumnIndex(this.columns);\n    }\n\n    this.initForeignColumn();\n    this.notify(events.autoCol, {});\n  };\n  /**\n   * Gets the foreign columns from Grid.\n   * @return {Column[]}\n   * @blazorType List<GridColumn>\n   */\n\n\n  Grid.prototype.getForeignKeyColumns = function () {\n    return this.getColumns().filter(function (col) {\n      return col.isForeignColumn();\n    });\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getRowHeight = function () {\n    return this.rowHeight ? this.rowHeight : getRowHeight(this.element);\n  };\n  /**\n   * Refreshes the Grid column changes.\n   */\n\n\n  Grid.prototype.refreshColumns = function () {\n    this.setFrozenCount();\n    var fCnt = this.getContent().querySelector('.e-frozen-left-content');\n    var frCnt = this.getContent().querySelector('.e-frozen-right-content');\n    var isColFrozen = !this.frozenRightCount && !this.frozenLeftCount;\n    var isFrozen = this.getFrozenColumns() !== 0;\n\n    if (!isFrozen && (!fCnt && this.frozenLeftCount || !frCnt && this.frozenRightCount || fCnt && !this.frozenLeftCount || frCnt && !this.frozenRightCount)) {\n      this.tableIndex = 0;\n      this.tablesCount = 1;\n\n      if (this.enableColumnVirtualization) {\n        this.columnModel = [];\n        this.updateColumnModel(this.columns);\n      }\n\n      this.freezeRefresh();\n    } else if (isColFrozen && (this.getFrozenColumns() === 1 && !fCnt || this.getFrozenColumns() === 0 && fCnt)) {\n      this.tableIndex = 0;\n      this.tablesCount = 1;\n\n      if (this.enableColumnVirtualization) {\n        this.columnModel = [];\n        this.updateColumnModel(this.columns);\n      }\n\n      this.freezeRefresh();\n    } else {\n      this.isPreventScrollEvent = true;\n      this.updateColumnObject();\n      this.checkLockColumns(this.getColumns());\n      this.refresh();\n\n      if (this.isFrozenGrid()) {\n        var mTbl = this.contentModule.getMovableContent().querySelector('.e-table');\n        remove(mTbl.querySelector('colgroup'));\n        var colGroup = this.getHeaderContent().querySelector('.e-movableheader').querySelector('colgroup').cloneNode(true);\n        mTbl.insertBefore(colGroup, mTbl.querySelector('tbody'));\n\n        if (this.getFrozenMode() === 'Left-Right') {\n          var frTbl = this.contentModule.getFrozenRightContent().querySelector('.e-table');\n          remove(frTbl.querySelector('colgroup'));\n          var colGrp = this.getHeaderContent().querySelector('.e-frozen-right-header').querySelector('colgroup').cloneNode(true);\n          frTbl.insertBefore(colGrp, frTbl.querySelector('tbody'));\n        }\n      }\n    }\n\n    if (this.isFrozenGrid()) {\n      var left = this.getContent().querySelector('.e-movablescrollbar').scrollLeft;\n      this.headerModule.getMovableHeader().scrollLeft = left;\n      this.contentModule.getMovableContent().scrollLeft = left;\n    }\n  };\n  /**\n   * Export Grid data to Excel file(.xlsx).\n   * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n   * @param  {boolean} isMultipleExport - Define to enable multiple export.\n   * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n   * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n   * @return {Promise<any>}\n   * @blazorType void\n   */\n\n\n  Grid.prototype.excelExport = function (excelExportProperties, isMultipleExport,\n  /* tslint:disable-next-line:no-any */\n  workbook, isBlob) {\n    if (isBlazor()) {\n      this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, false, isBlob);\n      return null;\n    }\n\n    return this.excelExportModule ? this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, false, isBlob) : null;\n  };\n  /**\n   * Export Grid data to CSV file.\n   * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n   * @param  {boolean} isMultipleExport - Define to enable multiple export.\n   * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n   * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n   * @return {Promise<any>}\n   * @blazorType void\n   */\n\n\n  Grid.prototype.csvExport = function (excelExportProperties,\n  /* tslint:disable-next-line:no-any */\n  isMultipleExport, workbook, isBlob) {\n    if (isBlazor()) {\n      this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, true, isBlob);\n      return null;\n    }\n\n    return this.excelExportModule ? this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, true, isBlob) : null;\n  };\n  /**\n   * Export Grid data to PDF document.\n   * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n   * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n   * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n   * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n   * @return {Promise<any>}\n   * @blazorType void\n   */\n\n\n  Grid.prototype.pdfExport = function (pdfExportProperties,\n  /* tslint:disable-next-line:no-any */\n  isMultipleExport, pdfDoc, isBlob) {\n    if (isBlazor()) {\n      this.pdfExportModule.Map(this, pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n      return null;\n    }\n\n    return this.pdfExportModule ? this.pdfExportModule.Map(this, pdfExportProperties, isMultipleExport, pdfDoc, isBlob) : null;\n  };\n  /**\n   * Groups a column by column name.\n   * @param  {string} columnName - Defines the column name to group.\n   * @return {void}\n   */\n\n\n  Grid.prototype.groupColumn = function (columnName) {\n    if (this.groupModule) {\n      this.groupModule.groupColumn(columnName);\n    }\n  };\n  /**\n   * Expands all the grouped rows of the Grid.\n   * @return {void}\n   */\n\n\n  Grid.prototype.groupExpandAll = function () {\n    if (this.groupModule) {\n      this.groupModule.expandAll();\n    }\n  };\n  /**\n  * Collapses all the grouped rows of the Grid.\n  * @return {void}\n  */\n\n\n  Grid.prototype.groupCollapseAll = function () {\n    if (this.groupModule) {\n      this.groupModule.collapseAll();\n    }\n  };\n  /**\n   * Expands or collapses grouped rows by target element.\n   * @param  {Element} target - Defines the target element of the grouped row.\n   * @return {void}\n   */\n  // public expandCollapseRows(target: Element): void {\n  //     if (this.groupModule) {\n  //         this.groupModule.expandCollapseRows(target);\n  //     }\n  // }\n\n  /**\n   * Clears all the grouped columns of the Grid.\n   * @return {void}\n   */\n\n\n  Grid.prototype.clearGrouping = function () {\n    if (this.groupModule) {\n      this.groupModule.clearGrouping();\n    }\n  };\n  /**\n   * Ungroups a column by column name.\n   * @param  {string} columnName - Defines the column name to ungroup.\n   * {% codeBlock src='grid/ungroupColumn/index.md' %}{% endcodeBlock %}\n   * @return {void}\n   */\n\n\n  Grid.prototype.ungroupColumn = function (columnName) {\n    if (this.groupModule) {\n      this.groupModule.ungroupColumn(columnName);\n    }\n  };\n  /**\n   * Column chooser can be displayed on screen by given position(X and Y axis).\n   * @param  {number} X - Defines the X axis.\n   * @param  {number} Y - Defines the Y axis.\n   * @return {void}\n   */\n\n\n  Grid.prototype.openColumnChooser = function (x, y) {\n    if (this.columnChooserModule) {\n      this.columnChooserModule.openColumnChooser(x, y);\n    }\n  };\n\n  Grid.prototype.scrollRefresh = function () {\n    var _this = this;\n\n    var refresh = function () {\n      _this.scrollModule.refresh();\n\n      _this.off(events.contentReady, refresh);\n    };\n\n    this.on(events.contentReady, refresh, this);\n  };\n  /**\n   * Collapses a detail row with the given target.\n   * @param  {Element} target - Defines the expanded element to collapse.\n   * @return {void}\n   */\n  // public detailCollapse(target: number | Element): void {\n  //     if (this.detailRowModule) {\n  //         this.detailRowModule.collapse(target);\n  //     }\n  // }\n\n  /**\n   * Collapses all the detail rows of the Grid.\n   * @return {void}\n   */\n\n\n  Grid.prototype.detailCollapseAll = function () {\n    if (this.detailRowModule) {\n      this.detailRowModule.collapseAll();\n    }\n  };\n  /**\n   * Expands a detail row with the given target.\n   * @param  {Element} target - Defines the collapsed element to expand.\n   * @return {void}\n   */\n  // public detailExpand(target: number | Element): void {\n  //     if (this.detailRowModule) {\n  //         this.detailRowModule.expand(target);\n  //     }\n  // }\n\n  /**\n  * Expands all the detail rows of the Grid.\n  * @return {void}\n  */\n\n\n  Grid.prototype.detailExpandAll = function () {\n    if (this.detailRowModule) {\n      this.detailRowModule.expandAll();\n    }\n  };\n  /**\n   * Deselects the currently selected cells.\n   * @return {void}\n   */\n\n\n  Grid.prototype.clearCellSelection = function () {\n    if (this.selectionModule) {\n      this.selectionModule.clearCellSelection();\n    }\n  };\n  /**\n   * Deselects the currently selected rows.\n   * @return {void}\n   */\n\n\n  Grid.prototype.clearRowSelection = function () {\n    if (this.selectionModule) {\n      this.selectionModule.clearRowSelection();\n    }\n  };\n  /**\n   * Selects a collection of cells by row and column indexes.\n   * @param  {ISelectedCell[]} rowCellIndexes - Specifies the row and column indexes.\n   * @return {void}\n   */\n\n\n  Grid.prototype.selectCells = function (rowCellIndexes) {\n    if (this.selectionModule) {\n      this.selectionModule.selectCells(rowCellIndexes);\n    }\n  };\n  /**\n   * Selects a range of rows from start and end row indexes.\n   * @param  {number} startIndex - Specifies the start row index.\n   * @param  {number} endIndex - Specifies the end row index.\n   * @return {void}\n   */\n\n\n  Grid.prototype.selectRowsByRange = function (startIndex, endIndex) {\n    if (this.selectionModule) {\n      this.selectionModule.selectRowsByRange(startIndex, endIndex);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.isContextMenuOpen = function () {\n    return this.contextMenuModule && this.contextMenuModule.isOpen;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.ensureModuleInjected = function (module) {\n    return this.getInjectedModules().indexOf(module) >= 0;\n  };\n  /**\n   * Destroys the given template reference.\n   * @param {string[]} propertyNames - Defines the collection of template name.\n   */\n  //tslint:disable-next-line:no-any\n\n\n  Grid.prototype.destroyTemplate = function (propertyNames, index) {\n    this.clearTemplate(propertyNames, index);\n  };\n  /**\n   * @hidden\n   * @private\n   */\n\n\n  Grid.prototype.log = function (type, args) {\n    this.loggerModule ? this.loggerModule.log(type, args) : function () {\n      return 0;\n    }();\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.applyBiggerTheme = function (element) {\n    if (this.element.classList.contains('e-bigger')) {\n      element.classList.add('e-bigger');\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getPreviousRowData = function () {\n    var previousRowData = this.getRowsObject()[this.getRows().length - 1].data;\n    return previousRowData;\n  };\n  /**\n   * Hides the scrollbar placeholder of Grid content when grid content is not overflown.\n   * @return {void}\n   */\n\n\n  Grid.prototype.hideScroll = function () {\n    var content = this.getContent().querySelector('.e-content');\n    var scrollBar = this.getContent().querySelector('.e-scrollbar');\n\n    if (content.scrollHeight <= content.clientHeight) {\n      this.scrollModule.removePadding();\n      content.style.overflowY = 'auto';\n    }\n\n    if (this.isFrozenGrid() && scrollBar) {\n      var mvblScrollBar = this.getContent().querySelector('.e-movablescrollbar');\n      var mvblChild = this.getContent().querySelector('.e-movablechild');\n      scrollBar.style.display = 'flex';\n\n      if (mvblScrollBar.offsetWidth >= mvblChild.offsetWidth) {\n        scrollBar.style.display = 'none';\n        this.notify(events.frozenHeight, 0);\n      }\n    }\n  };\n  /**\n   * Get row index by primary key or row data.\n   * @param  {string} value - Defines the primary key value.\n   * @param  {Object} value - Defines the row data.\n   */\n\n\n  Grid.prototype.getRowIndexByPrimaryKey = function (value) {\n    var pkName = this.getPrimaryKeyFieldNames()[0];\n    value = typeof value === 'object' ? value[pkName] : value;\n\n    for (var i = 0; i < this.getRowsObject().length; i++) {\n      if (this.getRowsObject()[i].data[pkName] === value) {\n        return this.getRowsObject()[i].index;\n      }\n    }\n\n    return -1;\n  };\n\n  ;\n  /**\n  * @hidden\n  */\n  // Need to have all columns while filtering with ColumnVirtualization.\n\n  Grid.prototype.grabColumnByFieldFromAllCols = function (field) {\n    var column;\n    this.columnModel = [];\n    this.updateColumnModel(this.columns);\n    var gCols = this.columnModel;\n\n    for (var i = 0; i < gCols.length; i++) {\n      if (field === gCols[i].field) {\n        column = gCols[i];\n      }\n    }\n\n    return column;\n  };\n  /**\n  * @hidden\n  */\n  // Need to have all columns while filtering with ColumnVirtualization.\n\n\n  Grid.prototype.grabColumnByUidFromAllCols = function (uid) {\n    var column;\n    this.columnModel = [];\n    this.updateColumnModel(this.columns);\n    var gCols = this.columnModel;\n\n    for (var i = 0; i < gCols.length; i++) {\n      if (uid === gCols[i].uid) {\n        column = gCols[i];\n      }\n    }\n\n    return column;\n  };\n  /**\n   * Get all filtered records from the Grid and it returns array of objects for the local dataSource, returns a promise object if the Grid has remote data.\n   * @return {Object[] | Promise<Object>}\n    */\n\n\n  Grid.prototype.getFilteredRecords = function () {\n    if (this.allowFiltering && this.filterSettings.columns.length) {\n      var query = this.renderModule.data.generateQuery(true);\n\n      if (this.dataSource && this.renderModule.data.isRemote() && this.dataSource instanceof DataManager) {\n        return this.renderModule.data.getData(this.dataSource, query);\n      } else {\n        if (this.dataSource instanceof DataManager) {\n          return this.dataSource.executeLocal(query);\n        } else {\n          return new DataManager(this.dataSource, query).executeLocal(query);\n        }\n      }\n    }\n\n    return [];\n  };\n\n  Grid.prototype.getUserAgent = function () {\n    var userAgent = Browser.userAgent.toLowerCase();\n    return /iphone|ipod|ipad/.test(userAgent);\n  };\n  /**\n   * @hidden\n   */\n  // Need to have all columns while filtering with ColumnVirtualization.\n\n\n  Grid.prototype.tapEvent = function (e) {\n    if (this.getUserAgent()) {\n      if (!Global.timer) {\n        Global.timer = setTimeout(function () {\n          Global.timer = null;\n        }, 300);\n      } else {\n        clearTimeout(Global.timer);\n        Global.timer = null;\n        this.dblClickHandler(e);\n        this.notify(events.doubleTap, e);\n      }\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getRowUid = function (prefix) {\n    return \"\" + prefix + this.rowUid++;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getMovableVirtualContent = function () {\n    return this.getContent().querySelector('.e-movablecontent');\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getFrozenVirtualContent = function () {\n    return this.getContent().querySelector('.e-frozencontent');\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getMovableVirtualHeader = function () {\n    return this.getHeaderContent().querySelector('.e-movableheader');\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getFrozenVirtualHeader = function () {\n    return this.getHeaderContent().querySelector('.e-frozenheader');\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getRowElementByUID = function (uid) {\n    var rowEle;\n    var rows = [];\n\n    if (this.isFrozenGrid()) {\n      var fRows = [].slice.call(this.getFrozenVirtualContent().querySelector('tbody').children);\n      var mRows = [].slice.call(this.getMovableVirtualContent().querySelector('tbody').children);\n      var frozenRigtRows = [];\n\n      if (this.tablesCount === 3) {\n        frozenRigtRows = [].slice.call(this.getContent().querySelector('.e-frozen-right-content').querySelector('tbody').children);\n      }\n\n      if (this.frozenRows) {\n        rows = [].slice.call(this.getFrozenVirtualHeader().querySelector('tbody').children);\n        rows = rows.concat([].slice.call(this.getMovableVirtualHeader().querySelector('tbody').children));\n\n        if (this.tablesCount === 3) {\n          var frHdr = this.getHeaderContent().querySelector('.e-frozen-right-header');\n          rows = rows.concat([].slice.call(frHdr.querySelector('tbody').children)).concat(frozenRigtRows);\n        }\n\n        ;\n        rows = rows.concat(fRows).concat(mRows);\n      } else {\n        rows = fRows.concat(mRows).concat(frozenRigtRows);\n      }\n    } else {\n      var cntRows = [].slice.call(this.getContent().querySelector('tbody').children);\n\n      if (this.frozenRows) {\n        rows = [].slice.call(this.getHeaderContent().querySelector('tbody').children);\n        rows = rows.concat(cntRows);\n      } else {\n        rows = cntRows;\n      }\n    }\n\n    for (var _i = 0, rows_2 = rows; _i < rows_2.length; _i++) {\n      var row = rows_2[_i];\n\n      if (row.getAttribute('data-uid') === uid) {\n        rowEle = row;\n        break;\n      }\n    }\n\n    return rowEle;\n  };\n  /**\n  * Gets the hidden columns from the Grid.\n  * @return {Column[]}\n  * @blazorType List<GridColumn>\n  */\n\n\n  Grid.prototype.getHiddenColumns = function () {\n    var cols = [];\n\n    for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n      var col = _a[_i];\n\n      if (col.visible === false) {\n        cols.push(col);\n      }\n    }\n\n    return cols;\n  };\n  /**\n   *  calculatePageSizeByParentHeight\n    */\n\n\n  Grid.prototype.calculatePageSizeByParentHeight = function (containerHeight) {\n    if (this.allowPaging) {\n      if (this.allowTextWrap && this.textWrapSettings.wrapMode == 'Header' || !this.allowTextWrap) {\n        var pagesize = 0;\n\n        if (containerHeight.indexOf('%') != -1) {\n          containerHeight = parseInt(containerHeight) / 100 * this.element.clientHeight;\n        }\n\n        var nonContentHeight = this.getNoncontentHeight() + this.getRowHeight();\n\n        if (containerHeight > nonContentHeight) {\n          var contentHeight = 0;\n          contentHeight = containerHeight - this.getNoncontentHeight();\n          pagesize = contentHeight / this.getRowHeight();\n        }\n\n        if (pagesize > 0) {\n          return Math.floor(pagesize);\n        }\n      }\n    }\n\n    return 0;\n  };\n\n  Grid.prototype.getNoncontentHeight = function () {\n    var height = 0;\n\n    if (!isNullOrUndefined(this.getHeaderContent().clientHeight)) {\n      height += this.getHeaderContent().clientHeight;\n    }\n\n    if (this.toolbar && !isNullOrUndefined(this.element.querySelector('.e-toolbar').clientHeight)) {\n      height += this.element.querySelector('.e-toolbar').clientHeight;\n    }\n\n    if (this.allowPaging && !isNullOrUndefined(this.element.querySelector('.e-gridpager').clientHeight)) {\n      height += this.element.querySelector('.e-gridpager').clientHeight;\n    }\n\n    if (this.showColumnChooser && !isNullOrUndefined(this.element.querySelector(\".e-columnheader\").clientHeight)) {\n      height += this.element.querySelector(\".e-columnheader\").clientHeight;\n    }\n\n    if (this.allowGrouping && this.groupSettings.showDropArea && !isNullOrUndefined(this.element.querySelector('.e-groupdroparea').clientHeight)) {\n      height += this.element.querySelector('.e-groupdroparea').clientHeight;\n    }\n\n    if (this.aggregates.length > 0 && !isNullOrUndefined(this.element.querySelector('.e-summaryrow').clientHeight)) {\n      for (var i = 0; i < this.element.querySelectorAll('.e-summaryrow').length; i++) {\n        height += this.element.querySelectorAll('.e-summaryrow')[i].clientHeight;\n      }\n    }\n\n    return height;\n  };\n  /**\n   *To perform aggregate operation on a column.\n   *@param  {AggregateColumnModel} summaryCol - Pass Aggregate Column details.\n   *@param  {Object} summaryData - Pass JSON Array for which its field values to be calculated.\n    */\n\n\n  Grid.prototype.getSummaryValues = function (summaryCol, summaryData) {\n    return DataUtil.aggregates[summaryCol.type.toLowerCase()](summaryData, summaryCol.field);\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.isCollapseStateEnabled = function () {\n    var isExpanded = 'isExpanded';\n    return this[isExpanded] === false;\n  };\n  /**\n   * @param {number} key - Defines the primary key value.\n   * @param {Object} value - Defines the row data.\n    */\n\n\n  Grid.prototype.updateRowValue = function (key, rowData) {\n    var args = {\n      requestType: 'save',\n      data: rowData\n    };\n    this.showSpinner();\n    this.notify(events.updateData, args);\n    this.refresh();\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.setForeignKeyData = function () {\n    this.dataBind();\n    var colpending = this.getDataModule().getForeignKeyDataState();\n\n    if (colpending.isPending) {\n      this.getDataModule().setForeignKeyDataState({});\n      colpending.resolver();\n    } else {\n      this.getDataModule().setForeignKeyDataState({\n        isDataChanged: false\n      });\n\n      if (this.contentModule || this.headerModule) {\n        this.renderModule.render();\n      }\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.resetFilterDlgPosition = function (field) {\n    var header = this.getColumnHeaderByField(field);\n\n    if (header) {\n      var target = header.querySelector('.e-filtermenudiv');\n      var filterDlg = this.element.querySelector('.e-filter-popup');\n\n      if (target && filterDlg) {\n        var gClient = this.element.getBoundingClientRect();\n        var fClient = target.getBoundingClientRect();\n\n        if (filterDlg) {\n          filterDlg.style.left = (fClient.right - gClient.left).toString() + 'px';\n        }\n      }\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.renderTemplates = function () {\n    var portals = 'portals';\n    this.notify('reactTemplateRender', this[portals]);\n    this.renderReactTemplates();\n  };\n  /**\n   * Apply the changes to the Grid without refreshing the rows.\n   * @param  {BatchChanges} changes - Defines changes to be updated.\n   * @return {void}\n   */\n\n\n  Grid.prototype.batchUpdate = function (changes) {\n    this.processRowChanges(changes);\n  };\n  /**\n   * Apply the changes to the Grid in one batch after 50ms without refreshing the rows.\n   * @param  {BatchChanges} changes - Defines changes to be updated.\n   * @return {void}\n   */\n\n\n  Grid.prototype.batchAsyncUpdate = function (changes) {\n    this.processBulkRowChanges(changes);\n  };\n\n  Grid.prototype.processBulkRowChanges = function (changes) {\n    var _this = this;\n\n    if (!this.dataToBeUpdated) {\n      this.dataToBeUpdated = Object.assign({\n        addedRecords: [],\n        changedRecords: [],\n        deletedRecords: []\n      }, changes);\n      setTimeout(function () {\n        _this.processRowChanges(_this.dataToBeUpdated);\n\n        _this.dataToBeUpdated = null;\n      }, this.asyncTimeOut);\n    } else {\n      var loopstring = ['addedRecords', 'changedRecords', 'deletedRecords'];\n      var keyField = this.getPrimaryKeyFieldNames()[0];\n\n      for (var i = 0; i < loopstring.length; i++) {\n        if (changes[loopstring[i]]) {\n          compareChanges(this, changes, loopstring[i], keyField);\n        }\n      }\n    }\n  };\n\n  Grid.prototype.processRowChanges = function (changes) {\n    var _this = this;\n\n    var keyField = this.getPrimaryKeyFieldNames()[0];\n    changes = Object.assign({\n      addedRecords: [],\n      changedRecords: [],\n      deletedRecords: []\n    }, changes);\n    var promise = this.getDataModule().saveChanges(changes, keyField, {}, this.getDataModule().generateQuery().requiresCount());\n\n    if (this.getDataModule().isRemote()) {\n      promise.then(function (e) {\n        _this.setNewData();\n      });\n    } else {\n      this.setNewData();\n    }\n  };\n\n  Grid.prototype.setNewData = function () {\n    var _this = this;\n\n    var oldValues = JSON.parse(JSON.stringify(this.getCurrentViewRecords()));\n    var getData = this.getDataModule().getData({}, this.getDataModule().generateQuery().requiresCount());\n    getData.then(function (e) {\n      _this.bulkRefresh(e.result, oldValues, e.count);\n    });\n  };\n\n  Grid.prototype.deleteRowElement = function (row) {\n    var tr = this.getRowElementByUID(row.uid);\n    var index = parseInt(tr.getAttribute('aria-rowindex'), 10);\n    remove(tr);\n\n    if (this.getFrozenColumns()) {\n      var mtr = this.getMovableRows()[index];\n      remove(mtr);\n    }\n  };\n\n  Grid.prototype.bulkRefresh = function (result, oldValues, count) {\n    var _this = this;\n\n    var rowObj = this.getRowsObject();\n    var keyField = this.getPrimaryKeyFieldNames()[0];\n\n    var _loop_3 = function (i) {\n      if (!result.filter(function (e) {\n        return e[keyField] === rowObj[i].data[keyField];\n      }).length) {\n        this_3.deleteRowElement(rowObj[i]);\n        rowObj.splice(i, 1);\n        i--;\n      }\n\n      out_i_1 = i;\n    };\n\n    var this_3 = this,\n        out_i_1;\n\n    for (var i = 0; i < rowObj.length; i++) {\n      _loop_3(i);\n\n      i = out_i_1;\n    }\n\n    var _loop_4 = function (i) {\n      var isRowExist;\n      oldValues.filter(function (e) {\n        if (e[keyField] === result[i][keyField]) {\n          if (e !== result[i]) {\n            _this.setRowData(result[i][keyField], result[i]);\n          }\n\n          isRowExist = true;\n        }\n      });\n\n      if (!isRowExist) {\n        this_4.renderRowElement(result[i], i);\n      }\n    };\n\n    var this_4 = this;\n\n    for (var i = 0; i < result.length; i++) {\n      _loop_4(i);\n    }\n\n    this.currentViewData = result;\n    var rows = [].slice.call(this.getContentTable().querySelectorAll('.e-row'));\n    resetRowIndex(this, this.getRowsObject(), rows);\n    setRowElements(this);\n\n    if (this.allowPaging) {\n      this.notify(events.inBoundModelChanged, {\n        module: 'pager',\n        properties: {\n          totalRecordsCount: count\n        }\n      });\n    }\n  };\n\n  Grid.prototype.renderRowElement = function (data, index) {\n    var row = new RowRenderer(this.serviceLocator, null, this);\n    var model = new RowModelGenerator(this);\n    var modelData = model.generateRows([data]);\n    var tr = row.render(modelData[0], this.getColumns());\n    var mTr;\n    var mTbody;\n    this.addRowObject(modelData[0], index);\n    var tbody = this.getContentTable().querySelector('tbody');\n\n    if (tbody.querySelector('.e-emptyrow')) {\n      var emptyRow = tbody.querySelector('.e-emptyrow');\n      emptyRow.parentNode.removeChild(emptyRow);\n\n      if (this.getFrozenColumns()) {\n        var moveTbody = this.getContent().querySelector('.e-movablecontent').querySelector('tbody');\n        moveTbody.firstElementChild.parentNode.removeChild(moveTbody.firstElementChild);\n      }\n    }\n\n    if (this.getFrozenColumns()) {\n      mTr = renderMovable(tr, this.getFrozenColumns(), this);\n\n      if (this.frozenRows && index < this.frozenRows) {\n        mTbody = this.getHeaderContent().querySelector('.e-movableheader').querySelector('tbody');\n      } else {\n        mTbody = this.getContent().querySelector('.e-movablecontent').querySelector('tbody');\n      }\n\n      mTbody.appendChild(mTr);\n\n      if (this.height === 'auto') {\n        this.notify(events.frozenHeight, {});\n      }\n    }\n\n    if (this.frozenRows && index < this.frozenRows) {\n      tbody = this.getHeaderContent().querySelector('tbody');\n    } else {\n      tbody = this.getContent().querySelector('tbody');\n    }\n\n    tbody = this.getContent().querySelector('tbody');\n    tbody.appendChild(tr);\n  };\n\n  Grid.prototype.addRowObject = function (row, index) {\n    var frzCols = this.getFrozenColumns();\n\n    if (frzCols) {\n      var mRows = this.getMovableRowsObject();\n      var mRow = row.clone();\n      mRow.cells = mRow.cells.slice(frzCols);\n      row.cells = row.cells.slice(0, frzCols);\n      mRows.splice(index, 1, mRow);\n    }\n\n    this.getRowsObject().splice(index, 1, row);\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getHeight = function (height) {\n    if (!Number.isInteger(height) && height.indexOf('%') != -1) {\n      height = parseInt(height) / 100 * this.element.clientHeight;\n    } else if (!Number.isInteger(height) && this.height !== 'auto') {\n      height = parseInt(height);\n    } else {\n      height = this.height;\n    }\n\n    return height;\n  };\n  /** @hidden */\n\n\n  Grid.prototype.getFrozenRightContent = function () {\n    return this.getContent().querySelector('.e-frozen-right-content');\n  };\n  /** @hidden */\n\n\n  Grid.prototype.getFrozenRightHeader = function () {\n    return this.getHeaderContent().querySelector('.e-frozen-right-header');\n  };\n  /** @hidden */\n\n\n  Grid.prototype.getMovableHeaderTbody = function () {\n    return this.getMovableVirtualHeader().querySelector('tbody');\n  };\n  /** @hidden */\n\n\n  Grid.prototype.getMovableContentTbody = function () {\n    return this.getMovableVirtualContent().querySelector('tbody');\n  };\n  /** @hidden */\n\n\n  Grid.prototype.getFrozenHeaderTbody = function () {\n    return this.getFrozenVirtualHeader().querySelector('tbody');\n  };\n  /** @hidden */\n\n\n  Grid.prototype.getFrozenLeftContentTbody = function () {\n    return this.getFrozenVirtualContent().querySelector('tbody');\n  };\n  /** @hidden */\n\n\n  Grid.prototype.getFrozenRightHeaderTbody = function () {\n    return this.getFrozenRightHeader().querySelector('tbody');\n  };\n  /** @hidden */\n\n\n  Grid.prototype.getFrozenRightContentTbody = function () {\n    var cnt = this.getFrozenRightContent();\n    var tbody;\n\n    if (cnt) {\n      tbody = this.getFrozenRightContent().querySelector('tbody');\n    }\n\n    return tbody;\n  };\n\n  var Grid_1;\n\n  __decorate([Property()], Grid.prototype, \"parentDetails\", void 0);\n\n  __decorate([Property([])], Grid.prototype, \"columns\", void 0);\n\n  __decorate([Property(true)], Grid.prototype, \"enableAltRow\", void 0);\n\n  __decorate([Property(true)], Grid.prototype, \"enableHover\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"enableAutoFill\", void 0);\n\n  __decorate([Property(true)], Grid.prototype, \"allowKeyboard\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowTextWrap\", void 0);\n\n  __decorate([Complex({}, TextWrapSettings)], Grid.prototype, \"textWrapSettings\", void 0);\n\n  __decorate([Complex({}, ResizeSettings)], Grid.prototype, \"resizeSettings\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowPaging\", void 0);\n\n  __decorate([Complex({}, PageSettings)], Grid.prototype, \"pageSettings\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"enableVirtualization\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"enableColumnVirtualization\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"enableInfiniteScrolling\", void 0);\n\n  __decorate([Complex({}, SearchSettings)], Grid.prototype, \"searchSettings\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowSorting\", void 0);\n\n  __decorate([Property('Ellipsis')], Grid.prototype, \"clipMode\", void 0);\n\n  __decorate([Property(true)], Grid.prototype, \"allowMultiSorting\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowExcelExport\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowPdfExport\", void 0);\n\n  __decorate([Complex({}, SortSettings)], Grid.prototype, \"sortSettings\", void 0);\n\n  __decorate([Complex({}, InfiniteScrollSettings)], Grid.prototype, \"infiniteScrollSettings\", void 0);\n\n  __decorate([Property(true)], Grid.prototype, \"allowSelection\", void 0);\n\n  __decorate([Property(-1)], Grid.prototype, \"selectedRowIndex\", void 0);\n\n  __decorate([Complex({}, SelectionSettings)], Grid.prototype, \"selectionSettings\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowFiltering\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowReordering\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowResizing\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowRowDragAndDrop\", void 0);\n\n  __decorate([Complex({}, RowDropSettings)], Grid.prototype, \"rowDropSettings\", void 0);\n\n  __decorate([Complex({}, FilterSettings)], Grid.prototype, \"filterSettings\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowGrouping\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"enableImmutableMode\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"showColumnMenu\", void 0);\n\n  __decorate([Complex({}, GroupSettings)], Grid.prototype, \"groupSettings\", void 0);\n\n  __decorate([Complex({}, EditSettings)], Grid.prototype, \"editSettings\", void 0);\n\n  __decorate([Collection([], AggregateRow)], Grid.prototype, \"aggregates\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"showColumnChooser\", void 0);\n\n  __decorate([Complex({}, ColumnChooserSettings)], Grid.prototype, \"columnChooserSettings\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"enableHeaderFocus\", void 0);\n\n  __decorate([Property('auto')], Grid.prototype, \"height\", void 0);\n\n  __decorate([Property('auto')], Grid.prototype, \"width\", void 0);\n\n  __decorate([Property('Default')], Grid.prototype, \"gridLines\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"rowTemplate\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"detailTemplate\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"childGrid\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"queryString\", void 0);\n\n  __decorate([Property('AllPages')], Grid.prototype, \"printMode\", void 0);\n\n  __decorate([Property('Expanded')], Grid.prototype, \"hierarchyPrintMode\", void 0);\n\n  __decorate([Property([])], Grid.prototype, \"dataSource\", void 0);\n\n  __decorate([Property(null)], Grid.prototype, \"rowHeight\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"query\", void 0);\n\n  __decorate([Property('USD')], Grid.prototype, \"currencyCode\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"toolbar\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"contextMenuItems\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"columnMenuItems\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"toolbarTemplate\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"pagerTemplate\", void 0);\n\n  __decorate([Property(0)], Grid.prototype, \"frozenRows\", void 0);\n\n  __decorate([Property(0)], Grid.prototype, \"frozenColumns\", void 0);\n\n  __decorate([Property('All')], Grid.prototype, \"columnQueryMode\", void 0);\n\n  __decorate([Property({})], Grid.prototype, \"currentAction\", void 0);\n\n  __decorate([Property('18.4.31')], Grid.prototype, \"ej2StatePersistenceVersion\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"created\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"destroyed\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"load\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDataBound\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"queryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"headerCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"actionBegin\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"actionComplete\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"actionFailure\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"dataBound\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"recordDoubleClick\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"recordClick\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowSelecting\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowSelected\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDeselecting\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDeselected\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellSelecting\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellSelected\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellDeselecting\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellDeselected\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnSelecting\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnSelected\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnDeselecting\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnDeselected\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnDragStart\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnDrag\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnDrop\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"printComplete\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforePrint\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"pdfQueryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"pdfAggregateQueryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"excelAggregateQueryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"exportDetailDataBound\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"excelQueryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeExcelExport\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"excelExportComplete\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforePdfExport\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"pdfExportComplete\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDragStartHelper\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"detailDataBound\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDragStart\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDrag\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDrop\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"toolbarClick\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeOpenColumnChooser\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"batchAdd\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"batchDelete\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"batchCancel\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeBatchAdd\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeBatchDelete\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeBatchSave\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beginEdit\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"commandClick\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellEdit\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellSave\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellSaved\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"resizeStart\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"resizing\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"resizeStop\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"keyPressed\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeDataBound\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"contextMenuOpen\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"contextMenuClick\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnMenuOpen\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnMenuClick\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"checkBoxChange\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeCopy\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforePaste\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeAutoFill\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnDataStateChange\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"dataStateChange\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"dataSourceChanged\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"exportGroupCaption\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"lazyLoadGroupExpand\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"lazyLoadGroupCollapse\", void 0);\n\n  Grid = Grid_1 = __decorate([NotifyPropertyChanges], Grid);\n  return Grid;\n}(Component);\n\nexport { Grid };","map":{"version":3,"sources":["C:/Users/appsk/Documents/Projects/PredictiveMaintenance/React PDM/env/frontend/node_modules/@syncfusion/ej2-grids/src/grid/base/grid.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Component","ChildProperty","Browser","closest","extend","isNullOrUndefined","setValue","getValue","isBlazor","blazorTemplates","addClass","removeClass","append","remove","updateBlazorTemplate","classList","setStyleAttribute","Property","Collection","Complex","Event","NotifyPropertyChanges","L10n","EventHandler","KeyboardEvents","DataManager","DataUtil","createSpinner","hideSpinner","showSpinner","Tooltip","iterateArrayOrObject","prepareColumns","parentsUntil","wrap","templateCompiler","isGroupAdaptive","refreshForeignData","getRowHeight","setColumnIndex","Global","ispercentageWidth","renderMovable","setRowElements","resetRowIndex","compareChanges","getCellByColAndRowIndex","events","Render","RenderType","RowRenderer","CellRenderer","CellRendererFactory","ServiceLocator","ValueFormatter","RendererFactory","ColumnWidthService","AriaService","FocusStrategy","PageSettings","ColumnChooserSettings","Selection","Search","ShowHide","Scroll","Print","AggregateRow","Clipboard","gridObserver","RowModelGenerator","SortDescriptor","_super","apply","SortSettings","Predicate","InfiniteScrollSettings","FilterSettings","SelectionSettings","SearchSettings","RowDropSettings","TextWrapSettings","ResizeSettings","GroupSettings","EditSettings","Grid","options","element","_this","call","isPreventScrollEvent","inViewIndexes","keyA","frozenRightCount","frozenLeftCount","tablesCount","movableCount","visibleFrozenLeft","visibleFrozenRight","visibleMovable","frozenLeftColumns","frozenRightColumns","movableColumns","media","tableIndex","componentRefresh","refresh","isVirtualAdaptive","vRows","vcRows","vGroupOffsets","rowUid","currentViewData","lockcolPositionCount","prevPageMoving","pageTemplateChange","isAutoGen","mediaBindInstance","commandDelIndex","undefined","asyncTimeOut","enableLogger","needsID","Grid_1","Inject","mergePersistGridData","getPersistData","keyEntity","ignoreOnPersist","pageSettings","filterSettings","groupSettings","searchSettings","sortSettings","columns","selectedRowIndex","scrollPosition","ignoreOnColumn","currentObject","_i","_a","val","template","isAngular","pagerTemplate","addOnPersist","requiredModules","setFrozenCount","modules","isDestroyed","allowFiltering","push","member","args","serviceLocator","allowExcelExport","allowPdfExport","allowSorting","sortedColumns","allowPaging","allowSelection","selectionSettings","allowReordering","allowRowDragAndDrop","allowGrouping","aggregates","isDetail","toolbar","toolbarTemplate","enableVirtualization","enableColumnVirtualization","getFrozenColumns","frozenRows","isCommandColumn","editSettings","allowAdding","allowDeleting","allowEditing","extendRequiredModules","enableInfiniteScrolling","enableLazyLoading","contextMenuItems","showColumnMenu","showColumnChooser","isForeignKeyEnabled","preRender","initProperties","initializeServices","isInitial","mediaCol","isInitialLoad","allowServerDataBinding","ignoreCollectionWatch","isExpanded","mergeCells","isEdit","checkAllRows","isCheckBoxSelection","isPersistSelection","filterOperators","contains","endsWith","equal","greaterThan","greaterThanOrEqual","lessThan","lessThanOrEqual","notEqual","startsWith","defaultLocale","EmptyRecord","True","False","InvalidFilterMessage","GroupDropArea","UnGroup","UnGroupButton","GroupDisable","FilterbarTitle","EmptyDataSourceError","Add","Edit","Cancel","Update","Delete","Pdfexport","Excelexport","Wordexport","Csvexport","Columnchooser","Save","Item","Items","EditOperationAlert","DeleteOperationAlert","SaveButton","OKButton","CancelButton","EditFormTitle","AddFormTitle","BatchSaveConfirm","BatchSaveLostChanges","ConfirmDelete","CancelEdit","ChooseColumns","SearchColumns","Matchs","FilterButton","ClearButton","StartsWith","EndsWith","Contains","Equal","NotEqual","LessThan","LessThanOrEqual","GreaterThan","GreaterThanOrEqual","ChooseDate","EnterValue","Copy","Group","Ungroup","autoFitAll","autoFit","AutoFitAll","AutoFit","Export","FirstPage","LastPage","PreviousPage","NextPage","SortAscending","SortDescending","EditRecord","DeleteRecord","FilterMenu","SelectAll","Blanks","FilterTrue","FilterFalse","NoResult","ClearFilter","NumberFilter","TextFilter","DateFilter","DateTimeFilter","MatchCase","Between","CustomFilter","CustomFilterPlaceHolder","CustomFilterDatePlaceHolder","AND","OR","ShowRowsWhere","FilterMenuDialogARIA","ExcelFilterDialogARIA","DialogEditARIA","ColumnChooserDialogARIA","ColumnMenuDialogARIA","CustomFilterDialogARIA","SortAtoZ","SortZtoA","SortByOldest","SortByNewest","SortSmallestToLargest","SortLargestToSmallest","keyConfigs","downArrow","upArrow","rightArrow","leftArrow","shiftDown","shiftUp","shiftRight","shiftLeft","home","end","escape","ctrlHome","ctrlEnd","pageUp","pageDown","ctrlAltPageUp","ctrlAltPageDown","altPageUp","altPageDown","altDownArrow","altUpArrow","ctrlDownArrow","ctrlUpArrow","ctrlPlusA","ctrlPlusP","insert","delete","f2","enter","ctrlEnter","shiftEnter","tab","shiftTab","space","ctrlPlusC","ctrlShiftPlusH","ctrlSpace","ctrlLeftArrow","ctrlRightArrow","render","log","ariaService","setOptions","role","renderComplete","createElement","renderModule","searchModule","scrollModule","notify","initialLoad","getDataModule","dataManager","dataSource","offline","url","trigger","load","enablePersistence","columnsPrepared","isServerRendered","getMediaColumns","checkLockColumns","getColumns","processModel","gridRender","wireEvents","addListener","updateDefaultCursor","updateStackedFilter","initialEnd","componentRendered","id","grid","type","getHeaderContent","querySelectorAll","add","gcol","getShowHideService","getService","index","hideAtMedia","visible","pushMediaColumn","col","uid","window","matchMedia","mediaQueryUpdate","bind","updateMediaColumns","getColumnIndexByUid","splice","columnIndex","e","some","mediaColumn","matches","invokedFromMedia","showHider","show","headerText","hide","refreshMediaCol","footerContent","querySelector","scrollHeight","height","checkboxColumn","filter","checkboxMode","removeMediaListener","removeListener","eventInitializer","destroy","gridElement","hasGridChild","unwireEvents","destroyDependentModules","toolTipObj","innerHTML","style","display","keyboardModule","focusModule","getModuleName","enableBoxSelection","enableAutoFill","cellSelectionMode","onPropertyChanged","newProp","oldProp","requireRefresh","requireGridRefresh","freezeRefresh","checkCursor","requestType","isEllipsisTooltip","close","properties","keys","indexOf","updateColumnObject","properties_1","prop","uiUpdate","module","enable","inBoundModelChanged","currentPage","pageSize","totalRecordsCount","refreshHeader","width","headerModule","refreshUI","selectionModule","updateAutoFillPosition","rowTemplateFn","rowTemplate","detailTemplateFn","detailTemplate","oldProperties","isQueryInvokedFromData","extendedPropertyChange","modelChanged","maintainSelection","updateRTL","ej2_instances","enableRtl","dataBind","removePadding","setPadding","toolbarModule","getToolbar","contextMenuModule","getContextMenu","columnMenuModule","getColumnMenu","showFilterBarOperator","rtlUpdated","updateResizeLines","rowHeight","updateGridLines","columnMenuItems","allowTextWrap","applyTextWrap","removeTextWrap","freezeRender","case","isModeChg","pending_1","getState","getPrototypeOf","deepWatch","pKeyField","getPrimaryKeyFieldNames","props","setRowData","isPending","gResult","result","names","group","count","setState","resolver","isDataChanged","dataSourceModified","beforeRefreshOnDataChange","scrollRefresh","action","enableHover","isSelectedRowIndexUpdating","selectRow","widthService","setWidthToTable","fn_1","off","contentReady","on","setProperties","muteOnChange","filterModule","refreshFilter","setTablesCount","frozenCols","frozenLeft","getFrozenLeftColumnsCount","frozenRight","getFrozenRightColumnsCount","getTablesCount","headerCells","slice","stdHdrCell","cols","cells","contentModule","getHeaderCells","cell","updateColumnModel","len","columnModel","updateColumnLevelFrozen","updateFrozenColumns","updateLockableColumns","leftCols","rightCols","movableCols","freeze","freezeTable","concat","directFrozenCount","frozenColumns","totalFrozenCount","isFrozen","getFrozenLeftCount","isFrozenGrid","getFrozenMode","frozenName","frozenCount","lockColumn","isRefresh","inview","map","v","vLen","ensureFrozenCols","getStackedHeaderColumnByHeaderText","stackedHeader","individualColumn","field","stackedColumn","getColumnIndexesInView","getQuery","query","getLocaleConstants","setColumnIndexesInView","indexes","getVisibleColumns","getPanel","setGridHeaderContent","setPanel","getContentTable","getTable","setGridContentTable","setTable","getContent","setGridContent","getHeaderTable","setGridHeaderTable","getFooterContent","footerElement","getElementsByClassName","getFooterContentTable","firstChild","getPager","gridPager","setGridPager","getRowByIndex","getMovableRowByIndex","getFrozenRowByIndex","getFrozenDataRows","getRows","getRowElements","getFrozenRightRowByIndex","getRowInfo","ele","row","rowObj","getRowObjectFromUID","getAttribute","rowIndex","parseInt","rowData","data","cellIndex","isNaN","row_1","frzCols","tableName","getFreezeTableName","rows","getIndentCount","getMovableRows","getFrozenRightRows","rowsObject","column","getMovableRowElements","getFrozenRightRowElements","getDataRows","getAllDataRows","includeAdd","tbody","getFrozenLeftContentTbody","children","hdrTbody","freezeRows","addMovableRows","dataRows","generateDataRows","fRows","mrows","includAdd","dRows","isCollapseStateEnabled","getMovableDataRows","getAllMovableDataRows","getAllFrozenDataRows","getFrozenRightDataRows","getAllFrozenRightDataRows","setCellValue","value","rowIdx","rowuID","fieldIdx","tr","mTr","pkName","selectedRow","movableSelectedRow","rowObjects","movableRowObjects","getColumnIndexByField","childGrid","isRowDragable","getColumnByField","td","sRow","mRow","refreshTD","refreshFooterRenderer","groupAggregates","queryCellInfo","rwdata","rowRenderer","isDataRow","changes","getForeignKeyColumns","getCellFromIndex","getColumnByIndex","getMovableCellFromIndex","getFrozenRightCellFromIndex","getMovableColumnsCount","getColumnHeaderByIndex","getMovableColumnHeaderByIndex","left","getMovableVirtualHeader","getFrozenRightColumnHeaderByIndex","getFrozenRightHeader","getFrozenLeftColumnHeaderByIndex","getFrozenVirtualHeader","isMovable","isFrozenRight","rowObject","rows_1","getRowsObject","getMovableRowsObject","getFrozenRightRowsObject","getColumnHeaderByField","getColumnHeaderByUid","parentElement","item","getColumnByUid","getStackedColumns","columns_1","getUidByColumnField","getNormalizedColumnIndex","rowDropSettings","targetID","getColumnFieldNames","columnNames","getRowTemplate","getDetailTemplate","getEditTemplate","editTemplateFn","getEditHeaderTemplate","editHeaderTemplateFn","getEditFooterTemplate","editFooterTemplateFn","k","isPrimaryKey","getSelectedRows","selectedRecords","getSelectedRowIndexes","selectedRowIndexes","getSelectedRowCellIndexes","selectedRowCellIndexes","getSelectedRecords","getSelectedColumnsUid","selectedColumnsIndexes","showColumns","showBy","hideColumns","hideBy","getFrozenCount","splitFrozenCount","getVisibleFrozenLeftCount","getVisibleFrozenRightCount","getVisibleMovableCount","getFrozenRightColumns","getFrozenLeftColumns","getMovableColumns","getVisibleFrozenColumns","getVisibleFrozenColumnsCount","getVisibleFrozenCount","getFilterUIInfo","visibleFrozenColumns","cnt","goToPage","pageNo","pagerModule","updateExternalMessage","message","sortColumn","columnName","direction","isMultiSort","sortModule","clearSorting","removeSortColumn","filterByColumn","fieldName","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","fields","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","rowIndexes","clearSelection","selectCell","selectCellsByRange","startIndex","endIndex","search","searchString","print","printModule","deleteRecord","fieldname","editModule","startEdit","endEdit","closeEdit","addRecord","deleteRow","editCell","saveCell","updateCell","updateRow","getBatchChanges","enableToolbarItems","items","isEnable","enableItems","copy","withHeader","clipboardModule","recalcIndentWidth","indentWidth","offsetWidth","headerCol","childNodes","contentCol","perPixel","parentOffset","applyWidth","newWidth","toFixed","columnWidthChanged","setAttribute","resetIndentWidth","removeAttribute","setWidthToColumns","minWidth","tgridWidth","getTableWidth","setMinwidthBycalculation","refreshFrozenScrollbar","reorderColumns","fromFName","toFName","reorderModule","reorderColumnByIndex","fromIndex","toIndex","reorderColumnByTargetIndex","reorderRows","fromIndexes","rowDragAndDropModule","refreshDataSource","disableRowDD","headerTable","contentTable","headerRows","disValue","firstElementChild","j","autoFitColumns","fieldNames","resizeModule","createColumnchooser","x","y","columnChooserModule","renderColumnChooser","register","localeObj","locale","valueFormatterService","gCols","sCols","flag","_loop_1","sLen","isFromGroup","this_1","showGroupedColumn","moduleName","headerTemplate","footerTemplate","parentDetails","parentKeyFieldValue","where","queryString","initForeignColumn","initForeignKeyColumn","isDevice","rendererFactory","getRenderer","Header","Content","createGridPopUpElement","createTooltip","dataReady","setWidth","setHeight","popup","className","styles","content","attrs","tabIndex","appendChild","gridLines","allowResizing","textWrapSettings","wrapMode","refreshHandlers","opensOn","getTooltipStatus","headerDivTag","contentDivTag","htable","createTable","ctable","table","getBoundingClientRect","document","body","removeChild","mouseMoveHandler","prevElement","tagName","elemNames","innerText","open","hoverFrozenRows","clipMode","scrollHandler","tag","myTableDiv","cssText","mySubDiv","myTable","myTr","mytd","onKeyPressed","mouseClickHandler","focusOutHandler","dblClickHandler","keyPressHandler","allowKeyboard","keyAction","keyActionHandler","eventName","tapEvent","keyDownHandler","headerRefreshed","dataBoundFunction","addEventListener","dataBound","keyPressed","blazorTemplate","removeEventListener","filterTemplate","tempID","filteredColumns","captionTemplate","guid","groupFooterTemplate","groupCaptionTemplate","getCurrentViewRecords","records","isChildGrid","touches","checkEdit","preventDefault","cancel","clonedColumn","recordClick","click","mode","dataRow","recordDoubleClick","dblclick","filterClear","relatedTarget","ariaOwns","keyPress","editNextValCell","editFormValidate","persistedData","getLocalData","dataObj","JSON","parse","isProtectedOnChange","keys_1","isArray","mergeColumns","storedColumn","storedColumns","_loop_2","localCol","tCol","this_2","commands","commandsTemplate","foreignKeyValue","presskey","stopImmediatePropagation","altKey","keyCode","groupCollapse","collapse","focusHeader","addOutline","focusContent","setInjectedModules","injectedModules","autoCol","isForeignColumn","refreshColumns","fCnt","frCnt","isColFrozen","mTbl","getMovableContent","colGroup","cloneNode","insertBefore","frTbl","getFrozenRightContent","colGrp","scrollLeft","getMovableHeader","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","groupColumn","groupModule","groupExpandAll","expandAll","groupCollapseAll","collapseAll","clearGrouping","ungroupColumn","openColumnChooser","detailCollapseAll","detailRowModule","detailExpandAll","clearCellSelection","clearRowSelection","selectCells","rowCellIndexes","selectRowsByRange","isContextMenuOpen","isOpen","ensureModuleInjected","getInjectedModules","destroyTemplate","propertyNames","clearTemplate","loggerModule","applyBiggerTheme","getPreviousRowData","previousRowData","hideScroll","scrollBar","clientHeight","overflowY","mvblScrollBar","mvblChild","frozenHeight","getRowIndexByPrimaryKey","grabColumnByFieldFromAllCols","grabColumnByUidFromAllCols","getFilteredRecords","generateQuery","isRemote","getData","executeLocal","getUserAgent","userAgent","toLowerCase","test","timer","setTimeout","clearTimeout","doubleTap","getRowUid","prefix","getMovableVirtualContent","getFrozenVirtualContent","getRowElementByUID","rowEle","mRows","frozenRigtRows","frHdr","cntRows","rows_2","getHiddenColumns","calculatePageSizeByParentHeight","containerHeight","pagesize","nonContentHeight","getNoncontentHeight","contentHeight","Math","floor","showDropArea","getSummaryValues","summaryCol","summaryData","updateRowValue","updateData","setForeignKeyData","colpending","getForeignKeyDataState","setForeignKeyDataState","resetFilterDlgPosition","header","filterDlg","gClient","fClient","right","toString","renderTemplates","portals","renderReactTemplates","batchUpdate","processRowChanges","batchAsyncUpdate","processBulkRowChanges","dataToBeUpdated","assign","addedRecords","changedRecords","deletedRecords","loopstring","keyField","promise","saveChanges","requiresCount","then","setNewData","oldValues","stringify","bulkRefresh","deleteRowElement","mtr","_loop_3","this_3","out_i_1","_loop_4","isRowExist","this_4","renderRowElement","model","modelData","generateRows","mTbody","addRowObject","emptyRow","parentNode","moveTbody","clone","getHeight","Number","isInteger","getMovableHeaderTbody","getMovableContentTbody","getFrozenHeaderTbody","getFrozenRightHeaderTbody","getFrozenRightContentTbody"],"mappings":"AAAA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIA,CAAC,CAACM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAF9E;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASO,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBT,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACU,SAAF,GAAcT,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,EAAE,CAACE,SAAH,GAAeT,CAAC,CAACS,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,GAJD;AAKH,CAZ2C,EAA5C;;AAaA,IAAII,UAAU,GAAI,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACnF,MAAIC,CAAC,GAAGC,SAAS,CAACC,MAAlB;AAAA,MAA0BC,CAAC,GAAGH,CAAC,GAAG,CAAJ,GAAQH,MAAR,GAAiBE,IAAI,KAAK,IAAT,GAAgBA,IAAI,GAAGd,MAAM,CAACmB,wBAAP,CAAgCP,MAAhC,EAAwCC,GAAxC,CAAvB,GAAsEC,IAArH;AAAA,MAA2HhB,CAA3H;AACA,MAAI,OAAOsB,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACC,QAAf,KAA4B,UAA/D,EAA2EH,CAAC,GAAGE,OAAO,CAACC,QAAR,CAAiBV,UAAjB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAJ,CAA3E,KACK,KAAK,IAAIQ,CAAC,GAAGX,UAAU,CAACM,MAAX,GAAoB,CAAjC,EAAoCK,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C,EAAiD,IAAIxB,CAAC,GAAGa,UAAU,CAACW,CAAD,CAAlB,EAAuBJ,CAAC,GAAG,CAACH,CAAC,GAAG,CAAJ,GAAQjB,CAAC,CAACoB,CAAD,CAAT,GAAeH,CAAC,GAAG,CAAJ,GAAQjB,CAAC,CAACc,MAAD,EAASC,GAAT,EAAcK,CAAd,CAAT,GAA4BpB,CAAC,CAACc,MAAD,EAASC,GAAT,CAA7C,KAA+DK,CAAnE;AAC7E,SAAOH,CAAC,GAAG,CAAJ,IAASG,CAAT,IAAclB,MAAM,CAACuB,cAAP,CAAsBX,MAAtB,EAA8BC,GAA9B,EAAmCK,CAAnC,CAAd,EAAqDA,CAA5D;AACH,CALD;;AAMA,SAASM,SAAT,EAAoBC,aAApB,EAAmCC,OAAnC,EAA4CC,OAA5C,EAAqDC,MAArD,QAAmE,sBAAnE;AACA,SAASC,iBAAT,EAA4BC,QAA5B,EAAsCC,QAAtC,EAAgDC,QAAhD,EAA0DC,eAA1D,QAAiF,sBAAjF;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,MAAhC,EAAwCC,MAAxC,EAAgDC,oBAAhD,EAAsEC,SAAtE,EAAiFC,iBAAjF,QAA0G,sBAA1G;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,OAA/B,EAAwCC,KAAxC,EAA+CC,qBAA/C,EAAsEC,IAAtE,QAAkF,sBAAlF;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,sBAA7C;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,sBAAtC;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,WAArC,EAAkDC,OAAlD,QAAiE,wBAAjE;AACA,SAASC,oBAAT,EAA+BC,cAA/B,EAA+CC,YAA/C,EAA6DC,IAA7D,EAAmEC,gBAAnE,EAAqFC,eAArF,EAAsGC,kBAAtG,QAAgI,QAAhI;AACA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,MAAvC,EAA+CC,iBAA/C,EAAkEC,aAAlE,QAAuF,QAAvF;AACA,SAASC,cAAT,EAAyBC,aAAzB,EAAwCC,cAAxC,EAAwDC,uBAAxD,QAAuF,QAAvF;AACA,OAAO,KAAKC,MAAZ,MAAwB,kBAAxB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,mBAAT,QAAoC,iCAApC;AACA,SAASC,cAAT,QAA+B,6BAA/B;AACA,SAASC,cAAT,QAA+B,6BAA/B;AACA,SAASC,eAAT,QAAgC,8BAAhC;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,qBAAT,QAAsC,mCAAtC;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,iBAAT,QAAkC,iCAAlC;AACA;AACA;AACA;;AACA,IAAIC,cAAc;AAAG;AAAe,UAAUC,MAAV,EAAkB;AAClDnG,EAAAA,SAAS,CAACkG,cAAD,EAAiBC,MAAjB,CAAT;;AACA,WAASD,cAAT,GAA0B;AACtB,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBhF,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDN,EAAAA,UAAU,CAAC,CACP+B,QAAQ,EADD,CAAD,EAEPqD,cAAc,CAACtF,SAFR,EAEmB,OAFnB,EAE4B,KAAK,CAFjC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,EADD,CAAD,EAEPqD,cAAc,CAACtF,SAFR,EAEmB,WAFnB,EAEgC,KAAK,CAFrC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPqD,cAAc,CAACtF,SAFR,EAEmB,aAFnB,EAEkC,KAAK,CAFvC,CAAV;;AAGA,SAAOsF,cAAP;AACH,CAfmC,CAelCrE,aAfkC,CAApC;;AAgBA,SAASqE,cAAT;AACA;AACA;AACA;;AACA,IAAIG,YAAY;AAAG;AAAe,UAAUF,MAAV,EAAkB;AAChDnG,EAAAA,SAAS,CAACqG,YAAD,EAAeF,MAAf,CAAT;;AACA,WAASE,YAAT,GAAwB;AACpB,WAAOF,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBhF,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDN,EAAAA,UAAU,CAAC,CACPgC,UAAU,CAAC,EAAD,EAAKoD,cAAL,CADH,CAAD,EAEPG,YAAY,CAACzF,SAFN,EAEiB,SAFjB,EAE4B,KAAK,CAFjC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,IAAD,CADD,CAAD,EAEPwD,YAAY,CAACzF,SAFN,EAEiB,aAFjB,EAEgC,KAAK,CAFrC,CAAV;;AAGA,SAAOyF,YAAP;AACH,CAZiC,CAYhCxE,aAZgC,CAAlC;;AAaA,SAASwE,YAAT;AACA;AACA;AACA;;AACA,IAAIC,SAAS;AAAG;AAAe,UAAUH,MAAV,EAAkB;AAC7CnG,EAAAA,SAAS,CAACsG,SAAD,EAAYH,MAAZ,CAAT;;AACA,WAASG,SAAT,GAAqB;AACjB,WAAOH,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBhF,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDN,EAAAA,UAAU,CAAC,CACP+B,QAAQ,EADD,CAAD,EAEPyD,SAAS,CAAC1F,SAFH,EAEc,OAFd,EAEuB,KAAK,CAF5B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,EADD,CAAD,EAEPyD,SAAS,CAAC1F,SAFH,EAEc,UAFd,EAE0B,KAAK,CAF/B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,EADD,CAAD,EAEPyD,SAAS,CAAC1F,SAFH,EAEc,OAFd,EAEuB,KAAK,CAF5B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,EADD,CAAD,EAEPyD,SAAS,CAAC1F,SAFH,EAEc,WAFd,EAE2B,KAAK,CAFhC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPyD,SAAS,CAAC1F,SAFH,EAEc,cAFd,EAE8B,KAAK,CAFnC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,EADD,CAAD,EAEPyD,SAAS,CAAC1F,SAFH,EAEc,WAFd,EAE2B,KAAK,CAFhC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,EAAD,CADD,CAAD,EAEPyD,SAAS,CAAC1F,SAFH,EAEc,mBAFd,EAEmC,KAAK,CAFxC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,EAAD,CADD,CAAD,EAEPyD,SAAS,CAAC1F,SAFH,EAEc,gBAFd,EAEgC,KAAK,CAFrC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,EADD,CAAD,EAEPyD,SAAS,CAAC1F,SAFH,EAEc,MAFd,EAEsB,KAAK,CAF3B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,EADD,CAAD,EAEPyD,SAAS,CAAC1F,SAFH,EAEc,aAFd,EAE6B,KAAK,CAFlC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,EADD,CAAD,EAEPyD,SAAS,CAAC1F,SAFH,EAEc,KAFd,EAEqB,KAAK,CAF1B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,EADD,CAAD,EAEPyD,SAAS,CAAC1F,SAFH,EAEc,cAFd,EAE8B,KAAK,CAFnC,CAAV;;AAGA,SAAO0F,SAAP;AACH,CA1C8B,CA0C7BzE,aA1C6B,CAA/B;;AA2CA,SAASyE,SAAT;AACA;AACA;AACA;;AACA,IAAIC,sBAAsB;AAAG;AAAe,UAAUJ,MAAV,EAAkB;AAC1DnG,EAAAA,SAAS,CAACuG,sBAAD,EAAyBJ,MAAzB,CAAT;;AACA,WAASI,sBAAT,GAAkC;AAC9B,WAAOJ,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBhF,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDN,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEP0D,sBAAsB,CAAC3F,SAFhB,EAE2B,aAF3B,EAE0C,KAAK,CAF/C,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,CAAD,CADD,CAAD,EAEP0D,sBAAsB,CAAC3F,SAFhB,EAE2B,WAF3B,EAEwC,KAAK,CAF7C,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,CAAD,CADD,CAAD,EAEP0D,sBAAsB,CAAC3F,SAFhB,EAE2B,eAF3B,EAE4C,KAAK,CAFjD,CAAV;;AAGA,SAAO2F,sBAAP;AACH,CAf2C,CAe1C1E,aAf0C,CAA5C;;AAgBA,SAAS0E,sBAAT;AACA;AACA;AACA;;AACA,IAAIC,cAAc;AAAG;AAAe,UAAUL,MAAV,EAAkB;AAClDnG,EAAAA,SAAS,CAACwG,cAAD,EAAiBL,MAAjB,CAAT;;AACA,WAASK,cAAT,GAA0B;AACtB,WAAOL,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBhF,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDN,EAAAA,UAAU,CAAC,CACPgC,UAAU,CAAC,EAAD,EAAKwD,SAAL,CADH,CAAD,EAEPE,cAAc,CAAC5F,SAFR,EAEmB,SAFnB,EAE8B,KAAK,CAFnC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,WAAD,CADD,CAAD,EAEP2D,cAAc,CAAC5F,SAFR,EAEmB,MAFnB,EAE2B,KAAK,CAFhC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,EADD,CAAD,EAEP2D,cAAc,CAAC5F,SAFR,EAEmB,MAFnB,EAE2B,KAAK,CAFhC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,IAAD,CADD,CAAD,EAEP2D,cAAc,CAAC5F,SAFR,EAEmB,qBAFnB,EAE0C,KAAK,CAF/C,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,IAAD,CADD,CAAD,EAEP2D,cAAc,CAAC5F,SAFR,EAEmB,oBAFnB,EAEyC,KAAK,CAF9C,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,EADD,CAAD,EAEP2D,cAAc,CAAC5F,SAFR,EAEmB,WAFnB,EAEgC,KAAK,CAFrC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEP2D,cAAc,CAAC5F,SAFR,EAEmB,cAFnB,EAEmC,KAAK,CAFxC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEP2D,cAAc,CAAC5F,SAFR,EAEmB,uBAFnB,EAE4C,KAAK,CAFjD,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEP2D,cAAc,CAAC5F,SAFR,EAEmB,uBAFnB,EAE4C,KAAK,CAFjD,CAAV;;AAGA,SAAO4F,cAAP;AACH,CAjCmC,CAiClC3E,aAjCkC,CAApC;;AAkCA,SAAS2E,cAAT;AACA;AACA;AACA;;AACA,IAAIC,iBAAiB;AAAG;AAAe,UAAUN,MAAV,EAAkB;AACrDnG,EAAAA,SAAS,CAACyG,iBAAD,EAAoBN,MAApB,CAAT;;AACA,WAASM,iBAAT,GAA6B;AACzB,WAAON,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBhF,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDN,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEP4D,iBAAiB,CAAC7F,SAFX,EAEsB,MAFtB,EAE8B,KAAK,CAFnC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,MAAD,CADD,CAAD,EAEP4D,iBAAiB,CAAC7F,SAFX,EAEsB,mBAFtB,EAE2C,KAAK,CAFhD,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,QAAD,CADD,CAAD,EAEP4D,iBAAiB,CAAC7F,SAFX,EAEsB,MAFtB,EAE8B,KAAK,CAFnC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEP4D,iBAAiB,CAAC7F,SAFX,EAEsB,cAFtB,EAEsC,KAAK,CAF3C,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEP4D,iBAAiB,CAAC7F,SAFX,EAEsB,kBAFtB,EAE0C,KAAK,CAF/C,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,SAAD,CADD,CAAD,EAEP4D,iBAAiB,CAAC7F,SAFX,EAEsB,cAFtB,EAEsC,KAAK,CAF3C,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEP4D,iBAAiB,CAAC7F,SAFX,EAEsB,+BAFtB,EAEuD,KAAK,CAF5D,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,IAAD,CADD,CAAD,EAEP4D,iBAAiB,CAAC7F,SAFX,EAEsB,cAFtB,EAEsC,KAAK,CAF3C,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEP4D,iBAAiB,CAAC7F,SAFX,EAEsB,sBAFtB,EAE8C,KAAK,CAFnD,CAAV;;AAGA,SAAO6F,iBAAP;AACH,CAjCsC,CAiCrC5E,aAjCqC,CAAvC;;AAkCA,SAAS4E,iBAAT;AACA;AACA;AACA;;AACA,IAAIC,cAAc;AAAG;AAAe,UAAUP,MAAV,EAAkB;AAClDnG,EAAAA,SAAS,CAAC0G,cAAD,EAAiBP,MAAjB,CAAT;;AACA,WAASO,cAAT,GAA0B;AACtB,WAAOP,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBhF,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDN,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,EAAD,CADD,CAAD,EAEP6D,cAAc,CAAC9F,SAFR,EAEmB,QAFnB,EAE6B,KAAK,CAFlC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,EAAD,CADD,CAAD,EAEP6D,cAAc,CAAC9F,SAFR,EAEmB,KAFnB,EAE0B,KAAK,CAF/B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,UAAD,CADD,CAAD,EAEP6D,cAAc,CAAC9F,SAFR,EAEmB,UAFnB,EAE+B,KAAK,CAFpC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,IAAD,CADD,CAAD,EAEP6D,cAAc,CAAC9F,SAFR,EAEmB,YAFnB,EAEiC,KAAK,CAFtC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEP6D,cAAc,CAAC9F,SAFR,EAEmB,cAFnB,EAEmC,KAAK,CAFxC,CAAV;;AAGA,SAAO8F,cAAP;AACH,CArBmC,CAqBlC7E,aArBkC,CAApC;;AAsBA,SAAS6E,cAAT;AACA;AACA;AACA;;AACA,IAAIC,eAAe;AAAG;AAAe,UAAUR,MAAV,EAAkB;AACnDnG,EAAAA,SAAS,CAAC2G,eAAD,EAAkBR,MAAlB,CAAT;;AACA,WAASQ,eAAT,GAA2B;AACvB,WAAOR,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBhF,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDN,EAAAA,UAAU,CAAC,CACP+B,QAAQ,EADD,CAAD,EAEP8D,eAAe,CAAC/F,SAFT,EAEoB,UAFpB,EAEgC,KAAK,CAFrC,CAAV;;AAGA,SAAO+F,eAAP;AACH,CAToC,CASnC9E,aATmC,CAArC;;AAUA,SAAS8E,eAAT;AACA;AACA;AACA;;AACA,IAAIC,gBAAgB;AAAG;AAAe,UAAUT,MAAV,EAAkB;AACpDnG,EAAAA,SAAS,CAAC4G,gBAAD,EAAmBT,MAAnB,CAAT;;AACA,WAASS,gBAAT,GAA4B;AACxB,WAAOT,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBhF,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDN,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,MAAD,CADD,CAAD,EAEP+D,gBAAgB,CAAChG,SAFV,EAEqB,UAFrB,EAEiC,KAAK,CAFtC,CAAV;;AAGA,SAAOgG,gBAAP;AACH,CATqC,CASpC/E,aAToC,CAAtC;;AAUA,SAAS+E,gBAAT;AACA;AACA;AACA;;AACA,IAAIC,cAAc;AAAG;AAAe,UAAUV,MAAV,EAAkB;AAClDnG,EAAAA,SAAS,CAAC6G,cAAD,EAAiBV,MAAjB,CAAT;;AACA,WAASU,cAAT,GAA0B;AACtB,WAAOV,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBhF,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDN,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,QAAD,CADD,CAAD,EAEPgE,cAAc,CAACjG,SAFR,EAEmB,MAFnB,EAE2B,KAAK,CAFhC,CAAV;;AAGA,SAAOiG,cAAP;AACH,CATmC,CASlChF,aATkC,CAApC;;AAUA,SAASgF,cAAT;AACA;AACA;AACA;;AACA,IAAIC,aAAa;AAAG;AAAe,UAAUX,MAAV,EAAkB;AACjDnG,EAAAA,SAAS,CAAC8G,aAAD,EAAgBX,MAAhB,CAAT;;AACA,WAASW,aAAT,GAAyB;AACrB,WAAOX,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBhF,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDN,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,IAAD,CADD,CAAD,EAEPiE,aAAa,CAAClG,SAFP,EAEkB,cAFlB,EAEkC,KAAK,CAFvC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPiE,aAAa,CAAClG,SAFP,EAEkB,iBAFlB,EAEqC,KAAK,CAF1C,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPiE,aAAa,CAAClG,SAFP,EAEkB,kBAFlB,EAEsC,KAAK,CAF3C,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPiE,aAAa,CAAClG,SAFP,EAEkB,mBAFlB,EAEuC,KAAK,CAF5C,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,IAAD,CADD,CAAD,EAEPiE,aAAa,CAAClG,SAFP,EAEkB,mBAFlB,EAEuC,KAAK,CAF5C,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPiE,aAAa,CAAClG,SAFP,EAEkB,2BAFlB,EAE+C,KAAK,CAFpD,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,EAAD,CADD,CAAD,EAEPiE,aAAa,CAAClG,SAFP,EAEkB,SAFlB,EAE6B,KAAK,CAFlC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,EADD,CAAD,EAEPiE,aAAa,CAAClG,SAFP,EAEkB,iBAFlB,EAEqC,KAAK,CAF1C,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPiE,aAAa,CAAClG,SAFP,EAEkB,mBAFlB,EAEuC,KAAK,CAF5C,CAAV;;AAGA,SAAOkG,aAAP;AACH,CAjCkC,CAiCjCjF,aAjCiC,CAAnC;;AAkCA,SAASiF,aAAT;AACA;AACA;AACA;;AACA,IAAIC,YAAY;AAAG;AAAe,UAAUZ,MAAV,EAAkB;AAChDnG,EAAAA,SAAS,CAAC+G,YAAD,EAAeZ,MAAf,CAAT;;AACA,WAASY,YAAT,GAAwB;AACpB,WAAOZ,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBhF,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDN,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPkE,YAAY,CAACnG,SAFN,EAEiB,aAFjB,EAEgC,KAAK,CAFrC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPkE,YAAY,CAACnG,SAFN,EAEiB,cAFjB,EAEiC,KAAK,CAFtC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPkE,YAAY,CAACnG,SAFN,EAEiB,eAFjB,EAEkC,KAAK,CAFvC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,QAAD,CADD,CAAD,EAEPkE,YAAY,CAACnG,SAFN,EAEiB,MAFjB,EAEyB,KAAK,CAF9B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,IAAD,CADD,CAAD,EAEPkE,YAAY,CAACnG,SAFN,EAEiB,qBAFjB,EAEwC,KAAK,CAF7C,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,IAAD,CADD,CAAD,EAEPkE,YAAY,CAACnG,SAFN,EAEiB,mBAFjB,EAEsC,KAAK,CAF3C,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPkE,YAAY,CAACnG,SAFN,EAEiB,yBAFjB,EAE4C,KAAK,CAFjD,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,EAAD,CADD,CAAD,EAEPkE,YAAY,CAACnG,SAFN,EAEiB,UAFjB,EAE6B,KAAK,CAFlC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,EAAD,CADD,CAAD,EAEPkE,YAAY,CAACnG,SAFN,EAEiB,gBAFjB,EAEmC,KAAK,CAFxC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,EAAD,CADD,CAAD,EAEPkE,YAAY,CAACnG,SAFN,EAEiB,gBAFjB,EAEmC,KAAK,CAFxC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPkE,YAAY,CAACnG,SAFN,EAEiB,gBAFjB,EAEmC,KAAK,CAFxC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,EAAD,CADD,CAAD,EAEPkE,YAAY,CAACnG,SAFN,EAEiB,QAFjB,EAE2B,KAAK,CAFhC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPkE,YAAY,CAACnG,SAFN,EAEiB,kBAFjB,EAEqC,KAAK,CAF1C,CAAV;;AAGA,SAAOmG,YAAP;AACH,CA7CiC,CA6ChClF,aA7CgC,CAAlC;;AA8CA,SAASkF,YAAT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,IAAI;AAAG;AAAe,UAAUb,MAAV,EAAkB;AACxCnG,EAAAA,SAAS,CAACgH,IAAD,EAAOb,MAAP,CAAT;AACA;AACJ;AACA;AACA;;;AACI,WAASa,IAAT,CAAcC,OAAd,EAAuBC,OAAvB,EAAgC;AAC5B,QAAIC,KAAK,GAAGhB,MAAM,CAACiB,IAAP,CAAY,IAAZ,EAAkBH,OAAlB,EAA2BC,OAA3B,KAAuC,IAAnD;;AACAC,IAAAA,KAAK,CAACE,oBAAN,GAA6B,KAA7B;AACAF,IAAAA,KAAK,CAACG,aAAN,GAAsB,EAAtB;AACAH,IAAAA,KAAK,CAACI,IAAN,GAAa,KAAb;AACAJ,IAAAA,KAAK,CAACK,gBAAN,GAAyB,CAAzB;AACAL,IAAAA,KAAK,CAACM,eAAN,GAAwB,CAAxB;AACAN,IAAAA,KAAK,CAACO,WAAN,GAAoB,CAApB;AACAP,IAAAA,KAAK,CAACQ,YAAN,GAAqB,CAArB;AACAR,IAAAA,KAAK,CAACS,iBAAN,GAA0B,CAA1B;AACAT,IAAAA,KAAK,CAACU,kBAAN,GAA2B,CAA3B;AACAV,IAAAA,KAAK,CAACW,cAAN,GAAuB,CAAvB;AACAX,IAAAA,KAAK,CAACY,iBAAN,GAA0B,EAA1B;AACAZ,IAAAA,KAAK,CAACa,kBAAN,GAA2B,EAA3B;AACAb,IAAAA,KAAK,CAACc,cAAN,GAAuB,EAAvB;AACAd,IAAAA,KAAK,CAACe,KAAN,GAAc,EAAd;AACA;;AACAf,IAAAA,KAAK,CAACgB,UAAN,GAAmB,CAAnB;AACAhB,IAAAA,KAAK,CAACiB,gBAAN,GAAyBxG,SAAS,CAAChB,SAAV,CAAoByH,OAA7C;AACA;;AACAlB,IAAAA,KAAK,CAACmB,iBAAN,GAA0B,KAA1B;AACA;;AACAnB,IAAAA,KAAK,CAACoB,KAAN,GAAc,EAAd;AACA;;AACApB,IAAAA,KAAK,CAACqB,MAAN,GAAe,EAAf;AACA;;AACArB,IAAAA,KAAK,CAACsB,aAAN,GAAsB,EAAtB;AACA;;AACAtB,IAAAA,KAAK,CAACuB,MAAN,GAAe,CAAf;AACA;AACR;AACA;;AACQvB,IAAAA,KAAK,CAACwB,eAAN,GAAwB,EAAxB;AACA;;AACAxB,IAAAA,KAAK,CAACyB,oBAAN,GAA6B,CAA7B;AACA;;AACAzB,IAAAA,KAAK,CAAC0B,cAAN,GAAuB,KAAvB;AACA;;AACA1B,IAAAA,KAAK,CAAC2B,kBAAN,GAA2B,KAA3B;AACA;;AACA3B,IAAAA,KAAK,CAAC4B,SAAN,GAAkB,KAAlB;AACA5B,IAAAA,KAAK,CAAC6B,iBAAN,GAA0B,EAA1B;AACA;;AACA7B,IAAAA,KAAK,CAAC8B,eAAN,GAAwBC,SAAxB;AACA;;AACA/B,IAAAA,KAAK,CAACgC,YAAN,GAAqB,EAArB,CA7C4B,CA8C5B;;AACAhC,IAAAA,KAAK,CAACiC,YAAN,GAAqB,IAArB;AACAjC,IAAAA,KAAK,CAACkC,OAAN,GAAgB,IAAhB;AACAC,IAAAA,MAAM,CAACC,MAAP,CAAc9D,SAAd;AACAvD,IAAAA,QAAQ,CAAC,kBAAD,EAAqBiF,KAAK,CAACqC,oBAA3B,EAAiDrC,KAAjD,CAAR;AACA,WAAOA,KAAP;AACH;;AACDmC,EAAAA,MAAM,GAAGtC,IAAT;AACA;AACJ;AACA;AACA;;AACIA,EAAAA,IAAI,CAACpG,SAAL,CAAe6I,cAAf,GAAgC,YAAY;AACxC,QAAIC,SAAS,GAAG,CAAC,cAAD,EAAiB,cAAjB,EACZ,gBADY,EACM,eADN,EACuB,SADvB,EACkC,gBADlC,EACoD,kBADpD,EACwE,gBADxE,CAAhB;AAEA,QAAIC,eAAe,GAAG;AAClBC,MAAAA,YAAY,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,mBAA1B,EAA+C,mBAA/C,EAAoE,WAApE,CADI;AAElBC,MAAAA,cAAc,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,qBAAjB,EAAwC,oBAAxC,EAA8D,cAA9D,CAFE;AAGlBC,MAAAA,aAAa,EAAE,CAAC,cAAD,EAAiB,kBAAjB,EAAqC,mBAArC,EAA0D,mBAA1D,EACX,2BADW,EACkB,kBADlB,CAHG;AAKlBC,MAAAA,cAAc,EAAE,CAAC,QAAD,EAAW,UAAX,EAAuB,YAAvB,CALE;AAMlBC,MAAAA,YAAY,EAAE,EANI;AAMAC,MAAAA,OAAO,EAAE,EANT;AAMaC,MAAAA,gBAAgB,EAAE,EAN/B;AAMmCC,MAAAA,cAAc,EAAE;AANnD,KAAtB;AAQA,QAAIC,cAAc,GAAG,CAAC,QAAD,EAAW,MAAX,EAAmB,mBAAnB,EAAwC,gBAAxC,EAA0D,UAA1D,EACjB,iBADiB,EACE,UADF,EACc,YADd,EAC4B,YAD5B,CAArB;;AAEA,SAAK,IAAI1I,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgI,SAAS,CAACrI,MAA9B,EAAsCK,CAAC,EAAvC,EAA2C;AACvC,UAAI2I,aAAa,GAAG,KAAKX,SAAS,CAAChI,CAAD,CAAd,CAApB;;AACA,WAAK,IAAI4I,EAAE,GAAG,CAAT,EAAYC,EAAE,GAAGZ,eAAe,CAACD,SAAS,CAAChI,CAAD,CAAV,CAArC,EAAqD4I,EAAE,GAAGC,EAAE,CAAClJ,MAA7D,EAAqEiJ,EAAE,EAAvE,EAA2E;AACvE,YAAIE,GAAG,GAAGD,EAAE,CAACD,EAAD,CAAZ;AACA,eAAOD,aAAa,CAACG,GAAD,CAApB;AACH;AACJ;;AACD,SAAKZ,YAAL,CAAkBa,QAAlB,GAA6BvB,SAA7B;AACA;;AACA,QAAI,KAAKwB,SAAT,EAAoB;AAChB;AACA,aAAO,KAAKZ,aAAL,CAAmB,YAAnB,EAAiC,iBAAjC,CAAP;AACH;;AACD,SAAKhB,kBAAL,GAA0B,CAAC7G,iBAAiB,CAAC,KAAK0I,aAAN,CAA5C;AACA,WAAO,KAAKC,YAAL,CAAkBlB,SAAlB,CAAP;AACH,GA5BD;AA6BA;AACJ;AACA;AACA;AACA;AACI;;;AACA1C,EAAAA,IAAI,CAACpG,SAAL,CAAeiK,eAAf,GAAiC,YAAY;AACzC,SAAKC,cAAL;AACA,QAAIC,OAAO,GAAG,EAAd;;AACA,QAAI,KAAKC,WAAT,EAAsB;AAClB,aAAOD,OAAP;AACH;;AACD,QAAI,KAAKE,cAAT,EAAyB;AACrBF,MAAAA,OAAO,CAACG,IAAR,CAAa;AACTC,QAAAA,MAAM,EAAE,QADC;AAETC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,KAAKvB,cAAZ,EAA4B,KAAKwB,cAAjC;AAFG,OAAb;AAIH;;AACD,QAAI,KAAKC,gBAAT,EAA2B;AACvBP,MAAAA,OAAO,CAACG,IAAR,CAAa;AACTC,QAAAA,MAAM,EAAE,aADC;AAETC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,KAAKC,cAAZ;AAFG,OAAb;AAIH;;AACD,QAAI,KAAKE,cAAT,EAAyB;AACrBR,MAAAA,OAAO,CAACG,IAAR,CAAa;AACTC,QAAAA,MAAM,EAAE,WADC;AAETC,QAAAA,IAAI,EAAE,CAAC,IAAD;AAFG,OAAb;AAIH;;AACD,QAAI,KAAKI,YAAT,EAAuB;AACnBT,MAAAA,OAAO,CAACG,IAAR,CAAa;AACTC,QAAAA,MAAM,EAAE,MADC;AAETC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,KAAKpB,YAAZ,EAA0B,KAAKyB,aAA/B,EAA8C,KAAKJ,cAAnD;AAFG,OAAb;AAIH;;AACD,QAAI,KAAKK,WAAT,EAAsB;AAClBX,MAAAA,OAAO,CAACG,IAAR,CAAa;AACTC,QAAAA,MAAM,EAAE,OADC;AAETC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,KAAKxB,YAAZ;AAFG,OAAb;AAIH;;AACD,QAAI,KAAK+B,cAAT,EAAyB;AACrBZ,MAAAA,OAAO,CAACG,IAAR,CAAa;AACTC,QAAAA,MAAM,EAAE,WADC;AAETC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,KAAKQ,iBAAZ,EAA+B,KAAKP,cAApC;AAFG,OAAb;AAIH;;AACDN,IAAAA,OAAO,CAACG,IAAR,CAAa;AACTC,MAAAA,MAAM,EAAE,QADC;AAETC,MAAAA,IAAI,EAAE,CAAC,IAAD;AAFG,KAAb;;AAIA,QAAI,KAAKS,eAAT,EAA0B;AACtBd,MAAAA,OAAO,CAACG,IAAR,CAAa;AACTC,QAAAA,MAAM,EAAE,SADC;AAETC,QAAAA,IAAI,EAAE,CAAC,IAAD;AAFG,OAAb;AAIH;;AACD,QAAI,KAAKU,mBAAT,EAA8B;AAC1Bf,MAAAA,OAAO,CAACG,IAAR,CAAa;AACTC,QAAAA,MAAM,EAAE,gBADC;AAETC,QAAAA,IAAI,EAAE,CAAC,IAAD;AAFG,OAAb;AAIH;;AACD,QAAI,KAAKW,aAAT,EAAwB;AACpBhB,MAAAA,OAAO,CAACG,IAAR,CAAa;AACTC,QAAAA,MAAM,EAAE,OADC;AAETC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,KAAKtB,aAAZ,EAA2B,KAAK2B,aAAhC,EAA+C,KAAKJ,cAApD;AAFG,OAAb;AAIH;;AACD,QAAI,KAAKW,UAAL,CAAgB3K,MAApB,EAA4B;AACxB0J,MAAAA,OAAO,CAACG,IAAR,CAAa;AAAEC,QAAAA,MAAM,EAAE,WAAV;AAAuBC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,KAAKC,cAAZ;AAA7B,OAAb;AACH;;AACD,QAAI,KAAKY,QAAL,EAAJ,EAAqB;AACjBlB,MAAAA,OAAO,CAACG,IAAR,CAAa;AACTC,QAAAA,MAAM,EAAE,WADC;AAETC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,KAAKC,cAAZ;AAFG,OAAb;AAIH;;AACD,QAAI,KAAKa,OAAL,IAAgB,KAAKC,eAAzB,EAA0C;AACtCpB,MAAAA,OAAO,CAACG,IAAR,CAAa;AACTC,QAAAA,MAAM,EAAE,SADC;AAETC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,KAAKC,cAAZ;AAFG,OAAb;AAIH;;AACD,QAAI,KAAKe,oBAAL,IAA6B,KAAKC,0BAAtC,EAAkE;AAC9DtB,MAAAA,OAAO,CAACG,IAAR,CAAa;AACTC,QAAAA,MAAM,EAAE,eADC;AAETC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,KAAKC,cAAZ;AAFG,OAAb;AAIH;;AACD,QAAI,KAAKiB,gBAAL,MAA2B,KAAKC,UAAhC,IAA8C,KAAK/E,gBAAnD,IAAuE,KAAKC,eAAhF,EAAiG;AAC7FsD,MAAAA,OAAO,CAACG,IAAR,CAAa;AAAEC,QAAAA,MAAM,EAAE,QAAV;AAAoBC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,KAAKC,cAAZ;AAA1B,OAAb;AACH;;AACD,QAAI,KAAKmB,eAAL,CAAqB,KAAKvC,OAA1B,CAAJ,EAAwC;AACpCc,MAAAA,OAAO,CAACG,IAAR,CAAa;AACTC,QAAAA,MAAM,EAAE,eADC;AAETC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,KAAKC,cAAZ;AAFG,OAAb;AAIH;;AACD,QAAI,KAAKoB,YAAL,CAAkBC,WAAlB,IAAiC,KAAKD,YAAL,CAAkBE,aAAnD,IAAoE,KAAKF,YAAL,CAAkBG,YAA1F,EAAwG;AACpG7B,MAAAA,OAAO,CAACG,IAAR,CAAa;AACTC,QAAAA,MAAM,EAAE,MADC;AAETC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,KAAKC,cAAZ;AAFG,OAAb;AAIH;;AACD,SAAKwB,qBAAL,CAA2B9B,OAA3B;AACA,WAAOA,OAAP;AACH,GAtGD;;AAuGA/D,EAAAA,IAAI,CAACpG,SAAL,CAAeiM,qBAAf,GAAuC,UAAU9B,OAAV,EAAmB;AACtD,QAAI,KAAK+B,uBAAT,EAAkC;AAC9B/B,MAAAA,OAAO,CAACG,IAAR,CAAa;AACTC,QAAAA,MAAM,EAAE,gBADC;AAETC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,KAAKC,cAAZ;AAFG,OAAb;AAIH;;AACD,QAAI,KAAKvB,aAAL,CAAmBiD,iBAAvB,EAA0C;AACtChC,MAAAA,OAAO,CAACG,IAAR,CAAa;AACTC,QAAAA,MAAM,EAAE,eADC;AAETC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,KAAKC,cAAZ;AAFG,OAAb;AAIH;;AACD,QAAI,KAAK2B,gBAAT,EAA2B;AACvBjC,MAAAA,OAAO,CAACG,IAAR,CAAa;AACTC,QAAAA,MAAM,EAAE,aADC;AAETC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,KAAKC,cAAZ;AAFG,OAAb;AAIH;;AACD,QAAI,KAAK4B,cAAT,EAAyB;AACrBlC,MAAAA,OAAO,CAACG,IAAR,CAAa;AACTC,QAAAA,MAAM,EAAE,YADC;AAETC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,KAAKC,cAAZ;AAFG,OAAb;AAIH;;AACD,QAAI,KAAK6B,iBAAT,EAA4B;AACxBnC,MAAAA,OAAO,CAACG,IAAR,CAAa;AACTC,QAAAA,MAAM,EAAE,eADC;AAETC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,KAAKC,cAAZ;AAFG,OAAb;AAIH;;AACD,QAAI,KAAK8B,mBAAL,CAAyB,KAAKlD,OAA9B,CAAJ,EAA4C;AACxCc,MAAAA,OAAO,CAACG,IAAR,CAAa;AAAEC,QAAAA,MAAM,EAAE,YAAV;AAAwBC,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,KAAKC,cAAZ;AAA9B,OAAb;AACH;;AACD,QAAI,KAAKjC,YAAT,EAAuB;AACnB2B,MAAAA,OAAO,CAACG,IAAR,CAAa;AAAEC,QAAAA,MAAM,EAAE,QAAV;AAAoBC,QAAAA,IAAI,EAAE,CAAC,IAAD;AAA1B,OAAb;AACH;;AACD,QAAIhJ,QAAQ,EAAZ,EAAgB;AACZ2I,MAAAA,OAAO,CAACG,IAAR,CAAa;AAAEC,QAAAA,MAAM,EAAE,QAAV;AAAoBC,QAAAA,IAAI,EAAE,CAAC,IAAD;AAA1B,OAAb;AACH;AACJ,GAxCD;AAyCA;AACJ;AACA;AACA;;;AACIpE,EAAAA,IAAI,CAACpG,SAAL,CAAewM,SAAf,GAA2B,YAAY;AACnC,SAAK/B,cAAL,GAAsB,IAAIpG,cAAJ,EAAtB;AACA,SAAKoI,cAAL;AACA,SAAKC,kBAAL;AACH,GAJD;;AAKAtG,EAAAA,IAAI,CAACpG,SAAL,CAAeyM,cAAf,GAAgC,YAAY;AACxC;AACA,SAAKE,SAAL,GAAiB,IAAjB;AACA,SAAK9B,aAAL,GAAqB,EAArB;AACA,SAAKnE,aAAL,GAAqB,EAArB;AACA,SAAKkG,QAAL,GAAgB,EAAhB;AACA,SAAKC,aAAL,GAAqB,KAArB;AACA,SAAKC,sBAAL,GAA8B,KAA9B;AACA,SAAKC,qBAAL,GAA6B,IAA7B;;AACA,QAAIvL,QAAQ,MAAM,KAAKgK,oBAAnB,IAA2C,KAAKL,aAApD,EAAmE;AAC/D,UAAI6B,UAAU,GAAG,YAAjB;AACA,WAAKA,UAAL,IAAmB,KAAnB;AACH;;AACD,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,MAAL,GAAc,KAAd;AACA,SAAKC,YAAL,GAAoB,MAApB;AACA,SAAKC,mBAAL,GAA2B,KAA3B;AACA,SAAKC,kBAAL,GAA0B,KAA1B;AACA,SAAK7F,gBAAL,GAAwBxG,SAAS,CAAChB,SAAV,CAAoByH,OAA5C;AACA,SAAK6F,eAAL,GAAuB;AACnBC,MAAAA,QAAQ,EAAE,UADS;AACGC,MAAAA,QAAQ,EAAE,UADb;AACyBC,MAAAA,KAAK,EAAE,OADhC;AACyCC,MAAAA,WAAW,EAAE,aADtD;AACqEC,MAAAA,kBAAkB,EAAE,oBADzF;AAEnBC,MAAAA,QAAQ,EAAE,UAFS;AAEGC,MAAAA,eAAe,EAAE,iBAFpB;AAEuCC,MAAAA,QAAQ,EAAE,UAFjD;AAE6DC,MAAAA,UAAU,EAAE;AAFzE,KAAvB;AAIA,SAAKC,aAAL,GAAqB;AACjBC,MAAAA,WAAW,EAAE,uBADI;AAEjBC,MAAAA,IAAI,EAAE,MAFW;AAGjBC,MAAAA,KAAK,EAAE,OAHU;AAIjBC,MAAAA,oBAAoB,EAAE,qBAJL;AAKjBC,MAAAA,aAAa,EAAE,+CALE;AAMjBC,MAAAA,OAAO,EAAE,uBANQ;AAOjBC,MAAAA,aAAa,EAAE,uBAPE;AAQjBC,MAAAA,YAAY,EAAE,sCARG;AASjBC,MAAAA,cAAc,EAAE,qBATC;AAUjBC,MAAAA,oBAAoB,EAAE,sHAVL;AAWjB;AACAC,MAAAA,GAAG,EAAE,KAZY;AAajBC,MAAAA,IAAI,EAAE,MAbW;AAcjBC,MAAAA,MAAM,EAAE,QAdS;AAejBC,MAAAA,MAAM,EAAE,QAfS;AAgBjBC,MAAAA,MAAM,EAAE,QAhBS;AAiBjB9J,MAAAA,KAAK,EAAE,OAjBU;AAkBjB+J,MAAAA,SAAS,EAAE,YAlBM;AAmBjBC,MAAAA,WAAW,EAAE,cAnBI;AAoBjBC,MAAAA,UAAU,EAAE,aApBK;AAqBjBC,MAAAA,SAAS,EAAE,YArBM;AAsBjBrK,MAAAA,MAAM,EAAE,QAtBS;AAuBjBsK,MAAAA,aAAa,EAAE,SAvBE;AAwBjBC,MAAAA,IAAI,EAAE,MAxBW;AAyBjBC,MAAAA,IAAI,EAAE,MAzBW;AA0BjBC,MAAAA,KAAK,EAAE,OA1BU;AA2BjBC,MAAAA,kBAAkB,EAAE,wCA3BH;AA4BjBC,MAAAA,oBAAoB,EAAE,0CA5BL;AA6BjBC,MAAAA,UAAU,EAAE,MA7BK;AA8BjBC,MAAAA,QAAQ,EAAE,IA9BO;AA+BjBC,MAAAA,YAAY,EAAE,QA/BG;AAgCjBC,MAAAA,aAAa,EAAE,aAhCE;AAiCjBC,MAAAA,YAAY,EAAE,gBAjCG;AAkCjBC,MAAAA,gBAAgB,EAAE,wCAlCD;AAmCjBC,MAAAA,oBAAoB,EAAE,kEAnCL;AAoCjBC,MAAAA,aAAa,EAAE,yCApCE;AAqCjBC,MAAAA,UAAU,EAAE,8CArCK;AAsCjBC,MAAAA,aAAa,EAAE,eAtCE;AAuCjBC,MAAAA,aAAa,EAAE,gBAvCE;AAwCjBC,MAAAA,MAAM,EAAE,kBAxCS;AAyCjBC,MAAAA,YAAY,EAAE,QAzCG;AA0CjBC,MAAAA,WAAW,EAAE,OA1CI;AA2CjBC,MAAAA,UAAU,EAAE,aA3CK;AA4CjBC,MAAAA,QAAQ,EAAE,WA5CO;AA6CjBC,MAAAA,QAAQ,EAAE,UA7CO;AA8CjBC,MAAAA,KAAK,EAAE,OA9CU;AA+CjBC,MAAAA,QAAQ,EAAE,WA/CO;AAgDjBC,MAAAA,QAAQ,EAAE,WAhDO;AAiDjBC,MAAAA,eAAe,EAAE,oBAjDA;AAkDjBC,MAAAA,WAAW,EAAE,cAlDI;AAmDjBC,MAAAA,kBAAkB,EAAE,uBAnDH;AAoDjBC,MAAAA,UAAU,EAAE,eApDK;AAqDjBC,MAAAA,UAAU,EAAE,iBArDK;AAsDjBC,MAAAA,IAAI,EAAE,MAtDW;AAuDjBC,MAAAA,KAAK,EAAE,sBAvDU;AAwDjBC,MAAAA,OAAO,EAAE,wBAxDQ;AAyDjBC,MAAAA,UAAU,EAAE,qBAzDK;AA0DjBC,MAAAA,OAAO,EAAE,qBA1DQ;AA2DjBC,MAAAA,UAAU,EAAE,qBA3DK;AA4DjBC,MAAAA,OAAO,EAAE,qBA5DQ;AA6DjBC,MAAAA,MAAM,EAAE,QA7DS;AA8DjBC,MAAAA,SAAS,EAAE,YA9DM;AA+DjBC,MAAAA,QAAQ,EAAE,WA/DO;AAgEjBC,MAAAA,YAAY,EAAE,eAhEG;AAiEjBC,MAAAA,QAAQ,EAAE,WAjEO;AAkEjBC,MAAAA,aAAa,EAAE,gBAlEE;AAmEjBC,MAAAA,cAAc,EAAE,iBAnEC;AAoEjBC,MAAAA,UAAU,EAAE,aApEK;AAqEjBC,MAAAA,YAAY,EAAE,eArEG;AAsEjBC,MAAAA,UAAU,EAAE,QAtEK;AAuEjBC,MAAAA,SAAS,EAAE,YAvEM;AAwEjBC,MAAAA,MAAM,EAAE,QAxES;AAyEjBC,MAAAA,UAAU,EAAE,MAzEK;AA0EjBC,MAAAA,WAAW,EAAE,OA1EI;AA2EjBC,MAAAA,QAAQ,EAAE,kBA3EO;AA4EjBC,MAAAA,WAAW,EAAE,cA5EI;AA6EjBC,MAAAA,YAAY,EAAE,gBA7EG;AA8EjBC,MAAAA,UAAU,EAAE,cA9EK;AA+EjBC,MAAAA,UAAU,EAAE,cA/EK;AAgFjBC,MAAAA,cAAc,EAAE,kBAhFC;AAiFjBC,MAAAA,SAAS,EAAE,YAjFM;AAkFjBC,MAAAA,OAAO,EAAE,SAlFQ;AAmFjBC,MAAAA,YAAY,EAAE,eAnFG;AAoFjBC,MAAAA,uBAAuB,EAAE,iBApFR;AAqFjBC,MAAAA,2BAA2B,EAAE,eArFZ;AAsFjBC,MAAAA,GAAG,EAAE,KAtFY;AAuFjBC,MAAAA,EAAE,EAAE,IAvFa;AAwFjBC,MAAAA,aAAa,EAAE,kBAxFE;AAyFjBC,MAAAA,oBAAoB,EAAE,oBAzFL;AA0FjBC,MAAAA,qBAAqB,EAAE,qBA1FN;AA2FjBC,MAAAA,cAAc,EAAE,aA3FC;AA4FjBC,MAAAA,uBAAuB,EAAE,uBA5FR;AA6FjBC,MAAAA,oBAAoB,EAAE,oBA7FL;AA8FjBC,MAAAA,sBAAsB,EAAE,wBA9FP;AA+FjBC,MAAAA,QAAQ,EAAE,aA/FO;AAgGjBC,MAAAA,QAAQ,EAAE,aAhGO;AAiGjBC,MAAAA,YAAY,EAAE,gBAjGG;AAkGjBC,MAAAA,YAAY,EAAE,gBAlGG;AAmGjBC,MAAAA,qBAAqB,EAAE,0BAnGN;AAoGjBC,MAAAA,qBAAqB,EAAE;AApGN,KAArB;AAsGA,SAAKC,UAAL,GAAkB;AACdC,MAAAA,SAAS,EAAE,WADG;AAEdC,MAAAA,OAAO,EAAE,SAFK;AAGdC,MAAAA,UAAU,EAAE,YAHE;AAIdC,MAAAA,SAAS,EAAE,WAJG;AAKdC,MAAAA,SAAS,EAAE,iBALG;AAMdC,MAAAA,OAAO,EAAE,eANK;AAOdC,MAAAA,UAAU,EAAE,kBAPE;AAQdC,MAAAA,SAAS,EAAE,iBARG;AASdC,MAAAA,IAAI,EAAE,MATQ;AAUdC,MAAAA,GAAG,EAAE,KAVS;AAWdC,MAAAA,MAAM,EAAE,QAXM;AAYdC,MAAAA,QAAQ,EAAE,WAZI;AAadC,MAAAA,OAAO,EAAE,UAbK;AAcdC,MAAAA,MAAM,EAAE,QAdM;AAedC,MAAAA,QAAQ,EAAE,UAfI;AAgBdC,MAAAA,aAAa,EAAE,iBAhBD;AAiBdC,MAAAA,eAAe,EAAE,mBAjBH;AAkBdC,MAAAA,SAAS,EAAE,YAlBG;AAmBdC,MAAAA,WAAW,EAAE,cAnBC;AAoBdC,MAAAA,YAAY,EAAE,eApBA;AAqBdC,MAAAA,UAAU,EAAE,aArBE;AAsBdC,MAAAA,aAAa,EAAE,gBAtBD;AAuBdC,MAAAA,WAAW,EAAE,cAvBC;AAwBdC,MAAAA,SAAS,EAAE,QAxBG;AAyBdC,MAAAA,SAAS,EAAE,QAzBG;AA0BdC,MAAAA,MAAM,EAAE,QA1BM;AA2BdC,MAAAA,MAAM,EAAE,QA3BM;AA4BdC,MAAAA,EAAE,EAAE,IA5BU;AA6BdC,MAAAA,KAAK,EAAE,OA7BO;AA8BdC,MAAAA,SAAS,EAAE,YA9BG;AA+BdC,MAAAA,UAAU,EAAE,aA/BE;AAgCdC,MAAAA,GAAG,EAAE,KAhCS;AAiCdC,MAAAA,QAAQ,EAAE,WAjCI;AAkCdC,MAAAA,KAAK,EAAE,OAlCO;AAmCdC,MAAAA,SAAS,EAAE,QAnCG;AAoCdC,MAAAA,cAAc,EAAE,cApCF;AAqCdC,MAAAA,SAAS,EAAE,YArCG;AAsCdC,MAAAA,aAAa,EAAE,gBAtCD;AAuCdC,MAAAA,cAAc,EAAE;AAvCF,KAAlB;AAyCA;AACH,GAvKD;AAwKA;AACJ;AACA;AACA;;;AACIrQ,EAAAA,IAAI,CAACpG,SAAL,CAAe0W,MAAf,GAAwB,YAAY;AAChC,SAAKC,GAAL,CAAS,CAAC,gBAAD,EAAmB,iBAAnB,EAAsC,gBAAtC,EAAwD,0BAAxD,CAAT;AACA,SAAKC,WAAL,CAAiBC,UAAjB,CAA4B,KAAKvQ,OAAjC,EAA0C;AAAEwQ,MAAAA,IAAI,EAAE;AAAR,KAA1C;;AACA,QAAItV,QAAQ,EAAZ,EAAgB;AACZ,WAAKuV,cAAL;AACH;;AACDpU,IAAAA,aAAa,CAAC;AAAEvC,MAAAA,MAAM,EAAE,KAAKkG;AAAf,KAAD,EAA2B,KAAK0Q,aAAhC,CAAb;AACA,SAAKC,YAAL,GAAoB,IAAIjT,MAAJ,CAAW,IAAX,EAAiB,KAAKyG,cAAtB,CAApB;AACA,SAAKyM,YAAL,GAAoB,IAAIpS,MAAJ,CAAW,IAAX,CAApB;AACA,SAAKqS,YAAL,GAAoB,IAAInS,MAAJ,CAAW,IAAX,CAApB;AACA,SAAKoS,MAAL,CAAYrT,MAAM,CAACsT,WAAnB,EAAgC,EAAhC;;AACA,QAAI,KAAKC,aAAL,GAAqBC,WAArB,CAAiCC,UAAjC,CAA4CC,OAA5C,KAAwD,IAAxD,IAAgE,KAAKH,aAAL,GAAqBC,WAArB,CAAiCC,UAAjC,CAA4CE,GAA5C,KAAoDpP,SAAxH,EAAmI;AAC/H,WAAKZ,iBAAL,GAAyB,IAAzB;AACH;;AACD,SAAKiQ,OAAL,CAAa5T,MAAM,CAAC6T,IAApB;AACA5U,IAAAA,cAAc,CAAC,KAAKqG,OAAN,EAAe,KAAKoC,0BAApB,EAAgD,IAAhD,CAAd;;AACA,QAAI,KAAKoM,iBAAT,EAA4B;AACxB,WAAKT,MAAL,CAAYrT,MAAM,CAAC+T,eAAnB,EAAoC,EAApC;AACH;;AACD,QAAI,EAAEtW,QAAQ,MAAM,KAAKuW,gBAArB,CAAJ,EAA4C;AACxC,WAAKC,eAAL;AACAzU,MAAAA,cAAc,CAAC,KAAK8F,OAAN,CAAd;AACH;;AACD,SAAK4O,gBAAL,CAAsB,KAAK5O,OAA3B;AACA,SAAK6O,UAAL;AACA,SAAKC,YAAL;AACA,SAAKC,UAAL;AACA,SAAKC,UAAL;AACA,SAAKC,WAAL;AACA,SAAKC,mBAAL;AACA,SAAKC,mBAAL;AACA,SAAK3V,WAAL;AACA,SAAKuU,MAAL,CAAYrT,MAAM,CAAC0U,UAAnB,EAA+B,EAA/B;;AACA,QAAIjX,QAAQ,MAAM,KAAKuW,gBAAvB,EAAyC;AACrC3S,MAAAA,YAAY,CAACgS,MAAb,CAAoBrT,MAAM,CAAC2U,iBAA3B,EAA8C;AAAEC,QAAAA,EAAE,EAAE,KAAKrS,OAAL,CAAaqS,EAAnB;AAAuBC,QAAAA,IAAI,EAAE;AAA7B,OAA9C;AACH;AACJ,GApCD;AAqCA;AACJ;AACA;;;AACIxS,EAAAA,IAAI,CAACpG,SAAL,CAAe6C,WAAf,GAA6B,YAAY;AACrCA,IAAAA,WAAW,CAAC,KAAKyD,OAAN,CAAX;AACH,GAFD;AAGA;AACJ;AACA;;;AACIF,EAAAA,IAAI,CAACpG,SAAL,CAAe4C,WAAf,GAA6B,YAAY;AACrCA,IAAAA,WAAW,CAAC,KAAK0D,OAAN,CAAX;AACH,GAFD;;AAGAF,EAAAA,IAAI,CAACpG,SAAL,CAAewY,mBAAf,GAAqC,YAAY;AAC7C,QAAI,KAAKnO,cAAL,IAAuB,KAAKpB,cAAL,CAAoB4P,IAApB,KAA6B,WAApD,IACA,KAAKC,gBAAL,GAAwBC,gBAAxB,CAAyC,sBAAzC,EAAiEtY,MADrE,EAC6E;AACzE,WAAKqY,gBAAL,GAAwB/W,SAAxB,CAAkCiX,GAAlC,CAAsC,iBAAtC;AACH,KAHD,MAIK;AACD,WAAKF,gBAAL,GAAwB/W,SAAxB,CAAkCF,MAAlC,CAAyC,iBAAzC;AACH;AACJ,GARD;;AASAuE,EAAAA,IAAI,CAACpG,SAAL,CAAegY,eAAf,GAAiC,YAAY;AACzC,QAAI,CAAC,KAAKvM,0BAAV,EAAsC;AAClC,UAAIwN,IAAI,GAAG,KAAKf,UAAL,EAAX;AACA,WAAKgB,kBAAL,GAA0B,KAAKzO,cAAL,CAAoB0O,UAApB,CAA+B,iBAA/B,CAA1B;;AACA,UAAI,CAAC9X,iBAAiB,CAAC4X,IAAD,CAAtB,EAA8B;AAC1B,aAAK,IAAIG,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGH,IAAI,CAACxY,MAAjC,EAAyC2Y,KAAK,EAA9C,EAAkD;AAC9C,cAAI,CAAC/X,iBAAiB,CAAC4X,IAAI,CAACG,KAAD,CAAJ,CAAYC,WAAb,CAAlB,KAAgDhY,iBAAiB,CAAC4X,IAAI,CAACG,KAAD,CAAJ,CAAYE,OAAb,CAAjB,IAA0CL,IAAI,CAACG,KAAD,CAAJ,CAAYE,OAAtG,CAAJ,EAAoH;AAChH,iBAAKC,eAAL,CAAqBN,IAAI,CAACG,KAAD,CAAzB,EAAkCA,KAAlC;AACH;AACJ;AACJ;AACJ;AACJ,GAZD;;AAaAhT,EAAAA,IAAI,CAACpG,SAAL,CAAeuZ,eAAf,GAAiC,UAAUC,GAAV,EAAeJ,KAAf,EAAsB;AACnD,SAAKxM,QAAL,CAActC,IAAd,CAAmBkP,GAAnB;AACA,SAAKlS,KAAL,CAAWkS,GAAG,CAACC,GAAf,IAAsBC,MAAM,CAACC,UAAP,CAAkBH,GAAG,CAACH,WAAtB,CAAtB;AACA,SAAKO,gBAAL,CAAsBR,KAAtB,EAA6B,KAAK9R,KAAL,CAAWkS,GAAG,CAACC,GAAf,CAA7B;AACA,SAAKrR,iBAAL,CAAuBgR,KAAvB,IAAgC,KAAKQ,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,EAAiCT,KAAjC,CAAhC;AACA,SAAK9R,KAAL,CAAWkS,GAAG,CAACC,GAAf,EAAoBnB,WAApB,CAAgC,KAAKlQ,iBAAL,CAAuBgR,KAAvB,CAAhC;AACH,GAND;AAOA;AACJ;AACA;;;AACIhT,EAAAA,IAAI,CAACpG,SAAL,CAAe8Z,kBAAf,GAAoC,UAAUN,GAAV,EAAe;AAC/C,QAAI,CAAC,KAAK/N,0BAAV,EAAsC;AAClC,UAAI2N,KAAK,GAAG,KAAKW,mBAAL,CAAyBP,GAAG,CAACC,GAA7B,CAAZ;;AACA,WAAK,IAAI3Y,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK8L,QAAL,CAAcnM,MAAlC,EAA0CK,CAAC,EAA3C,EAA+C;AAC3C,YAAI0Y,GAAG,CAACC,GAAJ,KAAY,KAAK7M,QAAL,CAAc9L,CAAd,EAAiB2Y,GAAjC,EAAsC;AAClC,eAAK7M,QAAL,CAAcoN,MAAd,CAAqBlZ,CAArB,EAAwB,CAAxB;AACA;AACH;AACJ;;AACD,WAAKyY,eAAL,CAAqBC,GAArB,EAA0BJ,KAA1B;AACH;AACJ,GAXD;AAYA;AACJ;AACA;;;AACIhT,EAAAA,IAAI,CAACpG,SAAL,CAAe4Z,gBAAf,GAAkC,UAAUK,WAAV,EAAuBC,CAAvB,EAA0B;AACxD,QAAIV,GAAG,GAAG,KAAKtB,UAAL,GAAkB+B,WAAlB,CAAV;;AACA,QAAI,KAAKrN,QAAL,CAAcuN,IAAd,CAAmB,UAAUC,WAAV,EAAuB;AAAE,aAAOA,WAAW,CAACX,GAAZ,KAAoBD,GAAG,CAACC,GAA/B;AAAqC,KAAjF,CAAJ,EAAwF;AACpFD,MAAAA,GAAG,CAACF,OAAJ,GAAcY,CAAC,CAACG,OAAhB;;AACA,UAAI,KAAKxN,aAAT,EAAwB;AACpB,aAAKyN,gBAAL,GAAwB,IAAxB;;AACA,YAAId,GAAG,CAACF,OAAR,EAAiB;AACb,eAAKiB,SAAL,CAAeC,IAAf,CAAoBhB,GAAG,CAACiB,UAAxB,EAAoC,YAApC;AACH,SAFD,MAGK;AACD,eAAKF,SAAL,CAAeG,IAAf,CAAoBlB,GAAG,CAACiB,UAAxB,EAAoC,YAApC;AACH;AACJ;AACJ;AACJ,GAdD;;AAeArU,EAAAA,IAAI,CAACpG,SAAL,CAAe2a,eAAf,GAAiC,YAAY;AACzC,SAAK9N,aAAL,GAAqB,IAArB;AACA,QAAI+N,aAAa,GAAG,KAAKtU,OAAL,CAAauU,aAAb,CAA2B,eAA3B,CAApB;;AACA,QAAI,KAAKzP,UAAL,CAAgB3K,MAAhB,IAA0B,KAAK6F,OAAL,CAAawU,YAAb,GAA4B,KAAKC,MAA3D,IAAqEH,aAAzE,EAAwF;AACpFlZ,MAAAA,QAAQ,CAAC,CAACkZ,aAAD,CAAD,EAAkB,CAAC,iBAAD,CAAlB,CAAR;AACH;;AACD,QAAII,cAAc,GAAG,KAAK9C,UAAL,GAAkB+C,MAAlB,CAAyB,UAAUzB,GAAV,EAAe;AAAE,aAAOA,GAAG,CAACX,IAAJ,KAAa,UAApB;AAAiC,KAA3E,CAArB;;AACA,QAAImC,cAAc,CAACva,MAAf,IAAyB,KAAKuK,iBAAL,CAAuBkQ,YAAvB,KAAwC,iBAArE,EAAwF;AACpF,WAAK9N,mBAAL,GAA2B,KAA3B;AACH;AACJ,GAVD;;AAWAhH,EAAAA,IAAI,CAACpG,SAAL,CAAemb,mBAAf,GAAqC,YAAY;AAC7C,SAAK,IAAIra,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK8L,QAAL,CAAcnM,MAAlC,EAA0CK,CAAC,EAA3C,EAA+C;AAC3C,WAAKwG,KAAL,CAAW,KAAKsF,QAAL,CAAc9L,CAAd,EAAiB2Y,GAA5B,EAAiC2B,cAAjC,CAAgD,KAAKhT,iBAAL,CAAuB,KAAKwE,QAAL,CAAc9L,CAAd,EAAiBsY,KAAxC,CAAhD;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;;;AACIhT,EAAAA,IAAI,CAACpG,SAAL,CAAeqb,gBAAf,GAAkC,YAAY,CAC1C;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;;;AACIjV,EAAAA,IAAI,CAACpG,SAAL,CAAesb,OAAf,GAAyB,YAAY;AACjC,QAAIC,WAAW,GAAG,KAAKjV,OAAvB;;AACA,QAAI,CAACiV,WAAL,EAAkB;AACd;AACH;;AACD,QAAIC,YAAY,GAAGD,WAAW,CAACV,aAAZ,CAA0B,eAA1B,KACfU,WAAW,CAACV,aAAZ,CAA0B,gBAA1B,CADe,GAC+B,IAD/B,GACsC,KADzD;;AAEA,QAAIW,YAAJ,EAAkB;AACd,WAAKC,YAAL;AACH;;AACD,SAAKL,cAAL;AACA,SAAKD,mBAAL;AACA,SAAK/D,MAAL,CAAYrT,MAAM,CAACuX,OAAnB,EAA4B,EAA5B;AACA,SAAKI,uBAAL;;AACA,QAAIF,YAAJ,EAAkB;AACdjW,MAAAA,MAAM,CAACvF,SAAP,CAAiBsb,OAAjB,CAAyB9U,IAAzB,CAA8B,IAA9B;AACH;;AACD,SAAKmV,UAAL,CAAgBL,OAAhB;AACA,QAAInR,OAAO,GAAG,CAAC,cAAD,EAAiB,cAAjB,EAAiC,eAAjC,EAAkD,uBAAlD,EACV,gBADU,EACQ,aADR,EACuB,gBADvB,EACyC,cADzC,EACyD,cADzD,EACyE,WADzE,EAEV,cAFU,EAEM,aAFN,EAEqB,iBAFrB,EAEwC,aAFxC,CAAd;;AAGA,SAAK,IAAIrJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqJ,OAAO,CAAC1J,MAA5B,EAAoCK,CAAC,EAArC,EAAyC;AACrC,UAAI,KAAKqJ,OAAO,CAACrJ,CAAD,CAAZ,CAAJ,EAAsB;AAClB,aAAKqJ,OAAO,CAACrJ,CAAD,CAAZ,IAAmB,IAAnB;AACH;AACJ;;AACD,QAAI,EAAEU,QAAQ,MAAM,KAAKuW,gBAArB,CAAJ,EAA4C;AACxC,WAAKzR,OAAL,CAAasV,SAAb,GAAyB,EAAzB;AACH,KAFD,MAGK;AACD,WAAKtV,OAAL,CAAauV,KAAb,CAAmBC,OAAnB,GAA6B,MAA7B;AACH;;AACD/Z,IAAAA,SAAS,CAAC,KAAKuE,OAAN,EAAe,EAAf,EAAmB,CAAC,OAAD,EAAU,aAAV,EAAyB,cAAzB,EAAyC,WAAzC,EAAsD,UAAtD,EAAkE,mBAAlE,CAAnB,CAAT;AACH,GAjCD;;AAkCAF,EAAAA,IAAI,CAACpG,SAAL,CAAe0b,uBAAf,GAAyC,YAAY;AACjD,QAAIH,WAAW,GAAG,KAAKjV,OAAvB;;AACA,QAAI,CAACiV,WAAD,IAAiB,CAACA,WAAW,CAACV,aAAZ,CAA0B,eAA1B,CAAD,IAA+C,CAACU,WAAW,CAACV,aAAZ,CAA0B,gBAA1B,CAArE,EAAmH;AAC/G;AACH;;AACD,SAAK1D,YAAL,CAAkBmE,OAAlB;AACA,SAAKS,cAAL,CAAoBT,OAApB;AACA,SAAKU,WAAL,CAAiBV,OAAjB;AACH,GARD;AASA;AACJ;AACA;AACA;;;AACIlV,EAAAA,IAAI,CAACpG,SAAL,CAAeic,aAAf,GAA+B,YAAY;AACvC,WAAO,MAAP;AACH,GAFD;;AAGA7V,EAAAA,IAAI,CAACpG,SAAL,CAAekc,kBAAf,GAAoC,YAAY;AAC5C,QAAI,KAAKC,cAAT,EAAyB;AACrB,WAAKnR,iBAAL,CAAuBoR,iBAAvB,GAA2C,eAA3C;AACA,WAAK9V,OAAL,CAAavE,SAAb,CAAuBiX,GAAvB,CAA2B,aAA3B;AACH,KAHD,MAIK;AACD,WAAK1S,OAAL,CAAavE,SAAb,CAAuBF,MAAvB,CAA8B,aAA9B;AACH;AACJ,GARD;AASA;AACJ;AACA;AACA;;AACI;AACA;;;AACAuE,EAAAA,IAAI,CAACpG,SAAL,CAAeqc,iBAAf,GAAmC,UAAUC,OAAV,EAAmBC,OAAnB,EAA4B;AAC3D,QAAIC,cAAc,GAAG,KAArB;AACA,QAAIC,kBAAkB,GAAG,KAAzB;AACA,QAAIC,aAAa,GAAG,KAApB;AACA,QAAIC,WAAJ;AACA,QAAInS,IAAI,GAAG;AAAEoS,MAAAA,WAAW,EAAE;AAAf,KAAX;;AACA,QAAI,KAAKxS,WAAT,EAAsB;AAClB;AACH;;AACD,SAAKuM,GAAL,CAAS,gBAAT;;AACA,QAAI,KAAKkG,iBAAL,EAAJ,EAA8B;AAC1B,WAAKlB,UAAL,CAAgBmB,KAAhB;AACH;;AACD,QAAIC,UAAU,GAAGvd,MAAM,CAACwd,IAAP,CAAYV,OAAZ,CAAjB;;AACA,QAAIS,UAAU,CAACE,OAAX,CAAmB,SAAnB,IAAgC,CAAC,CAArC,EAAwC;AACpC,WAAKC,kBAAL;AACAT,MAAAA,kBAAkB,GAAG,IAArB;AACH;;AACD,SAAK,IAAI/S,EAAE,GAAG,CAAT,EAAYyT,YAAY,GAAGJ,UAAhC,EAA4CrT,EAAE,GAAGyT,YAAY,CAAC1c,MAA9D,EAAsEiJ,EAAE,EAAxE,EAA4E;AACxE,UAAI0T,IAAI,GAAGD,YAAY,CAACzT,EAAD,CAAvB;;AACA,cAAQ0T,IAAR;AACI,aAAK,aAAL;AACI,eAAKhG,MAAL,CAAYrT,MAAM,CAACsZ,QAAnB,EAA6B;AAAEC,YAAAA,MAAM,EAAE,OAAV;AAAmBC,YAAAA,MAAM,EAAE,KAAKzS;AAAhC,WAA7B;AACA0R,UAAAA,cAAc,GAAG,IAAjB;AACA;;AACJ,aAAK,cAAL;AACI,cAAI,KAAKtU,kBAAT,EAA6B;AACzB,iBAAKA,kBAAL,GAA0B,KAA1B;AACA,iBAAKkP,MAAL,CAAYrT,MAAM,CAACyZ,mBAAnB,EAAwC;AAAEF,cAAAA,MAAM,EAAE,OAAV;AAAmBP,cAAAA,UAAU,EAAET,OAAO,CAACtT;AAAvC,aAAxC;AACA;AACH;;AACD,eAAKoO,MAAL,CAAYrT,MAAM,CAACyZ,mBAAnB,EAAwC;AAAEF,YAAAA,MAAM,EAAE,OAAV;AAAmBP,YAAAA,UAAU,EAAET,OAAO,CAACtT;AAAvC,WAAxC;;AACA,cAAI3H,iBAAiB,CAACib,OAAO,CAACtT,YAAR,CAAqByU,WAAtB,CAAjB,IAAuDpc,iBAAiB,CAACib,OAAO,CAACtT,YAAR,CAAqB0U,QAAtB,CAAxE,IACGrc,iBAAiB,CAACib,OAAO,CAACtT,YAAR,CAAqB2U,iBAAtB,CADpB,IAEG,CAACtc,iBAAiB,CAACkb,OAAO,CAACvT,YAAT,CAAlB,IACGsT,OAAO,CAACtT,YAAR,CAAqByU,WAArB,KAAqClB,OAAO,CAACvT,YAAR,CAAqByU,WAA3D,IACM,CAAC,KAAKhS,0BADZ,IAC0C,CAAC,KAAKD,oBADhD,IAEM,KAAKxC,YAAL,CAAkB2U,iBAAlB,IAAuC,KAAK3U,YAAL,CAAkB0U,QALxE,EAKmF;AAC/ElB,YAAAA,cAAc,GAAG,IAAjB;AACH;;AACD;;AACJ,aAAK,cAAL;AACI,eAAKpF,MAAL,CAAYrT,MAAM,CAACsZ,QAAnB,EAA6B;AAAEC,YAAAA,MAAM,EAAE,MAAV;AAAkBC,YAAAA,MAAM,EAAE,KAAK3S;AAA/B,WAA7B;AACA4R,UAAAA,cAAc,GAAG,IAAjB;AACAG,UAAAA,WAAW,GAAG,IAAd;AACA;;AACJ,aAAK,gBAAL;AACI,eAAKnE,mBAAL;AACA,eAAKpB,MAAL,CAAYrT,MAAM,CAACsZ,QAAnB,EAA6B;AAAEC,YAAAA,MAAM,EAAE,QAAV;AAAoBC,YAAAA,MAAM,EAAE,KAAKlT;AAAjC,WAA7B;AACAmS,UAAAA,cAAc,GAAG,IAAjB;;AACA,cAAI,KAAKvT,cAAL,CAAoB4P,IAApB,KAA6B,WAAjC,EAA8C;AAC1C,iBAAK+E,aAAL;AACH;;AACD;;AACJ,aAAK,QAAL;AACA,aAAK,OAAL;AACI,eAAKxG,MAAL,CAAYrT,MAAM,CAACsZ,QAAnB,EAA6B;AAAEC,YAAAA,MAAM,EAAE,QAAV;AAAoBP,YAAAA,UAAU,EAAE;AAAEc,cAAAA,KAAK,EAAEvB,OAAO,CAACuB,KAAjB;AAAwB9C,cAAAA,MAAM,EAAEuB,OAAO,CAACvB;AAAxC;AAAhC,WAA7B;AACA;;AACJ,aAAK,iBAAL;AACI,eAAK+C,YAAL,CAAkBC,SAAlB;AACApB,UAAAA,WAAW,GAAG,IAAd;AACA;;AACJ,aAAK,qBAAL;AACI,eAAKvF,MAAL,CAAYrT,MAAM,CAACsZ,QAAnB,EAA6B;AAAEC,YAAAA,MAAM,EAAE,gBAAV;AAA4BC,YAAAA,MAAM,EAAE,KAAKrS;AAAzC,WAA7B;AACA,eAAK+L,YAAL,CAAkBxP,OAAlB;AACA,eAAKqW,YAAL,CAAkBC,SAAlB;AACA;;AACJ,aAAK,gBAAL;AACI,eAAK3G,MAAL,CAAYrT,MAAM,CAACsZ,QAAnB,EAA6B;AAAEC,YAAAA,MAAM,EAAE,WAAV;AAAuBC,YAAAA,MAAM,EAAE,KAAKxS;AAApC,WAA7B;AACA;;AACJ,aAAK,gBAAL;AACI,cAAI,KAAKiT,eAAT,EAA0B;AACtB,iBAAK9B,kBAAL;AACA,iBAAK8B,eAAL,CAAqBC,sBAArB;AACH;;AACD;;AACJ,aAAK,aAAL;AACI,eAAKC,aAAL,GAAqB/a,gBAAgB,CAAC,KAAKgb,WAAN,CAArC;AACA3B,UAAAA,cAAc,GAAG,IAAjB;AACA;;AACJ,aAAK,gBAAL;AACI,eAAK4B,gBAAL,GAAwBjb,gBAAgB,CAAC,KAAKkb,cAAN,CAAxC;AACA7B,UAAAA,cAAc,GAAG,IAAjB;AACA;;AACJ,aAAK,eAAL;AACI,eAAKpF,MAAL,CAAYrT,MAAM,CAACsZ,QAAnB,EAA6B;AAAEC,YAAAA,MAAM,EAAE,OAAV;AAAmBC,YAAAA,MAAM,EAAE,KAAKpS;AAAhC,WAA7B;AACA,eAAK2S,YAAL,CAAkBC,SAAlB;AACAvB,UAAAA,cAAc,GAAG,IAAjB;AACAG,UAAAA,WAAW,GAAG,IAAd;AACA;;AACJ,aAAK,yBAAL;AACA,aAAK,WAAL;AACIH,UAAAA,cAAc,GAAG,IAAjB;AACA;;AACJ,aAAK,SAAL;AACI,eAAKpF,MAAL,CAAYrT,MAAM,CAACsZ,QAAnB,EAA6B;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAA7B;AACA;;AACJ,aAAK,eAAL;AACI,eAAKlG,MAAL,CAAYrT,MAAM,CAACyZ,mBAAnB,EAAwC;AACpCF,YAAAA,MAAM,EAAE,OAD4B;AACnBP,YAAAA,UAAU,EAAET,OAAO,CAACpT,aADD;AAEpCoV,YAAAA,aAAa,EAAE/B,OAAO,CAACrT;AAFa,WAAxC;AAIA;;AACJ,aAAK,YAAL;AACI,cAAI,CAAC,KAAKkC,UAAL,CAAgB3K,MAAjB,IAA2B,KAAK0K,aAAhC,IAAiD,KAAKjC,aAAL,CAAmBG,OAAnB,CAA2B5I,MAAhF,EAAwF;AACpF+b,YAAAA,cAAc,GAAG,IAAjB;AACH;;AACD,eAAKpF,MAAL,CAAYrT,MAAM,CAACsZ,QAAnB,EAA6B;AAAEC,YAAAA,MAAM,EAAE,WAAV;AAAuBP,YAAAA,UAAU,EAAET;AAAnC,WAA7B;AACA;;AACJ,aAAK,eAAL;AACA,aAAK,YAAL;AACA,aAAK,sBAAL;AACA,aAAK,cAAL;AACA,aAAK,QAAL;AACI,eAAK3F,GAAL,CAAS,qBAAT;AACA+F,UAAAA,aAAa,GAAG,IAAhB;AACAD,UAAAA,kBAAkB,GAAG,IAArB;AACA;;AACJ,aAAK,OAAL;AACI,cAAI,CAAC,KAAKnF,aAAL,GAAqBiH,sBAA1B,EAAkD;AAC9C/B,YAAAA,cAAc,GAAG,IAAjB;AACH;;AACD,eAAKlF,aAAL,GAAqBiH,sBAArB,GAA8C,KAA9C;AACA;;AACJ;AACI,eAAKC,sBAAL,CAA4BpB,IAA5B,EAAkCd,OAAlC,EAA2CG,kBAA3C;AAzGR;AA2GH;;AACD,QAAIE,WAAJ,EAAiB;AACb,WAAKpE,mBAAL;AACH;;AACD,QAAIkE,kBAAJ,EAAwB;AACpB,UAAIC,aAAa,IAAI,KAAKhR,gBAAL,EAAjB,IAA4C,KAAKC,UAArD,EAAiE;AAC7D,YAAI,EAAEnK,QAAQ,MAAM,KAAKuW,gBAArB,CAAJ,EAA4C;AACxC,eAAK2E,aAAL;AACH;AACJ,OAJD,MAKK;AACD,aAAKjV,OAAL;AACH;AACJ,KATD,MAUK,IAAI+U,cAAJ,EAAoB;AACrB,WAAKpF,MAAL,CAAYrT,MAAM,CAAC0a,YAAnB,EAAiCjU,IAAjC;AACAgS,MAAAA,cAAc,GAAG,KAAjB;AACA,WAAKkC,iBAAL,CAAuBpC,OAAO,CAAChT,gBAA/B;AACH;AACJ,GAlJD;AAmJA;;;AACAlD,EAAAA,IAAI,CAACpG,SAAL,CAAewe,sBAAf,GAAwC,UAAUpB,IAAV,EAAgBd,OAAhB,EAAyBG,kBAAzB,EAA6C;AACjF,YAAQW,IAAR;AACI,WAAK,WAAL;AACI,aAAKuB,SAAL;;AACA,YAAI,KAAK7T,WAAT,EAAsB;AAClB,eAAKxE,OAAL,CAAauU,aAAb,CAA2B,cAA3B,EAA2C+D,aAA3C,CAAyD,CAAzD,EAA4DC,SAA5D,GAAwEvC,OAAO,CAACuC,SAAhF;AACA,eAAKvY,OAAL,CAAauU,aAAb,CAA2B,cAA3B,EAA2C+D,aAA3C,CAAyD,CAAzD,EAA4DE,QAA5D;AACH;;AACD,YAAI,KAAK/D,MAAL,KAAgB,MAApB,EAA4B;AACxB,eAAK5D,YAAL,CAAkB4H,aAAlB,CAAgC,CAACzC,OAAO,CAACuC,SAAzC;AACA,eAAK1H,YAAL,CAAkB6H,UAAlB;AACH;;AACD,YAAI,KAAK1T,OAAL,IAAgB,KAAK2T,aAAzB,EAAwC;AACpC,eAAKA,aAAL,CAAmBC,UAAnB,GAAgCN,aAAhC,CAA8C,CAA9C,EAAiDC,SAAjD,GAA6DvC,OAAO,CAACuC,SAArE;AACA,eAAKI,aAAL,CAAmBC,UAAnB,GAAgCN,aAAhC,CAA8C,CAA9C,EAAiDE,QAAjD;AACH;;AACD,YAAI,KAAK1S,gBAAL,IAAyB,KAAK+S,iBAAlC,EAAqD;AACjD,eAAKA,iBAAL,CAAuBC,cAAvB,GAAwCR,aAAxC,CAAsD,CAAtD,EAAyDC,SAAzD,GAAqEvC,OAAO,CAACuC,SAA7E;AACA,eAAKM,iBAAL,CAAuBC,cAAvB,GAAwCR,aAAxC,CAAsD,CAAtD,EAAyDE,QAAzD;AACH;;AACD,YAAI,KAAKzS,cAAL,IAAuB,KAAKgT,gBAAhC,EAAkD;AAC9C,eAAKA,gBAAL,CAAsBC,aAAtB,GAAsCV,aAAtC,CAAoD,CAApD,EAAuDC,SAAvD,GAAmEvC,OAAO,CAACuC,SAA3E;AACA,eAAKQ,gBAAL,CAAsBC,aAAtB,GAAsCV,aAAtC,CAAoD,CAApD,EAAuDE,QAAvD;AACH;;AACD,YAAI,KAAK7V,cAAL,CAAoB4P,IAApB,KAA6B,WAA7B,IAA4C,KAAK5P,cAAL,CAAoBsW,qBAApE,EAA2F;AACvF,eAAK3B,aAAL;AACH;;AACD,aAAKxG,MAAL,CAAYrT,MAAM,CAACyb,UAAnB,EAA+B,EAA/B;AACA;;AACJ,WAAK,cAAL;AACI,aAAKvI,YAAL,CAAkBxP,OAAlB;AACA;;AACJ,WAAK,eAAL;AACI,aAAKqW,YAAL,CAAkBC,SAAlB;AACA,aAAK0B,iBAAL;AACA;;AACJ,WAAK,WAAL;AACI,YAAI,KAAKC,SAAT,EAAoB;AAChBhe,UAAAA,QAAQ,CAAC,CAAC,KAAK4E,OAAN,CAAD,EAAiB,mBAAjB,CAAR;AACH,SAFD,MAGK;AACD3E,UAAAA,WAAW,CAAC,CAAC,KAAK2E,OAAN,CAAD,EAAiB,mBAAjB,CAAX;AACH;;AACD,aAAK2Q,YAAL,CAAkBxP,OAAlB;AACA,aAAKqW,YAAL,CAAkBC,SAAlB;AACA;;AACJ,WAAK,WAAL;AACI,aAAK4B,eAAL;AACA;;AACJ,WAAK,gBAAL;AACI,aAAK7B,YAAL,CAAkBC,SAAlB;AACA,aAAK3G,MAAL,CAAYrT,MAAM,CAACsZ,QAAnB,EAA6B;AAAEC,UAAAA,MAAM,EAAE,YAAV;AAAwBC,UAAAA,MAAM,EAAE;AAAhC,SAA7B;AACA;;AACJ,WAAK,iBAAL;AACI,aAAKnG,MAAL,CAAYrT,MAAM,CAACsZ,QAAnB,EAA6B;AAAEC,UAAAA,MAAM,EAAE,YAAV;AAAwBC,UAAAA,MAAM,EAAE,KAAKqC;AAArC,SAA7B;AACA;;AACJ,WAAK,kBAAL;AACI,aAAKxI,MAAL,CAAYrT,MAAM,CAACsZ,QAAnB,EAA6B;AAAEC,UAAAA,MAAM,EAAE,aAAV;AAAyBC,UAAAA,MAAM,EAAE,KAAKnR;AAAtC,SAA7B;AACA;;AACJ,WAAK,mBAAL;AACI,aAAKgL,MAAL,CAAYrT,MAAM,CAACsZ,QAAnB,EAA6B;AAAEC,UAAAA,MAAM,EAAE,eAAV;AAA2BC,UAAAA,MAAM,EAAE,KAAKjR;AAAxC,SAA7B;AACA;;AACJ,WAAK,gBAAL;AACI,aAAKkM,mBAAL;AACA,aAAKpB,MAAL,CAAYrT,MAAM,CAACyZ,mBAAnB,EAAwC;AAAEF,UAAAA,MAAM,EAAE,QAAV;AAAoBP,UAAAA,UAAU,EAAET,OAAO,CAACrT;AAAxC,SAAxC;AACA;;AACJ,WAAK,gBAAL;AACI,aAAKmO,MAAL,CAAYrT,MAAM,CAACyZ,mBAAnB,EAAwC;AAAEF,UAAAA,MAAM,EAAE,QAAV;AAAoBP,UAAAA,UAAU,EAAET,OAAO,CAACnT;AAAxC,SAAxC;AACA;;AACJ,WAAK,cAAL;AACI,aAAKiO,MAAL,CAAYrT,MAAM,CAACyZ,mBAAnB,EAAwC;AAAEF,UAAAA,MAAM,EAAE;AAAV,SAAxC;AACA;;AACJ,WAAK,mBAAL;AACI,aAAKlG,MAAL,CAAYrT,MAAM,CAACyZ,mBAAnB,EAAwC;AAAEF,UAAAA,MAAM,EAAE,WAAV;AAAuBP,UAAAA,UAAU,EAAET,OAAO,CAACtR;AAA3C,SAAxC;AACA;;AACJ,WAAK,cAAL;AACI,aAAKoM,MAAL,CAAYrT,MAAM,CAACyZ,mBAAnB,EAAwC;AAAEF,UAAAA,MAAM,EAAE,MAAV;AAAkBP,UAAAA,UAAU,EAAET,OAAO,CAACzQ;AAAtC,SAAxC;AACA;;AACJ,WAAK,eAAL;AACA,WAAK,kBAAL;AACI,YAAI,KAAKgU,aAAT,EAAwB;AACpB,eAAKC,aAAL;AACH,SAFD,MAGK;AACD,eAAKC,cAAL;AACH;;AACD,aAAK3I,MAAL,CAAYrT,MAAM,CAACic,YAAnB,EAAiC;AAAEC,UAAAA,IAAI,EAAE,UAAR;AAAoBC,UAAAA,SAAS,EAAG9C,IAAI,KAAK;AAAzC,SAAjC;AACA;;AACJ,WAAK,YAAL;AACI,YAAI+C,SAAS,GAAG,KAAK7I,aAAL,GAAqB8I,QAArB,EAAhB;;AACA,YAAI5gB,MAAM,CAAC6gB,cAAP,CAAsB/D,OAAtB,EAA+BgE,SAAnC,EAA8C;AAC1C,cAAIC,SAAS,GAAG,KAAKC,uBAAL,GAA+B,CAA/B,CAAhB;;AACA,eAAK,IAAI1f,CAAC,GAAG,CAAR,EAAW2f,KAAK,GAAGjhB,MAAM,CAACwd,IAAP,CAAYV,OAAO,CAAC9E,UAApB,CAAxB,EAAyD1W,CAAC,GAAG2f,KAAK,CAAChgB,MAAnE,EAA2EK,CAAC,EAA5E,EAAgF;AAC5E,iBAAK4f,UAAL,CAAgBnf,QAAQ,CAACgf,SAAD,EAAY,KAAK/I,UAAL,CAAgBiJ,KAAK,CAAC3f,CAAD,CAArB,CAAZ,CAAxB,EAAgE,KAAK0W,UAAL,CAAgBiJ,KAAK,CAAC3f,CAAD,CAArB,CAAhE;AACH;AACJ,SALD,MAMK,IAAIqf,SAAS,CAACQ,SAAd,EAAyB;AAC1B,cAAIC,OAAO,GAAG,CAACvf,iBAAiB,CAAC,KAAKmW,UAAN,CAAlB,GAAsC,KAAKA,UAAL,CAAgBqJ,MAAtD,GAA+D,EAA7E;AACA,cAAIC,KAAK,GAAIX,SAAS,CAACY,KAAV,IAAmB,EAAhC;;AACA,eAAK,IAAIjgB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGggB,KAAK,CAACrgB,MAA1B,EAAkCK,CAAC,EAAnC,EAAuC;AACnC8f,YAAAA,OAAO,GAAGle,QAAQ,CAACqe,KAAT,CAAeH,OAAf,EAAwBE,KAAK,CAAChgB,CAAD,CAA7B,EAAkCqf,SAAS,CAAC/U,UAAV,IAAwB,EAA1D,CAAV;AACH;;AACD,eAAKoM,UAAL,GAAkB;AACdqJ,YAAAA,MAAM,EAAED,OADM;AACGI,YAAAA,KAAK,EAAE,KAAKxJ,UAAL,CAAgBwJ,KAD1B;AAEd5V,YAAAA,UAAU,EAAE,KAAKoM,UAAL,CAAgBpM;AAFd,WAAlB;AAIA,eAAKkM,aAAL,GAAqB2J,QAArB,CAA8B,EAA9B;AACAd,UAAAA,SAAS,CAACe,QAAV,CAAmB,KAAK1J,UAAxB;AACH,SAZI,MAaA;AACD,eAAKF,aAAL,GAAqB2J,QAArB,CAA8B;AAAEE,YAAAA,aAAa,EAAE;AAAjB,WAA9B;AACA,eAAK/J,MAAL,CAAYrT,MAAM,CAACqd,kBAAnB,EAAuC,EAAvC;;AACA,cAAI,CAAC3E,kBAAL,EAAyB;AACrB,iBAAKxF,YAAL,CAAkBxP,OAAlB;;AACA,gBAAI,KAAK2F,mBAAT,EAA8B;AAC1B,mBAAKgK,MAAL,CAAYrT,MAAM,CAACsd,yBAAnB,EAA8C,EAA9C;AACH;AACJ;AACJ;;AACD,aAAKC,aAAL;AACA;;AACJ,WAAK,aAAL;AACI,YAAIC,MAAM,GAAGjF,OAAO,CAACkF,WAAR,GAAsB9f,QAAtB,GAAiCC,WAA9C;AACA4f,QAAAA,MAAM,CAAC,CAAC,KAAKjb,OAAN,CAAD,EAAiB,aAAjB,CAAN;AACA;;AACJ,WAAK,kBAAL;AACI,YAAI,CAAC,KAAKmb,0BAAV,EAAsC;AAClC,eAAKC,SAAL,CAAepF,OAAO,CAAChT,gBAAvB;AACH;;AACD,aAAKmY,0BAAL,GAAkC,KAAlC;AACA;;AACJ,WAAK,gBAAL;AACI,aAAKE,YAAL,CAAkBC,eAAlB;AACA;AApIR;AAsIH,GAvID;;AAwIAxb,EAAAA,IAAI,CAACpG,SAAL,CAAe0e,iBAAf,GAAmC,UAAUtF,KAAV,EAAiB;AAChD,QAAI7S,KAAK,GAAG,IAAZ;;AACA,QAAI6S,KAAK,KAAK,CAAC,CAAf,EAAkB;AACd,UAAIyI,IAAI,GAAG,YAAY;AACnBtb,QAAAA,KAAK,CAACmb,SAAN,CAAgBtI,KAAhB;;AACA7S,QAAAA,KAAK,CAACub,GAAN,CAAU/d,MAAM,CAACge,YAAjB,EAA+BF,IAA/B;AACH,OAHD;;AAIA,WAAKG,EAAL,CAAQje,MAAM,CAACge,YAAf,EAA6BF,IAA7B,EAAmC,IAAnC;AACH;AACJ,GATD;AAUA;AACJ;AACA;;;AACIzb,EAAAA,IAAI,CAACpG,SAAL,CAAeiiB,aAAf,GAA+B,UAAU7E,IAAV,EAAgB8E,YAAhB,EAA8B;AACzD3c,IAAAA,MAAM,CAACvF,SAAP,CAAiBiiB,aAAjB,CAA+Bzb,IAA/B,CAAoC,IAApC,EAA0C4W,IAA1C,EAAgD8E,YAAhD;;AACA,QAAIjZ,cAAc,GAAG,gBAArB;;AACA,QAAImU,IAAI,CAACnU,cAAD,CAAJ,IAAwB,KAAKkZ,YAA7B,IAA6CD,YAAjD,EAA+D;AAC3D,WAAKC,YAAL,CAAkBC,aAAlB;AACH;AACJ,GAND;AAOA;AACJ;AACA;;;AACIhc,EAAAA,IAAI,CAACpG,SAAL,CAAeqiB,cAAf,GAAgC,YAAY;AACxC,QAAIC,UAAU,GAAG,KAAK5W,gBAAL,EAAjB;AACA,QAAI6W,UAAU,GAAG,KAAKC,yBAAL,EAAjB;AACA,QAAIC,WAAW,GAAG,KAAKC,0BAAL,EAAlB;;AACA,QAAIJ,UAAU,IAAI,CAACC,UAAf,IAA6B,CAACE,WAAlC,EAA+C;AAC3C,WAAK3b,WAAL,GAAmB,CAAnB;AACH,KAFD,MAGK,IAAI,CAACwb,UAAD,KAAgBC,UAAU,IAAIE,WAA9B,CAAJ,EAAgD;AACjD,UAAKF,UAAU,IAAI,CAACE,WAAhB,IAAiCA,WAAW,IAAI,CAACF,UAArD,EAAkE;AAC9D,aAAKzb,WAAL,GAAmB,CAAnB;AACH,OAFD,MAGK,IAAIyb,UAAU,IAAIE,WAAlB,EAA+B;AAChC,aAAK3b,WAAL,GAAmB,CAAnB;AACH;AACJ;AACJ,GAfD;AAgBA;AACJ;AACA;;;AACIV,EAAAA,IAAI,CAACpG,SAAL,CAAe2iB,cAAf,GAAgC,YAAY;AACxC,WAAO,KAAK7b,WAAZ;AACH,GAFD;AAGA;AACJ;AACA;;;AACIV,EAAAA,IAAI,CAACpG,SAAL,CAAeuY,mBAAf,GAAqC,YAAY;AAC7C,QAAIqK,WAAW,GAAG,GAAGC,KAAH,CAASrc,IAAT,CAAc,KAAKsS,gBAAL,GAAwBC,gBAAxB,CAAyC,yCAAzC,CAAd,CAAlB;AACA,QAAI+J,UAAU,GAAG,GAAGD,KAAH,CAASrc,IAAT,CAAc,KAAKsS,gBAAL,GAAwBC,gBAAxB,CAAyC,sBAAzC,CAAd,CAAjB;AACA,QAAIgK,IAAI,GAAG,KAAK7K,UAAL,EAAX;;AACA,QAAI,KAAKzM,0BAAL,IAAmC,KAAKC,gBAAL,EAAvC,EAAgE;AAC5D,UAAIsX,KAAK,GAAG,KAAKC,aAAL,CAAmBC,cAAnB,EAAZ;AACAN,MAAAA,WAAW,GAAGI,KAAK,CAACviB,MAAN,GAAeuiB,KAAf,GAAuBJ,WAArC;AACH;;AACD,SAAK,IAAI9hB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8hB,WAAW,CAACniB,MAAhC,EAAwCK,CAAC,EAAzC,EAA6C;AACzC,UAAIqiB,IAAI,GAAGP,WAAW,CAAC9hB,CAAD,CAAtB;;AACA,UAAI,KAAKqK,aAAL,IAAsB,KAAKF,eAA3B,IAA8C,KAAKL,YAAvD,EAAqE;AACjE,YAAI,CAACmY,IAAI,CAACjiB,CAAD,CAAJ,CAAQmK,eAAT,IAA4B,CAAC8X,IAAI,CAACjiB,CAAD,CAAJ,CAAQ8J,YAArC,IAAqD,CAACmY,IAAI,CAACjiB,CAAD,CAAJ,CAAQqK,aAAlE,EAAiF;AAC7EgY,UAAAA,IAAI,CAACphB,SAAL,CAAeiX,GAAf,CAAmB,iBAAnB;AACH,SAFD,MAGK;AACDmK,UAAAA,IAAI,CAACphB,SAAL,CAAeiX,GAAf,CAAmB,gBAAnB;AACH;AACJ;AACJ;;AACD,SAAK,IAAIgI,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG8B,UAAU,CAACriB,MAAvC,EAA+CugB,KAAK,EAApD,EAAwD;AACpD,UAAI,KAAK/V,eAAT,EAA0B;AACtB6X,QAAAA,UAAU,CAAC9B,KAAD,CAAV,CAAkBjf,SAAlB,CAA4BiX,GAA5B,CAAgC,gBAAhC;AACH;AACJ;AACJ,GAxBD;;AAyBA5S,EAAAA,IAAI,CAACpG,SAAL,CAAeojB,iBAAf,GAAmC,UAAU/Z,OAAV,EAAmB;AAClD,SAAK,IAAIvI,CAAC,GAAG,CAAR,EAAWuiB,GAAG,GAAGha,OAAO,CAAC5I,MAA9B,EAAsCK,CAAC,GAAGuiB,GAA1C,EAA+CviB,CAAC,EAAhD,EAAoD;AAChD,UAAIuI,OAAO,CAACvI,CAAD,CAAP,CAAWuI,OAAf,EAAwB;AACpB,aAAK+Z,iBAAL,CAAuB/Z,OAAO,CAACvI,CAAD,CAAP,CAAWuI,OAAlC;AACH,OAFD,MAGK;AACD,aAAKia,WAAL,CAAiBhZ,IAAjB,CAAsBjB,OAAO,CAACvI,CAAD,CAA7B;AACH;AACJ;;AACD,SAAKyiB,uBAAL;AACA,SAAKC,mBAAL;AACA,SAAKC,qBAAL;AACH,GAZD;;AAaArd,EAAAA,IAAI,CAACpG,SAAL,CAAeujB,uBAAf,GAAyC,YAAY;AACjD,QAAIR,IAAI,GAAG,KAAKO,WAAhB;AACA,QAAII,QAAQ,GAAG,EAAf;AACA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,WAAW,GAAG,EAAlB;;AACA,QAAI,KAAK/c,eAAL,IAAwB,KAAKD,gBAAjC,EAAmD;AAC/C,WAAK,IAAI9F,CAAC,GAAG,CAAR,EAAWuiB,GAAG,GAAGN,IAAI,CAACtiB,MAA3B,EAAmCK,CAAC,GAAGuiB,GAAvC,EAA4CviB,CAAC,EAA7C,EAAiD;AAC7C;AACA,YAAI0Y,GAAG,GAAGuJ,IAAI,CAACjiB,CAAD,CAAd;;AACA,YAAI0Y,GAAG,CAACqK,MAAJ,KAAe,MAAnB,EAA2B;AACvBrK,UAAAA,GAAG,CAACsK,WAAJ,GAAkB,aAAlB;AACAJ,UAAAA,QAAQ,CAACpZ,IAAT,CAAckP,GAAd;AACH,SAHD,MAIK,IAAIA,GAAG,CAACqK,MAAJ,KAAe,OAAnB,EAA4B;AAC7BrK,UAAAA,GAAG,CAACsK,WAAJ,GAAkB,cAAlB;AACAH,UAAAA,SAAS,CAACrZ,IAAV,CAAekP,GAAf;AACH,SAHI,MAIA;AACDA,UAAAA,GAAG,CAACsK,WAAJ,GAAkB,SAAlB;AACAF,UAAAA,WAAW,CAACtZ,IAAZ,CAAiBkP,GAAjB;AACH;AACJ;;AACD,WAAK8J,WAAL,GAAmBI,QAAQ,CAACK,MAAT,CAAgBH,WAAhB,EAA6BG,MAA7B,CAAoCJ,SAApC,CAAnB;AACH;AACJ,GAxBD;;AAyBAvd,EAAAA,IAAI,CAACpG,SAAL,CAAewjB,mBAAf,GAAqC,YAAY;AAC7C,QAAI,KAAK3c,eAAL,IAAwB,KAAKD,gBAAjC,EAAmD;AAC/C;AACH;;AACD,QAAImc,IAAI,GAAG,KAAKO,WAAhB;AACA,QAAIU,iBAAiB,GAAG,KAAKC,aAA7B;AACA,QAAIC,gBAAgB,GAAG,KAAKxY,gBAAL,EAAvB;AACA,QAAIsV,KAAK,GAAG,CAAZ;;AACA,SAAK,IAAIlgB,CAAC,GAAG,CAAR,EAAWuiB,GAAG,GAAGN,IAAI,CAACtiB,MAA3B,EAAmCK,CAAC,GAAGuiB,GAAvC,EAA4CviB,CAAC,EAA7C,EAAiD;AAC7C;AACA,UAAI0Y,GAAG,GAAGuJ,IAAI,CAACjiB,CAAD,CAAd;;AACA,UAAIkjB,iBAAJ,EAAuB;AACnB,YAAIljB,CAAC,GAAGkjB,iBAAR,EAA2B;AACvBxK,UAAAA,GAAG,CAACsK,WAAJ,GAAkB,aAAlB;AACH,SAFD,MAGK;AACDtK,UAAAA,GAAG,CAACsK,WAAJ,GAAkB,SAAlB;AACH;AACJ;;AACD,UAAItK,GAAG,CAAC2K,QAAJ,IAAgBrjB,CAAC,IAAIkjB,iBAAzB,EAA4C;AACxCxK,QAAAA,GAAG,CAACsK,WAAJ,GAAkB,aAAlB;AACAf,QAAAA,IAAI,CAAC/I,MAAL,CAAY,KAAKiK,aAAL,GAAqBjD,KAAjC,EAAwC,CAAxC,EAA2C+B,IAAI,CAAC/I,MAAL,CAAYlZ,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAA3C;AACAkgB,QAAAA,KAAK;AACR,OAJD,MAKK,IAAIkD,gBAAgB,IAAI,CAACF,iBAAzB,EAA4C;AAC7CxK,QAAAA,GAAG,CAACsK,WAAJ,GAAkB,SAAlB;AACH;AACJ;AACJ,GA5BD;;AA6BA1d,EAAAA,IAAI,CAACpG,SAAL,CAAeokB,kBAAf,GAAoC,YAAY;AAC5C,WAAO,KAAK1Y,gBAAL,MAA2B,KAAK8W,yBAAL,EAAlC;AACH,GAFD;;AAGApc,EAAAA,IAAI,CAACpG,SAAL,CAAeqkB,YAAf,GAA8B,YAAY;AACtC,WAAO,KAAK3Y,gBAAL,OAA4B,CAA5B,IAAiC,KAAK8W,yBAAL,OAAqC,CAAtE,IAA2E,KAAKE,0BAAL,OAAsC,CAAxH;AACH,GAFD;;AAGAtc,EAAAA,IAAI,CAACpG,SAAL,CAAeskB,aAAf,GAA+B,YAAY;AACvC,WAAO,KAAKC,UAAZ;AACH,GAFD;;AAGAne,EAAAA,IAAI,CAACpG,SAAL,CAAeyjB,qBAAf,GAAuC,YAAY;AAC/C,QAAIV,IAAI,GAAG,KAAKO,WAAhB;AACA,QAAIkB,WAAW,GAAG,CAAlB;AACA,QAAIzd,YAAY,GAAG,CAAnB;AACA,QAAIkd,aAAa,GAAG,KAAKvY,gBAAL,EAApB;;AACA,SAAK,IAAI5K,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiiB,IAAI,CAACtiB,MAAzB,EAAiCK,CAAC,EAAlC,EAAsC;AAClC,UAAIiiB,IAAI,CAACjiB,CAAD,CAAJ,CAAQ2jB,UAAZ,EAAwB;AACpB,YAAI3jB,CAAC,GAAGmjB,aAAR,EAAuB;AACnBlB,UAAAA,IAAI,CAAC/I,MAAL,CAAYwK,WAAZ,EAAyB,CAAzB,EAA4BzB,IAAI,CAAC/I,MAAL,CAAYlZ,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAA5B;AACA0jB,UAAAA,WAAW;AACd,SAHD,MAIK;AACDzB,UAAAA,IAAI,CAAC/I,MAAL,CAAYiK,aAAa,GAAGld,YAA5B,EAA0C,CAA1C,EAA6Cgc,IAAI,CAAC/I,MAAL,CAAYlZ,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAA7C;AACAiG,UAAAA,YAAY;AACf;AACJ;AACJ;AACJ,GAjBD;;AAkBAX,EAAAA,IAAI,CAACpG,SAAL,CAAeiY,gBAAf,GAAkC,UAAU8K,IAAV,EAAgB;AAC9C,SAAK,IAAIjiB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiiB,IAAI,CAACtiB,MAAzB,EAAiCK,CAAC,EAAlC,EAAsC;AAClC,UAAIiiB,IAAI,CAACjiB,CAAD,CAAJ,CAAQuI,OAAZ,EAAqB;AACjB,aAAK4O,gBAAL,CAAsB8K,IAAI,CAACjiB,CAAD,CAAJ,CAAQuI,OAA9B;AACH,OAFD,MAGK,IAAI0Z,IAAI,CAACjiB,CAAD,CAAJ,CAAQ2jB,UAAZ,EAAwB;AACzB,aAAKzc,oBAAL;AACH;AACJ;AACJ,GATD;AAUA;AACJ;AACA;AACA;AACA;;;AACI5B,EAAAA,IAAI,CAACpG,SAAL,CAAekY,UAAf,GAA4B,UAAUwM,SAAV,EAAqB;AAC7C,QAAIne,KAAK,GAAG,IAAZ;;AACA,QAAIoe,MAAM,GAAG,KAAKje,aAAL,CAAmBke,GAAnB,CAAuB,UAAUC,CAAV,EAAa;AAAE,aAAOA,CAAC,GAAGte,KAAK,CAAC2C,aAAN,CAAoBG,OAApB,CAA4B5I,MAAvC;AAAgD,KAAtF,EAAwFwa,MAAxF,CAA+F,UAAU4J,CAAV,EAAa;AAAE,aAAOA,CAAC,GAAG,CAAC,CAAZ;AAAgB,KAA9H,CAAb;AACA,QAAIC,IAAI,GAAGH,MAAM,CAAClkB,MAAlB;;AACA,QAAI,CAAC,KAAKgL,0BAAN,IAAoCpK,iBAAiB,CAAC,KAAKiiB,WAAN,CAArD,IAA2E,KAAKA,WAAL,CAAiB7iB,MAAjB,KAA4B,CAAvG,IAA4GikB,SAAhH,EAA2H;AACvH,WAAKpB,WAAL,GAAmB,EAAnB;AACA,WAAKF,iBAAL,CAAuB,KAAK/Z,OAA5B;AACH;;AACD,QAAIA,OAAO,GAAGyb,IAAI,KAAK,CAAT,GAAa,KAAKxB,WAAlB,GACV,KAAKA,WAAL,CAAiBT,KAAjB,CAAuB8B,MAAM,CAAC,CAAD,CAA7B,EAAkCA,MAAM,CAACG,IAAI,GAAG,CAAR,CAAN,GAAmB,CAArD,CADJ;;AAEA,QAAI,KAAK7B,aAAL,IAAsB,KAAKxX,0BAA3B,IAAyD,KAAK4Y,YAAL,EAAzD,IAAgFM,MAAM,CAAClkB,MAAvF,IACGkkB,MAAM,CAAC,CAAD,CAAN,GAAY,CADnB,EACsB;AAClB,UAAIrC,UAAU,GAAG,KAAKW,aAAL,CAAmB8B,gBAAnB,CAAoC1b,OAApC,CAAjB;AACAA,MAAAA,OAAO,GAAGiZ,UAAV;AACH;;AACD,WAAOjZ,OAAP;AACH,GAhBD;AAiBA;AACJ;AACA;;;AACIjD,EAAAA,IAAI,CAACpG,SAAL,CAAeglB,kCAAf,GAAoD,UAAUC,aAAV,EAAyBzL,GAAzB,EAA8B;AAC9E,SAAK,IAAI1Y,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0Y,GAAG,CAAC/Y,MAAxB,EAAgCK,CAAC,EAAjC,EAAqC;AACjC,UAAIokB,gBAAgB,GAAG1L,GAAG,CAAC1Y,CAAD,CAA1B;;AACA,UAAIokB,gBAAgB,CAACC,KAAjB,KAA2BF,aAA3B,IAA4CC,gBAAgB,CAACzK,UAAjB,KAAgCwK,aAAhF,EAA+F;AAC3F,aAAKG,aAAL,GAAqBF,gBAArB;AACA;AACH,OAHD,MAIK,IAAIA,gBAAgB,CAAC7b,OAArB,EAA8B;AAC/B,aAAK2b,kCAAL,CAAwCC,aAAxC,EAAuDC,gBAAgB,CAAC7b,OAAxE;AACH;AACJ;;AACD,WAAO,KAAK+b,aAAZ;AACH,GAZD;AAaA;AACJ;AACA;;;AACIhf,EAAAA,IAAI,CAACpG,SAAL,CAAeqlB,sBAAf,GAAwC,YAAY;AAChD,WAAO,KAAK3e,aAAZ;AACH,GAFD;AAGA;AACJ;AACA;;;AACIN,EAAAA,IAAI,CAACpG,SAAL,CAAeslB,QAAf,GAA0B,YAAY;AAClC,WAAO,KAAKC,KAAZ;AACH,GAFD;AAGA;AACJ;AACA;;;AACInf,EAAAA,IAAI,CAACpG,SAAL,CAAewlB,kBAAf,GAAoC,YAAY;AAC5C,WAAO,KAAKxX,aAAZ;AACH,GAFD;AAGA;AACJ;AACA;;;AACI5H,EAAAA,IAAI,CAACpG,SAAL,CAAeylB,sBAAf,GAAwC,UAAUC,OAAV,EAAmB;AACvD,SAAKhf,aAAL,GAAqBgf,OAArB;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;;;AACItf,EAAAA,IAAI,CAACpG,SAAL,CAAe2lB,iBAAf,GAAmC,YAAY;AAC3C,QAAI5C,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIrZ,EAAE,GAAG,CAAT,EAAYC,EAAE,GAAG,KAAK2Z,WAA3B,EAAwC5Z,EAAE,GAAGC,EAAE,CAAClJ,MAAhD,EAAwDiJ,EAAE,EAA1D,EAA8D;AAC1D,UAAI8P,GAAG,GAAG7P,EAAE,CAACD,EAAD,CAAZ;;AACA,UAAI8P,GAAG,CAACF,OAAR,EAAiB;AACbyJ,QAAAA,IAAI,CAACzY,IAAL,CAAUkP,GAAV;AACH;AACJ;;AACD,WAAOuJ,IAAP;AACH,GATD;AAUA;AACJ;AACA;AACA;;;AACI3c,EAAAA,IAAI,CAACpG,SAAL,CAAe8Y,gBAAf,GAAkC,YAAY;AAC1C,WAAO,KAAKgF,YAAL,CAAkB8H,QAAlB,EAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;;;AACIxf,EAAAA,IAAI,CAACpG,SAAL,CAAe6lB,oBAAf,GAAsC,UAAUvf,OAAV,EAAmB;AACrD,SAAKwX,YAAL,CAAkBgI,QAAlB,CAA2Bxf,OAA3B;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACIF,EAAAA,IAAI,CAACpG,SAAL,CAAe+lB,eAAf,GAAiC,YAAY;AACzC,WAAO,KAAK9C,aAAL,CAAmB+C,QAAnB,EAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;;;AACI5f,EAAAA,IAAI,CAACpG,SAAL,CAAeimB,mBAAf,GAAqC,UAAU3f,OAAV,EAAmB;AACpD,SAAK2c,aAAL,CAAmBiD,QAAnB,CAA4B5f,OAA5B;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACIF,EAAAA,IAAI,CAACpG,SAAL,CAAemmB,UAAf,GAA4B,YAAY;AACpC,WAAO,KAAKlD,aAAL,CAAmB2C,QAAnB,EAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;;;AACIxf,EAAAA,IAAI,CAACpG,SAAL,CAAeomB,cAAf,GAAgC,UAAU9f,OAAV,EAAmB;AAC/C,SAAK2c,aAAL,CAAmB6C,QAAnB,CAA4Bxf,OAA5B;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACIF,EAAAA,IAAI,CAACpG,SAAL,CAAeqmB,cAAf,GAAgC,YAAY;AACxC,WAAO,KAAKvI,YAAL,CAAkBkI,QAAlB,EAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;;;AACI5f,EAAAA,IAAI,CAACpG,SAAL,CAAesmB,kBAAf,GAAoC,UAAUhgB,OAAV,EAAmB;AACnD,SAAKwX,YAAL,CAAkBoI,QAAlB,CAA2B5f,OAA3B;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACIF,EAAAA,IAAI,CAACpG,SAAL,CAAeumB,gBAAf,GAAkC,YAAY;AAC1C,SAAKC,aAAL,GAAqB,KAAKlgB,OAAL,CAAamgB,sBAAb,CAAoC,cAApC,EAAoD,CAApD,CAArB;AACA,WAAO,KAAKD,aAAZ;AACH,GAHD;AAIA;AACJ;AACA;AACA;;;AACIpgB,EAAAA,IAAI,CAACpG,SAAL,CAAe0mB,qBAAf,GAAuC,YAAY;AAC/C,SAAKF,aAAL,GAAqB,KAAKlgB,OAAL,CAAamgB,sBAAb,CAAoC,cAApC,EAAoD,CAApD,CAArB;AACA,WAAO,KAAKD,aAAL,CAAmBG,UAAnB,CAA8BA,UAArC;AACH,GAHD;AAIA;AACJ;AACA;AACA;;;AACIvgB,EAAAA,IAAI,CAACpG,SAAL,CAAe4mB,QAAf,GAA0B,YAAY;AAClC,WAAO,KAAKC,SAAZ,CADkC,CACX;AAC1B,GAFD;AAGA;AACJ;AACA;AACA;AACA;;;AACIzgB,EAAAA,IAAI,CAACpG,SAAL,CAAe8mB,YAAf,GAA8B,UAAUxgB,OAAV,EAAmB;AAC7C,SAAKugB,SAAL,GAAiBvgB,OAAjB;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;;;AACIF,EAAAA,IAAI,CAACpG,SAAL,CAAe+mB,aAAf,GAA+B,UAAU3N,KAAV,EAAiB;AAC5C,WAAO,KAAK6J,aAAL,CAAmB8D,aAAnB,CAAiC3N,KAAjC,CAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;;;AACIhT,EAAAA,IAAI,CAACpG,SAAL,CAAegnB,oBAAf,GAAsC,UAAU5N,KAAV,EAAiB;AACnD,WAAO,KAAK6J,aAAL,CAAmB+D,oBAAnB,CAAwC5N,KAAxC,CAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;;;AACIhT,EAAAA,IAAI,CAACpG,SAAL,CAAeinB,mBAAf,GAAqC,UAAU7N,KAAV,EAAiB;AAClD,WAAO,KAAK8N,iBAAL,GAAyB9N,KAAzB,CAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACIhT,EAAAA,IAAI,CAACpG,SAAL,CAAemnB,OAAf,GAAyB,YAAY;AACjC,WAAO,KAAKlE,aAAL,CAAmBmE,cAAnB,EAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;;;AACIhhB,EAAAA,IAAI,CAACpG,SAAL,CAAeqnB,wBAAf,GAA0C,UAAUjO,KAAV,EAAiB;AACvD,WAAO,KAAK6J,aAAL,CAAmBoE,wBAAnB,CAA4CjO,KAA5C,CAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;;;AACIhT,EAAAA,IAAI,CAACpG,SAAL,CAAesnB,UAAf,GAA4B,UAAUlnB,MAAV,EAAkB;AAC1C,QAAImnB,GAAG,GAAGnnB,MAAV;AACA,QAAIoK,IAAI,GAAG;AAAEpK,MAAAA,MAAM,EAAEA;AAAV,KAAX;;AACA,QAAI,CAACiB,iBAAiB,CAACjB,MAAD,CAAlB,IAA8BiB,iBAAiB,CAAC4B,YAAY,CAACskB,GAAD,EAAM,qBAAN,CAAZ,IAC7ClmB,iBAAiB,CAAC4B,YAAY,CAACskB,GAAD,EAAM,oBAAN,CAAb,CAD2B,CAAnD,EACoE;AAChE,UAAIpE,IAAI,GAAGhiB,OAAO,CAAComB,GAAD,EAAM,YAAN,CAAlB;;AACA,UAAI,CAACpE,IAAL,EAAW;AACP,YAAIqE,GAAG,GAAGrmB,OAAO,CAAComB,GAAD,EAAM,QAAN,CAAjB;;AACA,YAAI,CAAClmB,iBAAiB,CAACmmB,GAAD,CAAtB,EAA6B;AACzB,cAAIC,MAAM,GAAG,KAAKC,mBAAL,CAAyBF,GAAG,CAACG,YAAJ,CAAiB,UAAjB,CAAzB,CAAb;AACA,cAAIC,QAAQ,GAAGC,QAAQ,CAACL,GAAG,CAACG,YAAJ,CAAiB,eAAjB,CAAD,EAAoC,EAApC,CAAvB;AACAnd,UAAAA,IAAI,GAAG;AAAEgd,YAAAA,GAAG,EAAEA,GAAP;AAAYM,YAAAA,OAAO,EAAEL,MAAM,CAACM,IAA5B;AAAkCH,YAAAA,QAAQ,EAAEA;AAA5C,WAAP;AACH;;AACD,eAAOpd,IAAP;AACH;;AACD,UAAIwd,SAAS,GAAGH,QAAQ,CAAC1E,IAAI,CAACwE,YAAL,CAAkB,eAAlB,CAAD,EAAqC,EAArC,CAAxB;;AACA,UAAI,CAACtmB,iBAAiB,CAAC8hB,IAAD,CAAlB,IAA4B,CAAC8E,KAAK,CAACD,SAAD,CAAtC,EAAmD;AAC/C,YAAIE,KAAK,GAAG/mB,OAAO,CAACgiB,IAAD,EAAO,QAAP,CAAnB;AACA,YAAIyE,QAAQ,GAAGC,QAAQ,CAACK,KAAK,CAACP,YAAN,CAAmB,eAAnB,CAAD,EAAsC,EAAtC,CAAvB;AACA,YAAIQ,OAAO,GAAG,KAAKzc,gBAAL,EAAd;AACA,YAAI0c,SAAS,GAAG,KAAK9E,WAAL,CAAiB0E,SAAjB,EAA4BK,kBAA5B,EAAhB;AACA,YAAIC,IAAI,GAAG,KAAKrF,aAAL,CAAmBkE,OAAnB,EAAX;AACA,YAAI/N,KAAK,GAAG4O,SAAS,GAAG,KAAKO,cAAL,EAAxB;;AACA,YAAI,KAAKlE,YAAL,EAAJ,EAAyB;AACrB,cAAI+D,SAAS,KAAK,aAAlB,EAAiC;AAC7BE,YAAAA,IAAI,GAAG,KAAKrF,aAAL,CAAmBkE,OAAnB,EAAP;AACH,WAFD,MAGK,IAAIiB,SAAS,KAAK,SAAlB,EAA6B;AAC9BhP,YAAAA,KAAK,GAAG4O,SAAS,GAAGG,OAAZ,GAAsB,KAAKthB,eAAnC;AACAyhB,YAAAA,IAAI,GAAG,KAAKrF,aAAL,CAAmBuF,cAAnB,EAAP;AACH,WAHI,MAIA,IAAIJ,SAAS,KAAK,cAAlB,EAAkC;AACnChP,YAAAA,KAAK,GAAG4O,SAAS,IAAI,KAAKnhB,eAAL,GAAuB,KAAKE,YAAhC,CAAjB;AACAuhB,YAAAA,IAAI,GAAG,KAAKrF,aAAL,CAAmBwF,kBAAnB,EAAP;AACH;AACJ;;AACD,YAAIC,UAAU,GAAGJ,IAAI,CAACrN,MAAL,CAAY,UAAUva,CAAV,EAAa;AAAE,iBAAOA,CAAC,CAAC+Y,GAAF,KAAUyO,KAAK,CAACP,YAAN,CAAmB,UAAnB,CAAjB;AAAkD,SAA7E,CAAjB;AACA,YAAIG,OAAO,GAAG,EAAd;AACA,YAAIa,MAAM,GAAG,KAAK,CAAlB;;AACA,YAAInpB,MAAM,CAACwd,IAAP,CAAY0L,UAAZ,EAAwBjoB,MAA5B,EAAoC;AAChCqnB,UAAAA,OAAO,GAAGY,UAAU,CAAC,CAAD,CAAV,CAAcX,IAAxB;AACAY,UAAAA,MAAM,GAAGD,UAAU,CAAC,CAAD,CAAV,CAAc1F,KAAd,CAAoB5J,KAApB,EAA2BuP,MAApC;AACH;;AACDne,QAAAA,IAAI,GAAG;AAAE2Y,UAAAA,IAAI,EAAEA,IAAR;AAAc6E,UAAAA,SAAS,EAAEA,SAAzB;AAAoCR,UAAAA,GAAG,EAAEU,KAAzC;AAAgDN,UAAAA,QAAQ,EAAEA,QAA1D;AAAoEE,UAAAA,OAAO,EAAEA,OAA7E;AAAsFa,UAAAA,MAAM,EAAEA,MAA9F;AAAsGvoB,UAAAA,MAAM,EAAEA;AAA9G,SAAP;AACH;AACJ;;AACD,WAAOoK,IAAP;AACH,GA/CD;AAgDA;AACJ;AACA;AACA;;;AACIpE,EAAAA,IAAI,CAACpG,SAAL,CAAewoB,cAAf,GAAgC,YAAY;AACxC,WAAO,KAAKvF,aAAL,CAAmB2F,qBAAnB,EAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACIxiB,EAAAA,IAAI,CAACpG,SAAL,CAAeyoB,kBAAf,GAAoC,YAAY;AAC5C,WAAO,KAAKxF,aAAL,CAAmB4F,yBAAnB,EAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACIziB,EAAAA,IAAI,CAACpG,SAAL,CAAe8oB,WAAf,GAA6B,YAAY;AACrC,WAAO,KAAKC,cAAL,EAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACI3iB,EAAAA,IAAI,CAACpG,SAAL,CAAe+oB,cAAf,GAAgC,UAAUC,UAAV,EAAsB;AAClD,QAAI3nB,iBAAiB,CAAC,KAAK0kB,eAAL,GAAuBlL,aAAvB,CAAqC,OAArC,CAAD,CAArB,EAAsE;AAClE,aAAO,EAAP;AACH;;AACD,QAAIoO,KAAK,GAAG,KAAK5E,YAAL,KAAsB,KAAK6E,yBAAL,EAAtB,GAAyD,KAAKnD,eAAL,GAAuBlL,aAAvB,CAAqC,OAArC,CAArE;AACA,QAAIyN,IAAI,GAAG,GAAGzF,KAAH,CAASrc,IAAT,CAAcyiB,KAAK,CAACE,QAApB,CAAX;;AACA,QAAI,KAAKxd,UAAT,EAAqB;AACjB,UAAIyd,QAAQ,GAAG,KAAK/E,YAAL,KAAsB,KAAKvL,gBAAL,GAAwB+B,aAAxB,CAAsC,iBAAtC,EAAyDA,aAAzD,CAAuE,OAAvE,CAAtB,GACT,KAAKwL,cAAL,GAAsBxL,aAAtB,CAAoC,OAApC,CADN;AAEA,UAAIwO,UAAU,GAAG,GAAGxG,KAAH,CAASrc,IAAT,CAAc4iB,QAAQ,CAACD,QAAvB,CAAjB;AACAb,MAAAA,IAAI,GAAG,KAAKgB,cAAL,CAAoBD,UAApB,EAAgCf,IAAhC,CAAP;AACH;;AACD,QAAIiB,QAAQ,GAAG,KAAKC,gBAAL,CAAsBlB,IAAtB,EAA4BU,UAA5B,CAAf;AACA,WAAOO,QAAP;AACH,GAdD;AAeA;AACJ;AACA;;;AACInjB,EAAAA,IAAI,CAACpG,SAAL,CAAespB,cAAf,GAAgC,UAAUG,KAAV,EAAiBC,KAAjB,EAAwB;AACpD,SAAK,IAAI5oB,CAAC,GAAG,CAAR,EAAWuiB,GAAG,GAAGqG,KAAK,CAACjpB,MAA5B,EAAoCK,CAAC,GAAGuiB,GAAxC,EAA6CviB,CAAC,EAA9C,EAAkD;AAC9C2oB,MAAAA,KAAK,CAACnf,IAAN,CAAWof,KAAK,CAAC5oB,CAAD,CAAhB;AACH;;AACD,WAAO2oB,KAAP;AACH,GALD;;AAMArjB,EAAAA,IAAI,CAACpG,SAAL,CAAewpB,gBAAf,GAAkC,UAAUlB,IAAV,EAAgBqB,SAAhB,EAA2B;AACzD,QAAIC,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAI9oB,CAAC,GAAG,CAAR,EAAWuiB,GAAG,GAAGiF,IAAI,CAAC7nB,MAA3B,EAAmCK,CAAC,GAAGuiB,GAAvC,EAA4CviB,CAAC,EAA7C,EAAiD;AAC7C,UAAIwnB,IAAI,CAACxnB,CAAD,CAAJ,CAAQiB,SAAR,CAAkBwL,QAAlB,CAA2B,OAA3B,MAAwC,CAAC+a,IAAI,CAACxnB,CAAD,CAAJ,CAAQiB,SAAR,CAAkBwL,QAAlB,CAA2B,aAA3B,CAAD,IAA8Coc,SAAtF,CAAJ,EAAsG;AAClG,YAAI,KAAKE,sBAAL,EAAJ,EAAmC;AAC/BD,UAAAA,KAAK,CAAC/B,QAAQ,CAACS,IAAI,CAACxnB,CAAD,CAAJ,CAAQ6mB,YAAR,CAAqB,eAArB,CAAD,CAAT,CAAL,GAAyDW,IAAI,CAACxnB,CAAD,CAA7D;AACH,SAFD,MAGK;AACD8oB,UAAAA,KAAK,CAACtf,IAAN,CAAWge,IAAI,CAACxnB,CAAD,CAAf;AACH;AACJ;AACJ;;AACD,WAAO8oB,KAAP;AACH,GAbD;AAcA;AACJ;AACA;AACA;;;AACIxjB,EAAAA,IAAI,CAACpG,SAAL,CAAe8pB,kBAAf,GAAoC,YAAY;AAC5C,WAAO,KAAKC,qBAAL,EAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACI3jB,EAAAA,IAAI,CAACpG,SAAL,CAAe+pB,qBAAf,GAAuC,UAAUf,UAAV,EAAsB;AACzD,QAAI,CAAC,KAAK3E,YAAL,EAAL,EAA0B;AACtB,aAAO,EAAP;AACH;;AACD,QAAIiE,IAAI,GAAG,GAAGzF,KAAH,CAASrc,IAAT,CAAc,KAAK2f,UAAL,GAAkBtL,aAAlB,CAAgC,mBAAhC,EAAqDA,aAArD,CAAmE,OAAnE,EAA4EsO,QAA1F,CAAX;;AACA,QAAI,KAAKxd,UAAT,EAAqB;AACjB,UAAI0d,UAAU,GAAG,GAAGxG,KAAH,CAASrc,IAAT,CAAc,KAAKsS,gBAAL,GAAwB+B,aAAxB,CAAsC,kBAAtC,EAA0DA,aAA1D,CAAwE,OAAxE,EAAiFsO,QAA/F,CAAjB;AACAb,MAAAA,IAAI,GAAG,KAAKgB,cAAL,CAAoBD,UAApB,EAAgCf,IAAhC,CAAP;AACH;;AACD,QAAIiB,QAAQ,GAAG,KAAKC,gBAAL,CAAsBlB,IAAtB,EAA4BU,UAA5B,CAAf;AACA,WAAOO,QAAP;AACH,GAXD;AAYA;AACJ;AACA;AACA;;;AACInjB,EAAAA,IAAI,CAACpG,SAAL,CAAeknB,iBAAf,GAAmC,YAAY;AAC3C,WAAO,KAAK8C,oBAAL,EAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACI5jB,EAAAA,IAAI,CAACpG,SAAL,CAAegqB,oBAAf,GAAsC,UAAUhB,UAAV,EAAsB;AACxD,QAAIV,IAAI,GAAG,GAAGzF,KAAH,CAASrc,IAAT,CAAc,KAAK2f,UAAL,GAAkBtL,aAAlB,CAAgC,kBAAhC,EAAoDA,aAApD,CAAkE,OAAlE,EAA2EsO,QAAzF,CAAX;;AACA,QAAI,KAAKxd,UAAT,EAAqB;AACjB,UAAI0d,UAAU,GAAG,GAAGxG,KAAH,CAASrc,IAAT,CAAc,KAAKsS,gBAAL,GAAwB+B,aAAxB,CAAsC,iBAAtC,EAAyDA,aAAzD,CAAuE,OAAvE,EAAgFsO,QAA9F,CAAjB;AACAb,MAAAA,IAAI,GAAG,KAAKgB,cAAL,CAAoBD,UAApB,EAAgCf,IAAhC,CAAP;AACH;;AACD,QAAIiB,QAAQ,GAAG,KAAKC,gBAAL,CAAsBlB,IAAtB,EAA4BU,UAA5B,CAAf;AACA,WAAOO,QAAP;AACH,GARD;AASA;AACJ;AACA;AACA;;;AACInjB,EAAAA,IAAI,CAACpG,SAAL,CAAeiqB,sBAAf,GAAwC,YAAY;AAChD,WAAO,KAAKC,yBAAL,EAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACI9jB,EAAAA,IAAI,CAACpG,SAAL,CAAekqB,yBAAf,GAA2C,UAAUlB,UAAV,EAAsB;AAC7D,QAAI,KAAK1E,aAAL,OAAyB,OAAzB,IAAoC,KAAKA,aAAL,OAAyB,YAAjE,EAA+E;AAC3E,aAAO,EAAP;AACH;;AACD,QAAIgE,IAAI,GAAG,GAAGzF,KAAH,CAASrc,IAAT,CAAc,KAAK2f,UAAL,GAAkBtL,aAAlB,CAAgC,yBAAhC,EAA2DA,aAA3D,CAAyE,OAAzE,EAAkFsO,QAAhG,CAAX;;AACA,QAAI,KAAKxd,UAAT,EAAqB;AACjB,UAAI0d,UAAU,GAAG,GAAGxG,KAAH,CAASrc,IAAT,CAAc,KAAKsS,gBAAL,GAAwB+B,aAAxB,CAAsC,wBAAtC,EAAgEA,aAAhE,CAA8E,OAA9E,EAAuFsO,QAArG,CAAjB;AACAb,MAAAA,IAAI,GAAG,KAAKgB,cAAL,CAAoBD,UAApB,EAAgCf,IAAhC,CAAP;AACH;;AACD,QAAIiB,QAAQ,GAAG,KAAKC,gBAAL,CAAsBlB,IAAtB,EAA4BU,UAA5B,CAAf;AACA,WAAOO,QAAP;AACH,GAXD;AAYA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACInjB,EAAAA,IAAI,CAACpG,SAAL,CAAemqB,YAAf,GAA8B,UAAU9pB,GAAV,EAAe8kB,KAAf,EAAsBiF,KAAtB,EAA6B;AACvD,QAAIpH,KAAK,GAAG,OAAZ;AACA,QAAI8E,OAAO,GAAG,MAAd;AACA,QAAIuC,MAAM,GAAG,OAAb;AACA,QAAIC,MAAM,GAAG,KAAb;AACA,QAAIC,QAAJ;AACA,QAAI/Q,GAAJ;AACA,QAAIgR,EAAJ;AACA,QAAIC,GAAJ;AACA,QAAIC,MAAM,GAAG,KAAKlK,uBAAL,GAA+B,CAA/B,CAAb;AACA,QAAI2C,IAAI,GAAG,IAAIhf,YAAJ,CAAiB,IAAjB,EAAuB,KAAKsG,cAA5B,CAAX;AACA,QAAIkgB,WAAW,GAAG,EAAlB;AACA,QAAIC,kBAAkB,GAAG,EAAzB;AACA,QAAIC,UAAU,GAAG,KAAK5H,aAAL,CAAmBkE,OAAnB,EAAjB;AACA,QAAI2D,iBAAiB,GAAG,KAAK7H,aAAL,CAAmBuF,cAAnB,EAAxB;AACA+B,IAAAA,QAAQ,GAAG,KAAKQ,qBAAL,CAA2B5F,KAA3B,CAAX;;AACA,QAAI,KAAKjc,aAAL,CAAmBG,OAAnB,CAA2B5I,MAA/B,EAAuC;AACnC8pB,MAAAA,QAAQ,GAAGA,QAAQ,GAAG,KAAKrhB,aAAL,CAAmBG,OAAnB,CAA2B5I,MAAjD;AACH;;AACD,QAAI,KAAKuqB,SAAL,IAAkB,KAAK3M,cAA3B,EAA2C;AACvCkM,MAAAA,QAAQ;AACX;;AACD,QAAI,KAAKU,aAAL,EAAJ,EAA0B;AACtBV,MAAAA,QAAQ;AACX;;AACD/Q,IAAAA,GAAG,GAAG,KAAK0R,gBAAL,CAAsB/F,KAAtB,CAAN;AACAwF,IAAAA,WAAW,GAAGE,UAAU,CAAC5P,MAAX,CAAkB,UAAUva,CAAV,EAAa;AACzC,aAAOa,QAAQ,CAACmpB,MAAD,EAAShqB,CAAC,CAACqnB,IAAX,CAAR,KAA6B1nB,GAApC;AACH,KAFa,EAEX,CAFW,CAAd;AAGAuqB,IAAAA,kBAAkB,GAAGE,iBAAiB,CAAC7P,MAAlB,CAAyB,UAAUva,CAAV,EAAa;AACvD,aAAOa,QAAQ,CAACmpB,MAAD,EAAShqB,CAAC,CAACqnB,IAAX,CAAR,KAA6B1nB,GAApC;AACH,KAFoB,EAElB,CAFkB,CAArB;AAGAmqB,IAAAA,EAAE,GAAG,CAACnpB,iBAAiB,CAACspB,WAAD,CAAlB,GAAkC,KAAKrkB,OAAL,CAAauU,aAAb,CAA2B,eAAe8P,WAAW,CAACL,MAAD,CAA1B,GAAqC,GAAhE,CAAlC,GAAyG,IAA9G;AACAG,IAAAA,GAAG,GAAG,CAACppB,iBAAiB,CAACupB,kBAAD,CAAlB,GAAyC,KAAKtkB,OAAL,CAAauU,aAAb,CAA2B,eAAe+P,kBAAkB,CAACN,MAAD,CAAjC,GAA4C,GAAvE,CAAzC,GAAuH,IAA7H;;AACA,QAAI,CAACjpB,iBAAiB,CAACmpB,EAAD,CAAtB,EAA4B;AACxBlpB,MAAAA,QAAQ,CAAC6jB,KAAD,EAAQiF,KAAR,EAAeO,WAAW,CAAC7C,OAAD,CAA1B,CAAR;AACA,UAAIqD,EAAE,GAAG,CAAC9pB,iBAAiB,CAACmpB,EAAE,CAACxH,KAAD,CAAF,CAAUuH,QAAV,CAAD,CAAlB,GACLC,EAAE,CAACxH,KAAD,CAAF,CAAUuH,QAAV,CADK,GACiBE,GAAG,CAACzH,KAAD,CAAH,CAAWuH,QAAQ,GAAG,KAAKtG,aAA3B,CAD1B;;AAEA,UAAI,CAAC5iB,iBAAiB,CAAC8pB,EAAD,CAAtB,EAA4B;AACxB,YAAIC,IAAI,GAAGT,WAAW,CAAC3H,KAAD,CAAX,CAAmBuH,QAAnB,CAAX;AACA,YAAIc,IAAI,GAAG,KAAK,CAAhB;;AACA,YAAI,KAAKpH,aAAT,EAAwB;AACpBoH,UAAAA,IAAI,GAAGT,kBAAkB,CAAC5H,KAAD,CAAlB,CAA0BuH,QAAQ,GAAG,KAAKtG,aAA1C,CAAP;AACH;;AACDd,QAAAA,IAAI,CAACmI,SAAL,CAAeH,EAAf,EAAmB,CAAC9pB,iBAAiB,CAAC+pB,IAAD,CAAlB,GAA2BA,IAA3B,GAAkCC,IAArD,EAA2DV,WAAW,CAAC7C,OAAD,CAAtE,EAAiF;AAAE1O,UAAAA,KAAK,EAAEuR,WAAW,CAACN,MAAD;AAApB,SAAjF;;AACA,YAAI,KAAKjf,UAAL,CAAgB3K,MAAhB,GAAyB,CAA7B,EAAgC;AAC5B,eAAK2W,MAAL,CAAYrT,MAAM,CAACwnB,qBAAnB,EAA0C,EAA1C;;AACA,cAAI,KAAKriB,aAAL,CAAmBG,OAAnB,CAA2B5I,MAA3B,GAAoC,CAAxC,EAA2C;AACvC,iBAAK2W,MAAL,CAAYrT,MAAM,CAACynB,eAAnB,EAAoC,EAApC;AACH;AACJ;AACD;;;AACA,YAAI,CAACnqB,iBAAiB,CAACupB,kBAAD,CAAlB,IAA0C,CAACvpB,iBAAiB,CAACupB,kBAAkB,CAAC,SAAD,CAAnB,CAAhE,EAAiG;AAC7FA,UAAAA,kBAAkB,CAAC,SAAD,CAAlB,CAA8BzF,KAA9B,IAAuCiF,KAAvC;AACH;AACD;;;AACA,aAAKzS,OAAL,CAAa5T,MAAM,CAAC0nB,aAApB,EAAmC;AAC/BtI,UAAAA,IAAI,EAAEgI,EADyB;AACrBxC,UAAAA,MAAM,EAAEnP,GADa;AACRuO,UAAAA,IAAI,EAAE4C,WAAW,CAAC7C,OAAD;AADT,SAAnC;AAGH;AACJ,KA1BD,MA2BK;AACD;AACH;AACJ,GAhED;AAiEA;AACJ;AACA;AACA;AACA;AACA;;;AACI1hB,EAAAA,IAAI,CAACpG,SAAL,CAAe0gB,UAAf,GAA4B,UAAUrgB,GAAV,EAAeynB,OAAf,EAAwB;AAChD,QAAI4D,MAAM,GAAG,MAAb;AACA,QAAIpB,MAAM,GAAG,KAAb;AACA,QAAIO,UAAU,GAAG,KAAK5H,aAAL,CAAmBkE,OAAnB,EAAjB;AACA,QAAIwD,WAAJ;AACA,QAAID,MAAM,GAAG,KAAKlK,uBAAL,GAA+B,CAA/B,CAAb;AACA,QAAImL,WAAW,GAAG,IAAIznB,WAAJ,CAAgB,KAAKuG,cAArB,EAAqC,IAArC,EAA2C,IAA3C,CAAlB;;AACA,QAAI,KAAKvB,aAAL,CAAmBG,OAAnB,CAA2B5I,MAA3B,GAAoC,CAApC,IAAyC,KAAK2K,UAAL,CAAgB3K,MAAhB,GAAyB,CAAtE,EAAyE;AACrEoqB,MAAAA,UAAU,GAAGA,UAAU,CAAC5P,MAAX,CAAkB,UAAUuM,GAAV,EAAe;AAAE,eAAOA,GAAG,CAACoE,SAAX;AAAuB,OAA1D,CAAb;AACH;;AACDjB,IAAAA,WAAW,GAAGE,UAAU,CAAC5P,MAAX,CAAkB,UAAUva,CAAV,EAAa;AACzC,aAAOa,QAAQ,CAACmpB,MAAD,EAAShqB,CAAC,CAACqnB,IAAX,CAAR,KAA6B1nB,GAApC;AACH,KAFa,EAEX,CAFW,CAAd;;AAGA,QAAI,CAACgB,iBAAiB,CAACspB,WAAD,CAAlB,IAAmC,KAAKrkB,OAAL,CAAayS,gBAAb,CAA8B,eAAe4R,WAAW,CAACL,MAAD,CAA1B,GAAqC,GAAnE,EAAwE7pB,MAA/G,EAAuH;AACnHkqB,MAAAA,WAAW,CAACkB,OAAZ,GAAsB/D,OAAtB;AACAzkB,MAAAA,kBAAkB,CAACsnB,WAAD,EAAc,KAAKmB,oBAAL,EAAd,EAA2CnB,WAAW,CAACkB,OAAvD,CAAlB;AACAF,MAAAA,WAAW,CAAClkB,OAAZ,CAAoBkjB,WAApB,EAAiC,KAAKzS,UAAL,EAAjC,EAAoD,IAApD;;AACA,UAAI,KAAK9M,UAAL,CAAgB3K,MAAhB,GAAyB,CAA7B,EAAgC;AAC5B,aAAK2W,MAAL,CAAYrT,MAAM,CAACwnB,qBAAnB,EAA0C,EAA1C;;AACA,YAAI,KAAKriB,aAAL,CAAmBG,OAAnB,CAA2B5I,MAA3B,GAAoC,CAAxC,EAA2C;AACvC,eAAK2W,MAAL,CAAYrT,MAAM,CAACynB,eAAnB,EAAoC,EAApC;AACH;AACJ;AACJ,KAVD,MAWK;AACD;AACH;AACJ,GA3BD;AA4BA;AACJ;AACA;AACA;AACA;AACA;;;AACIplB,EAAAA,IAAI,CAACpG,SAAL,CAAe+rB,gBAAf,GAAkC,UAAUnE,QAAV,EAAoB3N,WAApB,EAAiC;AAC/D,QAAIT,GAAG,GAAG,KAAKwS,gBAAL,CAAsB/R,WAAtB,CAAV;AACA,WAAOnW,uBAAuB,CAAC,IAAD,EAAO0V,GAAP,EAAYoO,QAAZ,EAAsB3N,WAAtB,CAA9B;AACH,GAHD;AAIA;AACJ;AACA;AACA;AACA;AACA;;;AACI7T,EAAAA,IAAI,CAACpG,SAAL,CAAeisB,uBAAf,GAAyC,UAAUrE,QAAV,EAAoB3N,WAApB,EAAiC;AACtE,QAAI,KAAKsK,UAAL,KAAoB,YAApB,IAAoCtK,WAAW,IAAI,KAAKlT,YAA5D,EAA0E;AACtE,aAAOuB,SAAP;AACH;;AACD,QAAI8Q,KAAK,GAAG,KAAK1N,gBAAL,MAA2B,KAAK8W,yBAAL,EAAvC;AACA,WAAO,KAAKsH,kBAAL,GAA0BlC,QAA1B,KACH,KAAKkC,kBAAL,GAA0BlC,QAA1B,EAAoC7O,gBAApC,CAAqD,YAArD,EAAmEkB,WAAW,GAAGb,KAAjF,CADJ;AAEH,GAPD;AAQA;AACJ;AACA;AACA;AACA;AACA;;;AACIhT,EAAAA,IAAI,CAACpG,SAAL,CAAeksB,2BAAf,GAA6C,UAAUtE,QAAV,EAAoB3N,WAApB,EAAiC;AAC1E,QAAIb,KAAK,GAAG,KAAKoJ,yBAAL,KAAmC,KAAK2J,sBAAL,EAA/C;AACA,QAAI7D,IAAI,GAAG,KAAK2B,sBAAL,EAAX;AACA,WAAO3B,IAAI,CAACV,QAAD,CAAJ,IAAkBU,IAAI,CAACV,QAAD,CAAJ,CAAe7O,gBAAf,CAAgC,YAAhC,EAA8CkB,WAAW,GAAGb,KAA5D,CAAzB;AACH,GAJD;AAKA;AACJ;AACA;AACA;AACA;;;AACIhT,EAAAA,IAAI,CAACpG,SAAL,CAAeosB,sBAAf,GAAwC,UAAUhT,KAAV,EAAiB;AACrD,WAAO,KAAKiN,cAAL,GAAsBtN,gBAAtB,CAAuC,eAAvC,EAAwDK,KAAxD,CAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;;;AACIhT,EAAAA,IAAI,CAACpG,SAAL,CAAeqsB,6BAAf,GAA+C,UAAUjT,KAAV,EAAiB;AAC5D,QAAIkT,IAAI,GAAG,KAAK5gB,gBAAL,MAA2B,KAAK8W,yBAAL,EAAtC;AACA,WAAO,KAAK+J,uBAAL,GAA+BxT,gBAA/B,CAAgD,eAAhD,EAAiEK,KAAK,GAAGkT,IAAzE,CAAP;AACH,GAHD;AAIA;AACJ;AACA;AACA;AACA;;;AACIlmB,EAAAA,IAAI,CAACpG,SAAL,CAAewsB,iCAAf,GAAmD,UAAUpT,KAAV,EAAiB;AAChE,QAAIkT,IAAI,GAAG,KAAK9J,yBAAL,KAAmC,KAAK2J,sBAAL,EAA9C;AACA,WAAO,KAAKM,oBAAL,GAA4B1T,gBAA5B,CAA6C,eAA7C,EAA8DK,KAAK,GAAGkT,IAAtE,CAAP;AACH,GAHD;AAIA;AACJ;AACA;AACA;AACA;;;AACIlmB,EAAAA,IAAI,CAACpG,SAAL,CAAe0sB,gCAAf,GAAkD,UAAUtT,KAAV,EAAiB;AAC/D,WAAO,KAAKuT,sBAAL,GAA8B5T,gBAA9B,CAA+C,eAA/C,EAAgEK,KAAhE,CAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACIhT,EAAAA,IAAI,CAACpG,SAAL,CAAe0nB,mBAAf,GAAqC,UAAUjO,GAAV,EAAemT,SAAf,EAA0BC,aAA1B,EAAyC;AAC1E,QAAIvE,IAAI,GAAG,KAAKrF,aAAL,CAAmBkE,OAAnB,EAAX;AACA,QAAIK,GAAG,GAAG,KAAKsF,SAAL,CAAexE,IAAf,EAAqB7O,GAArB,CAAV;;AACA,QAAI,KAAK4K,YAAL,EAAJ,EAAyB;AACrB,UAAI,CAACmD,GAAD,IAAQoF,SAAR,IAAqBC,aAAzB,EAAwC;AACpCrF,QAAAA,GAAG,GAAG,KAAKsF,SAAL,CAAe,KAAK7J,aAAL,CAAmBuF,cAAnB,EAAf,EAAoD/O,GAApD,CAAN;;AACA,YAAK,CAAC+N,GAAD,IAAQ,KAAKlD,aAAL,OAAyB,YAAlC,IAAmDuI,aAAvD,EAAsE;AAClErF,UAAAA,GAAG,GAAG,KAAKsF,SAAL,CAAe,KAAK7J,aAAL,CAAmBwF,kBAAnB,EAAf,EAAwDhP,GAAxD,CAAN;AACH;;AACD,eAAO+N,GAAP;AACH;AACJ;;AACD,QAAInmB,iBAAiB,CAACmmB,GAAD,CAAjB,IAA0B,KAAKhc,oBAA/B,IAAuD,KAAKtC,aAAL,CAAmBG,OAAnB,CAA2B5I,MAA3B,GAAoC,CAA/F,EAAkG;AAC9F+mB,MAAAA,GAAG,GAAG,KAAKsF,SAAL,CAAe,KAAKnlB,KAApB,EAA2B8R,GAA3B,CAAN;AACA,aAAO+N,GAAP;AACH;;AACD,WAAOA,GAAP;AACH,GAjBD;;AAkBAphB,EAAAA,IAAI,CAACpG,SAAL,CAAe8sB,SAAf,GAA2B,UAAUxE,IAAV,EAAgB7O,GAAhB,EAAqB;AAC5C,SAAK,IAAI/P,EAAE,GAAG,CAAT,EAAYqjB,MAAM,GAAGzE,IAA1B,EAAgC5e,EAAE,GAAGqjB,MAAM,CAACtsB,MAA5C,EAAoDiJ,EAAE,EAAtD,EAA0D;AACtD,UAAI8d,GAAG,GAAGuF,MAAM,CAACrjB,EAAD,CAAhB;;AACA,UAAI8d,GAAG,CAAC/N,GAAJ,KAAYA,GAAhB,EAAqB;AACjB,eAAO+N,GAAP;AACH;AACJ;;AACD,WAAO,IAAP;AACH,GARD;AASA;AACJ;AACA;;;AACIphB,EAAAA,IAAI,CAACpG,SAAL,CAAegtB,aAAf,GAA+B,YAAY;AACvC,WAAO,KAAK/J,aAAL,CAAmBkE,OAAnB,EAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACI/gB,EAAAA,IAAI,CAACpG,SAAL,CAAeitB,oBAAf,GAAsC,YAAY;AAC9C,QAAI3E,IAAI,GAAG,EAAX;;AACA,QAAI,KAAKjE,YAAL,EAAJ,EAAyB;AACrBiE,MAAAA,IAAI,GAAG,KAAKrF,aAAL,CAAmBuF,cAAnB,EAAP;AACH;;AACD,WAAOF,IAAP;AACH,GAND;AAOA;AACJ;AACA;;;AACIliB,EAAAA,IAAI,CAACpG,SAAL,CAAektB,wBAAf,GAA0C,YAAY;AAClD,QAAI5E,IAAI,GAAG,EAAX;;AACA,QAAI,KAAKhE,aAAL,OAAyB,OAAzB,IAAoC,KAAKA,aAAL,OAAyB,YAAjE,EAA+E;AAC3EgE,MAAAA,IAAI,GAAG,KAAKrF,aAAL,CAAmBwF,kBAAnB,EAAP;AACH;;AACD,WAAOH,IAAP;AACH,GAND;AAOA;AACJ;AACA;AACA;AACA;;;AACIliB,EAAAA,IAAI,CAACpG,SAAL,CAAemtB,sBAAf,GAAwC,UAAUhI,KAAV,EAAiB;AACrD,QAAIwD,MAAM,GAAG,KAAKuC,gBAAL,CAAsB/F,KAAtB,CAAb;AACA,WAAOwD,MAAM,GAAG,KAAKyE,oBAAL,CAA0BzE,MAAM,CAAClP,GAAjC,CAAH,GAA2CnR,SAAxD;AACH,GAHD;AAIA;AACJ;AACA;AACA;AACA;;;AACIlC,EAAAA,IAAI,CAACpG,SAAL,CAAeotB,oBAAf,GAAsC,UAAU3T,GAAV,EAAe;AACjD,QAAInT,OAAO,GAAG,KAAKwS,gBAAL,GAAwB+B,aAAxB,CAAsC,mBAAmBpB,GAAnB,GAAyB,GAA/D,CAAd;AACA,WAAOnT,OAAO,GAAGA,OAAO,CAAC+mB,aAAX,GAA2B/kB,SAAzC;AACH,GAHD;AAIA;AACJ;AACA;AACA;;;AACIlC,EAAAA,IAAI,CAACpG,SAAL,CAAegsB,gBAAf,GAAkC,UAAU5S,KAAV,EAAiB;AAC/C,QAAIuP,MAAJ;AACA,SAAKzQ,UAAL,GAAkBiC,IAAlB,CAAuB,UAAUX,GAAV,EAAe1Y,CAAf,EAAkB;AACrC6nB,MAAAA,MAAM,GAAGnP,GAAT;AACA,aAAO1Y,CAAC,KAAKsY,KAAb;AACH,KAHD;AAIA,WAAOuP,MAAP;AACH,GAPD;AAQA;AACJ;AACA;AACA;AACA;AACA;;;AACIviB,EAAAA,IAAI,CAACpG,SAAL,CAAekrB,gBAAf,GAAkC,UAAU/F,KAAV,EAAiB;AAC/C,WAAOpiB,oBAAoB,CAAC,KAAKmV,UAAL,EAAD,EAAoB,UAAUoV,IAAV,EAAgBlU,KAAhB,EAAuB;AAClE,UAAIkU,IAAI,CAACnI,KAAL,KAAeA,KAAnB,EAA0B;AACtB,eAAOmI,IAAP;AACH;;AACD,aAAOhlB,SAAP;AACH,KAL0B,CAApB,CAKJ,CALI,CAAP;AAMH,GAPD;AAQA;AACJ;AACA;AACA;AACA;;;AACIlC,EAAAA,IAAI,CAACpG,SAAL,CAAe+qB,qBAAf,GAAuC,UAAU5F,KAAV,EAAiB;AACpD,QAAIpC,IAAI,GAAG,KAAK7K,UAAL,EAAX;;AACA,SAAK,IAAIpX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiiB,IAAI,CAACtiB,MAAzB,EAAiCK,CAAC,EAAlC,EAAsC;AAClC,UAAIiiB,IAAI,CAACjiB,CAAD,CAAJ,CAAQqkB,KAAR,KAAkBA,KAAtB,EAA6B;AACzB,eAAOrkB,CAAP;AACH;AACJ;;AACD,WAAO,CAAC,CAAR;AACH,GARD;AASA;AACJ;AACA;AACA;AACA;AACA;;;AACIsF,EAAAA,IAAI,CAACpG,SAAL,CAAeutB,cAAf,GAAgC,UAAU9T,GAAV,EAAe;AAC3C,WAAO1W,oBAAoB,CAAC,KAAKmV,UAAL,GAAkB6L,MAAlB,CAAyB,KAAKyJ,iBAAL,CAAuB,KAAKnkB,OAA5B,CAAzB,CAAD,EAAiE,UAAUikB,IAAV,EAAgBlU,KAAhB,EAAuB;AAC/G,UAAIkU,IAAI,CAAC7T,GAAL,KAAaA,GAAjB,EAAsB;AAClB,eAAO6T,IAAP;AACH;;AACD,aAAOhlB,SAAP;AACH,KAL0B,CAApB,CAKJ,CALI,CAAP;AAMH,GAPD;AAQA;AACJ;AACA;;;AACIlC,EAAAA,IAAI,CAACpG,SAAL,CAAewtB,iBAAf,GAAmC,UAAUnkB,OAAV,EAAmB+b,aAAnB,EAAkC;AACjE,QAAIA,aAAa,KAAK,KAAK,CAA3B,EAA8B;AAAEA,MAAAA,aAAa,GAAG,EAAhB;AAAqB;;AACrD,SAAK,IAAI1b,EAAE,GAAG,CAAT,EAAY+jB,SAAS,GAAGpkB,OAA7B,EAAsCK,EAAE,GAAG+jB,SAAS,CAAChtB,MAArD,EAA6DiJ,EAAE,EAA/D,EAAmE;AAC/D,UAAIif,MAAM,GAAG8E,SAAS,CAAC/jB,EAAD,CAAtB;;AACA,UAAIif,MAAM,CAACtf,OAAX,EAAoB;AAChB+b,QAAAA,aAAa,CAAC9a,IAAd,CAAmBqe,MAAnB;AACA,aAAK6E,iBAAL,CAAuB7E,MAAM,CAACtf,OAA9B,EAAuC+b,aAAvC;AACH;AACJ;;AACD,WAAOA,aAAP;AACH,GAVD;AAWA;AACJ;AACA;AACA;AACA;;;AACIhf,EAAAA,IAAI,CAACpG,SAAL,CAAe+Z,mBAAf,GAAqC,UAAUN,GAAV,EAAe;AAChD,QAAIL,KAAK,GAAGrW,oBAAoB,CAAC,KAAKmV,UAAL,EAAD,EAAoB,UAAUoV,IAAV,EAAgBlU,KAAhB,EAAuB;AACvE,UAAIkU,IAAI,CAAC7T,GAAL,KAAaA,GAAjB,EAAsB;AAClB,eAAOL,KAAP;AACH;;AACD,aAAO9Q,SAAP;AACH,KAL+B,CAApB,CAKT,CALS,CAAZ;AAMA,WAAO,CAACjH,iBAAiB,CAAC+X,KAAD,CAAlB,GAA4BA,KAA5B,GAAoC,CAAC,CAA5C;AACH,GARD;AASA;AACJ;AACA;AACA;AACA;;;AACIhT,EAAAA,IAAI,CAACpG,SAAL,CAAe0tB,mBAAf,GAAqC,UAAUvI,KAAV,EAAiB;AAClD,WAAOpiB,oBAAoB,CAAC,KAAKmV,UAAL,EAAD,EAAoB,UAAUoV,IAAV,EAAgBlU,KAAhB,EAAuB;AAClE,UAAIkU,IAAI,CAACnI,KAAL,KAAeA,KAAnB,EAA0B;AACtB,eAAOmI,IAAI,CAAC7T,GAAZ;AACH;;AACD,aAAOnR,SAAP;AACH,KAL0B,CAApB,CAKJ,CALI,CAAP;AAMH,GAPD;AAQA;AACJ;AACA;AACA;AACA;AACA;;;AACIlC,EAAAA,IAAI,CAACpG,SAAL,CAAe2tB,wBAAf,GAA0C,UAAUlU,GAAV,EAAe;AACrD,QAAIL,KAAK,GAAG,KAAKW,mBAAL,CAAyBN,GAAzB,CAAZ;AACA,WAAOL,KAAK,GAAG,KAAKmP,cAAL,EAAf;AACH,GAHD;AAIA;AACJ;AACA;AACA;AACA;;;AACIniB,EAAAA,IAAI,CAACpG,SAAL,CAAeuoB,cAAf,GAAgC,YAAY;AACxC,QAAInP,KAAK,GAAG,CAAZ;;AACA,QAAI,KAAKjO,aAAT,EAAwB;AACpBiO,MAAAA,KAAK,IAAI,KAAKlQ,aAAL,CAAmBG,OAAnB,CAA2B5I,MAApC;AACH;;AACD,QAAI,KAAK4K,QAAL,EAAJ,EAAqB;AACjB+N,MAAAA,KAAK;AACR;;AACD,QAAI,KAAK6R,aAAL,MAAwB5pB,iBAAiB,CAAC,KAAKusB,eAAL,CAAqBC,QAAtB,CAA7C,EAA8E;AAC1EzU,MAAAA,KAAK;AACR;AACD;AACR;AACA;AACA;;;AACQ,WAAOA,KAAP;AACH,GAhBD;AAiBA;AACJ;AACA;AACA;;;AACIhT,EAAAA,IAAI,CAACpG,SAAL,CAAe8tB,mBAAf,GAAqC,YAAY;AAC7C,QAAIC,WAAW,GAAG,EAAlB;AACA,QAAIpF,MAAJ;;AACA,SAAK,IAAI7nB,CAAC,GAAG,CAAR,EAAWuiB,GAAG,GAAG,KAAKnL,UAAL,GAAkBzX,MAAxC,EAAgDK,CAAC,GAAGuiB,GAApD,EAAyDviB,CAAC,EAA1D,EAA8D;AAC1D6nB,MAAAA,MAAM,GAAG,KAAKzQ,UAAL,GAAkBpX,CAAlB,CAAT;;AACA,UAAI6nB,MAAM,CAACrP,OAAX,EAAoB;AAChByU,QAAAA,WAAW,CAACzjB,IAAZ,CAAiBqe,MAAM,CAACxD,KAAxB;AACH;AACJ;;AACD,WAAO4I,WAAP;AACH,GAVD;AAWA;AACJ;AACA;AACA;AACA;;;AACI3nB,EAAAA,IAAI,CAACpG,SAAL,CAAeguB,cAAf,GAAgC,YAAY;AACxC,WAAO,KAAK9P,aAAZ;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;;;AACI9X,EAAAA,IAAI,CAACpG,SAAL,CAAeiuB,iBAAf,GAAmC,YAAY;AAC3C,WAAO,KAAK7P,gBAAZ;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;;;AACIhY,EAAAA,IAAI,CAACpG,SAAL,CAAekuB,eAAf,GAAiC,YAAY;AACzC,WAAO,KAAKC,cAAZ;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;;;AACI/nB,EAAAA,IAAI,CAACpG,SAAL,CAAeouB,qBAAf,GAAuC,YAAY;AAC/C,WAAO,KAAKC,oBAAZ;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;;;AACIjoB,EAAAA,IAAI,CAACpG,SAAL,CAAesuB,qBAAf,GAAuC,YAAY;AAC/C,WAAO,KAAKC,oBAAZ;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACInoB,EAAAA,IAAI,CAACpG,SAAL,CAAewgB,uBAAf,GAAyC,YAAY;AACjD,QAAIxD,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIwR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKlL,WAAL,CAAiB7iB,MAArC,EAA6C+tB,CAAC,EAA9C,EAAkD;AAC9C,UAAI,KAAKlL,WAAL,CAAiBkL,CAAjB,EAAoBC,YAAxB,EAAsC;AAClCzR,QAAAA,IAAI,CAAC1S,IAAL,CAAU,KAAKgZ,WAAL,CAAiBkL,CAAjB,EAAoBrJ,KAA9B;AACH;AACJ;;AACD,WAAOnI,IAAP;AACH,GARD;AASA;AACJ;AACA;;;AACI5W,EAAAA,IAAI,CAACpG,SAAL,CAAeyH,OAAf,GAAyB,YAAY;AACjC,SAAKqW,YAAL,CAAkBC,SAAlB;AACA,SAAKvF,mBAAL;AACA,SAAKvB,YAAL,CAAkBxP,OAAlB;AACH,GAJD;AAKA;AACJ;AACA;;;AACIrB,EAAAA,IAAI,CAACpG,SAAL,CAAe4d,aAAf,GAA+B,YAAY;AACvC,SAAKE,YAAL,CAAkBC,SAAlB;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACI3X,EAAAA,IAAI,CAACpG,SAAL,CAAe0uB,eAAf,GAAiC,YAAY;AACzC,WAAO,KAAK1Q,eAAL,GAAuB,KAAKA,eAAL,CAAqB2Q,eAA5C,GAA8D,EAArE;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACIvoB,EAAAA,IAAI,CAACpG,SAAL,CAAe4uB,qBAAf,GAAuC,YAAY;AAC/C,WAAO,KAAK5Q,eAAL,GAAuB,KAAKA,eAAL,CAAqB6Q,kBAA5C,GAAiE,EAAxE;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACIzoB,EAAAA,IAAI,CAACpG,SAAL,CAAe8uB,yBAAf,GAA2C,YAAY;AACnD,WAAO,KAAK9Q,eAAL,GAAuB,KAAKA,eAAL,CAAqB+Q,sBAA5C,GAAqE,EAA5E;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;;;AACI3oB,EAAAA,IAAI,CAACpG,SAAL,CAAegvB,kBAAf,GAAoC,YAAY;AAC5C,WAAO,KAAKhR,eAAL,GAAuB,KAAKA,eAAL,CAAqBgR,kBAArB,EAAvB,GAAmE,EAA1E;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;;;AACI5oB,EAAAA,IAAI,CAACpG,SAAL,CAAeivB,qBAAf,GAAuC,YAAY;AAC/C,QAAI1oB,KAAK,GAAG,IAAZ;;AACA,QAAIkT,GAAG,GAAG,EAAV;;AACA,QAAI,KAAKuE,eAAT,EAA0B;AACtB,WAAKA,eAAL,CAAqBkR,sBAArB,CAA4CjU,MAA5C,CAAmD,UAAUna,CAAV,EAAa;AAAE,eAAO2Y,GAAG,CAACnP,IAAJ,CAAS/D,KAAK,CAAC2R,UAAN,GAAmBpX,CAAnB,EAAsB2Y,GAA/B,CAAP;AAA6C,OAA/G;AACH;;AACD,WAAOA,GAAP;AACH,GAPD;AAQA;AACJ;AACA;AACA;;;AACIrT,EAAAA,IAAI,CAACpG,SAAL,CAAesX,aAAf,GAA+B,YAAY;AACvC,WAAO,KAAKL,YAAL,CAAkB8Q,IAAzB;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;;;AACI3hB,EAAAA,IAAI,CAACpG,SAAL,CAAemvB,WAAf,GAA6B,UAAUnS,IAAV,EAAgBoS,MAAhB,EAAwB;AACjDA,IAAAA,MAAM,GAAGA,MAAM,GAAGA,MAAH,GAAY,YAA3B;AACA,SAAK7U,SAAL,CAAeC,IAAf,CAAoBwC,IAApB,EAA0BoS,MAA1B;AACH,GAHD;AAIA;AACJ;AACA;AACA;AACA;AACA;;;AACIhpB,EAAAA,IAAI,CAACpG,SAAL,CAAeqvB,WAAf,GAA6B,UAAUrS,IAAV,EAAgBsS,MAAhB,EAAwB;AACjDA,IAAAA,MAAM,GAAGA,MAAM,GAAGA,MAAH,GAAY,YAA3B;AACA,SAAK/U,SAAL,CAAeG,IAAf,CAAoBsC,IAApB,EAA0BsS,MAA1B;AACH,GAHD;AAIA;AACJ;AACA;;;AACIlpB,EAAAA,IAAI,CAACpG,SAAL,CAAe0L,gBAAf,GAAkC,YAAY;AAC1C,WAAO,KAAKuY,aAAL,GAAqB,KAAKsL,cAAL,CAAoB,KAAKlmB,OAAzB,EAAkC,CAAlC,EAAqC,CAArC,CAA5B;AACH,GAFD;AAGA;AACJ;AACA;;;AACIjD,EAAAA,IAAI,CAACpG,SAAL,CAAe0iB,0BAAf,GAA4C,YAAY;AACpD,WAAO,KAAK9b,gBAAZ;AACH,GAFD;AAGA;AACJ;AACA;;;AACIR,EAAAA,IAAI,CAACpG,SAAL,CAAewiB,yBAAf,GAA2C,YAAY;AACnD,WAAO,KAAK3b,eAAZ;AACH,GAFD;AAGA;AACJ;AACA;;;AACIT,EAAAA,IAAI,CAACpG,SAAL,CAAemsB,sBAAf,GAAwC,YAAY;AAChD,WAAO,KAAKplB,YAAZ;AACH,GAFD;AAGA;AACJ;AACA;;;AACIX,EAAAA,IAAI,CAACpG,SAAL,CAAekK,cAAf,GAAgC,YAAY;AACxC,SAAKrD,eAAL,GAAuB,KAAKD,gBAAL,GAAwB,KAAKG,YAAL,GAAoB,CAAnE;AACA,SAAKC,iBAAL,GAAyB,KAAKC,kBAAL,GAA0B,KAAKC,cAAL,GAAsB,CAAzE;AACA,SAAKC,iBAAL,GAAyB,EAAzB;AACA,SAAKC,kBAAL,GAA0B,EAA1B;AACA,SAAKC,cAAL,GAAsB,EAAtB;AACA,SAAKmoB,gBAAL,CAAsB,KAAKnmB,OAA3B;;AACA,QAAI,KAAK4a,aAAL,KAAuB,KAAKpd,eAAL,IAAwB,KAAKD,gBAApD,CAAJ,EAA2E;AACvE,WAAKqb,aAAL,CAAmB;AAAEgC,QAAAA,aAAa,EAAE;AAAjB,OAAnB,EAAyC,IAAzC;AACH;;AACD,SAAK5B,cAAL;;AACA,QAAI,KAAKxb,eAAL,IAAwB,CAAC,KAAKD,gBAAlC,EAAoD;AAChD,WAAK2d,UAAL,GAAkB,MAAlB;AACH,KAFD,MAGK,IAAI,KAAK3d,gBAAL,IAAyB,CAAC,KAAKC,eAAnC,EAAoD;AACrD,WAAK0d,UAAL,GAAkB,OAAlB;AACH,KAFI,MAGA,IAAI,KAAK1d,eAAL,IAAwB,KAAKD,gBAAjC,EAAmD;AACpD,WAAK2d,UAAL,GAAkB,YAAlB;AACH;AACJ,GApBD;AAqBA;AACJ;AACA;;;AACIne,EAAAA,IAAI,CAACpG,SAAL,CAAeyvB,yBAAf,GAA2C,YAAY;AACnD,WAAO,KAAKzoB,iBAAZ;AACH,GAFD;AAGA;AACJ;AACA;;;AACIZ,EAAAA,IAAI,CAACpG,SAAL,CAAe0vB,0BAAf,GAA4C,YAAY;AACpD,WAAO,KAAKzoB,kBAAZ;AACH,GAFD;AAGA;AACJ;AACA;;;AACIb,EAAAA,IAAI,CAACpG,SAAL,CAAe2vB,sBAAf,GAAwC,YAAY;AAChD,WAAO,KAAKzoB,cAAZ;AACH,GAFD;AAGA;AACJ;AACA;;;AACId,EAAAA,IAAI,CAACpG,SAAL,CAAe4vB,qBAAf,GAAuC,YAAY;AAC/C,WAAO,KAAKxoB,kBAAZ;AACH,GAFD;AAGA;AACJ;AACA;;;AACIhB,EAAAA,IAAI,CAACpG,SAAL,CAAe6vB,oBAAf,GAAsC,YAAY;AAC9C,WAAO,KAAK1oB,iBAAZ;AACH,GAFD;AAGA;AACJ;AACA;;;AACIf,EAAAA,IAAI,CAACpG,SAAL,CAAe8vB,iBAAf,GAAmC,YAAY;AAC3C,WAAO,KAAKzoB,cAAZ;AACH,GAFD;;AAGAjB,EAAAA,IAAI,CAACpG,SAAL,CAAewvB,gBAAf,GAAkC,UAAUnmB,OAAV,EAAmB;AACjD,SAAK,IAAIvI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuI,OAAO,CAAC5I,MAA5B,EAAoCK,CAAC,EAArC,EAAyC;AACrC,UAAIuI,OAAO,CAACvI,CAAD,CAAP,CAAWuI,OAAf,EAAwB;AACpB,aAAKmmB,gBAAL,CAAsBnmB,OAAO,CAACvI,CAAD,CAAP,CAAWuI,OAAjC;AACH,OAFD,MAGK;AACD,YAAIA,OAAO,CAACvI,CAAD,CAAP,CAAW+iB,MAAX,KAAsB,OAA1B,EAAmC;AAC/B,cAAIxa,OAAO,CAACvI,CAAD,CAAP,CAAWwY,OAAX,KAAuB,KAA3B,EAAkC;AAC9B,iBAAKrS,kBAAL;AACH;;AACD;AACA,eAAKG,kBAAL,CAAwBkD,IAAxB,CAA6BjB,OAAO,CAACvI,CAAD,CAApC;AACA,eAAK8F,gBAAL;AACH,SAPD,MAQK,IAAIyC,OAAO,CAACvI,CAAD,CAAP,CAAW+iB,MAAX,KAAsB,MAA1B,EAAkC;AACnC,cAAIxa,OAAO,CAACvI,CAAD,CAAP,CAAWwY,OAAX,KAAuB,KAA3B,EAAkC;AAC9B,iBAAKtS,iBAAL;AACH;;AACD;AACA,eAAKG,iBAAL,CAAuBmD,IAAvB,CAA4BjB,OAAO,CAACvI,CAAD,CAAnC;AACA,eAAK+F,eAAL;AACH,SAPI,MAQA;AACD,cAAIwC,OAAO,CAACvI,CAAD,CAAP,CAAWwY,OAAX,KAAuB,KAA3B,EAAkC;AAC9B,iBAAKpS,cAAL;AACH;;AACD;AACA,eAAKG,cAAL,CAAoBiD,IAApB,CAAyBjB,OAAO,CAACvI,CAAD,CAAhC;AACA,eAAKiG,YAAL;AACH;AACJ;AACJ;AACJ,GAhCD;AAiCA;AACJ;AACA;;;AACIX,EAAAA,IAAI,CAACpG,SAAL,CAAe+vB,uBAAf,GAAyC,YAAY;AACjD,WAAO,KAAKC,4BAAL,KAAsC,KAAKC,qBAAL,CAA2B,KAAK5mB,OAAhC,EAAyC,CAAzC,CAA7C;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACIjD,EAAAA,IAAI,CAACpG,SAAL,CAAekwB,eAAf,GAAiC,YAAY;AACzC,WAAO,KAAK/N,YAAL,GAAoB,KAAKA,YAAL,CAAkB+N,eAAlB,EAApB,GAA0D,EAAjE;AACH,GAFD;;AAGA9pB,EAAAA,IAAI,CAACpG,SAAL,CAAegwB,4BAAf,GAA8C,YAAY;AACtD,QAAIG,oBAAoB,GAAG,CAA3B;AACA,QAAI9mB,OAAO,GAAG,KAAKia,WAAnB;;AACA,SAAK,IAAIxiB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKmjB,aAAzB,EAAwCnjB,CAAC,EAAzC,EAA6C;AACzC,UAAIuI,OAAO,CAACvI,CAAD,CAAP,CAAWwY,OAAf,EAAwB;AACpB6W,QAAAA,oBAAoB;AACvB;AACJ;;AACD,QAAI,KAAKtpB,eAAL,IAAwB,KAAKD,gBAAjC,EAAmD;AAC/C,WAAK,IAAI9F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuI,OAAO,CAAC5I,MAA5B,EAAoCK,CAAC,EAArC,EAAyC;AACrC,YAAIuI,OAAO,CAACvI,CAAD,CAAP,CAAWwY,OAAX,KAAuBjQ,OAAO,CAACvI,CAAD,CAAP,CAAW+iB,MAAX,KAAsB,MAAtB,IAAgCxa,OAAO,CAACvI,CAAD,CAAP,CAAW+iB,MAAX,KAAsB,OAA7E,CAAJ,EAA2F;AACvFsM,UAAAA,oBAAoB;AACvB;AACJ;AACJ;;AACD,WAAOA,oBAAP;AACH,GAhBD;;AAiBA/pB,EAAAA,IAAI,CAACpG,SAAL,CAAeiwB,qBAAf,GAAuC,UAAUlN,IAAV,EAAgBqN,GAAhB,EAAqB;AACxD,QAAI,CAAC,KAAKvpB,eAAN,IAAyB,CAAC,KAAKD,gBAAnC,EAAqD;AACjD,WAAK,IAAI9F,CAAC,GAAG,CAAR,EAAWuiB,GAAG,GAAGN,IAAI,CAACtiB,MAA3B,EAAmCK,CAAC,GAAGuiB,GAAvC,EAA4CviB,CAAC,EAA7C,EAAiD;AAC7C,YAAIiiB,IAAI,CAACjiB,CAAD,CAAJ,CAAQuI,OAAZ,EAAqB;AACjB+mB,UAAAA,GAAG,GAAG,KAAKH,qBAAL,CAA2BlN,IAAI,CAACjiB,CAAD,CAAJ,CAAQuI,OAAnC,EAA4C+mB,GAA5C,CAAN;AACH,SAFD,MAGK;AACD,cAAIrN,IAAI,CAACjiB,CAAD,CAAJ,CAAQqjB,QAAR,IAAoBpB,IAAI,CAACjiB,CAAD,CAAJ,CAAQwY,OAAhC,EAAyC;AACrC8W,YAAAA,GAAG;AACN;AACJ;AACJ;AACJ;;AACD,WAAOA,GAAP;AACH,GAdD;;AAeAhqB,EAAAA,IAAI,CAACpG,SAAL,CAAeuvB,cAAf,GAAgC,UAAUxM,IAAV,EAAgBqN,GAAhB,EAAqBhX,KAArB,EAA4B;AACxD,SAAK,IAAItY,CAAC,GAAG,CAAR,EAAWuiB,GAAG,GAAGN,IAAI,CAACtiB,MAA3B,EAAmCK,CAAC,GAAGuiB,GAAvC,EAA4CviB,CAAC,EAA7C,EAAiD;AAC7C,UAAIiiB,IAAI,CAACjiB,CAAD,CAAJ,CAAQuI,OAAZ,EAAqB;AACjB+mB,QAAAA,GAAG,GAAG,KAAKb,cAAL,CAAoBxM,IAAI,CAACjiB,CAAD,CAAJ,CAAQuI,OAA5B,EAAqC+mB,GAArC,EAA0ChX,KAA1C,CAAN;AACH,OAFD,MAGK;AACD,YAAI2J,IAAI,CAACjiB,CAAD,CAAJ,CAAQqjB,QAAR,IAAoB/K,KAAK,GAAG,KAAK6K,aAAL,GAAqB,CAArD,EAAwD;AACpDmM,UAAAA,GAAG;AACN;;AACDhX,QAAAA,KAAK;AACR;AACJ;;AACD,WAAOgX,GAAP;AACH,GAbD;AAcA;AACJ;AACA;AACA;AACA;;;AACIhqB,EAAAA,IAAI,CAACpG,SAAL,CAAeqwB,QAAf,GAA0B,UAAUC,MAAV,EAAkB;AACxC,QAAI,KAAKC,WAAT,EAAsB;AAClB,WAAKA,WAAL,CAAiBF,QAAjB,CAA0BC,MAA1B;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;AACA;;;AACIlqB,EAAAA,IAAI,CAACpG,SAAL,CAAewwB,qBAAf,GAAuC,UAAUC,OAAV,EAAmB;AACtD,QAAI,KAAKF,WAAT,EAAsB;AAClB,WAAKA,WAAL,CAAiBC,qBAAjB,CAAuCC,OAAvC;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIrqB,EAAAA,IAAI,CAACpG,SAAL,CAAe0wB,UAAf,GAA4B,UAAUC,UAAV,EAAsBC,SAAtB,EAAiCC,WAAjC,EAA8C;AACtE,QAAI,KAAKC,UAAT,EAAqB;AACjB,WAAKA,UAAL,CAAgBJ,UAAhB,CAA2BC,UAA3B,EAAuCC,SAAvC,EAAkDC,WAAlD;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;;;AACIzqB,EAAAA,IAAI,CAACpG,SAAL,CAAe+wB,YAAf,GAA8B,YAAY;AACtC,QAAI,KAAKD,UAAT,EAAqB;AACjB,WAAKA,UAAL,CAAgBC,YAAhB;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;AACA;AACA;;;AACI3qB,EAAAA,IAAI,CAACpG,SAAL,CAAegxB,gBAAf,GAAkC,UAAU7L,KAAV,EAAiB;AAC/C,QAAI,KAAK2L,UAAT,EAAqB;AACjB,WAAKA,UAAL,CAAgBE,gBAAhB,CAAiC7L,KAAjC;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI/e,EAAAA,IAAI,CAACpG,SAAL,CAAeixB,cAAf,GAAgC,UAAUC,SAAV,EAAqBC,cAArB,EAAqCC,WAArC,EAAkDC,SAAlD,EAA6DC,SAA7D,EAAwEC,YAAxE,EAAsFC,iBAAtF,EAAyGC,cAAzG,EAAyH;AACrJ,QAAI,KAAKtP,YAAT,EAAuB;AACnB,WAAKA,YAAL,CAAkB8O,cAAlB,CAAiCC,SAAjC,EAA4CC,cAA5C,EAA4DC,WAA5D,EAAyEC,SAAzE,EAAoFC,SAApF,EAA+FC,YAA/F,EAA6GC,iBAA7G,EAAgIC,cAAhI;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;;;AACIrrB,EAAAA,IAAI,CAACpG,SAAL,CAAe0xB,cAAf,GAAgC,UAAUC,MAAV,EAAkB;AAC9C,QAAI,KAAKxP,YAAT,EAAuB;AACnB,WAAKA,YAAL,CAAkBuP,cAAlB,CAAiCC,MAAjC;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIvrB,EAAAA,IAAI,CAACpG,SAAL,CAAe4xB,yBAAf,GAA2C,UAAUzM,KAAV,EAAiB0M,gBAAjB,EAAmC;AAC1E,QAAI,KAAK1P,YAAT,EAAuB;AACnB,WAAKA,YAAL,CAAkByP,yBAAlB,CAA4CzM,KAA5C,EAAmD0M,gBAAnD;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;AACA;AACA;;;AACIzrB,EAAAA,IAAI,CAACpG,SAAL,CAAe0hB,SAAf,GAA2B,UAAUtI,KAAV,EAAiB0Y,QAAjB,EAA2B;AAClD,QAAI,KAAK9T,eAAT,EAA0B;AACtB,WAAKA,eAAL,CAAqB0D,SAArB,CAA+BtI,KAA/B,EAAsC0Y,QAAtC;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;AACA;;;AACI1rB,EAAAA,IAAI,CAACpG,SAAL,CAAe+xB,UAAf,GAA4B,UAAUC,UAAV,EAAsB;AAC9C,QAAI,KAAKhU,eAAT,EAA0B;AACtB,WAAKA,eAAL,CAAqB+T,UAArB,CAAgCC,UAAhC;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;;;AACI5rB,EAAAA,IAAI,CAACpG,SAAL,CAAeiyB,cAAf,GAAgC,YAAY;AACxC,QAAI,KAAKjU,eAAT,EAA0B;AACtB,WAAKA,eAAL,CAAqBiU,cAArB;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;AACA;AACA;;;AACI7rB,EAAAA,IAAI,CAACpG,SAAL,CAAekyB,UAAf,GAA4B,UAAUlK,SAAV,EAAqB8J,QAArB,EAA+B;AACvD,QAAI,KAAK9T,eAAT,EAA0B;AACtB,WAAKA,eAAL,CAAqBkU,UAArB,CAAgClK,SAAhC,EAA2C8J,QAA3C;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;AACA;AACA;;;AACI1rB,EAAAA,IAAI,CAACpG,SAAL,CAAemyB,kBAAf,GAAoC,UAAUC,UAAV,EAAsBC,QAAtB,EAAgC;AAChE,SAAKrU,eAAL,CAAqBmU,kBAArB,CAAwCC,UAAxC,EAAoDC,QAApD;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIjsB,EAAAA,IAAI,CAACpG,SAAL,CAAesyB,MAAf,GAAwB,UAAUC,YAAV,EAAwB;AAC5C,QAAI,KAAKrb,YAAT,EAAuB;AACnB,WAAKA,YAAL,CAAkBob,MAAlB,CAAyBC,YAAzB;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;AACA;AACA;;;AACInsB,EAAAA,IAAI,CAACpG,SAAL,CAAewyB,KAAf,GAAuB,YAAY;AAC/B,QAAI,KAAKC,WAAT,EAAsB;AAClB,WAAKA,WAAL,CAAiBD,KAAjB;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;AACA;AACA;;;AACIpsB,EAAAA,IAAI,CAACpG,SAAL,CAAe0yB,YAAf,GAA8B,UAAUC,SAAV,EAAqB5K,IAArB,EAA2B;AACrD,QAAI,KAAK6K,UAAT,EAAqB;AACjB,WAAKA,UAAL,CAAgBF,YAAhB,CAA6BC,SAA7B,EAAwC5K,IAAxC;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;AACA;AACA;;;AACI3hB,EAAAA,IAAI,CAACpG,SAAL,CAAe6yB,SAAf,GAA2B,YAAY;AACnC,QAAI,KAAKD,UAAT,EAAqB;AACjB,WAAKA,UAAL,CAAgBC,SAAhB;AACH;AACJ,GAJD;AAKA;AACJ;AACA;;;AACIzsB,EAAAA,IAAI,CAACpG,SAAL,CAAe8yB,OAAf,GAAyB,YAAY;AACjC,QAAI,KAAKF,UAAT,EAAqB;AACjB,WAAKA,UAAL,CAAgBE,OAAhB;AACH;AACJ,GAJD;AAKA;AACJ;AACA;;;AACI1sB,EAAAA,IAAI,CAACpG,SAAL,CAAe+yB,SAAf,GAA2B,YAAY;AACnC,QAAI,KAAKH,UAAT,EAAqB;AACjB,WAAKA,UAAL,CAAgBG,SAAhB;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;AACA;AACA;;;AACI3sB,EAAAA,IAAI,CAACpG,SAAL,CAAegzB,SAAf,GAA2B,UAAUjL,IAAV,EAAgB3O,KAAhB,EAAuB;AAC9C,QAAI,KAAKwZ,UAAT,EAAqB;AACjB,WAAKA,UAAL,CAAgBI,SAAhB,CAA0BjL,IAA1B,EAAgC3O,KAAhC;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;;;AACIhT,EAAAA,IAAI,CAACpG,SAAL,CAAeizB,SAAf,GAA2B,UAAUzI,EAAV,EAAc;AACrC,QAAI,KAAKoI,UAAT,EAAqB;AACjB,WAAKA,UAAL,CAAgBK,SAAhB,CAA0BzI,EAA1B;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;AACA;;;AACIpkB,EAAAA,IAAI,CAACpG,SAAL,CAAekzB,QAAf,GAA0B,UAAU9Z,KAAV,EAAiB+L,KAAjB,EAAwB;AAC9C,QAAI,KAAKyN,UAAT,EAAqB;AACjB,WAAKA,UAAL,CAAgBM,QAAhB,CAAyB9Z,KAAzB,EAAgC+L,KAAhC;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;;;AACI/e,EAAAA,IAAI,CAACpG,SAAL,CAAemzB,QAAf,GAA0B,YAAY;AAClC,QAAI,KAAKP,UAAT,EAAqB;AACjB,WAAKA,UAAL,CAAgBO,QAAhB;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;AACA;AACA;;;AACI/sB,EAAAA,IAAI,CAACpG,SAAL,CAAeozB,UAAf,GAA4B,UAAUxL,QAAV,EAAoBzC,KAApB,EAA2BiF,KAA3B,EAAkC;AAC1D,QAAI,KAAKwI,UAAT,EAAqB;AACjB,WAAKA,UAAL,CAAgBQ,UAAhB,CAA2BxL,QAA3B,EAAqCzC,KAArC,EAA4CiF,KAA5C;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;AACA;AACA;;;AACIhkB,EAAAA,IAAI,CAACpG,SAAL,CAAeqzB,SAAf,GAA2B,UAAUja,KAAV,EAAiB2O,IAAjB,EAAuB;AAC9C,QAAI,KAAK6K,UAAT,EAAqB;AACjB,WAAKA,UAAL,CAAgBS,SAAhB,CAA0Bja,KAA1B,EAAiC2O,IAAjC;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;;;AACI3hB,EAAAA,IAAI,CAACpG,SAAL,CAAeszB,eAAf,GAAiC,YAAY;AACzC,QAAI,KAAKV,UAAT,EAAqB;AACjB,aAAO,KAAKA,UAAL,CAAgBU,eAAhB,EAAP;AACH;;AACD,WAAO,EAAP;AACH,GALD;AAMA;AACJ;AACA;AACA;AACA;AACA;;;AACIltB,EAAAA,IAAI,CAACpG,SAAL,CAAeuzB,kBAAf,GAAoC,UAAUC,KAAV,EAAiBC,QAAjB,EAA2B;AAC3D,QAAI,KAAKxU,aAAT,EAAwB;AACpB,WAAKA,aAAL,CAAmByU,WAAnB,CAA+BF,KAA/B,EAAsCC,QAAtC;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;;;AACIrtB,EAAAA,IAAI,CAACpG,SAAL,CAAe2zB,IAAf,GAAsB,UAAUC,UAAV,EAAsB;AACxC,QAAI,KAAKC,eAAT,EAA0B;AACtB,WAAKA,eAAL,CAAqBF,IAArB,CAA0BC,UAA1B;AACH;AACJ,GAJD;AAKA;AACJ;AACA;;;AACIxtB,EAAAA,IAAI,CAACpG,SAAL,CAAe8zB,iBAAf,GAAmC,YAAY;AAC3C,QAAIvtB,KAAK,GAAG,IAAZ;;AACA,QAAI,CAAC,KAAK8f,cAAL,GAAsBxL,aAAtB,CAAoC,cAApC,CAAL,EAA0D;AACtD;AACH;;AACD,QAAK,CAAC,KAAK3R,aAAL,CAAmBG,OAAnB,CAA2B5I,MAA5B,IAAsC,CAAC,KAAK4K,QAAL,EAAvC,IAA0D,CAAC,KAAK4f,aAAL,EAA5D,IACA,KAAK5E,cAAL,GAAsBxL,aAAtB,CAAoC,cAApC,EAAoD8M,YAApD,CAAiE,iBAAjE,CADA,IAEA,CAAC,KAAK5B,eAAL,EAFL,EAE6B;AACzB;AACH;;AACD,QAAIgO,WAAW,GAAG,KAAK1N,cAAL,GAAsBxL,aAAtB,CAAoC,cAApC,EAAoDwS,aAApD,CAAkE2G,WAApF;AACA,QAAIC,SAAS,GAAG,GAAGpR,KAAH,CAASrc,IAAT,CAAc,KAAK6f,cAAL,GAAsBxL,aAAtB,CAAoC,UAApC,EAAgDqZ,UAA9D,CAAhB;AACA,QAAIC,UAAU,GAAG,GAAGtR,KAAH,CAASrc,IAAT,CAAc,KAAKuf,eAAL,GAAuBlL,aAAvB,CAAqC,UAArC,EAAiDqZ,UAA/D,CAAjB;AACA,QAAIE,QAAQ,GAAGL,WAAW,GAAG,EAA7B;AACA,QAAIjzB,CAAC,GAAG,KAAKwjB,aAAL,OAAyB,OAAzB,GAAmC,KAAK1d,gBAAxC,GAA2D,CAAnE;AACA,QAAIytB,YAAY,GAAG,KAAK/tB,OAAL,CAAa0tB,WAAhC;;AACA,QAAIM,UAAU,GAAG,UAAUlb,KAAV,EAAiByE,KAAjB,EAAwB;AACrC,UAAIpa,iBAAiB,CAAC8C,KAAD,CAArB,EAA8B;AAC1B,YAAIguB,QAAQ,GAAG,CAAC1W,KAAK,GAAGwW,YAAR,GAAuB,GAAxB,EAA6BG,OAA7B,CAAqC,CAArC,IAA0C,GAAzD;AACAP,QAAAA,SAAS,CAAC7a,KAAD,CAAT,CAAiByC,KAAjB,CAAuBgC,KAAvB,GAA+B0W,QAA/B;AACAJ,QAAAA,UAAU,CAAC/a,KAAD,CAAV,CAAkByC,KAAlB,CAAwBgC,KAAxB,GAAgC0W,QAAhC;AACH,OAJD,MAKK;AACDN,QAAAA,SAAS,CAAC7a,KAAD,CAAT,CAAiByC,KAAjB,CAAuBgC,KAAvB,GAA+BA,KAAK,GAAG,IAAvC;AACAsW,QAAAA,UAAU,CAAC/a,KAAD,CAAV,CAAkByC,KAAlB,CAAwBgC,KAAxB,GAAgCA,KAAK,GAAG,IAAxC;AACH;;AACDtX,MAAAA,KAAK,CAAC6Q,MAAN,CAAarT,MAAM,CAAC0wB,kBAApB,EAAwC;AAAErb,QAAAA,KAAK,EAAEA,KAAT;AAAgByE,QAAAA,KAAK,EAAEA;AAAvB,OAAxC;AACH,KAXD;;AAYA,QAAIuW,QAAQ,IAAI,CAAhB,EAAmB;AACfL,MAAAA,WAAW,GAAI,KAAKK,QAApB;AACH;;AACD,QAAI,KAAK3oB,0BAAL,IAAmC,KAAKtD,SAA5C,EAAuD;AACnD4rB,MAAAA,WAAW,GAAG,EAAd;AACH;;AACD,WAAOjzB,CAAC,GAAG,KAAKoI,aAAL,CAAmBG,OAAnB,CAA2B5I,MAAtC,EAA8C;AAC1C6zB,MAAAA,UAAU,CAACxzB,CAAD,EAAIizB,WAAJ,CAAV;AACAjzB,MAAAA,CAAC;AACJ;;AACD,QAAI,KAAKuK,QAAL,EAAJ,EAAqB;AACjBipB,MAAAA,UAAU,CAACxzB,CAAD,EAAIizB,WAAJ,CAAV;AACAjzB,MAAAA,CAAC;AACJ;;AACD,QAAI,KAAKmqB,aAAL,EAAJ,EAA0B;AACtBqJ,MAAAA,UAAU,CAACxzB,CAAD,EAAIizB,WAAJ,CAAV;AACH;;AACD,SAAK5rB,SAAL,GAAiB,KAAjB;AACA,SAAKke,cAAL,GAAsBxL,aAAtB,CAAoC,cAApC,EAAoD6Z,YAApD,CAAiE,iBAAjE,EAAoF,MAApF;AACH,GA/CD;AAgDA;AACJ;AACA;;;AACItuB,EAAAA,IAAI,CAACpG,SAAL,CAAe20B,gBAAf,GAAkC,YAAY;AAC1C,QAAIlxB,iBAAiB,CAAC,IAAD,CAArB,EAA6B;AACzB,WAAK4iB,cAAL,GAAsBxL,aAAtB,CAAoC,cAApC,EAAoD+Z,eAApD,CAAoE,iBAApE;AACA,WAAKjT,YAAL,CAAkBkT,iBAAlB;AACA,WAAKf,iBAAL;AACH;;AACD,QAAI,CAAC,KAAKjW,KAAL,KAAe,MAAf,IAAyB,OAAQ,KAAKA,KAAb,KAAwB,QAAxB,IAAoC,KAAKA,KAAL,CAAWZ,OAAX,CAAmB,GAAnB,MAA4B,CAAC,CAA3F,KACG,KAAK/E,UAAL,GAAkB+C,MAAlB,CAAyB,UAAUzB,GAAV,EAAe;AAAE,aAAO,CAAC,CAACA,GAAG,CAACqE,KAAL,IAAcrE,GAAG,CAACqE,KAAJ,KAAc,MAA7B,KAAwCrE,GAAG,CAACsb,QAAnD;AAA8D,KAAxG,EAA0Gr0B,MAA1G,GAAmH,CAD1H,EAC6H;AACzH,UAAIs0B,UAAU,GAAG,KAAKpT,YAAL,CAAkBqT,aAAlB,CAAgC,KAAK9c,UAAL,EAAhC,CAAjB;AACA,WAAKyJ,YAAL,CAAkBsT,wBAAlB,CAA2CF,UAA3C;AACH;;AACD,QAAI,KAAK1Q,YAAL,MAAuB,KAAK1C,YAAhC,EAA8C;AAC1C,WAAKA,YAAL,CAAkBuT,sBAAlB;AACH;AACJ,GAdD;AAeA;AACJ;AACA;;;AACI9uB,EAAAA,IAAI,CAACpG,SAAL,CAAeirB,aAAf,GAA+B,YAAY;AACvC,WAAO,KAAK/f,mBAAL,IAA4B,CAAC,KAAK0iB,eAAL,CAAqBC,QAAlD,IAA8D,CAAC,KAAKriB,oBAA3E;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;;;AACIpF,EAAAA,IAAI,CAACpG,SAAL,CAAem1B,cAAf,GAAgC,UAAUC,SAAV,EAAqBC,OAArB,EAA8B;AAC1D,QAAI,KAAKC,aAAT,EAAwB;AACpB,WAAKA,aAAL,CAAmBH,cAAnB,CAAkCC,SAAlC,EAA6CC,OAA7C;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIjvB,EAAAA,IAAI,CAACpG,SAAL,CAAeu1B,oBAAf,GAAsC,UAAUC,SAAV,EAAqBC,OAArB,EAA8B;AAChE,QAAI,KAAKH,aAAT,EAAwB;AACpB,WAAKA,aAAL,CAAmBC,oBAAnB,CAAwCC,SAAxC,EAAmDC,OAAnD;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIrvB,EAAAA,IAAI,CAACpG,SAAL,CAAe01B,0BAAf,GAA4C,UAAUxE,SAAV,EAAqBuE,OAArB,EAA8B;AACtE,QAAI,KAAKH,aAAT,EAAwB;AACpB,WAAKA,aAAL,CAAmBI,0BAAnB,CAA8CxE,SAA9C,EAAyDuE,OAAzD;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;AACA;AACA;;;AACIrvB,EAAAA,IAAI,CAACpG,SAAL,CAAe21B,WAAf,GAA6B,UAAUC,WAAV,EAAuBH,OAAvB,EAAgC;AACzD,QAAI,KAAKI,oBAAT,EAA+B;AAC3B,WAAKA,oBAAL,CAA0BF,WAA1B,CAAsCC,WAAtC,EAAmDH,OAAnD;AACH;AACJ,GAJD;AAKA;AACJ;AACA;;;AACIrvB,EAAAA,IAAI,CAACpG,SAAL,CAAe81B,iBAAf,GAAmC,UAAU5b,CAAV,EAAa1P,IAAb,EAAmB;AAClD,SAAK4M,MAAL,CAAY,mBAAZ,EAAiC8C,CAAjC;AACH,GAFD;AAGA;AACJ;AACA;;;AACI9T,EAAAA,IAAI,CAACpG,SAAL,CAAe+1B,YAAf,GAA8B,UAAUxY,MAAV,EAAkB;AAC5C,QAAIyY,WAAW,GAAG,KAAK3P,cAAL,EAAlB;AACA,QAAI4P,YAAY,GAAG,KAAKlQ,eAAL,EAAnB;AACA,QAAImQ,UAAU,GAAGF,WAAW,CAACjd,gBAAZ,CAA6B,qCAA7B,CAAjB;AACA,QAAIuP,IAAI,GAAG,KAAKnB,OAAL,EAAX;AACA,QAAIgP,QAAQ,GAAG5Y,MAAM,GAAG,MAAH,GAAY,EAAjC;AACAvb,IAAAA,iBAAiB,CAACg0B,WAAW,CAACnb,aAAZ,CAA0B,UAA1B,EAAsCqZ,UAAtC,CAAiD,CAAjD,CAAD,EAAsD;AAAE,iBAAWiC;AAAb,KAAtD,CAAjB;AACAn0B,IAAAA,iBAAiB,CAACi0B,YAAY,CAACpb,aAAb,CAA2B,UAA3B,EAAuCqZ,UAAvC,CAAkD,CAAlD,CAAD,EAAuD;AAAE,iBAAWiC;AAAb,KAAvD,CAAjB;;AACA,SAAK,IAAIr1B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKqmB,OAAL,GAAe1mB,MAAnC,EAA2CK,CAAC,EAA5C,EAAgD;AAC5C,UAAIymB,GAAG,GAAGe,IAAI,CAACxnB,CAAD,CAAJ,CAAQs1B,iBAAlB;AACA7Y,MAAAA,MAAM,GAAG7b,QAAQ,CAAC,CAAC6lB,GAAD,CAAD,EAAQ,QAAR,CAAX,GAA+B5lB,WAAW,CAAC,CAAC4lB,GAAD,CAAD,EAAQ,CAAC,QAAD,CAAR,CAAhD;AACH;;AACD,SAAK,IAAI8O,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,WAAW,CAACjd,gBAAZ,CAA6B,qCAA7B,EAAoEtY,MAAxF,EAAgG41B,CAAC,EAAjG,EAAqG;AACjG,UAAI9O,GAAG,GAAG2O,UAAU,CAACG,CAAD,CAApB;AACA9Y,MAAAA,MAAM,GAAG7b,QAAQ,CAAC,CAAC6lB,GAAD,CAAD,EAAQ,QAAR,CAAX,GAA+B5lB,WAAW,CAAC,CAAC4lB,GAAD,CAAD,EAAQ,CAAC,QAAD,CAAR,CAAhD;AACH;AACJ,GAhBD;AAiBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACInhB,EAAAA,IAAI,CAACpG,SAAL,CAAes2B,cAAf,GAAgC,UAAUC,UAAV,EAAsB;AAClD,QAAI,KAAKC,YAAT,EAAuB;AACnB,WAAKA,YAAL,CAAkBF,cAAlB,CAAiCC,UAAjC;AACH;AACJ,GAJD;AAKA;AACJ;AACA;;;AACInwB,EAAAA,IAAI,CAACpG,SAAL,CAAey2B,mBAAf,GAAqC,UAAUC,CAAV,EAAaC,CAAb,EAAgBv2B,MAAhB,EAAwB;AACzD,QAAI,KAAKw2B,mBAAT,EAA8B;AAC1B,WAAKA,mBAAL,CAAyBC,mBAAzB,CAA6CH,CAA7C,EAAgDC,CAAhD,EAAmDv2B,MAAnD;AACH;AACJ,GAJD;;AAKAgG,EAAAA,IAAI,CAACpG,SAAL,CAAe0M,kBAAf,GAAoC,YAAY;AAC5C,SAAKjC,cAAL,CAAoBqsB,QAApB,CAA6B,cAA7B,EAA6C,KAAKnV,YAAL,GAAoB,IAAInd,kBAAJ,CAAuB,IAAvB,CAAjE;AACA,SAAKiG,cAAL,CAAoBqsB,QAApB,CAA6B,qBAA7B,EAAoD,IAAI1yB,mBAAJ,EAApD;AACA,SAAKqG,cAAL,CAAoBqsB,QAApB,CAA6B,iBAA7B,EAAgD,IAAIvyB,eAAJ,EAAhD;AACA,SAAKkG,cAAL,CAAoBqsB,QAApB,CAA6B,cAA7B,EAA6C,KAAKC,SAAL,GAAiB,IAAIz0B,IAAJ,CAAS,KAAK2Z,aAAL,EAAT,EAA+B,KAAKjO,aAApC,EAAmD,KAAKgpB,MAAxD,CAA9D;AACA,SAAKvsB,cAAL,CAAoBqsB,QAApB,CAA6B,gBAA7B,EAA+C,KAAKG,qBAAL,GAA6B,IAAI3yB,cAAJ,CAAmB,KAAK0yB,MAAxB,CAA5E;AACA,SAAKvsB,cAAL,CAAoBqsB,QAApB,CAA6B,iBAA7B,EAAgD,KAAKvc,SAAL,GAAiB,IAAIxV,QAAJ,CAAa,IAAb,CAAjE;AACA,SAAK0F,cAAL,CAAoBqsB,QAApB,CAA6B,aAA7B,EAA4C,KAAKlgB,WAAL,GAAmB,IAAInS,WAAJ,EAA/D;AACA,SAAKgG,cAAL,CAAoBqsB,QAApB,CAA6B,OAA7B,EAAsC,KAAK9a,WAAL,GAAmB,IAAItX,aAAJ,CAAkB,IAAlB,CAAzD;AACH,GATD;;AAUA0B,EAAAA,IAAI,CAACpG,SAAL,CAAemY,YAAf,GAA8B,YAAY;AACtC,QAAI+e,KAAK,GAAG,KAAKhuB,aAAL,CAAmBG,OAA/B;AACA,QAAI8tB,KAAK,GAAG,KAAK/tB,YAAL,CAAkBC,OAA9B;AACA,QAAI+tB,IAAJ;AACA,QAAIf,CAAJ;;AACA,QAAI,KAAKlrB,aAAT,EAAwB;AACpB,UAAIksB,OAAO,GAAG,UAAUv2B,CAAV,EAAauiB,GAAb,EAAkB;AAC5BgT,QAAAA,CAAC,GAAG,CAAJ;;AACA,aAAK,IAAIiB,IAAI,GAAGH,KAAK,CAAC12B,MAAtB,EAA8B41B,CAAC,GAAGiB,IAAlC,EAAwCjB,CAAC,EAAzC,EAA6C;AACzC,cAAIc,KAAK,CAACd,CAAD,CAAL,CAASlR,KAAT,KAAmB+R,KAAK,CAACp2B,CAAD,CAA5B,EAAiC;AAC7Bs2B,YAAAA,IAAI,GAAG,IAAP;AACA;AACH;AACJ;;AACD,YAAI,CAACA,IAAL,EAAW;AACPD,UAAAA,KAAK,CAAC7sB,IAAN,CAAW;AAAE6a,YAAAA,KAAK,EAAE+R,KAAK,CAACp2B,CAAD,CAAd;AAAmB8vB,YAAAA,SAAS,EAAE,WAA9B;AAA2C2G,YAAAA,WAAW,EAAE;AAAxD,WAAX;AACH,SAFD,MAGK;AACD,cAAIC,MAAM,CAAC5sB,YAAX,EAAyB;AACrB4sB,YAAAA,MAAM,CAAC3sB,aAAP,CAAqBP,IAArB,CAA0B6sB,KAAK,CAACd,CAAD,CAAL,CAASlR,KAAnC;AACH,WAFD,MAGK;AACDgS,YAAAA,KAAK,CAACd,CAAD,CAAL,CAASzF,SAAT,GAAqB,WAArB;AACH;AACJ;;AACD,YAAI,CAAC4G,MAAM,CAACtuB,aAAP,CAAqBuuB,iBAA1B,EAA6C;AACzC,cAAI9O,MAAM,GAAG6O,MAAM,CAAC/rB,0BAAP,GACT+rB,MAAM,CAACnuB,OAAP,CAAe4R,MAAf,CAAsB,UAAU1a,CAAV,EAAa;AAAE,mBAAOA,CAAC,CAAC4kB,KAAF,KAAY+R,KAAK,CAACp2B,CAAD,CAAxB;AAA8B,WAAnE,EAAqE,CAArE,CADS,GACiE02B,MAAM,CAACtM,gBAAP,CAAwBgM,KAAK,CAACp2B,CAAD,CAA7B,CAD9E;;AAEA,cAAI6nB,MAAJ,EAAY;AACRA,YAAAA,MAAM,CAACrP,OAAP,GAAiB,KAAjB;AACH,WAFD,MAGK;AACDke,YAAAA,MAAM,CAAC7gB,GAAP,CAAW,gBAAX,EAA6B;AAAE+gB,cAAAA,UAAU,EAAE,OAAd;AAAuB/G,cAAAA,UAAU,EAAEuG,KAAK,CAACp2B,CAAD;AAAxC,aAA7B;AACH;AACJ;AACJ,OA7BD;;AA8BA,UAAI02B,MAAM,GAAG,IAAb;;AACA,WAAK,IAAI12B,CAAC,GAAG,CAAR,EAAWuiB,GAAG,GAAG6T,KAAK,CAACz2B,MAA5B,EAAoCK,CAAC,GAAGuiB,GAAxC,EAA6CviB,CAAC,EAA9C,EAAkD;AAC9Cu2B,QAAAA,OAAO,CAACv2B,CAAD,EAAIuiB,GAAJ,CAAP;AACH;AACJ;;AACD,QAAI,CAAC6T,KAAK,CAACz2B,MAAX,EAAmB;AACf,WAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGq2B,KAAK,CAAC12B,MAA1B,EAAkCK,CAAC,EAAnC,EAAuC;AACnC,aAAK+J,aAAL,CAAmBP,IAAnB,CAAwB6sB,KAAK,CAACr2B,CAAD,CAAL,CAASqkB,KAAjC;AACH;AACJ;;AACD,SAAKjH,aAAL,GAAqB/a,gBAAgB,CAAC,KAAKgb,WAAN,CAArC;AACA,SAAKC,gBAAL,GAAwBjb,gBAAgB,CAAC,KAAKkb,cAAN,CAAxC;AACA,SAAK8P,cAAL,GAAsBhrB,gBAAgB,CAAC,KAAK0I,YAAL,CAAkBhC,QAAnB,CAAtC;AACA,SAAKwkB,oBAAL,GAA4BlrB,gBAAgB,CAAC,KAAK0I,YAAL,CAAkB8rB,cAAnB,CAA5C;AACA,SAAKpJ,oBAAL,GAA4BprB,gBAAgB,CAAC,KAAK0I,YAAL,CAAkB+rB,cAAnB,CAA5C;;AACA,QAAI,CAACv2B,iBAAiB,CAAC,KAAKw2B,aAAN,CAAtB,EAA4C;AACxC,UAAIzN,KAAK,GAAG/oB,iBAAiB,CAAC,KAAKw2B,aAAL,CAAmBC,mBAApB,CAAjB,GAA4D,WAA5D,GACR,KAAKD,aAAL,CAAmBC,mBADvB;AAEA,WAAKvS,KAAL,CAAWwS,KAAX,CAAiB,KAAKC,WAAtB,EAAmC,OAAnC,EAA4C5N,KAA5C,EAAmD,IAAnD;AACH;;AACD,SAAK6N,iBAAL;AACH,GAzDD;;AA0DA7xB,EAAAA,IAAI,CAACpG,SAAL,CAAei4B,iBAAf,GAAmC,YAAY;AAC3C,QAAI,KAAK1rB,mBAAL,CAAyB,KAAK2L,UAAL,EAAzB,CAAJ,EAAiD;AAC7C,WAAKd,MAAL,CAAYrT,MAAM,CAACm0B,oBAAnB,EAAyC,KAAKpM,oBAAL,EAAzC;AACH;AACJ,GAJD;;AAKA1lB,EAAAA,IAAI,CAACpG,SAAL,CAAeoY,UAAf,GAA4B,YAAY;AACpC,SAAKuG,SAAL;;AACA,QAAI,KAAK6C,WAAT,EAAsB;AAClB,WAAKlb,OAAL,CAAavE,SAAb,CAAuBiX,GAAvB,CAA2B,aAA3B;AACH;;AACD,QAAI9X,OAAO,CAACi3B,QAAZ,EAAsB;AAClB,WAAK7xB,OAAL,CAAavE,SAAb,CAAuBiX,GAAvB,CAA2B,UAA3B;AACH;;AACD,QAAI,KAAK0G,SAAT,EAAoB;AAChB,WAAKpZ,OAAL,CAAavE,SAAb,CAAuBiX,GAAvB,CAA2B,mBAA3B;AACH;;AACDjX,IAAAA,SAAS,CAAC,KAAKuE,OAAN,EAAe,CAAC,cAAD,EAAiB,WAAjB,CAAf,EAA8C,EAA9C,CAAT;AACA,QAAI8xB,eAAe,GAAG,KAAK3tB,cAAL,CAAoB0O,UAApB,CAA+B,iBAA/B,CAAtB;AACA,SAAK2E,YAAL,GAAoBsa,eAAe,CAACC,WAAhB,CAA4Bp0B,UAAU,CAACq0B,MAAvC,CAApB;AACA,SAAKrV,aAAL,GAAqBmV,eAAe,CAACC,WAAhB,CAA4Bp0B,UAAU,CAACs0B,OAAvC,CAArB;AACA,SAAK9F,WAAL,GAAmB,IAAIxtB,KAAJ,CAAU,IAAV,EAAgB,KAAKkS,YAArB,CAAnB;AACA,SAAK0c,eAAL,GAAuB,IAAI1uB,SAAJ,CAAc,IAAd,CAAvB;AACA,SAAK8R,YAAL,CAAkBP,MAAlB;AACA,SAAK2E,gBAAL;AACA,SAAKmd,sBAAL;AACA,SAAK7W,YAAL,CAAkBkT,iBAAlB;AACA,SAAKlV,eAAL;AACA,SAAKG,aAAL;AACA,SAAK2Y,aAAL,GAvBoC,CAuBd;;AACtB,SAAKvc,kBAAL;AACH,GAzBD;;AA0BA9V,EAAAA,IAAI,CAACpG,SAAL,CAAe04B,SAAf,GAA2B,YAAY;AACnC,SAAKvhB,YAAL,CAAkBwhB,QAAlB;AACA,SAAKxhB,YAAL,CAAkByhB,SAAlB;;AACA,QAAI,KAAK7d,MAAL,KAAgB,MAApB,EAA4B;AACxB,WAAK5D,YAAL,CAAkB6H,UAAlB;AACH;AACJ,GAND;;AAOA5Y,EAAAA,IAAI,CAACpG,SAAL,CAAe2e,SAAf,GAA2B,YAAY;AACnC,QAAI,KAAKE,SAAT,EAAoB;AAChB,WAAKvY,OAAL,CAAavE,SAAb,CAAuBiX,GAAvB,CAA2B,OAA3B;AACH,KAFD,MAGK;AACD,WAAK1S,OAAL,CAAavE,SAAb,CAAuBF,MAAvB,CAA8B,OAA9B;AACH;AACJ,GAPD;;AAQAuE,EAAAA,IAAI,CAACpG,SAAL,CAAew4B,sBAAf,GAAwC,YAAY;AAChD,QAAIK,KAAK,GAAG,KAAK7hB,aAAL,CAAmB,KAAnB,EAA0B;AAAE8hB,MAAAA,SAAS,EAAE,aAAb;AAA4BC,MAAAA,MAAM,EAAE;AAApC,KAA1B,CAAZ;AACA,QAAIC,OAAO,GAAG,KAAKhiB,aAAL,CAAmB,KAAnB,EAA0B;AAAE8hB,MAAAA,SAAS,EAAE,WAAb;AAA0BG,MAAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ;AAAjC,KAA1B,CAAd;AACAt3B,IAAAA,MAAM,CAAC,CAACo3B,OAAD,EAAU,KAAKhiB,aAAL,CAAmB,KAAnB,EAA0B;AAAE8hB,MAAAA,SAAS,EAAE;AAAb,KAA1B,CAAV,CAAD,EAAyED,KAAzE,CAAN;AACAG,IAAAA,OAAO,CAACG,WAAR,CAAoB,KAAKniB,aAAL,CAAmB,MAAnB,CAApB;AACApV,IAAAA,MAAM,CAAC,CAACo3B,OAAD,EAAU,KAAKhiB,aAAL,CAAmB,KAAnB,EAA0B;AAAE8hB,MAAAA,SAAS,EAAE;AAAb,KAA1B,CAAV,CAAD,EAA2ED,KAA3E,CAAN;AACA,SAAKvyB,OAAL,CAAa6yB,WAAb,CAAyBN,KAAzB;AACH,GAPD;;AAQAzyB,EAAAA,IAAI,CAACpG,SAAL,CAAe2f,eAAf,GAAiC,YAAY;AACzC5d,IAAAA,SAAS,CAAC,KAAKuE,OAAN,EAAe,EAAf,EAAmB,CAAC,iBAAD,EAAoB,mBAApB,EAAyC,aAAzC,EAAwD,aAAxD,CAAnB,CAAT;;AACA,YAAQ,KAAK8yB,SAAb;AACI,WAAK,YAAL;AACI,aAAK9yB,OAAL,CAAavE,SAAb,CAAuBiX,GAAvB,CAA2B,mBAA3B;AACA;;AACJ,WAAK,UAAL;AACI,aAAK1S,OAAL,CAAavE,SAAb,CAAuBiX,GAAvB,CAA2B,iBAA3B;AACA;;AACJ,WAAK,MAAL;AACI,aAAK1S,OAAL,CAAavE,SAAb,CAAuBiX,GAAvB,CAA2B,aAA3B;AACA;;AACJ,WAAK,MAAL;AACI,aAAK1S,OAAL,CAAavE,SAAb,CAAuBiX,GAAvB,CAA2B,aAA3B;AACA;AAZR;;AAcA,SAAKyG,iBAAL;AACH,GAjBD;;AAkBArZ,EAAAA,IAAI,CAACpG,SAAL,CAAeyf,iBAAf,GAAmC,YAAY;AAC3C,QAAI,KAAK4Z,aAAL,IACA,EAAE,KAAKD,SAAL,KAAmB,UAAnB,IAAiC,KAAKA,SAAL,KAAmB,MAAtD,CADJ,EACmE;AAC/D,WAAK9yB,OAAL,CAAavE,SAAb,CAAuBiX,GAAvB,CAA2B,gBAA3B;AACH,KAHD,MAIK;AACD,WAAK1S,OAAL,CAAavE,SAAb,CAAuBF,MAAvB,CAA8B,gBAA9B;AACH;AACJ,GARD;AASA;AACJ;AACA;AACA;AACA;;;AACIuE,EAAAA,IAAI,CAACpG,SAAL,CAAe8f,aAAf,GAA+B,YAAY;AACvC,QAAI,KAAKD,aAAT,EAAwB;AACpB,UAAIqW,UAAU,GAAG,GAAGrT,KAAH,CAASrc,IAAT,CAAc,KAAKF,OAAL,CAAayS,gBAAb,CAA8B,iBAA9B,CAAd,CAAjB;;AACA,cAAQ,KAAKugB,gBAAL,CAAsBC,QAA9B;AACI,aAAK,QAAL;AACIr2B,UAAAA,IAAI,CAAC,KAAKoD,OAAN,EAAe,KAAf,CAAJ;AACApD,UAAAA,IAAI,CAAC,KAAKijB,UAAL,EAAD,EAAoB,KAApB,CAAJ;AACAjjB,UAAAA,IAAI,CAACgzB,UAAD,EAAa,IAAb,CAAJ;AACA;;AACJ,aAAK,SAAL;AACIhzB,UAAAA,IAAI,CAAC,KAAKijB,UAAL,EAAD,EAAoB,IAApB,CAAJ;AACAjjB,UAAAA,IAAI,CAAC,KAAKoD,OAAN,EAAe,KAAf,CAAJ;AACApD,UAAAA,IAAI,CAACgzB,UAAD,EAAa,KAAb,CAAJ;AACA;;AACJ;AACIhzB,UAAAA,IAAI,CAAC,KAAKoD,OAAN,EAAe,IAAf,CAAJ;AACApD,UAAAA,IAAI,CAAC,KAAKijB,UAAL,EAAD,EAAoB,KAApB,CAAJ;AACAjjB,UAAAA,IAAI,CAACgzB,UAAD,EAAa,KAAb,CAAJ;AAdR;;AAgBA,UAAI,KAAKoD,gBAAL,CAAsBC,QAAtB,KAAmC,SAAvC,EAAkD;AAC9C,aAAKniB,MAAL,CAAYrT,MAAM,CAACy1B,eAAnB,EAAoC,EAApC;AACH;AACJ;AACJ,GAvBD;AAwBA;AACJ;AACA;AACA;AACA;;;AACIpzB,EAAAA,IAAI,CAACpG,SAAL,CAAe+f,cAAf,GAAgC,YAAY;AACxC7c,IAAAA,IAAI,CAAC,KAAKoD,OAAN,EAAe,KAAf,CAAJ;AACA,QAAI4vB,UAAU,GAAG,GAAGrT,KAAH,CAASrc,IAAT,CAAc,KAAKF,OAAL,CAAayS,gBAAb,CAA8B,iBAA9B,CAAd,CAAjB;AACA7V,IAAAA,IAAI,CAACgzB,UAAD,EAAa,KAAb,CAAJ;AACAhzB,IAAAA,IAAI,CAAC,KAAKijB,UAAL,EAAD,EAAoB,KAApB,CAAJ;;AACA,QAAI,KAAKmT,gBAAL,CAAsBC,QAAtB,KAAmC,SAAvC,EAAkD;AAC9C,WAAKniB,MAAL,CAAYrT,MAAM,CAACy1B,eAAnB,EAAoC,EAApC;AACH;AACJ,GARD;AASA;AACJ;AACA;AACA;AACA;;;AACIpzB,EAAAA,IAAI,CAACpG,SAAL,CAAey4B,aAAf,GAA+B,YAAY;AACvC,SAAK9c,UAAL,GAAkB,IAAI7Y,OAAJ,CAAY;AAAE22B,MAAAA,OAAO,EAAE,QAAX;AAAqBT,MAAAA,OAAO,EAAE;AAA9B,KAAZ,EAAgD,KAAK1yB,OAArD,CAAlB;AACH,GAFD;AAGA;;;AACAF,EAAAA,IAAI,CAACpG,SAAL,CAAe0c,aAAf,GAA+B,YAAY;AACvC,QAAI,KAAKlR,oBAAT,EAA+B;AAC3B,WAAKxC,YAAL,CAAkByU,WAAlB,GAAgC,CAAhC;AACH;;AACD,SAAKjW,gBAAL;AACH,GALD;;AAMApB,EAAAA,IAAI,CAACpG,SAAL,CAAe05B,gBAAf,GAAkC,UAAUpzB,OAAV,EAAmB;AACjD,QAAIuX,KAAJ;AACA,QAAImY,WAAW,GAAG,KAAK3P,cAAL,EAAlB;AACA,QAAI4P,YAAY,GAAG,KAAKlQ,eAAL,EAAnB;AACA,QAAI4T,YAAY,GAAG,cAAnB;AACA,QAAIC,aAAa,GAAG,eAApB;AACA,QAAIC,MAAM,GAAG,KAAKC,WAAL,CAAiB9D,WAAjB,EAA8B2D,YAA9B,EAA4C,QAA5C,CAAb;AACA,QAAII,MAAM,GAAG,KAAKD,WAAL,CAAiB9D,WAAjB,EAA8B2D,YAA9B,EAA4C,SAA5C,CAAb;AACA,QAAIxO,EAAE,GAAG7kB,OAAT;AACA,QAAI0zB,KAAK,GAAG1zB,OAAO,CAACvE,SAAR,CAAkBwL,QAAlB,CAA2B,cAA3B,IAA6CssB,MAA7C,GAAsDE,MAAlE;AACA,QAAIxS,GAAG,GAAGjhB,OAAO,CAACvE,SAAR,CAAkBwL,QAAlB,CAA2B,cAA3B,IAA6C,IAA7C,GAAoD,IAA9D;AACAysB,IAAAA,KAAK,CAACnf,aAAN,CAAoB0M,GAApB,EAAyBuR,SAAzB,GAAqCxyB,OAAO,CAACwyB,SAA7C;AACAkB,IAAAA,KAAK,CAACnf,aAAN,CAAoB0M,GAApB,EAAyB3L,SAAzB,GAAqCtV,OAAO,CAACsV,SAA7C;AACAiC,IAAAA,KAAK,GAAGmc,KAAK,CAACnf,aAAN,CAAoB0M,GAApB,EAAyB0S,qBAAzB,GAAiDpc,KAAzD;AACAqc,IAAAA,QAAQ,CAACC,IAAT,CAAcC,WAAd,CAA0BP,MAA1B;AACAK,IAAAA,QAAQ,CAACC,IAAT,CAAcC,WAAd,CAA0BL,MAA1B;;AACA,QAAIlc,KAAK,GAAGvX,OAAO,CAAC2zB,qBAAR,GAAgCpc,KAA5C,EAAmD;AAC/C,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH,GApBD;;AAqBAzX,EAAAA,IAAI,CAACpG,SAAL,CAAeq6B,gBAAf,GAAkC,UAAUngB,CAAV,EAAa;AAC3C,QAAI,KAAK2C,iBAAL,EAAJ,EAA8B;AAC1B,UAAIvW,OAAO,GAAGrD,YAAY,CAACiX,CAAC,CAAC9Z,MAAH,EAAW,mBAAX,CAA1B;;AACA,UAAI,KAAKk6B,WAAL,KAAqBh0B,OAArB,IAAgC4T,CAAC,CAACrB,IAAF,KAAW,UAA/C,EAA2D;AACvD,aAAK8C,UAAL,CAAgBmB,KAAhB;AACH;;AACD,UAAIyd,OAAO,GAAGrgB,CAAC,CAAC9Z,MAAF,CAASm6B,OAAvB;AACA,UAAIC,SAAS,GAAG,CAAC,GAAD,EAAM,QAAN,EAAgB,OAAhB,CAAhB;;AACA,UAAIl0B,OAAO,IAAI4T,CAAC,CAACrB,IAAF,KAAW,UAAtB,IAAoC,EAAE3X,OAAO,CAACi3B,QAAR,IAAoBqC,SAAS,CAACvd,OAAV,CAAkBsd,OAAlB,MAA+B,CAAC,CAAtD,CAAxC,EAAkG;AAC9F,YAAIj0B,OAAO,CAACqhB,YAAR,CAAqB,kBAArB,CAAJ,EAA8C;AAC1C;AACH;;AACD,YAAI,KAAK+R,gBAAL,CAAsBpzB,OAAtB,CAAJ,EAAoC;AAChC,cAAIA,OAAO,CAACmgB,sBAAR,CAA+B,cAA/B,EAA+ChmB,MAAnD,EAA2D;AACvD,iBAAKkb,UAAL,CAAgBqd,OAAhB,GAA0B1yB,OAAO,CAACmgB,sBAAR,CAA+B,cAA/B,EAA+C,CAA/C,EAAkDgU,SAA5E;AACH,WAFD,MAGK;AACD,iBAAK9e,UAAL,CAAgBqd,OAAhB,GAA0B1yB,OAAO,CAACm0B,SAAlC;AACH;;AACD,eAAKH,WAAL,GAAmBh0B,OAAnB;AACA,eAAKqV,UAAL,CAAgB+e,IAAhB,CAAqBp0B,OAArB;AACH;AACJ;AACJ;;AACD,SAAKq0B,eAAL,CAAqBzgB,CAArB;AACH,GAzBD;AA0BA;;;AACA9T,EAAAA,IAAI,CAACpG,SAAL,CAAe26B,eAAf,GAAiC,UAAUzgB,CAAV,EAAa;AAC1C,QAAI,KAAKmK,YAAL,EAAJ,EAAyB;AACrB,UAAImD,GAAG,GAAGvkB,YAAY,CAACiX,CAAC,CAAC9Z,MAAH,EAAW,OAAX,CAAtB;;AACA,UAAI,GAAGyiB,KAAH,CAASrc,IAAT,CAAc,KAAKF,OAAL,CAAayS,gBAAb,CAA8B,gBAA9B,CAAd,EAA+DtY,MAA/D,IAAyEyZ,CAAC,CAACrB,IAAF,KAAW,UAAxF,EAAoG;AAChG,YAAIyP,IAAI,GAAG,GAAGzF,KAAH,CAASrc,IAAT,CAAc,KAAKF,OAAL,CAAayS,gBAAb,CAA8B,gBAA9B,CAAd,CAAX;;AACA,aAAK,IAAIjY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwnB,IAAI,CAAC7nB,MAAzB,EAAiCK,CAAC,EAAlC,EAAsC;AAClCwnB,UAAAA,IAAI,CAACxnB,CAAD,CAAJ,CAAQiB,SAAR,CAAkBF,MAAlB,CAAyB,eAAzB;AACH;AACJ,OALD,MAMK,IAAI2lB,GAAJ,EAAS;AACV,YAAIc,IAAI,GAAG,GAAGzF,KAAH,CAASrc,IAAT,CAAc,KAAKF,OAAL,CAAayS,gBAAb,CAA8B,uBAAuByO,GAAG,CAACG,YAAJ,CAAiB,eAAjB,CAAvB,GAA2D,IAAzF,CAAd,CAAX;AACAW,QAAAA,IAAI,CAACtO,MAAL,CAAYsO,IAAI,CAACrL,OAAL,CAAauK,GAAb,CAAZ,EAA+B,CAA/B;;AACA,aAAK,IAAI1mB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwnB,IAAI,CAAC7nB,MAAzB,EAAiCK,CAAC,EAAlC,EAAsC;AAClC,cAAI0mB,GAAG,CAACG,YAAJ,CAAiB,eAAjB,KAAqC,MAArC,IAA+CW,IAAI,CAACxnB,CAAD,CAAvD,EAA4D;AACxDwnB,YAAAA,IAAI,CAACxnB,CAAD,CAAJ,CAAQiB,SAAR,CAAkBiX,GAAlB,CAAsB,eAAtB;AACH,WAFD,MAGK,IAAIsP,IAAI,CAACxnB,CAAD,CAAR,EAAa;AACdwnB,YAAAA,IAAI,CAACxnB,CAAD,CAAJ,CAAQiB,SAAR,CAAkBF,MAAlB,CAAyB,eAAzB;AACH;AACJ;AACJ;AACJ;AACJ,GAtBD;;AAuBAuE,EAAAA,IAAI,CAACpG,SAAL,CAAe6c,iBAAf,GAAmC,YAAY;AAC3C,QAAIkG,IAAI,GAAG,KAAK7K,UAAL,EAAX;;AACA,QAAI,KAAK0iB,QAAL,KAAkB,qBAAtB,EAA6C;AACzC,aAAO,IAAP;AACH;;AACD,SAAK,IAAI95B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiiB,IAAI,CAACtiB,MAAzB,EAAiCK,CAAC,EAAlC,EAAsC;AAClC,UAAIiiB,IAAI,CAACjiB,CAAD,CAAJ,CAAQ85B,QAAR,KAAqB,qBAAzB,EAAgD;AAC5C,eAAO,IAAP;AACH;AACJ;;AACD,WAAO,KAAP;AACH,GAXD;;AAYAx0B,EAAAA,IAAI,CAACpG,SAAL,CAAe66B,aAAf,GAA+B,YAAY;AACvC,QAAI,KAAKhe,iBAAL,EAAJ,EAA8B;AAC1B,WAAKlB,UAAL,CAAgBmB,KAAhB;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;;;AACI1W,EAAAA,IAAI,CAACpG,SAAL,CAAe85B,WAAf,GAA6B,UAAUE,KAAV,EAAiBc,GAAjB,EAAsBjiB,IAAtB,EAA4B;AACrD,QAAIkiB,UAAU,GAAG,KAAK/jB,aAAL,CAAmB,KAAnB,CAAjB;AACA+jB,IAAAA,UAAU,CAACjC,SAAX,GAAuB,KAAKxyB,OAAL,CAAawyB,SAApC;AACAiC,IAAAA,UAAU,CAAClf,KAAX,CAAiBmf,OAAjB,GAA2B,2DAA3B;AACA,QAAIC,QAAQ,GAAG,KAAKjkB,aAAL,CAAmB,KAAnB,CAAf;AACAikB,IAAAA,QAAQ,CAACnC,SAAT,GAAqBgC,GAArB;AACA,QAAII,OAAO,GAAG,KAAKlkB,aAAL,CAAmB,OAAnB,CAAd;AACAkkB,IAAAA,OAAO,CAACpC,SAAR,GAAoBkB,KAAK,CAAClB,SAA1B;AACAoC,IAAAA,OAAO,CAACrf,KAAR,CAAcmf,OAAd,GAAwB,gCAAxB;AACA,QAAIzT,GAAG,GAAI1O,IAAI,KAAK,QAAV,GAAsB,IAAtB,GAA6B,IAAvC;AACA,QAAIsiB,IAAI,GAAG,KAAKnkB,aAAL,CAAmB,IAAnB,CAAX;AACA,QAAIokB,IAAI,GAAG,KAAKpkB,aAAL,CAAmBuQ,GAAnB,CAAX;AACA4T,IAAAA,IAAI,CAAChC,WAAL,CAAiBiC,IAAjB;AACAF,IAAAA,OAAO,CAAC/B,WAAR,CAAoBgC,IAApB;AACAF,IAAAA,QAAQ,CAAC9B,WAAT,CAAqB+B,OAArB;AACAH,IAAAA,UAAU,CAAC5B,WAAX,CAAuB8B,QAAvB;AACAf,IAAAA,QAAQ,CAACC,IAAT,CAAchB,WAAd,CAA0B4B,UAA1B;AACA,WAAOA,UAAP;AACH,GAlBD;;AAmBA30B,EAAAA,IAAI,CAACpG,SAAL,CAAeq7B,YAAf,GAA8B,UAAUnhB,CAAV,EAAa;AACvC,QAAIA,CAAC,CAACqH,MAAF,KAAa,KAAb,IAAsBrH,CAAC,CAACqH,MAAF,KAAa,UAAvC,EAAmD;AAC/C,WAAK5F,UAAL,CAAgBmB,KAAhB;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;;;AACI1W,EAAAA,IAAI,CAACpG,SAAL,CAAeqY,UAAf,GAA4B,YAAY;AACpC9V,IAAAA,YAAY,CAACyW,GAAb,CAAiB,KAAK1S,OAAtB,EAA+B,OAA/B,EAAwC,KAAKg1B,iBAA7C,EAAgE,IAAhE;AACA/4B,IAAAA,YAAY,CAACyW,GAAb,CAAiB,KAAK1S,OAAtB,EAA+B,UAA/B,EAA2C,KAAKg1B,iBAAhD,EAAmE,IAAnE;AACA/4B,IAAAA,YAAY,CAACyW,GAAb,CAAiB,KAAK1S,OAAtB,EAA+B,UAA/B,EAA2C,KAAKi1B,eAAhD,EAAiE,IAAjE;AACAh5B,IAAAA,YAAY,CAACyW,GAAb,CAAiB,KAAK1S,OAAtB,EAA+B,UAA/B,EAA2C,KAAKk1B,eAAhD,EAAiE,IAAjE;AACAj5B,IAAAA,YAAY,CAACyW,GAAb,CAAiB,KAAK1S,OAAtB,EAA+B,SAA/B,EAA0C,KAAKm1B,eAA/C,EAAgE,IAAhE;AACA;;AACAl5B,IAAAA,YAAY,CAACyW,GAAb,CAAiBU,MAAjB,EAAyB,QAAzB,EAAmC,KAAKib,gBAAxC,EAA0D,IAA1D;;AACA,QAAI,KAAK+G,aAAT,EAAwB;AACpB,WAAKp1B,OAAL,CAAa4yB,QAAb,GAAwB,KAAK5yB,OAAL,CAAa4yB,QAAb,KAA0B,CAAC,CAA3B,GAA+B,CAA/B,GAAmC,KAAK5yB,OAAL,CAAa4yB,QAAxE;AACH;;AACD,SAAKnd,cAAL,GAAsB,IAAIvZ,cAAJ,CAAmB,KAAK8D,OAAxB,EAAiC;AACnDq1B,MAAAA,SAAS,EAAE,KAAKC,gBAAL,CAAsB/hB,IAAtB,CAA2B,IAA3B,CADwC;AAEnD3F,MAAAA,UAAU,EAAE,KAAKA,UAFkC;AAGnD2nB,MAAAA,SAAS,EAAE;AAHwC,KAAjC,CAAtB;AAKAt5B,IAAAA,YAAY,CAACyW,GAAb,CAAiB,KAAKmN,UAAL,GAAkBiQ,iBAAnC,EAAsD,QAAtD,EAAgE,KAAKyE,aAArE,EAAoF,IAApF;AACAt4B,IAAAA,YAAY,CAACyW,GAAb,CAAiB,KAAK1S,OAAtB,EAA+B,WAA/B,EAA4C,KAAK+zB,gBAAjD,EAAmE,IAAnE;AACA93B,IAAAA,YAAY,CAACyW,GAAb,CAAiB,KAAK1S,OAAtB,EAA+B,UAA/B,EAA2C,KAAK+zB,gBAAhD,EAAkE,IAAlE;AACA93B,IAAAA,YAAY,CAACyW,GAAb,CAAiB,KAAKmN,UAAL,EAAjB,EAAoC,YAApC,EAAkD,KAAK2V,QAAvD,EAAiE,IAAjE;AACAv5B,IAAAA,YAAY,CAACyW,GAAb,CAAiBkhB,QAAQ,CAACC,IAA1B,EAAgC,SAAhC,EAA2C,KAAK4B,cAAhD,EAAgE,IAAhE;AACH,GArBD;AAsBA;AACJ;AACA;AACA;;;AACI31B,EAAAA,IAAI,CAACpG,SAAL,CAAeyb,YAAf,GAA8B,YAAY;AACtClZ,IAAAA,YAAY,CAACV,MAAb,CAAoB,KAAKyE,OAAzB,EAAkC,OAAlC,EAA2C,KAAKg1B,iBAAhD;AACA/4B,IAAAA,YAAY,CAACV,MAAb,CAAoB,KAAKyE,OAAzB,EAAkC,UAAlC,EAA8C,KAAKg1B,iBAAnD;AACA/4B,IAAAA,YAAY,CAACV,MAAb,CAAoB,KAAKyE,OAAzB,EAAkC,UAAlC,EAA8C,KAAKi1B,eAAnD;AACAh5B,IAAAA,YAAY,CAACV,MAAb,CAAoB,KAAKyE,OAAzB,EAAkC,UAAlC,EAA8C,KAAKk1B,eAAnD;AACAj5B,IAAAA,YAAY,CAACV,MAAb,CAAoB,KAAKskB,UAAL,GAAkBiQ,iBAAtC,EAAyD,QAAzD,EAAmE,KAAKyE,aAAxE;AACAt4B,IAAAA,YAAY,CAACV,MAAb,CAAoB,KAAKyE,OAAzB,EAAkC,WAAlC,EAA+C,KAAK+zB,gBAApD;AACA93B,IAAAA,YAAY,CAACV,MAAb,CAAoB,KAAKyE,OAAzB,EAAkC,UAAlC,EAA8C,KAAK+zB,gBAAnD;AACA93B,IAAAA,YAAY,CAACV,MAAb,CAAoB,KAAKyE,OAAzB,EAAkC,SAAlC,EAA6C,KAAKm1B,eAAlD;AACAl5B,IAAAA,YAAY,CAACV,MAAb,CAAoB,KAAKskB,UAAL,EAApB,EAAuC,YAAvC,EAAqD,KAAK2V,QAA1D;AACAv5B,IAAAA,YAAY,CAACV,MAAb,CAAoBq4B,QAAQ,CAACC,IAA7B,EAAmC,SAAnC,EAA8C,KAAK4B,cAAnD;AACA;;AACAx5B,IAAAA,YAAY,CAACV,MAAb,CAAoB6X,MAApB,EAA4B,QAA5B,EAAsC,KAAKib,gBAA3C;AACH,GAbD;AAcA;AACJ;AACA;;;AACIvuB,EAAAA,IAAI,CAACpG,SAAL,CAAesY,WAAf,GAA6B,YAAY;AACrC,QAAI,KAAKlO,WAAT,EAAsB;AAClB;AACH;;AACD,SAAK4X,EAAL,CAAQje,MAAM,CAAC20B,SAAf,EAA0B,KAAKA,SAA/B,EAA0C,IAA1C;AACA,SAAK1W,EAAL,CAAQje,MAAM,CAACge,YAAf,EAA6B,KAAK+R,iBAAlC,EAAqD,IAArD;AACA,SAAK9R,EAAL,CAAQje,MAAM,CAACi4B,eAAf,EAAgC,KAAKlI,iBAArC,EAAwD,IAAxD;AACA,SAAKmI,iBAAL,GAAyB,KAAKthB,eAAL,CAAqBd,IAArB,CAA0B,IAA1B,CAAzB;AACA,SAAKqiB,gBAAL,CAAsBn4B,MAAM,CAACo4B,SAA7B,EAAwC,KAAKF,iBAA7C;AACA,SAAKja,EAAL,CAAQje,MAAM,CAACq4B,UAAf,EAA2B,KAAKf,YAAhC,EAA8C,IAA9C;AACA,SAAKrZ,EAAL,CAAQje,MAAM,CAACge,YAAf,EAA6B,KAAKsa,cAAlC,EAAkD,IAAlD;AACH,GAXD;AAYA;AACJ;AACA;;;AACIj2B,EAAAA,IAAI,CAACpG,SAAL,CAAeob,cAAf,GAAgC,YAAY;AACxC,QAAI,KAAKhR,WAAT,EAAsB;AAClB;AACH;;AACD,SAAK0X,GAAL,CAAS/d,MAAM,CAAC20B,SAAhB,EAA2B,KAAKA,SAAhC;AACA,SAAK5W,GAAL,CAAS/d,MAAM,CAACge,YAAhB,EAA8B,KAAK+R,iBAAnC;AACA,SAAKhS,GAAL,CAAS/d,MAAM,CAACi4B,eAAhB,EAAiC,KAAKlI,iBAAtC;AACA,SAAKwI,mBAAL,CAAyBv4B,MAAM,CAACo4B,SAAhC,EAA2C,KAAKF,iBAAhD;AACA,SAAKna,GAAL,CAAS/d,MAAM,CAACq4B,UAAhB,EAA4B,KAAKf,YAAjC;AACH,GATD;;AAUAj1B,EAAAA,IAAI,CAACpG,SAAL,CAAeq8B,cAAf,GAAgC,YAAY;AACxC,QAAI76B,QAAQ,EAAZ,EAAgB;AACZ,UAAI,KAAKwH,YAAL,CAAkBa,QAAtB,EAAgC;AAC5B/H,QAAAA,oBAAoB,CAAC,KAAKwE,OAAL,CAAaqS,EAAb,GAAkB,WAAnB,EAAgC,UAAhC,EAA4C,KAAK3P,YAAjD,CAApB;AACH;;AACD,WAAK,IAAIlI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKwiB,WAAL,CAAiB7iB,MAArC,EAA6CK,CAAC,EAA9C,EAAkD;AAC9C,YAAI,KAAKwiB,WAAL,CAAiBxiB,CAAjB,EAAoB+I,QAAxB,EAAkC;AAC9B/H,UAAAA,oBAAoB,CAAC,KAAKwE,OAAL,CAAaqS,EAAb,GAAkB,KAAK2K,WAAL,CAAiBxiB,CAAjB,EAAoB2Y,GAAvC,EAA4C,UAA5C,EAAwD,KAAK6J,WAAL,CAAiBxiB,CAAjB,CAAxD,EAA6E,KAA7E,CAApB;AACH;;AACD,YAAI,KAAKwiB,WAAL,CAAiBxiB,CAAjB,EAAoB62B,cAAxB,EAAwC;AACpC71B,UAAAA,oBAAoB,CAAC,KAAKwE,OAAL,CAAaqS,EAAb,GAAkB,KAAK2K,WAAL,CAAiBxiB,CAAjB,EAAoB2Y,GAAtC,GAA4C,gBAA7C,EAA+D,gBAA/D,EAAiF,KAAK6J,WAAL,CAAiBxiB,CAAjB,CAAjF,EAAsG,KAAtG,CAApB;AACH;;AACD,YAAI,KAAKmI,cAAL,CAAoB4P,IAApB,IAA4B,WAA5B,IAA2C,KAAKyK,WAAL,CAAiBxiB,CAAjB,EAAoBy7B,cAAnE,EAAmF;AAC/E,cAAIrL,SAAS,GAAG,KAAK5N,WAAL,CAAiBxiB,CAAjB,EAAoBqkB,KAApC;AACA,cAAIqX,MAAM,GAAG,KAAKl2B,OAAL,CAAaqS,EAAb,GAAkB,KAAK2K,WAAL,CAAiBxiB,CAAjB,EAAoB2Y,GAAtC,GAA4C,gBAAzD;AACA,cAAIgjB,eAAe,GAAG,KAAKxzB,cAAL,CAAoBI,OAA1C;;AACA,eAAK,IAAImlB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiO,eAAe,CAACh8B,MAApC,EAA4C+tB,CAAC,EAA7C,EAAiD;AAC7C,gBAAI0C,SAAS,IAAIuL,eAAe,CAACjO,CAAD,CAAf,CAAmBrJ,KAApC,EAA2C;AACvC1jB,cAAAA,eAAe,CAAC+6B,MAAD,CAAf,CAAwB,CAAxB,EAA2BtL,SAA3B,IAAwCuL,eAAe,CAACjO,CAAD,CAAf,CAAmBpE,KAA3D;AACH;AACJ;;AACDtoB,UAAAA,oBAAoB,CAAC,KAAKwE,OAAL,CAAaqS,EAAb,GAAkB,KAAK2K,WAAL,CAAiBxiB,CAAjB,EAAoB2Y,GAAtC,GAA4C,gBAA7C,EAA+D,gBAA/D,EAAiF,KAAK6J,WAAL,CAAiBxiB,CAAjB,CAAjF,EAAsG,KAAtG,CAApB;AACH;;AACD,YAAI,KAAKmI,cAAL,CAAoB4P,IAApB,IAA4B,WAA5B,IAA2C,KAAKyK,WAAL,CAAiBxiB,CAAjB,EAAoBy7B,cAAnE,EAAmF;AAC/Ez6B,UAAAA,oBAAoB,CAAC,KAAKwE,OAAL,CAAaqS,EAAb,GAAkB,KAAK2K,WAAL,CAAiBxiB,CAAjB,EAAoB2Y,GAAtC,GAA4C,gBAA7C,EAA+D,gBAA/D,EAAiF,KAAK6J,WAAL,CAAiBxiB,CAAjB,CAAjF,CAApB;AACH;AACJ;;AACD,UAAI,KAAKoI,aAAL,CAAmBwzB,eAAvB,EAAwC;AACpC56B,QAAAA,oBAAoB,CAAC,KAAKwE,OAAL,CAAaqS,EAAb,GAAkB,iBAAnB,EAAsC,iBAAtC,EAAyD,KAAKzP,aAA9D,CAApB;AACH;;AACD,UAAIyzB,IAAI,GAAG,MAAX;;AACA,WAAK,IAAInO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKpjB,UAAL,CAAgB3K,MAApC,EAA4C+tB,CAAC,EAA7C,EAAiD;AAC7C,aAAK,IAAI6H,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKjrB,UAAL,CAAgBojB,CAAhB,EAAmBnlB,OAAnB,CAA2B5I,MAA/C,EAAuD41B,CAAC,EAAxD,EAA4D;AACxD,cAAI,KAAKjrB,UAAL,CAAgBojB,CAAhB,EAAmBnlB,OAAnB,CAA2BgtB,CAA3B,EAA8BuB,cAAlC,EAAkD;AAC9C91B,YAAAA,oBAAoB,CAAC,KAAKwE,OAAL,CAAaqS,EAAb,GAAkB,KAAKvN,UAAL,CAAgBojB,CAAhB,EAAmBnlB,OAAnB,CAA2BgtB,CAA3B,EAA8BsG,IAA9B,CAAlB,GAAwD,gBAAzD,EAA2E,gBAA3E,EAA6F,KAAKvxB,UAAL,CAAgBojB,CAAhB,EAAmBnlB,OAAnB,CAA2BgtB,CAA3B,CAA7F,CAApB;AACH;;AACD,cAAI,KAAKjrB,UAAL,CAAgBojB,CAAhB,EAAmBnlB,OAAnB,CAA2BgtB,CAA3B,EAA8BuG,mBAAlC,EAAuD;AACnD96B,YAAAA,oBAAoB,CAAC,KAAKwE,OAAL,CAAaqS,EAAb,GAAkB,KAAKvN,UAAL,CAAgBojB,CAAhB,EAAmBnlB,OAAnB,CAA2BgtB,CAA3B,EAA8BsG,IAA9B,CAAlB,GAAwD,qBAAzD,EAAgF,qBAAhF,EAAuG,KAAKvxB,UAAL,CAAgBojB,CAAhB,EAAmBnlB,OAAnB,CAA2BgtB,CAA3B,CAAvG,CAApB;AACH;;AACD,cAAI,KAAKjrB,UAAL,CAAgBojB,CAAhB,EAAmBnlB,OAAnB,CAA2BgtB,CAA3B,EAA8BwG,oBAAlC,EAAwD;AACpD/6B,YAAAA,oBAAoB,CAAC,KAAKwE,OAAL,CAAaqS,EAAb,GAAkB,KAAKvN,UAAL,CAAgBojB,CAAhB,EAAmBnlB,OAAnB,CAA2BgtB,CAA3B,EAA8BsG,IAA9B,CAAlB,GAAwD,sBAAzD,EAAiF,sBAAjF,EAAyG,KAAKvxB,UAAL,CAAgBojB,CAAhB,EAAmBnlB,OAAnB,CAA2BgtB,CAA3B,CAAzG,CAApB;AACH;AACJ;AACJ;AACJ;AACJ,GA7CD;AA8CA;AACJ;AACA;AACA;AACA;;;AACIjwB,EAAAA,IAAI,CAACpG,SAAL,CAAe88B,qBAAf,GAAuC,YAAY;AAC/C,QAAI15B,eAAe,CAAC,IAAD,CAAnB,EAA2B;AACvB,aAAO/B,iBAAiB,CAAC,KAAK0G,eAAL,CAAqBg1B,OAAtB,CAAjB,GACH,KAAKh1B,eADF,GACoB,KAAKA,eAAL,CAAqBg1B,OADhD;AAEH;;AACD,QAAI,KAAK7zB,aAAL,CAAmBiD,iBAAvB,EAA0C;AACtC,aAAO,KAAKpE,eAAZ;AACH;;AACD;AACA,WAAQ,KAAKoD,aAAL,IAAsB,KAAKjC,aAAL,CAAmBG,OAAnB,CAA2B5I,MAAjD,IAA2D,KAAKsH,eAAL,CAAqBtH,MAAhF,IAA0F,KAAKsH,eAAL,CAAqBg1B,OAAhH,GACH,KAAKh1B,eAAL,CAAqBg1B,OADlB,GAC4B,KAAKh1B,eADxC;AAEH,GAXD;;AAYA3B,EAAAA,IAAI,CAACpG,SAAL,CAAes7B,iBAAf,GAAmC,UAAUphB,CAAV,EAAa;AAC5C,QAAI,KAAK8iB,WAAL,CAAiB9iB,CAAjB,KAAwBjX,YAAY,CAACiX,CAAC,CAAC9Z,MAAH,EAAW,aAAX,CAAZ,IAAyC8Z,CAAC,CAAC+iB,OAAnE,IACA,KAAK32B,OAAL,CAAayS,gBAAb,CAA8B,oBAA9B,EAAoDtY,MADpD,IAC8D,KAAKy8B,SAAL,CAAehjB,CAAf,CADlE,EACqF;AACjF;AACH;;AACD,QAAI,CAAE,CAAC,KAAKhP,mBAAN,KAA8BjI,YAAY,CAACiX,CAAC,CAAC9Z,MAAH,EAAW,eAAX,CAAZ,IAChC8Z,CAAC,CAAC9Z,MAAF,CAASm6B,OAAT,KAAqB,IADnB,CAAD,IAC+B,EAAE,KAAKpvB,aAAL,IAAsB,KAAKF,eAA7B,KAChChI,YAAY,CAACiX,CAAC,CAAC9Z,MAAH,EAAW,cAAX,CAFZ,KAE4C8Z,CAAC,CAAC+iB,OAFlD,EAE2D;AACvD;AACH;;AACD,QAAIh6B,YAAY,CAACiX,CAAC,CAAC9Z,MAAH,EAAW,cAAX,CAAZ,IAA0C,KAAK8K,mBAA/C,IACA,CAAEjI,YAAY,CAACiX,CAAC,CAAC9Z,MAAH,EAAW,iBAAX,CADlB,EACkD;AAC9C8Z,MAAAA,CAAC,CAACijB,cAAF;AACH;;AACD,QAAI3yB,IAAI,GAAG,KAAK8c,UAAL,CAAgBpN,CAAC,CAAC9Z,MAAlB,CAAX;AACA,QAAIg9B,MAAM,GAAG,QAAb;AACA5yB,IAAAA,IAAI,CAAC4yB,MAAD,CAAJ,GAAe,KAAf;AACA,QAAIxR,SAAS,GAAG,KAAhB;AACA,QAAIpB,EAAE,GAAGrpB,OAAO,CAAC+Y,CAAC,CAAC9Z,MAAH,EAAW,IAAX,CAAhB;;AACA,QAAIoqB,EAAE,IAAIA,EAAE,CAAC7C,YAAH,CAAgB,UAAhB,CAAV,EAAuC;AACnC,UAAIF,MAAM,GAAG,KAAKC,mBAAL,CAAyB8C,EAAE,CAAC7C,YAAH,CAAgB,UAAhB,CAAzB,CAAb;AACAiE,MAAAA,SAAS,GAAGnE,MAAM,GAAGA,MAAM,CAACmE,SAAV,GAAsB,KAAxC;AACH;;AACD,QAAIpqB,QAAQ,EAAZ,EAAgB;AACZ,UAAI67B,YAAY,GAAGj8B,MAAM,CAAC,EAAD,EAAKoJ,IAAI,CAACme,MAAV,CAAzB;AACAne,MAAAA,IAAI,GAAG;AAAEsd,QAAAA,OAAO,EAAEtd,IAAI,CAACsd,OAAhB;AAAyBF,QAAAA,QAAQ,EAAEpd,IAAI,CAACod,QAAxC;AACHI,QAAAA,SAAS,EAAExd,IAAI,CAACwd,SADb;AACwBW,QAAAA,MAAM,EAAE0U;AADhC,OAAP;AAEH;;AACD,QAAIzR,SAAJ,EAAe;AACX,WAAKjU,OAAL,CAAa5T,MAAM,CAACu5B,WAApB,EAAiC9yB,IAAjC;AACH;;AACD,SAAK4M,MAAL,CAAYrT,MAAM,CAACw5B,KAAnB,EAA0BrjB,CAA1B;AACH,GAhCD;;AAiCA9T,EAAAA,IAAI,CAACpG,SAAL,CAAek9B,SAAf,GAA2B,UAAUhjB,CAAV,EAAa;AACpC,QAAIsQ,EAAE,GAAGvnB,YAAY,CAACiX,CAAC,CAAC9Z,MAAH,EAAW,OAAX,CAArB;AACA,QAAI8M,MAAM,GAAG,KAAKrB,YAAL,CAAkB2xB,IAAlB,KAA2B,OAA3B,IACT,KAAKtwB,MADI,IACMsd,EADN,KACaA,EAAE,CAACzoB,SAAH,CAAawL,QAAb,CAAsB,aAAtB,KAAwCid,EAAE,CAACzoB,SAAH,CAAawL,QAAb,CAAsB,YAAtB,CADrD,CAAb;AAEA,WAAO,CAACtK,YAAY,CAACiX,CAAC,CAAC9Z,MAAH,EAAW,kBAAX,CAAb,KAAgD8M,MAAM,IAAKjK,YAAY,CAACiX,CAAC,CAAC9Z,MAAH,EAAW,WAAX,CAAZ,IAC9D6C,YAAY,CAACiX,CAAC,CAAC9Z,MAAH,EAAW,WAAX,CAAZ,CAAoC2B,SAApC,CAA8CwL,QAA9C,CAAuD,mBAAvD,CADG,CAAP;AAEH,GAND;;AAOAnH,EAAAA,IAAI,CAACpG,SAAL,CAAew7B,eAAf,GAAiC,UAAUthB,CAAV,EAAa;AAC1C,QAAItB,IAAI,GAAG3V,YAAY,CAACiX,CAAC,CAAC9Z,MAAH,EAAW,QAAX,CAAvB;;AACA,QAAIiB,iBAAiB,CAACuX,IAAD,CAAjB,IAA2BA,IAAI,CAACD,EAAL,KAAY,KAAKrS,OAAL,CAAaqS,EAApD,IAA0DxX,OAAO,CAAC+Y,CAAC,CAAC9Z,MAAH,EAAW,mBAAX,CAArE,EAAsG;AAClG;AACH;;AACD,QAAIq9B,OAAO,GAAG,KAAd;AACA,QAAIjT,EAAE,GAAGrpB,OAAO,CAAC+Y,CAAC,CAAC9Z,MAAH,EAAW,IAAX,CAAhB;;AACA,QAAIoqB,EAAE,IAAIA,EAAE,CAAC7C,YAAH,CAAgB,UAAhB,CAAV,EAAuC;AACnC,UAAIF,MAAM,GAAG,KAAKC,mBAAL,CAAyB8C,EAAE,CAAC7C,YAAH,CAAgB,UAAhB,CAAzB,CAAb;AACA8V,MAAAA,OAAO,GAAGhW,MAAM,GAAGA,MAAM,CAACmE,SAAV,GAAsB,KAAtC;AACH;;AACD,QAAIphB,IAAI,GAAG,KAAK8c,UAAL,CAAgBpN,CAAC,CAAC9Z,MAAlB,CAAX;AACAoK,IAAAA,IAAI,CAACpK,MAAL,GAAc8Z,CAAC,CAAC9Z,MAAhB;;AACA,QAAIq9B,OAAJ,EAAa;AACT,WAAK9lB,OAAL,CAAa5T,MAAM,CAAC25B,iBAApB,EAAuClzB,IAAvC;AACH;;AACD,SAAK4M,MAAL,CAAYrT,MAAM,CAAC45B,QAAnB,EAA6BzjB,CAA7B;AACH,GAjBD;;AAkBA9T,EAAAA,IAAI,CAACpG,SAAL,CAAeu7B,eAAf,GAAiC,UAAUrhB,CAAV,EAAa;AAC1C,QAAI,KAAK8iB,WAAL,CAAiB9iB,CAAjB,CAAJ,EAAyB;AACrB;AACH;;AACD,QAAI,CAACjX,YAAY,CAACiX,CAAC,CAAC9Z,MAAH,EAAW,QAAX,CAAjB,EAAuC;AACnC,WAAKkG,OAAL,CAAauU,aAAb,CAA2B,cAA3B,EAA2CgB,KAA3C,CAAiDC,OAAjD,GAA2D,MAA3D;AACH;;AACD,QAAI8hB,WAAW,GAAG,KAAKt3B,OAAL,CAAauU,aAAb,CAA2B,wBAA3B,CAAlB;;AACA,QAAI+iB,WAAJ,EAAiB;AACbA,MAAAA,WAAW,CAAC77B,SAAZ,CAAsBiX,GAAtB,CAA0B,QAA1B;AACH;;AACD,QAAI6kB,aAAa,GAAG3jB,CAAC,CAAC2jB,aAAtB;AACA,QAAIC,QAAQ,GAAGD,aAAa,GAAGA,aAAa,CAAClW,YAAd,CAA2B,WAA3B,CAAH,GAA6C,IAAzE;;AACA,QAAI,CAAC,CAACkW,aAAD,IAAmB,CAAC56B,YAAY,CAAC46B,aAAD,EAAgB,QAAhB,CAAb,IACpB,CAAC,CAACx8B,iBAAiB,CAACy8B,QAAD,CAAlB,IACIA,QADL,MACoB5jB,CAAC,CAAC9Z,MAAF,CAASunB,YAAT,CAAsB,WAAtB,CAFpB,KAGG,CAAC,KAAKoW,QAHT,IAGqB,KAAK7wB,MAH1B,IAGoC,CAAChM,OAAO,CAACi3B,QAHjD,EAG2D;AACvD,UAAI,KAAKtsB,YAAL,CAAkB2xB,IAAlB,KAA2B,OAA/B,EAAwC;AACpC,aAAK5K,UAAL,CAAgBO,QAAhB;AACA,aAAK/b,MAAL,CAAYrT,MAAM,CAACi6B,eAAnB,EAAoC,EAApC;AACH;;AACD,UAAI,KAAKnyB,YAAL,CAAkB2xB,IAAlB,KAA2B,QAA/B,EAAyC;AACrC,aAAK5K,UAAL,CAAgBqL,gBAAhB;AACH;AACJ;;AACD,SAAKF,QAAL,GAAgB,KAAhB;AACH,GA1BD;;AA2BA33B,EAAAA,IAAI,CAACpG,SAAL,CAAeg9B,WAAf,GAA6B,UAAU9iB,CAAV,EAAa;AACtC,QAAIqB,WAAW,GAAGtY,YAAY,CAACiX,CAAC,CAAC9Z,MAAH,EAAW,QAAX,CAA9B;;AACA,QAAImb,WAAW,IAAIA,WAAW,CAAC5C,EAAZ,KAAmB,KAAKrS,OAAL,CAAaqS,EAAnD,EAAuD;AACnD,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH,GAND;AAOA;AACJ;AACA;;;AACIvS,EAAAA,IAAI,CAACpG,SAAL,CAAe4I,oBAAf,GAAsC,UAAUs1B,aAAV,EAAyB;AAC3D,QAAInW,IAAI,GAAG,KAAKoW,YAAL,EAAX;;AACA,QAAI,EAAE98B,iBAAiB,CAAC0mB,IAAD,CAAjB,IAA4BA,IAAI,KAAK,EAAvC,KAA+C,CAAC1mB,iBAAiB,CAAC68B,aAAD,CAArE,EAAsF;AAClF,UAAIE,OAAO,GAAG,CAAC/8B,iBAAiB,CAAC68B,aAAD,CAAlB,GAAoCA,aAApC,GAAoDG,IAAI,CAACC,KAAL,CAAWvW,IAAX,CAAlE;;AACA,UAAI,KAAKvc,oBAAT,EAA+B;AAC3B4yB,QAAAA,OAAO,CAACp1B,YAAR,CAAqByU,WAArB,GAAmC,CAAnC;AACH;;AACD,UAAIT,IAAI,GAAGxd,MAAM,CAACwd,IAAP,CAAYohB,OAAZ,CAAX;AACA,WAAKG,mBAAL,GAA2B,IAA3B;;AACA,WAAK,IAAI70B,EAAE,GAAG,CAAT,EAAY80B,MAAM,GAAGxhB,IAA1B,EAAgCtT,EAAE,GAAG80B,MAAM,CAAC/9B,MAA5C,EAAoDiJ,EAAE,EAAtD,EAA0D;AACtD,YAAIrJ,GAAG,GAAGm+B,MAAM,CAAC90B,EAAD,CAAhB;;AACA,YAAK,OAAO,KAAKrJ,GAAL,CAAP,KAAqB,QAAtB,IAAmC,CAACgB,iBAAiB,CAAC,KAAKhB,GAAL,CAAD,CAAzD,EAAsE;AAClE,cAAIV,KAAK,CAAC8+B,OAAN,CAAc,KAAKp+B,GAAL,CAAd,KAA4BA,GAAG,KAAK,SAAxC,EAAmD;AAC/C,gBAAI,EAAEmB,QAAQ,MAAM,KAAKuW,gBAArB,CAAJ,EAA4C;AACxCxU,cAAAA,cAAc,CAAC,KAAKlD,GAAL,CAAD,CAAd;AACH;;AACD,iBAAKq+B,YAAL,CAAkBN,OAAO,CAAC/9B,GAAD,CAAzB,EAAgC,KAAKA,GAAL,CAAhC;AACA,iBAAKA,GAAL,IAAY+9B,OAAO,CAAC/9B,GAAD,CAAnB;AACH,WAND,MAOK;AACDe,YAAAA,MAAM,CAAC,KAAKf,GAAL,CAAD,EAAY+9B,OAAO,CAAC/9B,GAAD,CAAnB,CAAN;AACH;AACJ,SAXD,MAYK;AACD,eAAKA,GAAL,IAAY+9B,OAAO,CAAC/9B,GAAD,CAAnB;AACH;AACJ;;AACD,WAAKk+B,mBAAL,GAA2B,KAA3B;AACH;AACJ,GA7BD;;AA8BAn4B,EAAAA,IAAI,CAACpG,SAAL,CAAe0+B,YAAf,GAA8B,UAAUC,YAAV,EAAwBt1B,OAAxB,EAAiC;AAC3D,QAAIu1B,aAAa,GAAGD,YAApB;;AACA,QAAIE,OAAO,GAAG,UAAU/9B,CAAV,EAAa;AACvB,UAAIg+B,QAAQ,GAAGz1B,OAAO,CAAC4R,MAAR,CAAe,UAAU8jB,IAAV,EAAgB;AAAE,eAAOA,IAAI,CAAC3lB,KAAL,KAAewlB,aAAa,CAAC99B,CAAD,CAAb,CAAiBsY,KAAvC;AAA+C,OAAhF,EAAkF,CAAlF,CAAf;;AACA,UAAI,CAAC/X,iBAAiB,CAACy9B,QAAD,CAAtB,EAAkC;AAC9B,YAAIA,QAAQ,CAACz1B,OAAT,IAAoBy1B,QAAQ,CAACz1B,OAAT,CAAiB5I,MAAzC,EAAiD;AAC7Cu+B,UAAAA,MAAM,CAACN,YAAP,CAAoBE,aAAa,CAAC99B,CAAD,CAAb,CAAiBuI,OAArC,EAA8Cy1B,QAAQ,CAACz1B,OAAvD;AACAu1B,UAAAA,aAAa,CAAC99B,CAAD,CAAb,GAAmBM,MAAM,CAAC09B,QAAD,EAAWF,aAAa,CAAC99B,CAAD,CAAxB,EAA6B,EAA7B,EAAiC,IAAjC,CAAzB;AACH,SAHD,MAIK;AACD,cAAIU,QAAQ,EAAZ,EAAgB;AACZ,gBAAIm7B,IAAI,GAAG,MAAX;AACAiC,YAAAA,aAAa,CAAC99B,CAAD,CAAb,CAAiB67B,IAAjB,IAAyBmC,QAAQ,CAACnC,IAAD,CAAjC;AACAiC,YAAAA,aAAa,CAAC99B,CAAD,CAAb,CAAiB2Y,GAAjB,GAAuBqlB,QAAQ,CAACrlB,GAAhC;AACH;;AACDmlB,UAAAA,aAAa,CAAC99B,CAAD,CAAb,GAAmBM,MAAM,CAAC09B,QAAD,EAAWF,aAAa,CAAC99B,CAAD,CAAxB,EAA6B,EAA7B,EAAiC,IAAjC,CAAzB;AACH;AACJ;AACJ,KAhBD;;AAiBA,QAAIk+B,MAAM,GAAG,IAAb;;AACA,SAAK,IAAIl+B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG89B,aAAa,CAACn+B,MAAlC,EAA0CK,CAAC,EAA3C,EAA+C;AAC3C+9B,MAAAA,OAAO,CAAC/9B,CAAD,CAAP;AACH;AACJ,GAvBD;AAwBA;AACJ;AACA;;;AACIsF,EAAAA,IAAI,CAACpG,SAAL,CAAeqL,QAAf,GAA0B,YAAY;AAClC,WAAO,CAAChK,iBAAiB,CAAC,KAAKgd,cAAN,CAAlB,IAA2C,CAAChd,iBAAiB,CAAC,KAAK2pB,SAAN,CAApE;AACH,GAFD;;AAGA5kB,EAAAA,IAAI,CAACpG,SAAL,CAAe4L,eAAf,GAAiC,UAAUvC,OAAV,EAAmB;AAChD,QAAI9C,KAAK,GAAG,IAAZ;;AACA,WAAO8C,OAAO,CAAC8Q,IAAR,CAAa,UAAUX,GAAV,EAAe;AAC/B,UAAIA,GAAG,CAACnQ,OAAR,EAAiB;AACb,eAAO9C,KAAK,CAACqF,eAAN,CAAsB4N,GAAG,CAACnQ,OAA1B,CAAP;AACH;;AACD,aAAO,CAAC,EAAEmQ,GAAG,CAACylB,QAAJ,IAAgBzlB,GAAG,CAAC0lB,gBAAtB,CAAR;AACH,KALM,CAAP;AAMH,GARD;;AASA94B,EAAAA,IAAI,CAACpG,SAAL,CAAeuM,mBAAf,GAAqC,UAAUlD,OAAV,EAAmB;AACpD,QAAI9C,KAAK,GAAG,IAAZ;;AACA,WAAO8C,OAAO,CAAC8Q,IAAR,CAAa,UAAUX,GAAV,EAAe;AAC/B,UAAIA,GAAG,CAACnQ,OAAR,EAAiB;AACb,eAAO9C,KAAK,CAACgG,mBAAN,CAA0BiN,GAAG,CAACnQ,OAA9B,CAAP;AACH;;AACD,aAAO,CAAC,EAAEmQ,GAAG,CAAChC,UAAJ,IAAkBgC,GAAG,CAAC2lB,eAAxB,CAAR;AACH,KALM,CAAP;AAMH,GARD;;AASA/4B,EAAAA,IAAI,CAACpG,SAAL,CAAey7B,eAAf,GAAiC,UAAUvhB,CAAV,EAAa;AAC1C,QAAIklB,QAAQ,GAAGh+B,MAAM,CAAC8Y,CAAD,EAAI;AAAEkjB,MAAAA,MAAM,EAAE;AAAV,KAAJ,CAArB;AACA,SAAKzlB,OAAL,CAAa,YAAb,EAA2BynB,QAA3B;;AACA,QAAIA,QAAQ,CAAChC,MAAT,KAAoB,IAAxB,EAA8B;AAC1BljB,MAAAA,CAAC,CAACmlB,wBAAF;AACH;AACJ,GAND;;AAOAj5B,EAAAA,IAAI,CAACpG,SAAL,CAAe+7B,cAAf,GAAgC,UAAU7hB,CAAV,EAAa;AACzC,QAAIA,CAAC,CAAColB,MAAN,EAAc;AACV,UAAIplB,CAAC,CAACqlB,OAAF,KAAc,EAAlB,EAAsB;AAAE;AACpB,YAAI,KAAK54B,IAAT,EAAe;AAAE;AACb,eAAKyQ,MAAL,CAAYrT,MAAM,CAACy7B,aAAnB,EAAkC;AAAEp/B,YAAAA,MAAM,EAAE8Z,CAAC,CAAC9Z,MAAZ;AAAoBq/B,YAAAA,QAAQ,EAAE;AAA9B,WAAlC;AACA,eAAK94B,IAAL,GAAY,KAAZ;AACH,SAHD,MAIK;AACD,eAAKqV,WAAL,CAAiB0jB,WAAjB;AACA,eAAK1jB,WAAL,CAAiB2jB,UAAjB;AACH;AACJ;;AACD,UAAIzlB,CAAC,CAACqlB,OAAF,KAAc,EAAlB,EAAsB;AAAE;AACpB,aAAKvjB,WAAL,CAAiB4jB,YAAjB;AACA,aAAK5jB,WAAL,CAAiB2jB,UAAjB;AACH;;AACD,UAAIzlB,CAAC,CAACqlB,OAAF,KAAc,EAAlB,EAAsB;AAAE;AACpB,aAAK54B,IAAL,GAAY,IAAZ;AACH;;AACD,UAAIuT,CAAC,CAACqlB,OAAF,KAAc,EAAd,IAAoB,KAAK54B,IAA7B,EAAmC;AAAE;AACjC,aAAKyQ,MAAL,CAAYrT,MAAM,CAACy7B,aAAnB,EAAkC;AAAEp/B,UAAAA,MAAM,EAAE8Z,CAAC,CAAC9Z,MAAZ;AAAoBq/B,UAAAA,QAAQ,EAAE;AAA9B,SAAlC;AACA,aAAK94B,IAAL,GAAY,KAAZ;AACH;AACJ;AACJ,GAxBD;;AAyBAP,EAAAA,IAAI,CAACpG,SAAL,CAAe47B,gBAAf,GAAkC,UAAU1hB,CAAV,EAAa;AAC3C,QAAI,KAAK8iB,WAAL,CAAiB9iB,CAAjB,KACC,KAAKhN,MAAL,IAAegN,CAAC,CAACqH,MAAF,KAAa,QAA5B,IAAwCrH,CAAC,CAACqH,MAAF,KAAa,OAArD,IAAgErH,CAAC,CAACqH,MAAF,KAAa,YAA7E,IACMrH,CAAC,CAACqH,MAAF,KAAa,KADnB,IAC4BrH,CAAC,CAACqH,MAAF,KAAa,UAF9C,EAE2D;AACvD;AACH,KAJD,MAKK;AACD,WAAKwc,QAAL,GAAgB,IAAhB;AACH;;AACD,QAAI,KAAKrC,aAAT,EAAwB;AACpB,UAAIxhB,CAAC,CAACqH,MAAF,KAAa,WAAjB,EAA8B;AAC1BrH,QAAAA,CAAC,CAACijB,cAAF;AACA,aAAK3K,KAAL;AACH;;AACD,WAAKpb,MAAL,CAAYrT,MAAM,CAACq4B,UAAnB,EAA+BliB,CAA/B;AACH;AACJ,GAhBD;AAiBA;AACJ;AACA;;;AACI9T,EAAAA,IAAI,CAACpG,SAAL,CAAe6/B,kBAAf,GAAoC,UAAU11B,OAAV,EAAmB;AACnD,SAAK21B,eAAL,GAAuB31B,OAAvB;AACH,GAFD;;AAGA/D,EAAAA,IAAI,CAACpG,SAAL,CAAekd,kBAAf,GAAoC,YAAY;AAC5Cla,IAAAA,cAAc,CAAC,KAAKqG,OAAN,EAAe,KAAKoC,0BAApB,EAAgD,IAAhD,CAAd;;AACA,QAAI,EAAEjK,QAAQ,MAAM,KAAKuW,gBAArB,CAAJ,EAA4C;AACxCxU,MAAAA,cAAc,CAAC,KAAK8F,OAAN,CAAd;AACH;;AACD,SAAK4uB,iBAAL;AACA,SAAK7gB,MAAL,CAAYrT,MAAM,CAACg8B,OAAnB,EAA4B,EAA5B;AACH,GAPD;AAQA;AACJ;AACA;AACA;AACA;;;AACI35B,EAAAA,IAAI,CAACpG,SAAL,CAAe8rB,oBAAf,GAAsC,YAAY;AAC9C,WAAO,KAAK5T,UAAL,GAAkB+C,MAAlB,CAAyB,UAAUzB,GAAV,EAAe;AAC3C,aAAOA,GAAG,CAACwmB,eAAJ,EAAP;AACH,KAFM,CAAP;AAGH,GAJD;AAKA;AACJ;AACA;;;AACI55B,EAAAA,IAAI,CAACpG,SAAL,CAAesD,YAAf,GAA8B,YAAY;AACtC,WAAO,KAAKoc,SAAL,GAAiB,KAAKA,SAAtB,GAAkCpc,YAAY,CAAC,KAAKgD,OAAN,CAArD;AACH,GAFD;AAGA;AACJ;AACA;;;AACIF,EAAAA,IAAI,CAACpG,SAAL,CAAeigC,cAAf,GAAgC,YAAY;AACxC,SAAK/1B,cAAL;AACA,QAAIg2B,IAAI,GAAG,KAAK/Z,UAAL,GAAkBtL,aAAlB,CAAgC,wBAAhC,CAAX;AACA,QAAIslB,KAAK,GAAG,KAAKha,UAAL,GAAkBtL,aAAlB,CAAgC,yBAAhC,CAAZ;AACA,QAAIulB,WAAW,GAAG,CAAC,KAAKx5B,gBAAN,IAA0B,CAAC,KAAKC,eAAlD;AACA,QAAIsd,QAAQ,GAAG,KAAKzY,gBAAL,OAA4B,CAA3C;;AACA,QAAI,CAACyY,QAAD,KAAe,CAAC+b,IAAD,IAAS,KAAKr5B,eAAf,IAAoC,CAACs5B,KAAD,IAAU,KAAKv5B,gBAAnD,IAAyEs5B,IAAI,IAAI,CAAC,KAAKr5B,eAAvF,IACVs5B,KAAK,IAAI,CAAC,KAAKv5B,gBADnB,CAAJ,EAC2C;AACvC,WAAKW,UAAL,GAAkB,CAAlB;AACA,WAAKT,WAAL,GAAmB,CAAnB;;AACA,UAAI,KAAK2E,0BAAT,EAAqC;AACjC,aAAK6X,WAAL,GAAmB,EAAnB;AACA,aAAKF,iBAAL,CAAuB,KAAK/Z,OAA5B;AACH;;AACD,WAAKqT,aAAL;AACH,KATD,MAUK,IAAI0jB,WAAW,KAAM,KAAK10B,gBAAL,OAA4B,CAA5B,IAAiC,CAACw0B,IAAnC,IAA6C,KAAKx0B,gBAAL,OAA4B,CAA5B,IAAiCw0B,IAAnF,CAAf,EAA0G;AAC3G,WAAK34B,UAAL,GAAkB,CAAlB;AACA,WAAKT,WAAL,GAAmB,CAAnB;;AACA,UAAI,KAAK2E,0BAAT,EAAqC;AACjC,aAAK6X,WAAL,GAAmB,EAAnB;AACA,aAAKF,iBAAL,CAAuB,KAAK/Z,OAA5B;AACH;;AACD,WAAKqT,aAAL;AACH,KARI,MASA;AACD,WAAKjW,oBAAL,GAA4B,IAA5B;AACA,WAAKyW,kBAAL;AACA,WAAKjF,gBAAL,CAAsB,KAAKC,UAAL,EAAtB;AACA,WAAKzQ,OAAL;;AACA,UAAI,KAAK4c,YAAL,EAAJ,EAAyB;AACrB,YAAIgc,IAAI,GAAG,KAAKpd,aAAL,CAAmBqd,iBAAnB,GAAuCzlB,aAAvC,CAAqD,UAArD,CAAX;AACAhZ,QAAAA,MAAM,CAACw+B,IAAI,CAACxlB,aAAL,CAAmB,UAAnB,CAAD,CAAN;AACA,YAAI0lB,QAAQ,GAAK,KAAKznB,gBAAL,GACZ+B,aADY,CACE,kBADF,EACsBA,aADtB,CACoC,UADpC,CAAD,CACkD2lB,SADlD,CAC4D,IAD5D,CAAhB;AAEAH,QAAAA,IAAI,CAACI,YAAL,CAAkBF,QAAlB,EAA4BF,IAAI,CAACxlB,aAAL,CAAmB,OAAnB,CAA5B;;AACA,YAAI,KAAKyJ,aAAL,OAAyB,YAA7B,EAA2C;AACvC,cAAIoc,KAAK,GAAG,KAAKzd,aAAL,CAAmB0d,qBAAnB,GAA2C9lB,aAA3C,CAAyD,UAAzD,CAAZ;AACAhZ,UAAAA,MAAM,CAAC6+B,KAAK,CAAC7lB,aAAN,CAAoB,UAApB,CAAD,CAAN;AACA,cAAI+lB,MAAM,GAAK,KAAK9nB,gBAAL,GACV+B,aADU,CACI,wBADJ,EAC8BA,aAD9B,CAC4C,UAD5C,CAAD,CAC0D2lB,SAD1D,CACoE,IADpE,CAAd;AAEAE,UAAAA,KAAK,CAACD,YAAN,CAAmBG,MAAnB,EAA2BF,KAAK,CAAC7lB,aAAN,CAAoB,OAApB,CAA3B;AACH;AACJ;AACJ;;AACD,QAAI,KAAKwJ,YAAL,EAAJ,EAAyB;AACrB,UAAIiI,IAAI,GAAG,KAAKnG,UAAL,GAAkBtL,aAAlB,CAAgC,qBAAhC,EAAuDgmB,UAAlE;AACA,WAAK/iB,YAAL,CAAkBgjB,gBAAlB,GAAqCD,UAArC,GAAkDvU,IAAlD;AACA,WAAKrJ,aAAL,CAAmBqd,iBAAnB,GAAuCO,UAAvC,GAAoDvU,IAApD;AACH;AACJ,GAlDD;AAmDA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIlmB,EAAAA,IAAI,CAACpG,SAAL,CAAe+gC,WAAf,GAA6B,UAAUC,qBAAV,EAAiCC,gBAAjC;AAC7B;AACAC,EAAAA,QAF6B,EAEnBC,MAFmB,EAEX;AACd,QAAI3/B,QAAQ,EAAZ,EAAgB;AACZ,WAAK4/B,iBAAL,CAAuBC,GAAvB,CAA2B,IAA3B,EAAiCL,qBAAjC,EAAwDC,gBAAxD,EAA0EC,QAA1E,EAAoF,KAApF,EAA2FC,MAA3F;AACA,aAAO,IAAP;AACH;;AACD,WAAO,KAAKC,iBAAL,GACH,KAAKA,iBAAL,CAAuBC,GAAvB,CAA2B,IAA3B,EAAiCL,qBAAjC,EAAwDC,gBAAxD,EAA0EC,QAA1E,EAAoF,KAApF,EAA2FC,MAA3F,CADG,GACkG,IADzG;AAEH,GATD;AAUA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI/6B,EAAAA,IAAI,CAACpG,SAAL,CAAeshC,SAAf,GAA2B,UAAUN,qBAAV;AAC3B;AACAC,EAAAA,gBAF2B,EAETC,QAFS,EAECC,MAFD,EAES;AAChC,QAAI3/B,QAAQ,EAAZ,EAAgB;AACZ,WAAK4/B,iBAAL,CAAuBC,GAAvB,CAA2B,IAA3B,EAAiCL,qBAAjC,EAAwDC,gBAAxD,EAA0EC,QAA1E,EAAoF,IAApF,EAA0FC,MAA1F;AACA,aAAO,IAAP;AACH;;AACD,WAAO,KAAKC,iBAAL,GACH,KAAKA,iBAAL,CAAuBC,GAAvB,CAA2B,IAA3B,EAAiCL,qBAAjC,EAAwDC,gBAAxD,EAA0EC,QAA1E,EAAoF,IAApF,EAA0FC,MAA1F,CADG,GACiG,IADxG;AAEH,GATD;AAUA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI/6B,EAAAA,IAAI,CAACpG,SAAL,CAAeuhC,SAAf,GAA2B,UAAUC,mBAAV;AAC3B;AACAP,EAAAA,gBAF2B,EAETQ,MAFS,EAEDN,MAFC,EAEO;AAC9B,QAAI3/B,QAAQ,EAAZ,EAAgB;AACZ,WAAKkgC,eAAL,CAAqBL,GAArB,CAAyB,IAAzB,EAA+BG,mBAA/B,EAAoDP,gBAApD,EAAsEQ,MAAtE,EAA8EN,MAA9E;AACA,aAAO,IAAP;AACH;;AACD,WAAO,KAAKO,eAAL,GAAuB,KAAKA,eAAL,CAAqBL,GAArB,CAAyB,IAAzB,EAA+BG,mBAA/B,EAAoDP,gBAApD,EAAsEQ,MAAtE,EAA8EN,MAA9E,CAAvB,GAA+G,IAAtH;AACH,GARD;AASA;AACJ;AACA;AACA;AACA;;;AACI/6B,EAAAA,IAAI,CAACpG,SAAL,CAAe2hC,WAAf,GAA6B,UAAUhR,UAAV,EAAsB;AAC/C,QAAI,KAAKiR,WAAT,EAAsB;AAClB,WAAKA,WAAL,CAAiBD,WAAjB,CAA6BhR,UAA7B;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;;;AACIvqB,EAAAA,IAAI,CAACpG,SAAL,CAAe6hC,cAAf,GAAgC,YAAY;AACxC,QAAI,KAAKD,WAAT,EAAsB;AAClB,WAAKA,WAAL,CAAiBE,SAAjB;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;;;AACI17B,EAAAA,IAAI,CAACpG,SAAL,CAAe+hC,gBAAf,GAAkC,YAAY;AAC1C,QAAI,KAAKH,WAAT,EAAsB;AAClB,WAAKA,WAAL,CAAiBI,WAAjB;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AACA;;AACA;AACJ;AACA;AACA;;;AACI57B,EAAAA,IAAI,CAACpG,SAAL,CAAeiiC,aAAf,GAA+B,YAAY;AACvC,QAAI,KAAKL,WAAT,EAAsB;AAClB,WAAKA,WAAL,CAAiBK,aAAjB;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;AACA;AACA;;;AACI77B,EAAAA,IAAI,CAACpG,SAAL,CAAekiC,aAAf,GAA+B,UAAUvR,UAAV,EAAsB;AACjD,QAAI,KAAKiR,WAAT,EAAsB;AAClB,WAAKA,WAAL,CAAiBM,aAAjB,CAA+BvR,UAA/B;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;AACA;AACA;;;AACIvqB,EAAAA,IAAI,CAACpG,SAAL,CAAemiC,iBAAf,GAAmC,UAAUzL,CAAV,EAAaC,CAAb,EAAgB;AAC/C,QAAI,KAAKC,mBAAT,EAA8B;AAC1B,WAAKA,mBAAL,CAAyBuL,iBAAzB,CAA2CzL,CAA3C,EAA8CC,CAA9C;AACH;AACJ,GAJD;;AAKAvwB,EAAAA,IAAI,CAACpG,SAAL,CAAeshB,aAAf,GAA+B,YAAY;AACvC,QAAI/a,KAAK,GAAG,IAAZ;;AACA,QAAIkB,OAAO,GAAG,YAAY;AACtBlB,MAAAA,KAAK,CAAC4Q,YAAN,CAAmB1P,OAAnB;;AACAlB,MAAAA,KAAK,CAACub,GAAN,CAAU/d,MAAM,CAACge,YAAjB,EAA+Bta,OAA/B;AACH,KAHD;;AAIA,SAAKua,EAAL,CAAQje,MAAM,CAACge,YAAf,EAA6Bta,OAA7B,EAAsC,IAAtC;AACH,GAPD;AAQA;AACJ;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AACA;;AACA;AACJ;AACA;AACA;;;AACIrB,EAAAA,IAAI,CAACpG,SAAL,CAAeoiC,iBAAf,GAAmC,YAAY;AAC3C,QAAI,KAAKC,eAAT,EAA0B;AACtB,WAAKA,eAAL,CAAqBL,WAArB;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AACA;;AACA;AACJ;AACA;AACA;;;AACI57B,EAAAA,IAAI,CAACpG,SAAL,CAAesiC,eAAf,GAAiC,YAAY;AACzC,QAAI,KAAKD,eAAT,EAA0B;AACtB,WAAKA,eAAL,CAAqBP,SAArB;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;;;AACI17B,EAAAA,IAAI,CAACpG,SAAL,CAAeuiC,kBAAf,GAAoC,YAAY;AAC5C,QAAI,KAAKvkB,eAAT,EAA0B;AACtB,WAAKA,eAAL,CAAqBukB,kBAArB;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;;;AACIn8B,EAAAA,IAAI,CAACpG,SAAL,CAAewiC,iBAAf,GAAmC,YAAY;AAC3C,QAAI,KAAKxkB,eAAT,EAA0B;AACtB,WAAKA,eAAL,CAAqBwkB,iBAArB;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;AACA;;;AACIp8B,EAAAA,IAAI,CAACpG,SAAL,CAAeyiC,WAAf,GAA6B,UAAUC,cAAV,EAA0B;AACnD,QAAI,KAAK1kB,eAAT,EAA0B;AACtB,WAAKA,eAAL,CAAqBykB,WAArB,CAAiCC,cAAjC;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;AACA;AACA;;;AACIt8B,EAAAA,IAAI,CAACpG,SAAL,CAAe2iC,iBAAf,GAAmC,UAAUvQ,UAAV,EAAsBC,QAAtB,EAAgC;AAC/D,QAAI,KAAKrU,eAAT,EAA0B;AACtB,WAAKA,eAAL,CAAqB2kB,iBAArB,CAAuCvQ,UAAvC,EAAmDC,QAAnD;AACH;AACJ,GAJD;AAKA;AACJ;AACA;;;AACIjsB,EAAAA,IAAI,CAACpG,SAAL,CAAe4iC,iBAAf,GAAmC,YAAY;AAC3C,WAAO,KAAKzjB,iBAAL,IAA0B,KAAKA,iBAAL,CAAuB0jB,MAAxD;AACH,GAFD;AAGA;AACJ;AACA;;;AACIz8B,EAAAA,IAAI,CAACpG,SAAL,CAAe8iC,oBAAf,GAAsC,UAAUxlB,MAAV,EAAkB;AACpD,WAAO,KAAKylB,kBAAL,GAA0B9lB,OAA1B,CAAkCK,MAAlC,KAA6C,CAApD;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACI;;;AACAlX,EAAAA,IAAI,CAACpG,SAAL,CAAegjC,eAAf,GAAiC,UAAUC,aAAV,EAAyB7pB,KAAzB,EAAgC;AAC7D,SAAK8pB,aAAL,CAAmBD,aAAnB,EAAkC7pB,KAAlC;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACIhT,EAAAA,IAAI,CAACpG,SAAL,CAAe2W,GAAf,GAAqB,UAAUkC,IAAV,EAAgBrO,IAAhB,EAAsB;AACvC,SAAK24B,YAAL,GAAoB,KAAKA,YAAL,CAAkBxsB,GAAlB,CAAsBkC,IAAtB,EAA4BrO,IAA5B,CAApB,GAAyD,YAAY;AAAE,aAAO,CAAP;AAAW,KAA1B,EAAxD;AACH,GAFD;AAGA;AACJ;AACA;;;AACIpE,EAAAA,IAAI,CAACpG,SAAL,CAAeojC,gBAAf,GAAkC,UAAU98B,OAAV,EAAmB;AACjD,QAAI,KAAKA,OAAL,CAAavE,SAAb,CAAuBwL,QAAvB,CAAgC,UAAhC,CAAJ,EAAiD;AAC7CjH,MAAAA,OAAO,CAACvE,SAAR,CAAkBiX,GAAlB,CAAsB,UAAtB;AACH;AACJ,GAJD;AAKA;AACJ;AACA;;;AACI5S,EAAAA,IAAI,CAACpG,SAAL,CAAeqjC,kBAAf,GAAoC,YAAY;AAC5C,QAAIC,eAAe,GAAG,KAAKtW,aAAL,GAAqB,KAAK7F,OAAL,GAAe1mB,MAAf,GAAwB,CAA7C,EAAgDsnB,IAAtE;AACA,WAAOub,eAAP;AACH,GAHD;AAIA;AACJ;AACA;AACA;;;AACIl9B,EAAAA,IAAI,CAACpG,SAAL,CAAeujC,UAAf,GAA4B,YAAY;AACpC,QAAIvK,OAAO,GAAG,KAAK7S,UAAL,GAAkBtL,aAAlB,CAAgC,YAAhC,CAAd;AACA,QAAI2oB,SAAS,GAAG,KAAKrd,UAAL,GAAkBtL,aAAlB,CAAgC,cAAhC,CAAhB;;AACA,QAAIme,OAAO,CAACle,YAAR,IAAwBke,OAAO,CAACyK,YAApC,EAAkD;AAC9C,WAAKtsB,YAAL,CAAkB4H,aAAlB;AACAia,MAAAA,OAAO,CAACnd,KAAR,CAAc6nB,SAAd,GAA0B,MAA1B;AACH;;AACD,QAAI,KAAKrf,YAAL,MAAuBmf,SAA3B,EAAsC;AAClC,UAAIG,aAAa,GAAG,KAAKxd,UAAL,GAAkBtL,aAAlB,CAAgC,qBAAhC,CAApB;AACA,UAAI+oB,SAAS,GAAG,KAAKzd,UAAL,GAAkBtL,aAAlB,CAAgC,iBAAhC,CAAhB;AACA2oB,MAAAA,SAAS,CAAC3nB,KAAV,CAAgBC,OAAhB,GAA0B,MAA1B;;AACA,UAAI6nB,aAAa,CAAC3P,WAAd,IAA6B4P,SAAS,CAAC5P,WAA3C,EAAwD;AACpDwP,QAAAA,SAAS,CAAC3nB,KAAV,CAAgBC,OAAhB,GAA0B,MAA1B;AACA,aAAK1E,MAAL,CAAYrT,MAAM,CAAC8/B,YAAnB,EAAiC,CAAjC;AACH;AACJ;AACJ,GAhBD;AAiBA;AACJ;AACA;AACA;AACA;;;AACIz9B,EAAAA,IAAI,CAACpG,SAAL,CAAe8jC,uBAAf,GAAyC,UAAU1Z,KAAV,EAAiB;AACtD,QAAIM,MAAM,GAAG,KAAKlK,uBAAL,GAA+B,CAA/B,CAAb;AACA4J,IAAAA,KAAK,GAAG,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAAK,CAACM,MAAD,CAAjC,GAA4CN,KAApD;;AACA,SAAK,IAAItpB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKksB,aAAL,GAAqBvsB,MAAzC,EAAiDK,CAAC,EAAlD,EAAsD;AAClD,UAAI,KAAKksB,aAAL,GAAqBlsB,CAArB,EAAwBinB,IAAxB,CAA6B2C,MAA7B,MAAyCN,KAA7C,EAAoD;AAChD,eAAO,KAAK4C,aAAL,GAAqBlsB,CAArB,EAAwBsY,KAA/B;AACH;AACJ;;AACD,WAAO,CAAC,CAAR;AACH,GATD;;AAUA;AACA;AACJ;AACA;AACI;;AACAhT,EAAAA,IAAI,CAACpG,SAAL,CAAe+jC,4BAAf,GAA8C,UAAU5e,KAAV,EAAiB;AAC3D,QAAIwD,MAAJ;AACA,SAAKrF,WAAL,GAAmB,EAAnB;AACA,SAAKF,iBAAL,CAAuB,KAAK/Z,OAA5B;AACA,QAAI6tB,KAAK,GAAG,KAAK5T,WAAjB;;AACA,SAAK,IAAIxiB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGo2B,KAAK,CAACz2B,MAA1B,EAAkCK,CAAC,EAAnC,EAAuC;AACnC,UAAIqkB,KAAK,KAAK+R,KAAK,CAACp2B,CAAD,CAAL,CAASqkB,KAAvB,EAA8B;AAC1BwD,QAAAA,MAAM,GAAGuO,KAAK,CAACp2B,CAAD,CAAd;AACH;AACJ;;AACD,WAAO6nB,MAAP;AACH,GAXD;AAYA;AACJ;AACA;AACI;;;AACAviB,EAAAA,IAAI,CAACpG,SAAL,CAAegkC,0BAAf,GAA4C,UAAUvqB,GAAV,EAAe;AACvD,QAAIkP,MAAJ;AACA,SAAKrF,WAAL,GAAmB,EAAnB;AACA,SAAKF,iBAAL,CAAuB,KAAK/Z,OAA5B;AACA,QAAI6tB,KAAK,GAAG,KAAK5T,WAAjB;;AACA,SAAK,IAAIxiB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGo2B,KAAK,CAACz2B,MAA1B,EAAkCK,CAAC,EAAnC,EAAuC;AACnC,UAAI2Y,GAAG,KAAKyd,KAAK,CAACp2B,CAAD,CAAL,CAAS2Y,GAArB,EAA0B;AACtBkP,QAAAA,MAAM,GAAGuO,KAAK,CAACp2B,CAAD,CAAd;AACH;AACJ;;AACD,WAAO6nB,MAAP;AACH,GAXD;AAYA;AACJ;AACA;AACA;;;AAEIviB,EAAAA,IAAI,CAACpG,SAAL,CAAeikC,kBAAf,GAAoC,YAAY;AAC5C,QAAI,KAAK55B,cAAL,IAAuB,KAAKpB,cAAL,CAAoBI,OAApB,CAA4B5I,MAAvD,EAA+D;AAC3D,UAAI8kB,KAAK,GAAG,KAAKtO,YAAL,CAAkB8Q,IAAlB,CAAuBmc,aAAvB,CAAqC,IAArC,CAAZ;;AACA,UAAI,KAAK1sB,UAAL,IAAmB,KAAKP,YAAL,CAAkB8Q,IAAlB,CAAuBoc,QAAvB,EAAnB,IAAwD,KAAK3sB,UAAL,YAA2B/U,WAAvF,EAAoG;AAChG,eAAO,KAAKwU,YAAL,CAAkB8Q,IAAlB,CAAuBqc,OAAvB,CAA+B,KAAK5sB,UAApC,EAAgD+N,KAAhD,CAAP;AACH,OAFD,MAGK;AACD,YAAI,KAAK/N,UAAL,YAA2B/U,WAA/B,EAA4C;AACxC,iBAAO,KAAK+U,UAAL,CAAgB6sB,YAAhB,CAA6B9e,KAA7B,CAAP;AACH,SAFD,MAGK;AACD,iBAAO,IAAI9iB,WAAJ,CAAgB,KAAK+U,UAArB,EAAiC+N,KAAjC,EAAwC8e,YAAxC,CAAqD9e,KAArD,CAAP;AACH;AACJ;AACJ;;AACD,WAAO,EAAP;AACH,GAhBD;;AAiBAnf,EAAAA,IAAI,CAACpG,SAAL,CAAeskC,YAAf,GAA8B,YAAY;AACtC,QAAIC,SAAS,GAAGrjC,OAAO,CAACqjC,SAAR,CAAkBC,WAAlB,EAAhB;AACA,WAAO,mBAAmBC,IAAnB,CAAwBF,SAAxB,CAAP;AACH,GAHD;AAIA;AACJ;AACA;AACI;;;AACAn+B,EAAAA,IAAI,CAACpG,SAAL,CAAe87B,QAAf,GAA0B,UAAU5hB,CAAV,EAAa;AACnC,QAAI,KAAKoqB,YAAL,EAAJ,EAAyB;AACrB,UAAI,CAAC9gC,MAAM,CAACkhC,KAAZ,EAAmB;AACflhC,QAAAA,MAAM,CAACkhC,KAAP,GAAeC,UAAU,CAAC,YAAY;AAClCnhC,UAAAA,MAAM,CAACkhC,KAAP,GAAe,IAAf;AACH,SAFwB,EAEtB,GAFsB,CAAzB;AAGH,OAJD,MAKK;AACDE,QAAAA,YAAY,CAACphC,MAAM,CAACkhC,KAAR,CAAZ;AACAlhC,QAAAA,MAAM,CAACkhC,KAAP,GAAe,IAAf;AACA,aAAKlJ,eAAL,CAAqBthB,CAArB;AACA,aAAK9C,MAAL,CAAYrT,MAAM,CAAC8gC,SAAnB,EAA8B3qB,CAA9B;AACH;AACJ;AACJ,GAdD;AAeA;AACJ;AACA;;;AACI9T,EAAAA,IAAI,CAACpG,SAAL,CAAe8kC,SAAf,GAA2B,UAAUC,MAAV,EAAkB;AACzC,WAAO,KAAKA,MAAL,GAAc,KAAKj9B,MAAL,EAArB;AACH,GAFD;AAGA;AACJ;AACA;;;AACI1B,EAAAA,IAAI,CAACpG,SAAL,CAAeglC,wBAAf,GAA0C,YAAY;AAClD,WAAO,KAAK7e,UAAL,GAAkBtL,aAAlB,CAAgC,mBAAhC,CAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACIzU,EAAAA,IAAI,CAACpG,SAAL,CAAeilC,uBAAf,GAAyC,YAAY;AACjD,WAAO,KAAK9e,UAAL,GAAkBtL,aAAlB,CAAgC,kBAAhC,CAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACIzU,EAAAA,IAAI,CAACpG,SAAL,CAAeusB,uBAAf,GAAyC,YAAY;AACjD,WAAO,KAAKzT,gBAAL,GAAwB+B,aAAxB,CAAsC,kBAAtC,CAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACIzU,EAAAA,IAAI,CAACpG,SAAL,CAAe2sB,sBAAf,GAAwC,YAAY;AAChD,WAAO,KAAK7T,gBAAL,GAAwB+B,aAAxB,CAAsC,iBAAtC,CAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACIzU,EAAAA,IAAI,CAACpG,SAAL,CAAeklC,kBAAf,GAAoC,UAAUzrB,GAAV,EAAe;AAC/C,QAAI0rB,MAAJ;AACA,QAAI7c,IAAI,GAAG,EAAX;;AACA,QAAI,KAAKjE,YAAL,EAAJ,EAAyB;AACrB,UAAIoF,KAAK,GAAG,GAAG5G,KAAH,CAASrc,IAAT,CAAc,KAAKy+B,uBAAL,GAA+BpqB,aAA/B,CAA6C,OAA7C,EAAsDsO,QAApE,CAAZ;AACA,UAAIic,KAAK,GAAG,GAAGviB,KAAH,CAASrc,IAAT,CAAc,KAAKw+B,wBAAL,GAAgCnqB,aAAhC,CAA8C,OAA9C,EAAuDsO,QAArE,CAAZ;AACA,UAAIkc,cAAc,GAAG,EAArB;;AACA,UAAI,KAAKv+B,WAAL,KAAqB,CAAzB,EAA4B;AACxBu+B,QAAAA,cAAc,GAAG,GAAGxiB,KAAH,CAASrc,IAAT,CAAc,KAAK2f,UAAL,GAAkBtL,aAAlB,CAAgC,yBAAhC,EAA2DA,aAA3D,CAAyE,OAAzE,EAAkFsO,QAAhG,CAAjB;AACH;;AACD,UAAI,KAAKxd,UAAT,EAAqB;AACjB2c,QAAAA,IAAI,GAAG,GAAGzF,KAAH,CAASrc,IAAT,CAAc,KAAKmmB,sBAAL,GAA8B9R,aAA9B,CAA4C,OAA5C,EAAqDsO,QAAnE,CAAP;AACAb,QAAAA,IAAI,GAAGA,IAAI,CAACvE,MAAL,CAAY,GAAGlB,KAAH,CAASrc,IAAT,CAAc,KAAK+lB,uBAAL,GAA+B1R,aAA/B,CAA6C,OAA7C,EAAsDsO,QAApE,CAAZ,CAAP;;AACA,YAAI,KAAKriB,WAAL,KAAqB,CAAzB,EAA4B;AACxB,cAAIw+B,KAAK,GAAG,KAAKxsB,gBAAL,GAAwB+B,aAAxB,CAAsC,wBAAtC,CAAZ;AACAyN,UAAAA,IAAI,GAAGA,IAAI,CAACvE,MAAL,CAAY,GAAGlB,KAAH,CAASrc,IAAT,CAAc8+B,KAAK,CAACzqB,aAAN,CAAoB,OAApB,EAA6BsO,QAA3C,CAAZ,EAAkEpF,MAAlE,CAAyEshB,cAAzE,CAAP;AACH;;AACD;AACA/c,QAAAA,IAAI,GAAGA,IAAI,CAACvE,MAAL,CAAY0F,KAAZ,EAAmB1F,MAAnB,CAA0BqhB,KAA1B,CAAP;AACH,OATD,MAUK;AACD9c,QAAAA,IAAI,GAAGmB,KAAK,CAAC1F,MAAN,CAAaqhB,KAAb,EAAoBrhB,MAApB,CAA2BshB,cAA3B,CAAP;AACH;AACJ,KApBD,MAqBK;AACD,UAAIE,OAAO,GAAG,GAAG1iB,KAAH,CAASrc,IAAT,CAAc,KAAK2f,UAAL,GAAkBtL,aAAlB,CAAgC,OAAhC,EAAyCsO,QAAvD,CAAd;;AACA,UAAI,KAAKxd,UAAT,EAAqB;AACjB2c,QAAAA,IAAI,GAAG,GAAGzF,KAAH,CAASrc,IAAT,CAAc,KAAKsS,gBAAL,GAAwB+B,aAAxB,CAAsC,OAAtC,EAA+CsO,QAA7D,CAAP;AACAb,QAAAA,IAAI,GAAGA,IAAI,CAACvE,MAAL,CAAYwhB,OAAZ,CAAP;AACH,OAHD,MAIK;AACDjd,QAAAA,IAAI,GAAGid,OAAP;AACH;AACJ;;AACD,SAAK,IAAI77B,EAAE,GAAG,CAAT,EAAY87B,MAAM,GAAGld,IAA1B,EAAgC5e,EAAE,GAAG87B,MAAM,CAAC/kC,MAA5C,EAAoDiJ,EAAE,EAAtD,EAA0D;AACtD,UAAI8d,GAAG,GAAGge,MAAM,CAAC97B,EAAD,CAAhB;;AACA,UAAI8d,GAAG,CAACG,YAAJ,CAAiB,UAAjB,MAAiClO,GAArC,EAA0C;AACtC0rB,QAAAA,MAAM,GAAG3d,GAAT;AACA;AACH;AACJ;;AACD,WAAO2d,MAAP;AACH,GA1CD;AA2CA;AACJ;AACA;AACA;AACA;;;AACI/+B,EAAAA,IAAI,CAACpG,SAAL,CAAeylC,gBAAf,GAAkC,YAAY;AAC1C,QAAI1iB,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIrZ,EAAE,GAAG,CAAT,EAAYC,EAAE,GAAG,KAAK2Z,WAA3B,EAAwC5Z,EAAE,GAAGC,EAAE,CAAClJ,MAAhD,EAAwDiJ,EAAE,EAA1D,EAA8D;AAC1D,UAAI8P,GAAG,GAAG7P,EAAE,CAACD,EAAD,CAAZ;;AACA,UAAI8P,GAAG,CAACF,OAAJ,KAAgB,KAApB,EAA2B;AACvByJ,QAAAA,IAAI,CAACzY,IAAL,CAAUkP,GAAV;AACH;AACJ;;AACD,WAAOuJ,IAAP;AACH,GATD;AAUA;AACJ;AACA;;;AAEI3c,EAAAA,IAAI,CAACpG,SAAL,CAAe0lC,+BAAf,GAAiD,UAAUC,eAAV,EAA2B;AACxE,QAAI,KAAK76B,WAAT,EAAsB;AAClB,UAAK,KAAK+U,aAAL,IAAsB,KAAKyZ,gBAAL,CAAsBC,QAAtB,IAAkC,QAAzD,IAAuE,CAAC,KAAK1Z,aAAjF,EAAiG;AAC7F,YAAI+lB,QAAQ,GAAG,CAAf;;AACA,YAAID,eAAe,CAAC1oB,OAAhB,CAAwB,GAAxB,KAAgC,CAAC,CAArC,EAAwC;AACpC0oB,UAAAA,eAAe,GAAG9d,QAAQ,CAAC8d,eAAD,CAAR,GAA4B,GAA5B,GAAkC,KAAKr/B,OAAL,CAAam9B,YAAjE;AACH;;AACD,YAAIoC,gBAAgB,GAAG,KAAKC,mBAAL,KAA6B,KAAKxiC,YAAL,EAApD;;AACA,YAAIqiC,eAAe,GAAGE,gBAAtB,EAAwC;AACpC,cAAIE,aAAa,GAAG,CAApB;AACAA,UAAAA,aAAa,GAAGJ,eAAe,GAAG,KAAKG,mBAAL,EAAlC;AACAF,UAAAA,QAAQ,GAAIG,aAAa,GAAG,KAAKziC,YAAL,EAA5B;AACH;;AACD,YAAIsiC,QAAQ,GAAG,CAAf,EAAkB;AACd,iBAAOI,IAAI,CAACC,KAAL,CAAWL,QAAX,CAAP;AACH;AACJ;AACJ;;AACD,WAAO,CAAP;AACH,GAnBD;;AAoBAx/B,EAAAA,IAAI,CAACpG,SAAL,CAAe8lC,mBAAf,GAAqC,YAAY;AAC7C,QAAI/qB,MAAM,GAAG,CAAb;;AACA,QAAI,CAAC1Z,iBAAiB,CAAC,KAAKyX,gBAAL,GAAwB2qB,YAAzB,CAAtB,EAA8D;AAC1D1oB,MAAAA,MAAM,IAAI,KAAKjC,gBAAL,GAAwB2qB,YAAlC;AACH;;AACD,QAAI,KAAKn4B,OAAL,IAAgB,CAACjK,iBAAiB,CAAC,KAAKiF,OAAL,CAAauU,aAAb,CAA2B,YAA3B,EAAyC4oB,YAA1C,CAAtC,EAA+F;AAC3F1oB,MAAAA,MAAM,IAAI,KAAKzU,OAAL,CAAauU,aAAb,CAA2B,YAA3B,EAAyC4oB,YAAnD;AACH;;AACD,QAAI,KAAK34B,WAAL,IAAoB,CAACzJ,iBAAiB,CAAC,KAAKiF,OAAL,CAAauU,aAAb,CAA2B,cAA3B,EAA2C4oB,YAA5C,CAA1C,EAAqG;AACjG1oB,MAAAA,MAAM,IAAI,KAAKzU,OAAL,CAAauU,aAAb,CAA2B,cAA3B,EAA2C4oB,YAArD;AACH;;AACD,QAAI,KAAKn3B,iBAAL,IAA0B,CAACjL,iBAAiB,CAAC,KAAKiF,OAAL,CAAauU,aAAb,CAA2B,iBAA3B,EAA8C4oB,YAA/C,CAAhD,EAA8G;AAC1G1oB,MAAAA,MAAM,IAAI,KAAKzU,OAAL,CAAauU,aAAb,CAA2B,iBAA3B,EAA8C4oB,YAAxD;AACH;;AACD,QAAI,KAAKt4B,aAAL,IAAsB,KAAKjC,aAAL,CAAmBg9B,YAAzC,IAAyD,CAAC7kC,iBAAiB,CAAC,KAAKiF,OAAL,CAAauU,aAAb,CAA2B,kBAA3B,EAA+C4oB,YAAhD,CAA/E,EAA8I;AAC1I1oB,MAAAA,MAAM,IAAI,KAAKzU,OAAL,CAAauU,aAAb,CAA2B,kBAA3B,EAA+C4oB,YAAzD;AACH;;AACD,QAAI,KAAKr4B,UAAL,CAAgB3K,MAAhB,GAAyB,CAAzB,IAA8B,CAACY,iBAAiB,CAAC,KAAKiF,OAAL,CAAauU,aAAb,CAA2B,eAA3B,EAA4C4oB,YAA7C,CAApD,EAAgH;AAC5G,WAAK,IAAI3iC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKwF,OAAL,CAAayS,gBAAb,CAA8B,eAA9B,EAA+CtY,MAAnE,EAA2EK,CAAC,EAA5E,EAAgF;AAC5Eia,QAAAA,MAAM,IAAI,KAAKzU,OAAL,CAAayS,gBAAb,CAA8B,eAA9B,EAA+CjY,CAA/C,EAAkD2iC,YAA5D;AACH;AACJ;;AACD,WAAO1oB,MAAP;AACH,GAvBD;AAwBA;AACJ;AACA;AACA;AACA;;;AAEI3U,EAAAA,IAAI,CAACpG,SAAL,CAAemmC,gBAAf,GAAkC,UAAUC,UAAV,EAAsBC,WAAtB,EAAmC;AACjE,WAAO3jC,QAAQ,CAAC0I,UAAT,CAAoBg7B,UAAU,CAACvtB,IAAX,CAAgB2rB,WAAhB,EAApB,EAAmD6B,WAAnD,EAAgED,UAAU,CAACjhB,KAA3E,CAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACI/e,EAAAA,IAAI,CAACpG,SAAL,CAAe6pB,sBAAf,GAAwC,YAAY;AAChD,QAAI7c,UAAU,GAAG,YAAjB;AACA,WAAO,KAAKA,UAAL,MAAqB,KAA5B;AACH,GAHD;AAIA;AACJ;AACA;AACA;;;AAEI5G,EAAAA,IAAI,CAACpG,SAAL,CAAesmC,cAAf,GAAgC,UAAUjmC,GAAV,EAAeynB,OAAf,EAAwB;AACpD,QAAItd,IAAI,GAAG;AACPoS,MAAAA,WAAW,EAAE,MADN;AACcmL,MAAAA,IAAI,EAAED;AADpB,KAAX;AAGA,SAAKjlB,WAAL;AACA,SAAKuU,MAAL,CAAYrT,MAAM,CAACwiC,UAAnB,EAA+B/7B,IAA/B;AACA,SAAK/C,OAAL;AACH,GAPD;AAQA;AACJ;AACA;;;AACIrB,EAAAA,IAAI,CAACpG,SAAL,CAAewmC,iBAAf,GAAmC,YAAY;AAC3C,SAAK1nB,QAAL;AACA,QAAI2nB,UAAU,GAAG,KAAKnvB,aAAL,GAAqBovB,sBAArB,EAAjB;;AACA,QAAID,UAAU,CAAC9lB,SAAf,EAA0B;AACtB,WAAKrJ,aAAL,GAAqBqvB,sBAArB,CAA4C,EAA5C;AACAF,MAAAA,UAAU,CAACvlB,QAAX;AACH,KAHD,MAIK;AACD,WAAK5J,aAAL,GAAqBqvB,sBAArB,CAA4C;AAAExlB,QAAAA,aAAa,EAAE;AAAjB,OAA5C;;AACA,UAAI,KAAK8B,aAAL,IAAsB,KAAKnF,YAA/B,EAA6C;AACzC,aAAK7G,YAAL,CAAkBP,MAAlB;AACH;AACJ;AACJ,GAbD;AAcA;AACJ;AACA;;;AACItQ,EAAAA,IAAI,CAACpG,SAAL,CAAe4mC,sBAAf,GAAwC,UAAUzhB,KAAV,EAAiB;AACrD,QAAI0hB,MAAM,GAAG,KAAK1Z,sBAAL,CAA4BhI,KAA5B,CAAb;;AACA,QAAI0hB,MAAJ,EAAY;AACR,UAAIzmC,MAAM,GAAGymC,MAAM,CAAChsB,aAAP,CAAqB,kBAArB,CAAb;AACA,UAAIisB,SAAS,GAAG,KAAKxgC,OAAL,CAAauU,aAAb,CAA2B,iBAA3B,CAAhB;;AACA,UAAIza,MAAM,IAAI0mC,SAAd,EAAyB;AACrB,YAAIC,OAAO,GAAG,KAAKzgC,OAAL,CAAa2zB,qBAAb,EAAd;AACA,YAAI+M,OAAO,GAAG5mC,MAAM,CAAC65B,qBAAP,EAAd;;AACA,YAAI6M,SAAJ,EAAe;AACXA,UAAAA,SAAS,CAACjrB,KAAV,CAAgByQ,IAAhB,GAAuB,CAAC0a,OAAO,CAACC,KAAR,GAAgBF,OAAO,CAACza,IAAzB,EAA+B4a,QAA/B,KAA4C,IAAnE;AACH;AACJ;AACJ;AACJ,GAbD;AAcA;AACJ;AACA;;;AACI9gC,EAAAA,IAAI,CAACpG,SAAL,CAAemnC,eAAf,GAAiC,YAAY;AACzC,QAAIC,OAAO,GAAG,SAAd;AACA,SAAKhwB,MAAL,CAAY,qBAAZ,EAAmC,KAAKgwB,OAAL,CAAnC;AACA,SAAKC,oBAAL;AACH,GAJD;AAKA;AACJ;AACA;AACA;AACA;;;AACIjhC,EAAAA,IAAI,CAACpG,SAAL,CAAesnC,WAAf,GAA6B,UAAUzb,OAAV,EAAmB;AAC5C,SAAK0b,iBAAL,CAAuB1b,OAAvB;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;;;AACIzlB,EAAAA,IAAI,CAACpG,SAAL,CAAewnC,gBAAf,GAAkC,UAAU3b,OAAV,EAAmB;AACjD,SAAK4b,qBAAL,CAA2B5b,OAA3B;AACH,GAFD;;AAGAzlB,EAAAA,IAAI,CAACpG,SAAL,CAAeynC,qBAAf,GAAuC,UAAU5b,OAAV,EAAmB;AACtD,QAAItlB,KAAK,GAAG,IAAZ;;AACA,QAAI,CAAC,KAAKmhC,eAAV,EAA2B;AACvB,WAAKA,eAAL,GAAuBloC,MAAM,CAACmoC,MAAP,CAAc;AAAEC,QAAAA,YAAY,EAAE,EAAhB;AAAoBC,QAAAA,cAAc,EAAE,EAApC;AAAwCC,QAAAA,cAAc,EAAE;AAAxD,OAAd,EAA4Ejc,OAA5E,CAAvB;AACA8Y,MAAAA,UAAU,CAAC,YAAY;AACnBp+B,QAAAA,KAAK,CAACghC,iBAAN,CAAwBhhC,KAAK,CAACmhC,eAA9B;;AACAnhC,QAAAA,KAAK,CAACmhC,eAAN,GAAwB,IAAxB;AACH,OAHS,EAGP,KAAKn/B,YAHE,CAAV;AAIH,KAND,MAOK;AACD,UAAIw/B,UAAU,GAAG,CAAC,cAAD,EAAiB,gBAAjB,EAAmC,gBAAnC,CAAjB;AACA,UAAIC,QAAQ,GAAG,KAAKxnB,uBAAL,GAA+B,CAA/B,CAAf;;AACA,WAAK,IAAI1f,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGinC,UAAU,CAACtnC,MAA/B,EAAuCK,CAAC,EAAxC,EAA4C;AACxC,YAAI+qB,OAAO,CAACkc,UAAU,CAACjnC,CAAD,CAAX,CAAX,EAA4B;AACxB+C,UAAAA,cAAc,CAAC,IAAD,EAAOgoB,OAAP,EAAgBkc,UAAU,CAACjnC,CAAD,CAA1B,EAA+BknC,QAA/B,CAAd;AACH;AACJ;AACJ;AACJ,GAlBD;;AAmBA5hC,EAAAA,IAAI,CAACpG,SAAL,CAAeunC,iBAAf,GAAmC,UAAU1b,OAAV,EAAmB;AAClD,QAAItlB,KAAK,GAAG,IAAZ;;AACA,QAAIyhC,QAAQ,GAAG,KAAKxnB,uBAAL,GAA+B,CAA/B,CAAf;AACAqL,IAAAA,OAAO,GAAGrsB,MAAM,CAACmoC,MAAP,CAAc;AAAEC,MAAAA,YAAY,EAAE,EAAhB;AAAoBC,MAAAA,cAAc,EAAE,EAApC;AAAwCC,MAAAA,cAAc,EAAE;AAAxD,KAAd,EAA4Ejc,OAA5E,CAAV;AACA,QAAIoc,OAAO,GAAG,KAAK3wB,aAAL,GAAqB4wB,WAArB,CAAiCrc,OAAjC,EAA0Cmc,QAA1C,EAAoD,EAApD,EAAwD,KAAK1wB,aAAL,GAAqB4sB,aAArB,GAAqCiE,aAArC,EAAxD,CAAd;;AACA,QAAI,KAAK7wB,aAAL,GAAqB6sB,QAArB,EAAJ,EAAqC;AACjC8D,MAAAA,OAAO,CAACG,IAAR,CAAa,UAAUluB,CAAV,EAAa;AACtB3T,QAAAA,KAAK,CAAC8hC,UAAN;AACH,OAFD;AAGH,KAJD,MAKK;AACD,WAAKA,UAAL;AACH;AACJ,GAbD;;AAcAjiC,EAAAA,IAAI,CAACpG,SAAL,CAAeqoC,UAAf,GAA4B,YAAY;AACpC,QAAI9hC,KAAK,GAAG,IAAZ;;AACA,QAAI+hC,SAAS,GAAGjK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACkK,SAAL,CAAe,KAAKzL,qBAAL,EAAf,CAAX,CAAhB;AACA,QAAIsH,OAAO,GAAG,KAAK9sB,aAAL,GAAqB8sB,OAArB,CAA6B,EAA7B,EAAiC,KAAK9sB,aAAL,GAAqB4sB,aAArB,GAAqCiE,aAArC,EAAjC,CAAd;AACA/D,IAAAA,OAAO,CAACgE,IAAR,CAAa,UAAUluB,CAAV,EAAa;AACtB3T,MAAAA,KAAK,CAACiiC,WAAN,CAAkBtuB,CAAC,CAAC2G,MAApB,EAA4BynB,SAA5B,EAAuCpuB,CAAC,CAAC8G,KAAzC;AACH,KAFD;AAGH,GAPD;;AAQA5a,EAAAA,IAAI,CAACpG,SAAL,CAAeyoC,gBAAf,GAAkC,UAAUjhB,GAAV,EAAe;AAC7C,QAAIgD,EAAE,GAAG,KAAK0a,kBAAL,CAAwB1d,GAAG,CAAC/N,GAA5B,CAAT;AACA,QAAIL,KAAK,GAAGyO,QAAQ,CAAC2C,EAAE,CAAC7C,YAAH,CAAgB,eAAhB,CAAD,EAAmC,EAAnC,CAApB;AACA9lB,IAAAA,MAAM,CAAC2oB,EAAD,CAAN;;AACA,QAAI,KAAK9e,gBAAL,EAAJ,EAA6B;AACzB,UAAIg9B,GAAG,GAAG,KAAKlgB,cAAL,GAAsBpP,KAAtB,CAAV;AACAvX,MAAAA,MAAM,CAAC6mC,GAAD,CAAN;AACH;AACJ,GARD;;AASAtiC,EAAAA,IAAI,CAACpG,SAAL,CAAewoC,WAAf,GAA6B,UAAU3nB,MAAV,EAAkBynB,SAAlB,EAA6BtnB,KAA7B,EAAoC;AAC7D,QAAIza,KAAK,GAAG,IAAZ;;AACA,QAAIkhB,MAAM,GAAG,KAAKuF,aAAL,EAAb;AACA,QAAIgb,QAAQ,GAAG,KAAKxnB,uBAAL,GAA+B,CAA/B,CAAf;;AACA,QAAImoB,OAAO,GAAG,UAAU7nC,CAAV,EAAa;AACvB,UAAI,CAAC+f,MAAM,CAAC5F,MAAP,CAAc,UAAUf,CAAV,EAAa;AAAE,eAAOA,CAAC,CAAC8tB,QAAD,CAAD,KAAgBvgB,MAAM,CAAC3mB,CAAD,CAAN,CAAUinB,IAAV,CAAeigB,QAAf,CAAvB;AAAkD,OAA/E,EAAiFvnC,MAAtF,EAA8F;AAC1FmoC,QAAAA,MAAM,CAACH,gBAAP,CAAwBhhB,MAAM,CAAC3mB,CAAD,CAA9B;AACA2mB,QAAAA,MAAM,CAACzN,MAAP,CAAclZ,CAAd,EAAiB,CAAjB;AACAA,QAAAA,CAAC;AACJ;;AACD+nC,MAAAA,OAAO,GAAG/nC,CAAV;AACH,KAPD;;AAQA,QAAI8nC,MAAM,GAAG,IAAb;AAAA,QAAmBC,OAAnB;;AACA,SAAK,IAAI/nC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2mB,MAAM,CAAChnB,MAA3B,EAAmCK,CAAC,EAApC,EAAwC;AACpC6nC,MAAAA,OAAO,CAAC7nC,CAAD,CAAP;;AACAA,MAAAA,CAAC,GAAG+nC,OAAJ;AACH;;AACD,QAAIC,OAAO,GAAG,UAAUhoC,CAAV,EAAa;AACvB,UAAIioC,UAAJ;AACAT,MAAAA,SAAS,CAACrtB,MAAV,CAAiB,UAAUf,CAAV,EAAa;AAC1B,YAAIA,CAAC,CAAC8tB,QAAD,CAAD,KAAgBnnB,MAAM,CAAC/f,CAAD,CAAN,CAAUknC,QAAV,CAApB,EAAyC;AACrC,cAAI9tB,CAAC,KAAK2G,MAAM,CAAC/f,CAAD,CAAhB,EAAqB;AACjByF,YAAAA,KAAK,CAACma,UAAN,CAAiBG,MAAM,CAAC/f,CAAD,CAAN,CAAUknC,QAAV,CAAjB,EAAsCnnB,MAAM,CAAC/f,CAAD,CAA5C;AACH;;AACDioC,UAAAA,UAAU,GAAG,IAAb;AACH;AACJ,OAPD;;AAQA,UAAI,CAACA,UAAL,EAAiB;AACbC,QAAAA,MAAM,CAACC,gBAAP,CAAwBpoB,MAAM,CAAC/f,CAAD,CAA9B,EAAmCA,CAAnC;AACH;AACJ,KAbD;;AAcA,QAAIkoC,MAAM,GAAG,IAAb;;AACA,SAAK,IAAIloC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+f,MAAM,CAACpgB,MAA3B,EAAmCK,CAAC,EAApC,EAAwC;AACpCgoC,MAAAA,OAAO,CAAChoC,CAAD,CAAP;AACH;;AACD,SAAKiH,eAAL,GAAuB8Y,MAAvB;AACA,QAAIyH,IAAI,GAAG,GAAGzF,KAAH,CAASrc,IAAT,CAAc,KAAKuf,eAAL,GAAuBhN,gBAAvB,CAAwC,QAAxC,CAAd,CAAX;AACAnV,IAAAA,aAAa,CAAC,IAAD,EAAO,KAAKopB,aAAL,EAAP,EAA6B1E,IAA7B,CAAb;AACA3kB,IAAAA,cAAc,CAAC,IAAD,CAAd;;AACA,QAAI,KAAKmH,WAAT,EAAsB;AAClB,WAAKsM,MAAL,CAAYrT,MAAM,CAACyZ,mBAAnB,EAAwC;AAAEF,QAAAA,MAAM,EAAE,OAAV;AAAmBP,QAAAA,UAAU,EAAE;AAAEY,UAAAA,iBAAiB,EAAEqD;AAArB;AAA/B,OAAxC;AACH;AACJ,GA1CD;;AA2CA5a,EAAAA,IAAI,CAACpG,SAAL,CAAeipC,gBAAf,GAAkC,UAAUlhB,IAAV,EAAgB3O,KAAhB,EAAuB;AACrD,QAAIoO,GAAG,GAAG,IAAItjB,WAAJ,CAAgB,KAAKuG,cAArB,EAAqC,IAArC,EAA2C,IAA3C,CAAV;AACA,QAAIy+B,KAAK,GAAG,IAAI7jC,iBAAJ,CAAsB,IAAtB,CAAZ;AACA,QAAI8jC,SAAS,GAAGD,KAAK,CAACE,YAAN,CAAmB,CAACrhB,IAAD,CAAnB,CAAhB;AACA,QAAIyC,EAAE,GAAGhD,GAAG,CAAC9Q,MAAJ,CAAWyyB,SAAS,CAAC,CAAD,CAApB,EAAyB,KAAKjxB,UAAL,EAAzB,CAAT;AACA,QAAIuS,GAAJ;AACA,QAAI4e,MAAJ;AACA,SAAKC,YAAL,CAAkBH,SAAS,CAAC,CAAD,CAA3B,EAAgC/vB,KAAhC;AACA,QAAI6P,KAAK,GAAG,KAAKlD,eAAL,GAAuBlL,aAAvB,CAAqC,OAArC,CAAZ;;AACA,QAAIoO,KAAK,CAACpO,aAAN,CAAoB,aAApB,CAAJ,EAAwC;AACpC,UAAI0uB,QAAQ,GAAGtgB,KAAK,CAACpO,aAAN,CAAoB,aAApB,CAAf;AACA0uB,MAAAA,QAAQ,CAACC,UAAT,CAAoBpP,WAApB,CAAgCmP,QAAhC;;AACA,UAAI,KAAK79B,gBAAL,EAAJ,EAA6B;AACzB,YAAI+9B,SAAS,GAAG,KAAKtjB,UAAL,GAAkBtL,aAAlB,CAAgC,mBAAhC,EAAqDA,aAArD,CAAmE,OAAnE,CAAhB;AACC4uB,QAAAA,SAAS,CAACrT,iBAAX,CAA8BoT,UAA9B,CAAyCpP,WAAzC,CAAqDqP,SAAS,CAACrT,iBAA/D;AACH;AACJ;;AACD,QAAI,KAAK1qB,gBAAL,EAAJ,EAA6B;AACzB+e,MAAAA,GAAG,GAAG/mB,aAAa,CAAC8mB,EAAD,EAAK,KAAK9e,gBAAL,EAAL,EAA8B,IAA9B,CAAnB;;AACA,UAAI,KAAKC,UAAL,IAAmByN,KAAK,GAAG,KAAKzN,UAApC,EAAgD;AAC5C09B,QAAAA,MAAM,GAAG,KAAKvwB,gBAAL,GAAwB+B,aAAxB,CAAsC,kBAAtC,EAA0DA,aAA1D,CAAwE,OAAxE,CAAT;AACH,OAFD,MAGK;AACDwuB,QAAAA,MAAM,GAAG,KAAKljB,UAAL,GAAkBtL,aAAlB,CAAgC,mBAAhC,EAAqDA,aAArD,CAAmE,OAAnE,CAAT;AACH;;AACDwuB,MAAAA,MAAM,CAAClQ,WAAP,CAAmB1O,GAAnB;;AACA,UAAI,KAAK1P,MAAL,KAAgB,MAApB,EAA4B;AACxB,aAAK3D,MAAL,CAAYrT,MAAM,CAAC8/B,YAAnB,EAAiC,EAAjC;AACH;AACJ;;AACD,QAAI,KAAKl4B,UAAL,IAAmByN,KAAK,GAAG,KAAKzN,UAApC,EAAgD;AAC5Csd,MAAAA,KAAK,GAAG,KAAKnQ,gBAAL,GAAwB+B,aAAxB,CAAsC,OAAtC,CAAR;AACH,KAFD,MAGK;AACDoO,MAAAA,KAAK,GAAG,KAAK9C,UAAL,GAAkBtL,aAAlB,CAAgC,OAAhC,CAAR;AACH;;AACDoO,IAAAA,KAAK,GAAG,KAAK9C,UAAL,GAAkBtL,aAAlB,CAAgC,OAAhC,CAAR;AACAoO,IAAAA,KAAK,CAACkQ,WAAN,CAAkB3O,EAAlB;AACH,GAtCD;;AAuCApkB,EAAAA,IAAI,CAACpG,SAAL,CAAespC,YAAf,GAA8B,UAAU9hB,GAAV,EAAepO,KAAf,EAAsB;AAChD,QAAI+O,OAAO,GAAG,KAAKzc,gBAAL,EAAd;;AACA,QAAIyc,OAAJ,EAAa;AACT,UAAIid,KAAK,GAAG,KAAKnY,oBAAL,EAAZ;AACA,UAAI5B,IAAI,GAAG7D,GAAG,CAACkiB,KAAJ,EAAX;AACAre,MAAAA,IAAI,CAACrI,KAAL,GAAaqI,IAAI,CAACrI,KAAL,CAAWH,KAAX,CAAiBsF,OAAjB,CAAb;AACAX,MAAAA,GAAG,CAACxE,KAAJ,GAAYwE,GAAG,CAACxE,KAAJ,CAAUH,KAAV,CAAgB,CAAhB,EAAmBsF,OAAnB,CAAZ;AACAid,MAAAA,KAAK,CAACprB,MAAN,CAAaZ,KAAb,EAAoB,CAApB,EAAuBiS,IAAvB;AACH;;AACD,SAAK2B,aAAL,GAAqBhT,MAArB,CAA4BZ,KAA5B,EAAmC,CAAnC,EAAsCoO,GAAtC;AACH,GAVD;AAWA;AACJ;AACA;;;AACIphB,EAAAA,IAAI,CAACpG,SAAL,CAAe2pC,SAAf,GAA2B,UAAU5uB,MAAV,EAAkB;AACzC,QAAI,CAAC6uB,MAAM,CAACC,SAAP,CAAiB9uB,MAAjB,CAAD,IAA6BA,MAAM,CAACkC,OAAP,CAAe,GAAf,KAAuB,CAAC,CAAzD,EAA4D;AACxDlC,MAAAA,MAAM,GAAG8M,QAAQ,CAAC9M,MAAD,CAAR,GAAmB,GAAnB,GAAyB,KAAKzU,OAAL,CAAam9B,YAA/C;AACH,KAFD,MAGK,IAAI,CAACmG,MAAM,CAACC,SAAP,CAAiB9uB,MAAjB,CAAD,IAA6B,KAAKA,MAAL,KAAgB,MAAjD,EAAyD;AAC1DA,MAAAA,MAAM,GAAG8M,QAAQ,CAAC9M,MAAD,CAAjB;AACH,KAFI,MAGA;AACDA,MAAAA,MAAM,GAAG,KAAKA,MAAd;AACH;;AACD,WAAOA,MAAP;AACH,GAXD;AAYA;;;AACA3U,EAAAA,IAAI,CAACpG,SAAL,CAAe2gC,qBAAf,GAAuC,YAAY;AAC/C,WAAO,KAAKxa,UAAL,GAAkBtL,aAAlB,CAAgC,yBAAhC,CAAP;AACH,GAFD;AAGA;;;AACAzU,EAAAA,IAAI,CAACpG,SAAL,CAAeysB,oBAAf,GAAsC,YAAY;AAC9C,WAAO,KAAK3T,gBAAL,GAAwB+B,aAAxB,CAAsC,wBAAtC,CAAP;AACH,GAFD;AAGA;;;AACAzU,EAAAA,IAAI,CAACpG,SAAL,CAAe8pC,qBAAf,GAAuC,YAAY;AAC/C,WAAO,KAAKvd,uBAAL,GAA+B1R,aAA/B,CAA6C,OAA7C,CAAP;AACH,GAFD;AAGA;;;AACAzU,EAAAA,IAAI,CAACpG,SAAL,CAAe+pC,sBAAf,GAAwC,YAAY;AAChD,WAAO,KAAK/E,wBAAL,GAAgCnqB,aAAhC,CAA8C,OAA9C,CAAP;AACH,GAFD;AAGA;;;AACAzU,EAAAA,IAAI,CAACpG,SAAL,CAAegqC,oBAAf,GAAsC,YAAY;AAC9C,WAAO,KAAKrd,sBAAL,GAA8B9R,aAA9B,CAA4C,OAA5C,CAAP;AACH,GAFD;AAGA;;;AACAzU,EAAAA,IAAI,CAACpG,SAAL,CAAekpB,yBAAf,GAA2C,YAAY;AACnD,WAAO,KAAK+b,uBAAL,GAA+BpqB,aAA/B,CAA6C,OAA7C,CAAP;AACH,GAFD;AAGA;;;AACAzU,EAAAA,IAAI,CAACpG,SAAL,CAAeiqC,yBAAf,GAA2C,YAAY;AACnD,WAAO,KAAKxd,oBAAL,GAA4B5R,aAA5B,CAA0C,OAA1C,CAAP;AACH,GAFD;AAGA;;;AACAzU,EAAAA,IAAI,CAACpG,SAAL,CAAekqC,0BAAf,GAA4C,YAAY;AACpD,QAAI9Z,GAAG,GAAG,KAAKuQ,qBAAL,EAAV;AACA,QAAI1X,KAAJ;;AACA,QAAImH,GAAJ,EAAS;AACLnH,MAAAA,KAAK,GAAG,KAAK0X,qBAAL,GAA6B9lB,aAA7B,CAA2C,OAA3C,CAAR;AACH;;AACD,WAAOoO,KAAP;AACH,GAPD;;AAQA,MAAIvgB,MAAJ;;AACAxI,EAAAA,UAAU,CAAC,CACP+B,QAAQ,EADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,eAFT,EAE0B,KAAK,CAF/B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,EAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,SAFT,EAEoB,KAAK,CAFzB,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,IAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,cAFT,EAEyB,KAAK,CAF9B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,IAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,aAFT,EAEwB,KAAK,CAF7B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,gBAFT,EAE2B,KAAK,CAFhC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,IAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,eAFT,EAE0B,KAAK,CAF/B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,eAFT,EAE0B,KAAK,CAF/B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPiC,OAAO,CAAC,EAAD,EAAK6D,gBAAL,CADA,CAAD,EAEPI,IAAI,CAACpG,SAFE,EAES,kBAFT,EAE6B,KAAK,CAFlC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPiC,OAAO,CAAC,EAAD,EAAK8D,cAAL,CADA,CAAD,EAEPG,IAAI,CAACpG,SAFE,EAES,gBAFT,EAE2B,KAAK,CAFhC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,aAFT,EAEwB,KAAK,CAF7B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPiC,OAAO,CAAC,EAAD,EAAKwC,YAAL,CADA,CAAD,EAEPyB,IAAI,CAACpG,SAFE,EAES,cAFT,EAEyB,KAAK,CAF9B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,sBAFT,EAEiC,KAAK,CAFtC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,4BAFT,EAEuC,KAAK,CAF5C,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,yBAFT,EAEoC,KAAK,CAFzC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPiC,OAAO,CAAC,EAAD,EAAK2D,cAAL,CADA,CAAD,EAEPM,IAAI,CAACpG,SAFE,EAES,gBAFT,EAE2B,KAAK,CAFhC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,cAFT,EAEyB,KAAK,CAF9B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,UAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,UAFT,EAEqB,KAAK,CAF1B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,IAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,mBAFT,EAE8B,KAAK,CAFnC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,kBAFT,EAE6B,KAAK,CAFlC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,gBAFT,EAE2B,KAAK,CAFhC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPiC,OAAO,CAAC,EAAD,EAAKsD,YAAL,CADA,CAAD,EAEPW,IAAI,CAACpG,SAFE,EAES,cAFT,EAEyB,KAAK,CAF9B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPiC,OAAO,CAAC,EAAD,EAAKwD,sBAAL,CADA,CAAD,EAEPS,IAAI,CAACpG,SAFE,EAES,wBAFT,EAEmC,KAAK,CAFxC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,IAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,gBAFT,EAE2B,KAAK,CAFhC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,CAAC,CAAF,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,kBAFT,EAE6B,KAAK,CAFlC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPiC,OAAO,CAAC,EAAD,EAAK0D,iBAAL,CADA,CAAD,EAEPO,IAAI,CAACpG,SAFE,EAES,mBAFT,EAE8B,KAAK,CAFnC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,gBAFT,EAE2B,KAAK,CAFhC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,iBAFT,EAE4B,KAAK,CAFjC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,eAFT,EAE0B,KAAK,CAF/B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,qBAFT,EAEgC,KAAK,CAFrC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPiC,OAAO,CAAC,EAAD,EAAK4D,eAAL,CADA,CAAD,EAEPK,IAAI,CAACpG,SAFE,EAES,iBAFT,EAE4B,KAAK,CAFjC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPiC,OAAO,CAAC,EAAD,EAAKyD,cAAL,CADA,CAAD,EAEPQ,IAAI,CAACpG,SAFE,EAES,gBAFT,EAE2B,KAAK,CAFhC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,eAFT,EAE0B,KAAK,CAF/B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,qBAFT,EAEgC,KAAK,CAFrC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,gBAFT,EAE2B,KAAK,CAFhC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPiC,OAAO,CAAC,EAAD,EAAK+D,aAAL,CADA,CAAD,EAEPE,IAAI,CAACpG,SAFE,EAES,eAFT,EAE0B,KAAK,CAF/B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPiC,OAAO,CAAC,EAAD,EAAKgE,YAAL,CADA,CAAD,EAEPC,IAAI,CAACpG,SAFE,EAES,cAFT,EAEyB,KAAK,CAF9B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPgC,UAAU,CAAC,EAAD,EAAKgD,YAAL,CADH,CAAD,EAEPkB,IAAI,CAACpG,SAFE,EAES,YAFT,EAEuB,KAAK,CAF5B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,mBAFT,EAE8B,KAAK,CAFnC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPiC,OAAO,CAAC,EAAD,EAAKyC,qBAAL,CADA,CAAD,EAEPwB,IAAI,CAACpG,SAFE,EAES,uBAFT,EAEkC,KAAK,CAFvC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,mBAFT,EAE8B,KAAK,CAFnC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,MAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,QAFT,EAEmB,KAAK,CAFxB,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,MAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,OAFT,EAEkB,KAAK,CAFvB,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,SAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,WAFT,EAEsB,KAAK,CAF3B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,EADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,aAFT,EAEwB,KAAK,CAF7B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,EADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,gBAFT,EAE2B,KAAK,CAFhC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,EADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,WAFT,EAEsB,KAAK,CAF3B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,EADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,aAFT,EAEwB,KAAK,CAF7B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,UAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,WAFT,EAEsB,KAAK,CAF3B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,UAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,oBAFT,EAE+B,KAAK,CAFpC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,EAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,YAFT,EAEuB,KAAK,CAF5B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,IAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,WAFT,EAEsB,KAAK,CAF3B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,EADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,OAFT,EAEkB,KAAK,CAFvB,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,cAFT,EAEyB,KAAK,CAF9B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,EADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,SAFT,EAEoB,KAAK,CAFzB,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,EADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,kBAFT,EAE6B,KAAK,CAFlC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,EADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,iBAFT,EAE4B,KAAK,CAFjC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,EADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,iBAFT,EAE4B,KAAK,CAFjC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,EADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,eAFT,EAE0B,KAAK,CAF/B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,CAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,YAFT,EAEuB,KAAK,CAF5B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,CAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,eAFT,EAE0B,KAAK,CAF/B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,iBAFT,EAE4B,KAAK,CAFjC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,EAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,eAFT,EAE0B,KAAK,CAF/B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACP+B,QAAQ,CAAC,SAAD,CADD,CAAD,EAEPmE,IAAI,CAACpG,SAFE,EAES,4BAFT,EAEuC,KAAK,CAF5C,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,SAFT,EAEoB,KAAK,CAFzB,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,WAFT,EAEsB,KAAK,CAF3B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,MAFT,EAEiB,KAAK,CAFtB,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,cAFT,EAEyB,KAAK,CAF9B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,eAFT,EAE0B,KAAK,CAF/B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,gBAFT,EAE2B,KAAK,CAFhC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,aAFT,EAEwB,KAAK,CAF7B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,gBAFT,EAE2B,KAAK,CAFhC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,eAFT,EAE0B,KAAK,CAF/B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,WAFT,EAEsB,KAAK,CAF3B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,mBAFT,EAE8B,KAAK,CAFnC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,aAFT,EAEwB,KAAK,CAF7B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,cAFT,EAEyB,KAAK,CAF9B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,aAFT,EAEwB,KAAK,CAF7B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,gBAFT,EAE2B,KAAK,CAFhC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,eAFT,EAE0B,KAAK,CAF/B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,eAFT,EAE0B,KAAK,CAF/B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,cAFT,EAEyB,KAAK,CAF9B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,iBAFT,EAE4B,KAAK,CAFjC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,gBAFT,EAE2B,KAAK,CAFhC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,iBAFT,EAE4B,KAAK,CAFjC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,gBAFT,EAE2B,KAAK,CAFhC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,mBAFT,EAE8B,KAAK,CAFnC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,kBAFT,EAE6B,KAAK,CAFlC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,iBAFT,EAE4B,KAAK,CAFjC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,YAFT,EAEuB,KAAK,CAF5B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,YAFT,EAEuB,KAAK,CAF5B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,eAFT,EAE0B,KAAK,CAF/B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,aAFT,EAEwB,KAAK,CAF7B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,kBAFT,EAE6B,KAAK,CAFlC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,wBAFT,EAEmC,KAAK,CAFxC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,2BAFT,EAEsC,KAAK,CAF3C,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,6BAFT,EAEwC,KAAK,CAF7C,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,uBAFT,EAEkC,KAAK,CAFvC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,oBAFT,EAE+B,KAAK,CAFpC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,0BAFT,EAEqC,KAAK,CAF1C,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,mBAFT,EAE8B,KAAK,CAFnC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,qBAFT,EAEgC,KAAK,CAFrC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,iBAFT,EAE4B,KAAK,CAFjC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,mBAFT,EAE8B,KAAK,CAFnC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,oBAFT,EAE+B,KAAK,CAFpC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,iBAFT,EAE4B,KAAK,CAFjC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,cAFT,EAEyB,KAAK,CAF9B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,SAFT,EAEoB,KAAK,CAFzB,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,SAFT,EAEoB,KAAK,CAFzB,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,cAFT,EAEyB,KAAK,CAF9B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,yBAFT,EAEoC,KAAK,CAFzC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,UAFT,EAEqB,KAAK,CAF1B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,aAFT,EAEwB,KAAK,CAF7B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,aAFT,EAEwB,KAAK,CAF7B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,gBAFT,EAE2B,KAAK,CAFhC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,mBAFT,EAE8B,KAAK,CAFnC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,iBAFT,EAE4B,KAAK,CAFjC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,WAFT,EAEsB,KAAK,CAF3B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,cAFT,EAEyB,KAAK,CAF9B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,UAFT,EAEqB,KAAK,CAF1B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,UAFT,EAEqB,KAAK,CAF1B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,WAFT,EAEsB,KAAK,CAF3B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,aAFT,EAEwB,KAAK,CAF7B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,UAFT,EAEqB,KAAK,CAF1B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,YAFT,EAEuB,KAAK,CAF5B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,YAFT,EAEuB,KAAK,CAF5B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,iBAFT,EAE4B,KAAK,CAFjC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,iBAFT,EAE4B,KAAK,CAFjC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,kBAFT,EAE6B,KAAK,CAFlC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,gBAFT,EAE2B,KAAK,CAFhC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,iBAFT,EAE4B,KAAK,CAFjC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,gBAFT,EAE2B,KAAK,CAFhC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,YAFT,EAEuB,KAAK,CAF5B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,aAFT,EAEwB,KAAK,CAF7B,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,gBAFT,EAE2B,KAAK,CAFhC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,uBAFT,EAEkC,KAAK,CAFvC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,iBAFT,EAE4B,KAAK,CAFjC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,mBAFT,EAE8B,KAAK,CAFnC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,oBAFT,EAE+B,KAAK,CAFpC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,qBAFT,EAEgC,KAAK,CAFrC,CAAV;;AAGAE,EAAAA,UAAU,CAAC,CACPkC,KAAK,EADE,CAAD,EAEPgE,IAAI,CAACpG,SAFE,EAES,uBAFT,EAEkC,KAAK,CAFvC,CAAV;;AAGAoG,EAAAA,IAAI,GAAGsC,MAAM,GAAGxI,UAAU,CAAC,CACvBmC,qBADuB,CAAD,EAEvB+D,IAFuB,CAA1B;AAGA,SAAOA,IAAP;AACH,CAthJyB,CAshJxBpF,SAthJwB,CAA1B;;AAuhJA,SAASoF,IAAT","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, ChildProperty, Browser, closest, extend } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, setValue, getValue, isBlazor, blazorTemplates } from '@syncfusion/ej2-base';\nimport { addClass, removeClass, append, remove, updateBlazorTemplate, classList, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { Property, Collection, Complex, Event, NotifyPropertyChanges, L10n } from '@syncfusion/ej2-base';\nimport { EventHandler, KeyboardEvents } from '@syncfusion/ej2-base';\nimport { DataManager, DataUtil } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner, Tooltip } from '@syncfusion/ej2-popups';\nimport { iterateArrayOrObject, prepareColumns, parentsUntil, wrap, templateCompiler, isGroupAdaptive, refreshForeignData } from './util';\nimport { getRowHeight, setColumnIndex, Global, ispercentageWidth, renderMovable } from './util';\nimport { setRowElements, resetRowIndex, compareChanges, getCellByColAndRowIndex } from './util';\nimport * as events from '../base/constant';\nimport { Render } from '../renderer/render';\nimport { RenderType } from './enum';\nimport { RowRenderer } from '../renderer/row-renderer';\nimport { CellRenderer } from '../renderer/cell-renderer';\nimport { CellRendererFactory } from '../services/cell-render-factory';\nimport { ServiceLocator } from '../services/service-locator';\nimport { ValueFormatter } from '../services/value-formatter';\nimport { RendererFactory } from '../services/renderer-factory';\nimport { ColumnWidthService } from '../services/width-controller';\nimport { AriaService } from '../services/aria-service';\nimport { FocusStrategy } from '../services/focus-strategy';\nimport { PageSettings } from '../models/page-settings';\nimport { ColumnChooserSettings } from '../models/column-chooser-settings';\nimport { Selection } from '../actions/selection';\nimport { Search } from '../actions/search';\nimport { ShowHide } from '../actions/show-hide';\nimport { Scroll } from '../actions/scroll';\nimport { Print } from '../actions/print';\nimport { AggregateRow } from '../models/aggregate';\nimport { Clipboard } from '../actions/clipboard';\nimport { gridObserver } from '../actions/blazor-action';\nimport { RowModelGenerator } from '../services/row-model-generator';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    __decorate([\n        Property(false)\n    ], SortDescriptor.prototype, \"isFromGroup\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of Grid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property(false)\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the infinite scroll behavior of Grid.\n */\nvar InfiniteScrollSettings = /** @class */ (function (_super) {\n    __extends(InfiniteScrollSettings, _super);\n    function InfiniteScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n    return InfiniteScrollSettings;\n}(ChildProperty));\nexport { InfiniteScrollSettings };\n/**\n * Configures the filtering behavior of the Grid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"enableCaseSensitivity\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"showFilterBarOperator\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n/**\n * Configures the selection behavior of the Grid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enableSimpleMultiRowSelection\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"allowColumnSelection\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n/**\n * Configures the search behavior of the Grid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property([])\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property('')\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property(true)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreAccent\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n/**\n * Configures the row drop settings of the Grid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n/**\n * Configures the text wrap settings of the Grid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n/**\n * Configures the resize behavior of the Grid.\n */\nvar ResizeSettings = /** @class */ (function (_super) {\n    __extends(ResizeSettings, _super);\n    function ResizeSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Normal')\n    ], ResizeSettings.prototype, \"mode\", void 0);\n    return ResizeSettings;\n}(ChildProperty));\nexport { ResizeSettings };\n/**\n * Configures the group behavior of the Grid.\n */\nvar GroupSettings = /** @class */ (function (_super) {\n    __extends(GroupSettings, _super);\n    function GroupSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], GroupSettings.prototype, \"showDropArea\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"showToggleButton\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"showGroupedColumn\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupSettings.prototype, \"showUngroupButton\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"disablePageWiseAggregates\", void 0);\n    __decorate([\n        Property([])\n    ], GroupSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"captionTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"enableLazyLoading\", void 0);\n    return GroupSettings;\n}(ChildProperty));\nexport { GroupSettings };\n/**\n * Configures the edit behavior of the Grid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Normal')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n/**\n * Represents the Grid component.\n * ```html\n * <div id=\"grid\"></div>\n * <script>\n *  var gridObj = new Grid({ allowPaging: true });\n *  gridObj.appendTo(\"#grid\");\n * </script>\n * ```\n */\nvar Grid = /** @class */ (function (_super) {\n    __extends(Grid, _super);\n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function Grid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.isPreventScrollEvent = false;\n        _this.inViewIndexes = [];\n        _this.keyA = false;\n        _this.frozenRightCount = 0;\n        _this.frozenLeftCount = 0;\n        _this.tablesCount = 1;\n        _this.movableCount = 0;\n        _this.visibleFrozenLeft = 0;\n        _this.visibleFrozenRight = 0;\n        _this.visibleMovable = 0;\n        _this.frozenLeftColumns = [];\n        _this.frozenRightColumns = [];\n        _this.movableColumns = [];\n        _this.media = {};\n        /** @hidden */\n        _this.tableIndex = 0;\n        _this.componentRefresh = Component.prototype.refresh;\n        /** @hidden */\n        _this.isVirtualAdaptive = false;\n        /** @hidden */\n        _this.vRows = [];\n        /** @hidden */\n        _this.vcRows = [];\n        /** @hidden */\n        _this.vGroupOffsets = {};\n        /** @hidden */\n        _this.rowUid = 0;\n        /**\n         * Gets the currently visible records of the Grid.\n         */\n        _this.currentViewData = [];\n        /** @hidden */\n        _this.lockcolPositionCount = 0;\n        /** @hidden */\n        _this.prevPageMoving = false;\n        /** @hidden */\n        _this.pageTemplateChange = false;\n        /** @hidden */\n        _this.isAutoGen = false;\n        _this.mediaBindInstance = {};\n        /** @hidden */\n        _this.commandDelIndex = undefined;\n        /** @hidden */\n        _this.asyncTimeOut = 50;\n        // enable/disable logger for MVC & Core\n        _this.enableLogger = true;\n        _this.needsID = true;\n        Grid_1.Inject(Selection);\n        setValue('mergePersistData', _this.mergePersistGridData, _this);\n        return _this;\n    }\n    Grid_1 = Grid;\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Grid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'groupSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'scrollPosition'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent'],\n            groupSettings: ['showDropArea', 'showToggleButton', 'showGroupedColumn', 'showUngroupButton',\n                'disablePageWiseAggregates', 'hideCaptionCount'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: [], scrollPosition: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource', 'headerText'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.pageSettings.template = undefined;\n        /* tslint:disable-next-line:no-any */\n        if (this.isAngular) {\n            /* tslint:disable:no-string-literal */\n            delete this.groupSettings['properties']['captionTemplate'];\n        }\n        this.pageTemplateChange = !isNullOrUndefined(this.pagerTemplate);\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    // tslint:disable-next-line:max-func-body-length\n    Grid.prototype.requiredModules = function () {\n        this.setFrozenCount();\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        if (this.allowFiltering) {\n            modules.push({\n                member: 'filter',\n                args: [this, this.filterSettings, this.serviceLocator]\n            });\n        }\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this, this.sortSettings, this.sortedColumns, this.serviceLocator]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this, this.selectionSettings, this.serviceLocator]\n            });\n        }\n        modules.push({\n            member: 'resize',\n            args: [this]\n        });\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.allowGrouping) {\n            modules.push({\n                member: 'group',\n                args: [this, this.groupSettings, this.sortedColumns, this.serviceLocator]\n            });\n        }\n        if (this.aggregates.length) {\n            modules.push({ member: 'aggregate', args: [this, this.serviceLocator] });\n        }\n        if (this.isDetail()) {\n            modules.push({\n                member: 'detailRow',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.toolbar || this.toolbarTemplate) {\n            modules.push({\n                member: 'toolbar',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.enableVirtualization || this.enableColumnVirtualization) {\n            modules.push({\n                member: 'virtualscroll',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.getFrozenColumns() || this.frozenRows || this.frozenRightCount || this.frozenLeftCount) {\n            modules.push({ member: 'freeze', args: [this, this.serviceLocator] });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this, this.serviceLocator]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    Grid.prototype.extendRequiredModules = function (modules) {\n        if (this.enableInfiniteScrolling) {\n            modules.push({\n                member: 'infiniteScroll',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.groupSettings.enableLazyLoading) {\n            modules.push({\n                member: 'lazyLoadGroup',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'columnChooser',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.isForeignKeyEnabled(this.columns)) {\n            modules.push({ member: 'foreignKey', args: [this, this.serviceLocator] });\n        }\n        if (this.enableLogger) {\n            modules.push({ member: 'logger', args: [this] });\n        }\n        if (isBlazor()) {\n            modules.push({ member: 'blazor', args: [this] });\n        }\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    Grid.prototype.preRender = function () {\n        this.serviceLocator = new ServiceLocator;\n        this.initProperties();\n        this.initializeServices();\n    };\n    Grid.prototype.initProperties = function () {\n        /* tslint:disable */\n        this.isInitial = true;\n        this.sortedColumns = [];\n        this.inViewIndexes = [];\n        this.mediaCol = [];\n        this.isInitialLoad = false;\n        this.allowServerDataBinding = false;\n        this.ignoreCollectionWatch = true;\n        if (isBlazor() && this.enableVirtualization && this.allowGrouping) {\n            var isExpanded = 'isExpanded';\n            this[isExpanded] = false;\n        }\n        this.mergeCells = {};\n        this.isEdit = false;\n        this.checkAllRows = 'None';\n        this.isCheckBoxSelection = false;\n        this.isPersistSelection = false;\n        this.componentRefresh = Component.prototype.refresh;\n        this.filterOperators = {\n            contains: 'contains', endsWith: 'endswith', equal: 'equal', greaterThan: 'greaterthan', greaterThanOrEqual: 'greaterthanorequal',\n            lessThan: 'lessthan', lessThanOrEqual: 'lessthanorequal', notEqual: 'notequal', startsWith: 'startswith'\n        };\n        this.defaultLocale = {\n            EmptyRecord: 'No records to display',\n            True: 'true',\n            False: 'false',\n            InvalidFilterMessage: 'Invalid Filter Data',\n            GroupDropArea: 'Drag a column header here to group its column',\n            UnGroup: 'Click here to ungroup',\n            UnGroupButton: 'Click here to ungroup',\n            GroupDisable: 'Grouping is disabled for this column',\n            FilterbarTitle: '\\'s filter bar cell',\n            EmptyDataSourceError: 'DataSource must not be empty at initial load since columns are generated from dataSource in AutoGenerate Column Grid',\n            // Toolbar Items\n            Add: 'Add',\n            Edit: 'Edit',\n            Cancel: 'Cancel',\n            Update: 'Update',\n            Delete: 'Delete',\n            Print: 'Print',\n            Pdfexport: 'PDF Export',\n            Excelexport: 'Excel Export',\n            Wordexport: 'Word Export',\n            Csvexport: 'CSV Export',\n            Search: 'Search',\n            Columnchooser: 'Columns',\n            Save: 'Save',\n            Item: 'item',\n            Items: 'items',\n            EditOperationAlert: 'No records selected for edit operation',\n            DeleteOperationAlert: 'No records selected for delete operation',\n            SaveButton: 'Save',\n            OKButton: 'OK',\n            CancelButton: 'Cancel',\n            EditFormTitle: 'Details of ',\n            AddFormTitle: 'Add New Record',\n            BatchSaveConfirm: 'Are you sure you want to save changes?',\n            BatchSaveLostChanges: 'Unsaved changes will be lost. Are you sure you want to continue?',\n            ConfirmDelete: 'Are you sure you want to Delete Record?',\n            CancelEdit: 'Are you sure you want to Cancel the changes?',\n            ChooseColumns: 'Choose Column',\n            SearchColumns: 'search columns',\n            Matchs: 'No Matches Found',\n            FilterButton: 'Filter',\n            ClearButton: 'Clear',\n            StartsWith: 'Starts With',\n            EndsWith: 'Ends With',\n            Contains: 'Contains',\n            Equal: 'Equal',\n            NotEqual: 'Not Equal',\n            LessThan: 'Less Than',\n            LessThanOrEqual: 'Less Than Or Equal',\n            GreaterThan: 'Greater Than',\n            GreaterThanOrEqual: 'Greater Than Or Equal',\n            ChooseDate: 'Choose a Date',\n            EnterValue: 'Enter the value',\n            Copy: 'Copy',\n            Group: 'Group by this column',\n            Ungroup: 'Ungroup by this column',\n            autoFitAll: 'Autofit all columns',\n            autoFit: 'Autofit this column',\n            AutoFitAll: 'Autofit all columns',\n            AutoFit: 'Autofit this column',\n            Export: 'Export',\n            FirstPage: 'First Page',\n            LastPage: 'Last Page',\n            PreviousPage: 'Previous Page',\n            NextPage: 'Next Page',\n            SortAscending: 'Sort Ascending',\n            SortDescending: 'Sort Descending',\n            EditRecord: 'Edit Record',\n            DeleteRecord: 'Delete Record',\n            FilterMenu: 'Filter',\n            SelectAll: 'Select All',\n            Blanks: 'Blanks',\n            FilterTrue: 'True',\n            FilterFalse: 'False',\n            NoResult: 'No Matches Found',\n            ClearFilter: 'Clear Filter',\n            NumberFilter: 'Number Filters',\n            TextFilter: 'Text Filters',\n            DateFilter: 'Date Filters',\n            DateTimeFilter: 'DateTime Filters',\n            MatchCase: 'Match Case',\n            Between: 'Between',\n            CustomFilter: 'Custom Filter',\n            CustomFilterPlaceHolder: 'Enter the value',\n            CustomFilterDatePlaceHolder: 'Choose a date',\n            AND: 'AND',\n            OR: 'OR',\n            ShowRowsWhere: 'Show rows where:',\n            FilterMenuDialogARIA: 'Filter menu dialog',\n            ExcelFilterDialogARIA: 'Excel filter dialog',\n            DialogEditARIA: 'Edit dialog',\n            ColumnChooserDialogARIA: 'Column chooser dialog',\n            ColumnMenuDialogARIA: 'Column menu dialog',\n            CustomFilterDialogARIA: 'Customer filter dialog',\n            SortAtoZ: 'Sort A to Z',\n            SortZtoA: 'Sort Z to A',\n            SortByOldest: 'Sort by Oldest',\n            SortByNewest: 'Sort by Newest',\n            SortSmallestToLargest: 'Sort Smallest to Largest',\n            SortLargestToSmallest: 'Sort Largest to Smallest'\n        };\n        this.keyConfigs = {\n            downArrow: 'downarrow',\n            upArrow: 'uparrow',\n            rightArrow: 'rightarrow',\n            leftArrow: 'leftarrow',\n            shiftDown: 'shift+downarrow',\n            shiftUp: 'shift+uparrow',\n            shiftRight: 'shift+rightarrow',\n            shiftLeft: 'shift+leftarrow',\n            home: 'home',\n            end: 'end',\n            escape: 'escape',\n            ctrlHome: 'ctrl+home',\n            ctrlEnd: 'ctrl+end',\n            pageUp: 'pageup',\n            pageDown: 'pagedown',\n            ctrlAltPageUp: 'ctrl+alt+pageup',\n            ctrlAltPageDown: 'ctrl+alt+pagedown',\n            altPageUp: 'alt+pageup',\n            altPageDown: 'alt+pagedown',\n            altDownArrow: 'alt+downarrow',\n            altUpArrow: 'alt+uparrow',\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlPlusA: 'ctrl+A',\n            ctrlPlusP: 'ctrl+P',\n            insert: 'insert',\n            delete: 'delete',\n            f2: 'f2',\n            enter: 'enter',\n            ctrlEnter: 'ctrl+enter',\n            shiftEnter: 'shift+enter',\n            tab: 'tab',\n            shiftTab: 'shift+tab',\n            space: 'space',\n            ctrlPlusC: 'ctrl+C',\n            ctrlShiftPlusH: 'ctrl+shift+H',\n            ctrlSpace: 'ctrl+space',\n            ctrlLeftArrow: 'ctrl+leftarrow',\n            ctrlRightArrow: 'ctrl+rightarrow'\n        };\n        /* tslint:enable */\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    Grid.prototype.render = function () {\n        this.log(['module_missing', 'promise_enabled', 'locale_missing', 'check_datasource_columns']);\n        this.ariaService.setOptions(this.element, { role: 'grid' });\n        if (isBlazor()) {\n            this.renderComplete();\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this, this.serviceLocator);\n        this.searchModule = new Search(this);\n        this.scrollModule = new Scroll(this);\n        this.notify(events.initialLoad, {});\n        if (this.getDataModule().dataManager.dataSource.offline === true || this.getDataModule().dataManager.dataSource.url === undefined) {\n            this.isVirtualAdaptive = true;\n        }\n        this.trigger(events.load);\n        prepareColumns(this.columns, this.enableColumnVirtualization, this);\n        if (this.enablePersistence) {\n            this.notify(events.columnsPrepared, {});\n        }\n        if (!(isBlazor() && this.isServerRendered)) {\n            this.getMediaColumns();\n            setColumnIndex(this.columns);\n        }\n        this.checkLockColumns(this.columns);\n        this.getColumns();\n        this.processModel();\n        this.gridRender();\n        this.wireEvents();\n        this.addListener();\n        this.updateDefaultCursor();\n        this.updateStackedFilter();\n        this.showSpinner();\n        this.notify(events.initialEnd, {});\n        if (isBlazor() && this.isServerRendered) {\n            gridObserver.notify(events.componentRendered, { id: this.element.id, grid: this });\n        }\n    };\n    /**\n     * By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    Grid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually showed spinner needs to hide by `hideSpinnner`.\n     */\n    Grid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    Grid.prototype.updateStackedFilter = function () {\n        if (this.allowFiltering && this.filterSettings.type === 'FilterBar' &&\n            this.getHeaderContent().querySelectorAll('.e-stackedheadercell').length) {\n            this.getHeaderContent().classList.add('e-stackedfilter');\n        }\n        else {\n            this.getHeaderContent().classList.remove('e-stackedfilter');\n        }\n    };\n    Grid.prototype.getMediaColumns = function () {\n        if (!this.enableColumnVirtualization) {\n            var gcol = this.getColumns();\n            this.getShowHideService = this.serviceLocator.getService('showHideService');\n            if (!isNullOrUndefined(gcol)) {\n                for (var index = 0; index < gcol.length; index++) {\n                    if (!isNullOrUndefined(gcol[index].hideAtMedia) && (isNullOrUndefined(gcol[index].visible) || gcol[index].visible)) {\n                        this.pushMediaColumn(gcol[index], index);\n                    }\n                }\n            }\n        }\n    };\n    Grid.prototype.pushMediaColumn = function (col, index) {\n        this.mediaCol.push(col);\n        this.media[col.uid] = window.matchMedia(col.hideAtMedia);\n        this.mediaQueryUpdate(index, this.media[col.uid]);\n        this.mediaBindInstance[index] = this.mediaQueryUpdate.bind(this, index);\n        this.media[col.uid].addListener(this.mediaBindInstance[index]);\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.updateMediaColumns = function (col) {\n        if (!this.enableColumnVirtualization) {\n            var index = this.getColumnIndexByUid(col.uid);\n            for (var i = 0; i < this.mediaCol.length; i++) {\n                if (col.uid === this.mediaCol[i].uid) {\n                    this.mediaCol.splice(i, 1);\n                    return;\n                }\n            }\n            this.pushMediaColumn(col, index);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.mediaQueryUpdate = function (columnIndex, e) {\n        var col = this.getColumns()[columnIndex];\n        if (this.mediaCol.some(function (mediaColumn) { return mediaColumn.uid === col.uid; })) {\n            col.visible = e.matches;\n            if (this.isInitialLoad) {\n                this.invokedFromMedia = true;\n                if (col.visible) {\n                    this.showHider.show(col.headerText, 'headerText');\n                }\n                else {\n                    this.showHider.hide(col.headerText, 'headerText');\n                }\n            }\n        }\n    };\n    Grid.prototype.refreshMediaCol = function () {\n        this.isInitialLoad = true;\n        var footerContent = this.element.querySelector('.e-gridfooter');\n        if (this.aggregates.length && this.element.scrollHeight > this.height && footerContent) {\n            addClass([footerContent], ['e-footerpadding']);\n        }\n        var checkboxColumn = this.getColumns().filter(function (col) { return col.type === 'checkbox'; });\n        if (checkboxColumn.length && this.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n            this.isCheckBoxSelection = false;\n        }\n    };\n    Grid.prototype.removeMediaListener = function () {\n        for (var i = 0; i < this.mediaCol.length; i++) {\n            this.media[this.mediaCol[i].uid].removeListener(this.mediaBindInstance[this.mediaCol[i].index]);\n        }\n    };\n    /**\n     * For internal use only - Initialize the event handler\n     * @private\n     */\n    Grid.prototype.eventInitializer = function () {\n        //eventInitializer\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    Grid.prototype.destroy = function () {\n        var gridElement = this.element;\n        if (!gridElement) {\n            return;\n        }\n        var hasGridChild = gridElement.querySelector('.e-gridheader') &&\n            gridElement.querySelector('.e-gridcontent') ? true : false;\n        if (hasGridChild) {\n            this.unwireEvents();\n        }\n        this.removeListener();\n        this.removeMediaListener();\n        this.notify(events.destroy, {});\n        this.destroyDependentModules();\n        if (hasGridChild) {\n            _super.prototype.destroy.call(this);\n        }\n        this.toolTipObj.destroy();\n        var modules = ['renderModule', 'headerModule', 'contentModule', 'valueFormatterService',\n            'serviceLocator', 'ariaService', 'keyboardModule', 'widthService', 'searchModule', 'showHider',\n            'scrollModule', 'printModule', 'clipboardModule', 'focusModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        if (!(isBlazor() && this.isServerRendered)) {\n            this.element.innerHTML = '';\n        }\n        else {\n            this.element.style.display = 'none';\n        }\n        classList(this.element, [], ['e-rtl', 'e-gridhover', 'e-responsive', 'e-default', 'e-device', 'e-grid-min-height']);\n    };\n    Grid.prototype.destroyDependentModules = function () {\n        var gridElement = this.element;\n        if (!gridElement || (!gridElement.querySelector('.e-gridheader') && !gridElement.querySelector('.e-gridcontent'))) {\n            return;\n        }\n        this.scrollModule.destroy();\n        this.keyboardModule.destroy();\n        this.focusModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Grid.prototype.getModuleName = function () {\n        return 'grid';\n    };\n    Grid.prototype.enableBoxSelection = function () {\n        if (this.enableAutoFill) {\n            this.selectionSettings.cellSelectionMode = 'BoxWithBorder';\n            this.element.classList.add('e-afenabled');\n        }\n        else {\n            this.element.classList.remove('e-afenabled');\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    Grid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var requireRefresh = false;\n        var requireGridRefresh = false;\n        var freezeRefresh = false;\n        var checkCursor;\n        var args = { requestType: 'refresh' };\n        if (this.isDestroyed) {\n            return;\n        }\n        this.log('module_missing');\n        if (this.isEllipsisTooltip()) {\n            this.toolTipObj.close();\n        }\n        var properties = Object.keys(newProp);\n        if (properties.indexOf('columns') > -1) {\n            this.updateColumnObject();\n            requireGridRefresh = true;\n        }\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'allowPaging':\n                    this.notify(events.uiUpdate, { module: 'pager', enable: this.allowPaging });\n                    requireRefresh = true;\n                    break;\n                case 'pageSettings':\n                    if (this.pageTemplateChange) {\n                        this.pageTemplateChange = false;\n                        this.notify(events.inBoundModelChanged, { module: 'pager', properties: newProp.pageSettings });\n                        break;\n                    }\n                    this.notify(events.inBoundModelChanged, { module: 'pager', properties: newProp.pageSettings });\n                    if (isNullOrUndefined(newProp.pageSettings.currentPage) && isNullOrUndefined(newProp.pageSettings.pageSize)\n                        && isNullOrUndefined(newProp.pageSettings.totalRecordsCount)\n                        || !isNullOrUndefined(oldProp.pageSettings) &&\n                            ((newProp.pageSettings.currentPage !== oldProp.pageSettings.currentPage)\n                                && !this.enableColumnVirtualization && !this.enableVirtualization\n                                && this.pageSettings.totalRecordsCount <= this.pageSettings.pageSize)) {\n                        requireRefresh = true;\n                    }\n                    break;\n                case 'allowSorting':\n                    this.notify(events.uiUpdate, { module: 'sort', enable: this.allowSorting });\n                    requireRefresh = true;\n                    checkCursor = true;\n                    break;\n                case 'allowFiltering':\n                    this.updateStackedFilter();\n                    this.notify(events.uiUpdate, { module: 'filter', enable: this.allowFiltering });\n                    requireRefresh = true;\n                    if (this.filterSettings.type !== 'FilterBar') {\n                        this.refreshHeader();\n                    }\n                    break;\n                case 'height':\n                case 'width':\n                    this.notify(events.uiUpdate, { module: 'scroll', properties: { width: newProp.width, height: newProp.height } });\n                    break;\n                case 'allowReordering':\n                    this.headerModule.refreshUI();\n                    checkCursor = true;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.notify(events.uiUpdate, { module: 'rowDragAndDrop', enable: this.allowRowDragAndDrop });\n                    this.renderModule.refresh();\n                    this.headerModule.refreshUI();\n                    break;\n                case 'allowSelection':\n                    this.notify(events.uiUpdate, { module: 'selection', enable: this.allowSelection });\n                    break;\n                case 'enableAutoFill':\n                    if (this.selectionModule) {\n                        this.enableBoxSelection();\n                        this.selectionModule.updateAutoFillPosition();\n                    }\n                    break;\n                case 'rowTemplate':\n                    this.rowTemplateFn = templateCompiler(this.rowTemplate);\n                    requireRefresh = true;\n                    break;\n                case 'detailTemplate':\n                    this.detailTemplateFn = templateCompiler(this.detailTemplate);\n                    requireRefresh = true;\n                    break;\n                case 'allowGrouping':\n                    this.notify(events.uiUpdate, { module: 'group', enable: this.allowGrouping });\n                    this.headerModule.refreshUI();\n                    requireRefresh = true;\n                    checkCursor = true;\n                    break;\n                case 'enableInfiniteScrolling':\n                case 'childGrid':\n                    requireRefresh = true;\n                    break;\n                case 'toolbar':\n                    this.notify(events.uiUpdate, { module: 'toolbar' });\n                    break;\n                case 'groupSettings':\n                    this.notify(events.inBoundModelChanged, {\n                        module: 'group', properties: newProp.groupSettings,\n                        oldProperties: oldProp.groupSettings\n                    });\n                    break;\n                case 'aggregates':\n                    if (!this.aggregates.length && this.allowGrouping && this.groupSettings.columns.length) {\n                        requireRefresh = true;\n                    }\n                    this.notify(events.uiUpdate, { module: 'aggregate', properties: newProp });\n                    break;\n                case 'frozenColumns':\n                case 'frozenRows':\n                case 'enableVirtualization':\n                case 'currencyCode':\n                case 'locale':\n                    this.log('frozen_rows_columns');\n                    freezeRefresh = true;\n                    requireGridRefresh = true;\n                    break;\n                case 'query':\n                    if (!this.getDataModule().isQueryInvokedFromData) {\n                        requireRefresh = true;\n                    }\n                    this.getDataModule().isQueryInvokedFromData = false;\n                    break;\n                default:\n                    this.extendedPropertyChange(prop, newProp, requireGridRefresh);\n            }\n        }\n        if (checkCursor) {\n            this.updateDefaultCursor();\n        }\n        if (requireGridRefresh) {\n            if (freezeRefresh || this.getFrozenColumns() || this.frozenRows) {\n                if (!(isBlazor() && this.isServerRendered)) {\n                    this.freezeRefresh();\n                }\n            }\n            else {\n                this.refresh();\n            }\n        }\n        else if (requireRefresh) {\n            this.notify(events.modelChanged, args);\n            requireRefresh = false;\n            this.maintainSelection(newProp.selectedRowIndex);\n        }\n    };\n    /* tslint:disable */\n    Grid.prototype.extendedPropertyChange = function (prop, newProp, requireGridRefresh) {\n        switch (prop) {\n            case 'enableRtl':\n                this.updateRTL();\n                if (this.allowPaging) {\n                    this.element.querySelector('.e-gridpager').ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.element.querySelector('.e-gridpager').ej2_instances[0].dataBind();\n                }\n                if (this.height !== 'auto') {\n                    this.scrollModule.removePadding(!newProp.enableRtl);\n                    this.scrollModule.setPadding();\n                }\n                if (this.toolbar && this.toolbarModule) {\n                    this.toolbarModule.getToolbar().ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.toolbarModule.getToolbar().ej2_instances[0].dataBind();\n                }\n                if (this.contextMenuItems && this.contextMenuModule) {\n                    this.contextMenuModule.getContextMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.contextMenuModule.getContextMenu().ej2_instances[0].dataBind();\n                }\n                if (this.showColumnMenu && this.columnMenuModule) {\n                    this.columnMenuModule.getColumnMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.columnMenuModule.getColumnMenu().ej2_instances[0].dataBind();\n                }\n                if (this.filterSettings.type === 'FilterBar' && this.filterSettings.showFilterBarOperator) {\n                    this.refreshHeader();\n                }\n                this.notify(events.rtlUpdated, {});\n                break;\n            case 'enableAltRow':\n                this.renderModule.refresh();\n                break;\n            case 'allowResizing':\n                this.headerModule.refreshUI();\n                this.updateResizeLines();\n                break;\n            case 'rowHeight':\n                if (this.rowHeight) {\n                    addClass([this.element], 'e-grid-min-height');\n                }\n                else {\n                    removeClass([this.element], 'e-grid-min-height');\n                }\n                this.renderModule.refresh();\n                this.headerModule.refreshUI();\n                break;\n            case 'gridLines':\n                this.updateGridLines();\n                break;\n            case 'showColumnMenu':\n                this.headerModule.refreshUI();\n                this.notify(events.uiUpdate, { module: 'columnMenu', enable: true });\n                break;\n            case 'columnMenuItems':\n                this.notify(events.uiUpdate, { module: 'columnMenu', enable: this.columnMenuItems });\n                break;\n            case 'contextMenuItems':\n                this.notify(events.uiUpdate, { module: 'contextMenu', enable: this.contextMenuItems });\n                break;\n            case 'showColumnChooser':\n                this.notify(events.uiUpdate, { module: 'columnChooser', enable: this.showColumnChooser });\n                break;\n            case 'filterSettings':\n                this.updateStackedFilter();\n                this.notify(events.inBoundModelChanged, { module: 'filter', properties: newProp.filterSettings });\n                break;\n            case 'searchSettings':\n                this.notify(events.inBoundModelChanged, { module: 'search', properties: newProp.searchSettings });\n                break;\n            case 'sortSettings':\n                this.notify(events.inBoundModelChanged, { module: 'sort' });\n                break;\n            case 'selectionSettings':\n                this.notify(events.inBoundModelChanged, { module: 'selection', properties: newProp.selectionSettings });\n                break;\n            case 'editSettings':\n                this.notify(events.inBoundModelChanged, { module: 'edit', properties: newProp.editSettings });\n                break;\n            case 'allowTextWrap':\n            case 'textWrapSettings':\n                if (this.allowTextWrap) {\n                    this.applyTextWrap();\n                }\n                else {\n                    this.removeTextWrap();\n                }\n                this.notify(events.freezeRender, { case: 'textwrap', isModeChg: (prop === 'textWrapSettings') });\n                break;\n            case 'dataSource':\n                var pending_1 = this.getDataModule().getState();\n                if (Object.getPrototypeOf(newProp).deepWatch) {\n                    var pKeyField = this.getPrimaryKeyFieldNames()[0];\n                    for (var i = 0, props = Object.keys(newProp.dataSource); i < props.length; i++) {\n                        this.setRowData(getValue(pKeyField, this.dataSource[props[i]]), this.dataSource[props[i]]);\n                    }\n                }\n                else if (pending_1.isPending) {\n                    var gResult = !isNullOrUndefined(this.dataSource) ? this.dataSource.result : [];\n                    var names = (pending_1.group || []);\n                    for (var i = 0; i < names.length; i++) {\n                        gResult = DataUtil.group(gResult, names[i], pending_1.aggregates || []);\n                    }\n                    this.dataSource = {\n                        result: gResult, count: this.dataSource.count,\n                        aggregates: this.dataSource.aggregates\n                    };\n                    this.getDataModule().setState({});\n                    pending_1.resolver(this.dataSource);\n                }\n                else {\n                    this.getDataModule().setState({ isDataChanged: false });\n                    this.notify(events.dataSourceModified, {});\n                    if (!requireGridRefresh) {\n                        this.renderModule.refresh();\n                        if (this.isCheckBoxSelection) {\n                            this.notify(events.beforeRefreshOnDataChange, {});\n                        }\n                    }\n                }\n                this.scrollRefresh();\n                break;\n            case 'enableHover':\n                var action = newProp.enableHover ? addClass : removeClass;\n                action([this.element], 'e-gridhover');\n                break;\n            case 'selectedRowIndex':\n                if (!this.isSelectedRowIndexUpdating) {\n                    this.selectRow(newProp.selectedRowIndex);\n                }\n                this.isSelectedRowIndexUpdating = false;\n                break;\n            case 'resizeSettings':\n                this.widthService.setWidthToTable();\n                break;\n        }\n    };\n    Grid.prototype.maintainSelection = function (index) {\n        var _this = this;\n        if (index !== -1) {\n            var fn_1 = function () {\n                _this.selectRow(index);\n                _this.off(events.contentReady, fn_1);\n            };\n            this.on(events.contentReady, fn_1, this);\n        }\n    };\n    /**\n     * @private\n     */\n    Grid.prototype.setProperties = function (prop, muteOnChange) {\n        _super.prototype.setProperties.call(this, prop, muteOnChange);\n        var filterSettings = 'filterSettings';\n        if (prop[filterSettings] && this.filterModule && muteOnChange) {\n            this.filterModule.refreshFilter();\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.setTablesCount = function () {\n        var frozenCols = this.getFrozenColumns();\n        var frozenLeft = this.getFrozenLeftColumnsCount();\n        var frozenRight = this.getFrozenRightColumnsCount();\n        if (frozenCols && !frozenLeft && !frozenRight) {\n            this.tablesCount = 2;\n        }\n        else if (!frozenCols && (frozenLeft || frozenRight)) {\n            if ((frozenLeft && !frozenRight) || (frozenRight && !frozenLeft)) {\n                this.tablesCount = 2;\n            }\n            else if (frozenLeft && frozenRight) {\n                this.tablesCount = 3;\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getTablesCount = function () {\n        return this.tablesCount;\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.updateDefaultCursor = function () {\n        var headerCells = [].slice.call(this.getHeaderContent().querySelectorAll('.e-headercell:not(.e-stackedheadercell)'));\n        var stdHdrCell = [].slice.call(this.getHeaderContent().querySelectorAll('.e-stackedheadercell'));\n        var cols = this.getColumns();\n        if (this.enableColumnVirtualization && this.getFrozenColumns()) {\n            var cells = this.contentModule.getHeaderCells();\n            headerCells = cells.length ? cells : headerCells;\n        }\n        for (var i = 0; i < headerCells.length; i++) {\n            var cell = headerCells[i];\n            if (this.allowGrouping || this.allowReordering || this.allowSorting) {\n                if (!cols[i].allowReordering || !cols[i].allowSorting || !cols[i].allowGrouping) {\n                    cell.classList.add('e-defaultcursor');\n                }\n                else {\n                    cell.classList.add('e-mousepointer');\n                }\n            }\n        }\n        for (var count = 0; count < stdHdrCell.length; count++) {\n            if (this.allowReordering) {\n                stdHdrCell[count].classList.add('e-mousepointer');\n            }\n        }\n    };\n    Grid.prototype.updateColumnModel = function (columns) {\n        for (var i = 0, len = columns.length; i < len; i++) {\n            if (columns[i].columns) {\n                this.updateColumnModel(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(columns[i]);\n            }\n        }\n        this.updateColumnLevelFrozen();\n        this.updateFrozenColumns();\n        this.updateLockableColumns();\n    };\n    Grid.prototype.updateColumnLevelFrozen = function () {\n        var cols = this.columnModel;\n        var leftCols = [];\n        var rightCols = [];\n        var movableCols = [];\n        if (this.frozenLeftCount || this.frozenRightCount) {\n            for (var i = 0, len = cols.length; i < len; i++) {\n                /* tslint:disable-next-line:no-any */\n                var col = cols[i];\n                if (col.freeze === 'Left') {\n                    col.freezeTable = 'frozen-left';\n                    leftCols.push(col);\n                }\n                else if (col.freeze === 'Right') {\n                    col.freezeTable = 'frozen-right';\n                    rightCols.push(col);\n                }\n                else {\n                    col.freezeTable = 'movable';\n                    movableCols.push(col);\n                }\n            }\n            this.columnModel = leftCols.concat(movableCols).concat(rightCols);\n        }\n    };\n    Grid.prototype.updateFrozenColumns = function () {\n        if (this.frozenLeftCount || this.frozenRightCount) {\n            return;\n        }\n        var cols = this.columnModel;\n        var directFrozenCount = this.frozenColumns;\n        var totalFrozenCount = this.getFrozenColumns();\n        var count = 0;\n        for (var i = 0, len = cols.length; i < len; i++) {\n            /* tslint:disable-next-line:no-any */\n            var col = cols[i];\n            if (directFrozenCount) {\n                if (i < directFrozenCount) {\n                    col.freezeTable = 'frozen-left';\n                }\n                else {\n                    col.freezeTable = 'movable';\n                }\n            }\n            if (col.isFrozen && i >= directFrozenCount) {\n                col.freezeTable = 'frozen-left';\n                cols.splice(this.frozenColumns + count, 0, cols.splice(i, 1)[0]);\n                count++;\n            }\n            else if (totalFrozenCount && !directFrozenCount) {\n                col.freezeTable = 'movable';\n            }\n        }\n    };\n    Grid.prototype.getFrozenLeftCount = function () {\n        return this.getFrozenColumns() || this.getFrozenLeftColumnsCount();\n    };\n    Grid.prototype.isFrozenGrid = function () {\n        return this.getFrozenColumns() !== 0 || this.getFrozenLeftColumnsCount() !== 0 || this.getFrozenRightColumnsCount() !== 0;\n    };\n    Grid.prototype.getFrozenMode = function () {\n        return this.frozenName;\n    };\n    Grid.prototype.updateLockableColumns = function () {\n        var cols = this.columnModel;\n        var frozenCount = 0;\n        var movableCount = 0;\n        var frozenColumns = this.getFrozenColumns();\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[i].lockColumn) {\n                if (i < frozenColumns) {\n                    cols.splice(frozenCount, 0, cols.splice(i, 1)[0]);\n                    frozenCount++;\n                }\n                else {\n                    cols.splice(frozenColumns + movableCount, 0, cols.splice(i, 1)[0]);\n                    movableCount++;\n                }\n            }\n        }\n    };\n    Grid.prototype.checkLockColumns = function (cols) {\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[i].columns) {\n                this.checkLockColumns(cols[i].columns);\n            }\n            else if (cols[i].lockColumn) {\n                this.lockcolPositionCount++;\n            }\n        }\n    };\n    /**\n     * Gets the columns from the Grid.\n     * @return {Column[]}\n     * @blazorType List<GridColumn>\n     */\n    Grid.prototype.getColumns = function (isRefresh) {\n        var _this = this;\n        var inview = this.inViewIndexes.map(function (v) { return v - _this.groupSettings.columns.length; }).filter(function (v) { return v > -1; });\n        var vLen = inview.length;\n        if (!this.enableColumnVirtualization || isNullOrUndefined(this.columnModel) || this.columnModel.length === 0 || isRefresh) {\n            this.columnModel = [];\n            this.updateColumnModel(this.columns);\n        }\n        var columns = vLen === 0 ? this.columnModel :\n            this.columnModel.slice(inview[0], inview[vLen - 1] + 1);\n        if (this.contentModule && this.enableColumnVirtualization && this.isFrozenGrid() && inview.length\n            && inview[0] > 0) {\n            var frozenCols = this.contentModule.ensureFrozenCols(columns);\n            columns = frozenCols;\n        }\n        return columns;\n    };\n    /**\n     * @private\n     */\n    Grid.prototype.getStackedHeaderColumnByHeaderText = function (stackedHeader, col) {\n        for (var i = 0; i < col.length; i++) {\n            var individualColumn = col[i];\n            if (individualColumn.field === stackedHeader || individualColumn.headerText === stackedHeader) {\n                this.stackedColumn = individualColumn;\n                break;\n            }\n            else if (individualColumn.columns) {\n                this.getStackedHeaderColumnByHeaderText(stackedHeader, individualColumn.columns);\n            }\n        }\n        return this.stackedColumn;\n    };\n    /**\n     * @private\n     */\n    Grid.prototype.getColumnIndexesInView = function () {\n        return this.inViewIndexes;\n    };\n    /**\n     * @private\n     */\n    Grid.prototype.getQuery = function () {\n        return this.query;\n    };\n    /**\n     * @private\n     */\n    Grid.prototype.getLocaleConstants = function () {\n        return this.defaultLocale;\n    };\n    /**\n     * @private\n     */\n    Grid.prototype.setColumnIndexesInView = function (indexes) {\n        this.inViewIndexes = indexes;\n    };\n    /**\n     * Gets the visible columns from the Grid.\n     * @return {Column[]}\n     * @blazorType List<GridColumn>\n     */\n    Grid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * Gets the header div of the Grid.\n     * @return {Element}\n     */\n    Grid.prototype.getHeaderContent = function () {\n        return this.headerModule.getPanel();\n    };\n    /**\n     * Sets the header div of the Grid to replace the old header.\n     * @param  {Element} element - Specifies the Grid header.\n     * @return {void}\n     */\n    Grid.prototype.setGridHeaderContent = function (element) {\n        this.headerModule.setPanel(element);\n    };\n    /**\n     * Gets the content table of the Grid.\n     * @return {Element}\n     */\n    Grid.prototype.getContentTable = function () {\n        return this.contentModule.getTable();\n    };\n    /**\n     * Sets the content table of the Grid to replace the old content table.\n     * @param  {Element} element - Specifies the Grid content table.\n     * @return {void}\n     */\n    Grid.prototype.setGridContentTable = function (element) {\n        this.contentModule.setTable(element);\n    };\n    /**\n     * Gets the content div of the Grid.\n     * @return {Element}\n     */\n    Grid.prototype.getContent = function () {\n        return this.contentModule.getPanel();\n    };\n    /**\n     * Sets the content div of the Grid to replace the old Grid content.\n     * @param  {Element} element - Specifies the Grid content.\n     * @return {void}\n     */\n    Grid.prototype.setGridContent = function (element) {\n        this.contentModule.setPanel(element);\n    };\n    /**\n     * Gets the header table element of the Grid.\n     * @return {Element}\n     */\n    Grid.prototype.getHeaderTable = function () {\n        return this.headerModule.getTable();\n    };\n    /**\n     * Sets the header table of the Grid to replace the old one.\n     * @param  {Element} element - Specifies the Grid header table.\n     * @return {void}\n     */\n    Grid.prototype.setGridHeaderTable = function (element) {\n        this.headerModule.setTable(element);\n    };\n    /**\n     * Gets the footer div of the Grid.\n     * @return {Element}\n     */\n    Grid.prototype.getFooterContent = function () {\n        this.footerElement = this.element.getElementsByClassName('e-gridfooter')[0];\n        return this.footerElement;\n    };\n    /**\n     * Gets the footer table element of the Grid.\n     * @return {Element}\n     */\n    Grid.prototype.getFooterContentTable = function () {\n        this.footerElement = this.element.getElementsByClassName('e-gridfooter')[0];\n        return this.footerElement.firstChild.firstChild;\n    };\n    /**\n     * Gets the pager of the Grid.\n     * @return {Element}\n     */\n    Grid.prototype.getPager = function () {\n        return this.gridPager; //get element from pager\n    };\n    /**\n     * Sets the pager of the Grid to replace the old pager.\n     * @param  {Element} element - Specifies the Grid pager.\n     * @return {void}\n     */\n    Grid.prototype.setGridPager = function (element) {\n        this.gridPager = element;\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    Grid.prototype.getRowByIndex = function (index) {\n        return this.contentModule.getRowByIndex(index);\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    Grid.prototype.getMovableRowByIndex = function (index) {\n        return this.contentModule.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets a frozen tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    Grid.prototype.getFrozenRowByIndex = function (index) {\n        return this.getFrozenDataRows()[index];\n    };\n    /**\n     * Gets all the data rows of the Grid.\n     * @return {Element[]}\n     */\n    Grid.prototype.getRows = function () {\n        return this.contentModule.getRowElements();\n    };\n    /**\n    * Gets a frozen right tables row element by index.\n    * @param  {number} index - Specifies the row index.\n    * @return {Element}\n    */\n    Grid.prototype.getFrozenRightRowByIndex = function (index) {\n        return this.contentModule.getFrozenRightRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    Grid.prototype.getRowInfo = function (target) {\n        var ele = target;\n        var args = { target: target };\n        if (!isNullOrUndefined(target) && isNullOrUndefined(parentsUntil(ele, 'e-detailrowcollapse')\n            && isNullOrUndefined(parentsUntil(ele, 'e-recordplusexpand')))) {\n            var cell = closest(ele, '.e-rowcell');\n            if (!cell) {\n                var row = closest(ele, '.e-row');\n                if (!isNullOrUndefined(row)) {\n                    var rowObj = this.getRowObjectFromUID(row.getAttribute('data-uid'));\n                    var rowIndex = parseInt(row.getAttribute('aria-rowindex'), 10);\n                    args = { row: row, rowData: rowObj.data, rowIndex: rowIndex };\n                }\n                return args;\n            }\n            var cellIndex = parseInt(cell.getAttribute('aria-colindex'), 10);\n            if (!isNullOrUndefined(cell) && !isNaN(cellIndex)) {\n                var row_1 = closest(cell, '.e-row');\n                var rowIndex = parseInt(row_1.getAttribute('aria-rowindex'), 10);\n                var frzCols = this.getFrozenColumns();\n                var tableName = this.columnModel[cellIndex].getFreezeTableName();\n                var rows = this.contentModule.getRows();\n                var index = cellIndex + this.getIndentCount();\n                if (this.isFrozenGrid()) {\n                    if (tableName === 'frozen-left') {\n                        rows = this.contentModule.getRows();\n                    }\n                    else if (tableName === 'movable') {\n                        index = cellIndex - frzCols - this.frozenLeftCount;\n                        rows = this.contentModule.getMovableRows();\n                    }\n                    else if (tableName === 'frozen-right') {\n                        index = cellIndex - (this.frozenLeftCount + this.movableCount);\n                        rows = this.contentModule.getFrozenRightRows();\n                    }\n                }\n                var rowsObject = rows.filter(function (r) { return r.uid === row_1.getAttribute('data-uid'); });\n                var rowData = {};\n                var column = void 0;\n                if (Object.keys(rowsObject).length) {\n                    rowData = rowsObject[0].data;\n                    column = rowsObject[0].cells[index].column;\n                }\n                args = { cell: cell, cellIndex: cellIndex, row: row_1, rowIndex: rowIndex, rowData: rowData, column: column, target: target };\n            }\n        }\n        return args;\n    };\n    /**\n     * Gets the Grid's movable content rows from frozen grid.\n     * @return {Element[]}\n     */\n    Grid.prototype.getMovableRows = function () {\n        return this.contentModule.getMovableRowElements();\n    };\n    /**\n     * Gets the Grid's frozen right content rows from frozen grid.\n     * @return {Element[]}\n     */\n    Grid.prototype.getFrozenRightRows = function () {\n        return this.contentModule.getFrozenRightRowElements();\n    };\n    /**\n     * Gets all the Grid's data rows.\n     * @return {Element[]}\n     */\n    Grid.prototype.getDataRows = function () {\n        return this.getAllDataRows();\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getAllDataRows = function (includeAdd) {\n        if (isNullOrUndefined(this.getContentTable().querySelector('tbody'))) {\n            return [];\n        }\n        var tbody = this.isFrozenGrid() ? this.getFrozenLeftContentTbody() : this.getContentTable().querySelector('tbody');\n        var rows = [].slice.call(tbody.children);\n        if (this.frozenRows) {\n            var hdrTbody = this.isFrozenGrid() ? this.getHeaderContent().querySelector('.e-frozenheader').querySelector('tbody')\n                : this.getHeaderTable().querySelector('tbody');\n            var freezeRows = [].slice.call(hdrTbody.children);\n            rows = this.addMovableRows(freezeRows, rows);\n        }\n        var dataRows = this.generateDataRows(rows, includeAdd);\n        return dataRows;\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.addMovableRows = function (fRows, mrows) {\n        for (var i = 0, len = mrows.length; i < len; i++) {\n            fRows.push(mrows[i]);\n        }\n        return fRows;\n    };\n    Grid.prototype.generateDataRows = function (rows, includAdd) {\n        var dRows = [];\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (rows[i].classList.contains('e-row') && (!rows[i].classList.contains('e-hiddenrow') || includAdd)) {\n                if (this.isCollapseStateEnabled()) {\n                    dRows[parseInt(rows[i].getAttribute(\"aria-rowindex\"))] = rows[i];\n                }\n                else {\n                    dRows.push(rows[i]);\n                }\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Gets all the Grid's movable table data rows.\n     * @return {Element[]}\n     */\n    Grid.prototype.getMovableDataRows = function () {\n        return this.getAllMovableDataRows();\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getAllMovableDataRows = function (includeAdd) {\n        if (!this.isFrozenGrid()) {\n            return [];\n        }\n        var rows = [].slice.call(this.getContent().querySelector('.e-movablecontent').querySelector('tbody').children);\n        if (this.frozenRows) {\n            var freezeRows = [].slice.call(this.getHeaderContent().querySelector('.e-movableheader').querySelector('tbody').children);\n            rows = this.addMovableRows(freezeRows, rows);\n        }\n        var dataRows = this.generateDataRows(rows, includeAdd);\n        return dataRows;\n    };\n    /**\n     * Gets all the Grid's frozen table data rows.\n     * @return {Element[]}\n     */\n    Grid.prototype.getFrozenDataRows = function () {\n        return this.getAllFrozenDataRows();\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getAllFrozenDataRows = function (includeAdd) {\n        var rows = [].slice.call(this.getContent().querySelector('.e-frozencontent').querySelector('tbody').children);\n        if (this.frozenRows) {\n            var freezeRows = [].slice.call(this.getHeaderContent().querySelector('.e-frozenheader').querySelector('tbody').children);\n            rows = this.addMovableRows(freezeRows, rows);\n        }\n        var dataRows = this.generateDataRows(rows, includeAdd);\n        return dataRows;\n    };\n    /**\n     * Gets all the Grid's frozen right table data rows.\n     * @return {Element[]}\n     */\n    Grid.prototype.getFrozenRightDataRows = function () {\n        return this.getAllFrozenRightDataRows();\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getAllFrozenRightDataRows = function (includeAdd) {\n        if (this.getFrozenMode() !== 'Right' && this.getFrozenMode() !== 'Left-Right') {\n            return [];\n        }\n        var rows = [].slice.call(this.getContent().querySelector('.e-frozen-right-content').querySelector('tbody').children);\n        if (this.frozenRows) {\n            var freezeRows = [].slice.call(this.getHeaderContent().querySelector('.e-frozen-right-header').querySelector('tbody').children);\n            rows = this.addMovableRows(freezeRows, rows);\n        }\n        var dataRows = this.generateDataRows(rows, includeAdd);\n        return dataRows;\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    Grid.prototype.setCellValue = function (key, field, value) {\n        var cells = 'cells';\n        var rowData = 'data';\n        var rowIdx = 'index';\n        var rowuID = 'uid';\n        var fieldIdx;\n        var col;\n        var tr;\n        var mTr;\n        var pkName = this.getPrimaryKeyFieldNames()[0];\n        var cell = new CellRenderer(this, this.serviceLocator);\n        var selectedRow = {};\n        var movableSelectedRow = {};\n        var rowObjects = this.contentModule.getRows();\n        var movableRowObjects = this.contentModule.getMovableRows();\n        fieldIdx = this.getColumnIndexByField(field);\n        if (this.groupSettings.columns.length) {\n            fieldIdx = fieldIdx + this.groupSettings.columns.length;\n        }\n        if (this.childGrid || this.detailTemplate) {\n            fieldIdx++;\n        }\n        if (this.isRowDragable()) {\n            fieldIdx++;\n        }\n        col = this.getColumnByField(field);\n        selectedRow = rowObjects.filter(function (r) {\n            return getValue(pkName, r.data) === key;\n        })[0];\n        movableSelectedRow = movableRowObjects.filter(function (r) {\n            return getValue(pkName, r.data) === key;\n        })[0];\n        tr = !isNullOrUndefined(selectedRow) ? this.element.querySelector('[data-uid=' + selectedRow[rowuID] + ']') : null;\n        mTr = !isNullOrUndefined(movableSelectedRow) ? this.element.querySelector('[data-uid=' + movableSelectedRow[rowuID] + ']') : null;\n        if (!isNullOrUndefined(tr)) {\n            setValue(field, value, selectedRow[rowData]);\n            var td = !isNullOrUndefined(tr[cells][fieldIdx]) ?\n                tr[cells][fieldIdx] : mTr[cells][fieldIdx - this.frozenColumns];\n            if (!isNullOrUndefined(td)) {\n                var sRow = selectedRow[cells][fieldIdx];\n                var mRow = void 0;\n                if (this.frozenColumns) {\n                    mRow = movableSelectedRow[cells][fieldIdx - this.frozenColumns];\n                }\n                cell.refreshTD(td, !isNullOrUndefined(sRow) ? sRow : mRow, selectedRow[rowData], { index: selectedRow[rowIdx] });\n                if (this.aggregates.length > 0) {\n                    this.notify(events.refreshFooterRenderer, {});\n                    if (this.groupSettings.columns.length > 0) {\n                        this.notify(events.groupAggregates, {});\n                    }\n                }\n                /* tslint:disable:no-string-literal */\n                if (!isNullOrUndefined(movableSelectedRow) && !isNullOrUndefined(movableSelectedRow['changes'])) {\n                    movableSelectedRow['changes'][field] = value;\n                }\n                /* tslint:disable:no-string-literal */\n                this.trigger(events.queryCellInfo, {\n                    cell: td, column: col, data: selectedRow[rowData]\n                });\n            }\n        }\n        else {\n            return;\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    Grid.prototype.setRowData = function (key, rowData) {\n        var rwdata = 'data';\n        var rowuID = 'uid';\n        var rowObjects = this.contentModule.getRows();\n        var selectedRow;\n        var pkName = this.getPrimaryKeyFieldNames()[0];\n        var rowRenderer = new RowRenderer(this.serviceLocator, null, this);\n        if (this.groupSettings.columns.length > 0 && this.aggregates.length > 0) {\n            rowObjects = rowObjects.filter(function (row) { return row.isDataRow; });\n        }\n        selectedRow = rowObjects.filter(function (r) {\n            return getValue(pkName, r.data) === key;\n        })[0];\n        if (!isNullOrUndefined(selectedRow) && this.element.querySelectorAll('[data-uid=' + selectedRow[rowuID] + ']').length) {\n            selectedRow.changes = rowData;\n            refreshForeignData(selectedRow, this.getForeignKeyColumns(), selectedRow.changes);\n            rowRenderer.refresh(selectedRow, this.getColumns(), true);\n            if (this.aggregates.length > 0) {\n                this.notify(events.refreshFooterRenderer, {});\n                if (this.groupSettings.columns.length > 0) {\n                    this.notify(events.groupAggregates, {});\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    Grid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        var col = this.getColumnByIndex(columnIndex);\n        return getCellByColAndRowIndex(this, col, rowIndex, columnIndex);\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    Grid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        if (this.frozenName === 'Left-Right' && columnIndex >= this.movableCount) {\n            return undefined;\n        }\n        var index = this.getFrozenColumns() || this.getFrozenLeftColumnsCount();\n        return this.getMovableDataRows()[rowIndex] &&\n            this.getMovableDataRows()[rowIndex].querySelectorAll('.e-rowcell')[columnIndex - index];\n    };\n    /**\n     * Gets a frozen right table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    Grid.prototype.getFrozenRightCellFromIndex = function (rowIndex, columnIndex) {\n        var index = this.getFrozenLeftColumnsCount() + this.getMovableColumnsCount();\n        var rows = this.getFrozenRightDataRows();\n        return rows[rowIndex] && rows[rowIndex].querySelectorAll('.e-rowcell')[columnIndex - index];\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    Grid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.getHeaderTable().querySelectorAll('.e-headercell')[index];\n    };\n    /**\n     * Gets a movable column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    Grid.prototype.getMovableColumnHeaderByIndex = function (index) {\n        var left = this.getFrozenColumns() || this.getFrozenLeftColumnsCount();\n        return this.getMovableVirtualHeader().querySelectorAll('.e-headercell')[index - left];\n    };\n    /**\n     * Gets a frozen right column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    Grid.prototype.getFrozenRightColumnHeaderByIndex = function (index) {\n        var left = this.getFrozenLeftColumnsCount() + this.getMovableColumnsCount();\n        return this.getFrozenRightHeader().querySelectorAll('.e-headercell')[index - left];\n    };\n    /**\n     * Gets a frozen left column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    Grid.prototype.getFrozenLeftColumnHeaderByIndex = function (index) {\n        return this.getFrozenVirtualHeader().querySelectorAll('.e-headercell')[index];\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getRowObjectFromUID = function (uid, isMovable, isFrozenRight) {\n        var rows = this.contentModule.getRows();\n        var row = this.rowObject(rows, uid);\n        if (this.isFrozenGrid()) {\n            if (!row || isMovable || isFrozenRight) {\n                row = this.rowObject(this.contentModule.getMovableRows(), uid);\n                if ((!row && this.getFrozenMode() === 'Left-Right') || isFrozenRight) {\n                    row = this.rowObject(this.contentModule.getFrozenRightRows(), uid);\n                }\n                return row;\n            }\n        }\n        if (isNullOrUndefined(row) && this.enableVirtualization && this.groupSettings.columns.length > 0) {\n            row = this.rowObject(this.vRows, uid);\n            return row;\n        }\n        return row;\n    };\n    Grid.prototype.rowObject = function (rows, uid) {\n        for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n            var row = rows_1[_i];\n            if (row.uid === uid) {\n                return row;\n            }\n        }\n        return null;\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getRowsObject = function () {\n        return this.contentModule.getRows();\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getMovableRowsObject = function () {\n        var rows = [];\n        if (this.isFrozenGrid()) {\n            rows = this.contentModule.getMovableRows();\n        }\n        return rows;\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getFrozenRightRowsObject = function () {\n        var rows = [];\n        if (this.getFrozenMode() === 'Right' || this.getFrozenMode() === 'Left-Right') {\n            rows = this.contentModule.getFrozenRightRows();\n        }\n        return rows;\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    Grid.prototype.getColumnHeaderByField = function (field) {\n        var column = this.getColumnByField(field);\n        return column ? this.getColumnHeaderByUid(column.uid) : undefined;\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    Grid.prototype.getColumnHeaderByUid = function (uid) {\n        var element = this.getHeaderContent().querySelector('[e-mappinguid=' + uid + ']');\n        return element ? element.parentElement : undefined;\n    };\n    /**\n     * @hidden\n     * @blazorType GridColumn\n     */\n    Grid.prototype.getColumnByIndex = function (index) {\n        var column;\n        this.getColumns().some(function (col, i) {\n            column = col;\n            return i === index;\n        });\n        return column;\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     * @blazorType GridColumn\n     */\n    Grid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.getColumns(), function (item, index) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    Grid.prototype.getColumnIndexByField = function (field) {\n        var cols = this.getColumns();\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[i].field === field) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     * @blazorType GridColumn\n     */\n    Grid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.getColumns().concat(this.getStackedColumns(this.columns)), function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getStackedColumns = function (columns, stackedColumn) {\n        if (stackedColumn === void 0) { stackedColumn = []; }\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            if (column.columns) {\n                stackedColumn.push(column);\n                this.getStackedColumns(column.columns, stackedColumn);\n            }\n        }\n        return stackedColumn;\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    Grid.prototype.getColumnIndexByUid = function (uid) {\n        var index = iterateArrayOrObject(this.getColumns(), function (item, index) {\n            if (item.uid === uid) {\n                return index;\n            }\n            return undefined;\n        })[0];\n        return !isNullOrUndefined(index) ? index : -1;\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    Grid.prototype.getUidByColumnField = function (field) {\n        return iterateArrayOrObject(this.getColumns(), function (item, index) {\n            if (item.field === field) {\n                return item.uid;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets TH index by column uid value.\n     * @private\n     * @param  {string} uid - Specifies the column uid.\n     * @return {number}\n     */\n    Grid.prototype.getNormalizedColumnIndex = function (uid) {\n        var index = this.getColumnIndexByUid(uid);\n        return index + this.getIndentCount();\n    };\n    /**\n    * Gets indent cell count.\n    * @private\n    * @return {number}\n    */\n    Grid.prototype.getIndentCount = function () {\n        var index = 0;\n        if (this.allowGrouping) {\n            index += this.groupSettings.columns.length;\n        }\n        if (this.isDetail()) {\n            index++;\n        }\n        if (this.isRowDragable() && isNullOrUndefined(this.rowDropSettings.targetID)) {\n            index++;\n        }\n        /**\n         * TODO: index normalization based on the stacked header, grouping and detailTemplate\n         * and frozen should be handled here\n         */\n        return index;\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    Grid.prototype.getColumnFieldNames = function () {\n        var columnNames = [];\n        var column;\n        for (var i = 0, len = this.getColumns().length; i < len; i++) {\n            column = this.getColumns()[i];\n            if (column.visible) {\n                columnNames.push(column.field);\n            }\n        }\n        return columnNames;\n    };\n    /**\n     * Gets a compiled row template.\n     * @return {Function}\n     * @private\n     */\n    Grid.prototype.getRowTemplate = function () {\n        return this.rowTemplateFn;\n    };\n    /**\n     * Gets a compiled detail row template.\n     * @private\n     * @return {Function}\n     */\n    Grid.prototype.getDetailTemplate = function () {\n        return this.detailTemplateFn;\n    };\n    /**\n     * Gets a compiled detail row template.\n     * @private\n     * @return {Function}\n     */\n    Grid.prototype.getEditTemplate = function () {\n        return this.editTemplateFn;\n    };\n    /**\n     * Gets a compiled dialog edit header template.\n     * @private\n     * @return {Function}\n     */\n    Grid.prototype.getEditHeaderTemplate = function () {\n        return this.editHeaderTemplateFn;\n    };\n    /**\n     * Gets a compiled dialog edit footer template.\n     * @private\n     * @return {Function}\n     */\n    Grid.prototype.getEditFooterTemplate = function () {\n        return this.editFooterTemplateFn;\n    };\n    /**\n     * Get the names of the primary key columns of the Grid.\n     * @return {string[]}\n     */\n    Grid.prototype.getPrimaryKeyFieldNames = function () {\n        var keys = [];\n        for (var k = 0; k < this.columnModel.length; k++) {\n            if (this.columnModel[k].isPrimaryKey) {\n                keys.push(this.columnModel[k].field);\n            }\n        }\n        return keys;\n    };\n    /**\n     * Refreshes the Grid header and content.\n     */\n    Grid.prototype.refresh = function () {\n        this.headerModule.refreshUI();\n        this.updateStackedFilter();\n        this.renderModule.refresh();\n    };\n    /**\n     * Refreshes the Grid header.\n     */\n    Grid.prototype.refreshHeader = function () {\n        this.headerModule.refreshUI();\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    Grid.prototype.getSelectedRows = function () {\n        return this.selectionModule ? this.selectionModule.selectedRecords : [];\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    Grid.prototype.getSelectedRowIndexes = function () {\n        return this.selectionModule ? this.selectionModule.selectedRowIndexes : [];\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    Grid.prototype.getSelectedRowCellIndexes = function () {\n        return this.selectionModule ? this.selectionModule.selectedRowCellIndexes : [];\n    };\n    /**\n     * Gets the collection of selected records.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    Grid.prototype.getSelectedRecords = function () {\n        return this.selectionModule ? this.selectionModule.getSelectedRecords() : [];\n    };\n    /**\n     * Gets the collection of selected columns uid.\n     * @return {string[]}\n     * @isGenericType true\n     */\n    Grid.prototype.getSelectedColumnsUid = function () {\n        var _this = this;\n        var uid = [];\n        if (this.selectionModule) {\n            this.selectionModule.selectedColumnsIndexes.filter(function (i) { return uid.push(_this.getColumns()[i].uid); });\n        }\n        return uid;\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    Grid.prototype.getDataModule = function () {\n        return this.renderModule.data;\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    Grid.prototype.showColumns = function (keys, showBy) {\n        showBy = showBy ? showBy : 'headerText';\n        this.showHider.show(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    Grid.prototype.hideColumns = function (keys, hideBy) {\n        hideBy = hideBy ? hideBy : 'headerText';\n        this.showHider.hide(keys, hideBy);\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getFrozenColumns = function () {\n        return this.frozenColumns + this.getFrozenCount(this.columns, 0, 0);\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getFrozenRightColumnsCount = function () {\n        return this.frozenRightCount;\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getFrozenLeftColumnsCount = function () {\n        return this.frozenLeftCount;\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getMovableColumnsCount = function () {\n        return this.movableCount;\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.setFrozenCount = function () {\n        this.frozenLeftCount = this.frozenRightCount = this.movableCount = 0;\n        this.visibleFrozenLeft = this.visibleFrozenRight = this.visibleMovable = 0;\n        this.frozenLeftColumns = [];\n        this.frozenRightColumns = [];\n        this.movableColumns = [];\n        this.splitFrozenCount(this.columns);\n        if (this.frozenColumns && (this.frozenLeftCount || this.frozenRightCount)) {\n            this.setProperties({ frozenColumns: 0 }, true);\n        }\n        this.setTablesCount();\n        if (this.frozenLeftCount && !this.frozenRightCount) {\n            this.frozenName = 'Left';\n        }\n        else if (this.frozenRightCount && !this.frozenLeftCount) {\n            this.frozenName = 'Right';\n        }\n        else if (this.frozenLeftCount && this.frozenRightCount) {\n            this.frozenName = 'Left-Right';\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getVisibleFrozenLeftCount = function () {\n        return this.visibleFrozenLeft;\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getVisibleFrozenRightCount = function () {\n        return this.visibleFrozenRight;\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getVisibleMovableCount = function () {\n        return this.visibleMovable;\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getFrozenRightColumns = function () {\n        return this.frozenRightColumns;\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getFrozenLeftColumns = function () {\n        return this.frozenLeftColumns;\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getMovableColumns = function () {\n        return this.movableColumns;\n    };\n    Grid.prototype.splitFrozenCount = function (columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.splitFrozenCount(columns[i].columns);\n            }\n            else {\n                if (columns[i].freeze === 'Right') {\n                    if (columns[i].visible !== false) {\n                        this.visibleFrozenRight++;\n                    }\n                    ;\n                    this.frozenRightColumns.push(columns[i]);\n                    this.frozenRightCount++;\n                }\n                else if (columns[i].freeze === 'Left') {\n                    if (columns[i].visible !== false) {\n                        this.visibleFrozenLeft++;\n                    }\n                    ;\n                    this.frozenLeftColumns.push(columns[i]);\n                    this.frozenLeftCount++;\n                }\n                else {\n                    if (columns[i].visible !== false) {\n                        this.visibleMovable++;\n                    }\n                    ;\n                    this.movableColumns.push(columns[i]);\n                    this.movableCount++;\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getVisibleFrozenColumns = function () {\n        return this.getVisibleFrozenColumnsCount() + this.getVisibleFrozenCount(this.columns, 0);\n    };\n    /**\n     * Get the current Filter operator and field.\n     * @return {Object}\n     */\n    Grid.prototype.getFilterUIInfo = function () {\n        return this.filterModule ? this.filterModule.getFilterUIInfo() : {};\n    };\n    Grid.prototype.getVisibleFrozenColumnsCount = function () {\n        var visibleFrozenColumns = 0;\n        var columns = this.columnModel;\n        for (var i = 0; i < this.frozenColumns; i++) {\n            if (columns[i].visible) {\n                visibleFrozenColumns++;\n            }\n        }\n        if (this.frozenLeftCount || this.frozenRightCount) {\n            for (var i = 0; i < columns.length; i++) {\n                if (columns[i].visible && (columns[i].freeze === 'Left' || columns[i].freeze === 'Right')) {\n                    visibleFrozenColumns++;\n                }\n            }\n        }\n        return visibleFrozenColumns;\n    };\n    Grid.prototype.getVisibleFrozenCount = function (cols, cnt) {\n        if (!this.frozenLeftCount && !this.frozenRightCount) {\n            for (var i = 0, len = cols.length; i < len; i++) {\n                if (cols[i].columns) {\n                    cnt = this.getVisibleFrozenCount(cols[i].columns, cnt);\n                }\n                else {\n                    if (cols[i].isFrozen && cols[i].visible) {\n                        cnt++;\n                    }\n                }\n            }\n        }\n        return cnt;\n    };\n    Grid.prototype.getFrozenCount = function (cols, cnt, index) {\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].columns) {\n                cnt = this.getFrozenCount(cols[i].columns, cnt, index);\n            }\n            else {\n                if (cols[i].isFrozen && index > this.frozenColumns - 1) {\n                    cnt++;\n                }\n                index++;\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Grid.prototype.goToPage = function (pageNo) {\n        if (this.pagerModule) {\n            this.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Grid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Grid.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        if (this.sortModule) {\n            this.sortModule.sortColumn(columnName, direction, isMultiSort);\n        }\n    };\n    /**\n     * Clears all the sorted columns of the Grid.\n     * @return {void}\n     */\n    Grid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    Grid.prototype.removeSortColumn = function (field) {\n        if (this.sortModule) {\n            this.sortModule.removeSortColumn(field);\n        }\n    };\n    /**\n     * Filters grid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the grid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    Grid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        if (this.filterModule) {\n            this.filterModule.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n        }\n    };\n    /**\n     * Clears all the filtered rows of the Grid.\n     * @return {void}\n     */\n    Grid.prototype.clearFiltering = function (fields) {\n        if (this.filterModule) {\n            this.filterModule.clearFiltering(fields);\n        }\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    Grid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        if (this.filterModule) {\n            this.filterModule.removeFilteredColsByField(field, isClearFilterBar);\n        }\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    Grid.prototype.selectRow = function (index, isToggle) {\n        if (this.selectionModule) {\n            this.selectionModule.selectRow(index, isToggle);\n        }\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    Grid.prototype.selectRows = function (rowIndexes) {\n        if (this.selectionModule) {\n            this.selectionModule.selectRows(rowIndexes);\n        }\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    Grid.prototype.clearSelection = function () {\n        if (this.selectionModule) {\n            this.selectionModule.clearSelection();\n        }\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    Grid.prototype.selectCell = function (cellIndex, isToggle) {\n        if (this.selectionModule) {\n            this.selectionModule.selectCell(cellIndex, isToggle);\n        }\n    };\n    /**\n     * Selects a range of cells from start and end indexes.\n     * @param  {IIndex} startIndex - Specifies the row and column's start index.\n     * @param  {IIndex} endIndex - Specifies the row and column's end index.\n     * @return {void}\n     */\n    Grid.prototype.selectCellsByRange = function (startIndex, endIndex) {\n        this.selectionModule.selectCellsByRange(startIndex, endIndex);\n    };\n    /**\n     * Searches Grid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    Grid.prototype.search = function (searchString) {\n        if (this.searchModule) {\n            this.searchModule.search(searchString);\n        }\n    };\n    /**\n     * By default, prints all the pages of the Grid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     * @return {void}\n     */\n    Grid.prototype.print = function () {\n        if (this.printModule) {\n            this.printModule.print();\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldname and data is not given then grid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldname - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    Grid.prototype.deleteRecord = function (fieldname, data) {\n        if (this.editModule) {\n            this.editModule.deleteRecord(fieldname, data);\n        }\n    };\n    /**\n     * Starts edit the selected row. At least one row must be selected before invoking this method.\n     * `editSettings.allowEditing` should be true.\n     * {% codeBlock src='grid/startEdit/index.md' %}{% endcodeBlock %}\n     * @return {void}\n     */\n    Grid.prototype.startEdit = function () {\n        if (this.editModule) {\n            this.editModule.startEdit();\n        }\n    };\n    /**\n     * If Grid is in editable state, you can save a record by invoking endEdit.\n     */\n    Grid.prototype.endEdit = function () {\n        if (this.editModule) {\n            this.editModule.endEdit();\n        }\n    };\n    /**\n     * Cancels edited state.\n     */\n    Grid.prototype.closeEdit = function () {\n        if (this.editModule) {\n            this.editModule.closeEdit();\n        }\n    };\n    /**\n     * Adds a new record to the Grid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added\n     */\n    Grid.prototype.addRecord = function (data, index) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    Grid.prototype.deleteRow = function (tr) {\n        if (this.editModule) {\n            this.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Changes a particular cell into edited state based on the row index and field name provided in the `batch` mode.\n     * @param {number} index - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform batch edit.\n     */\n    Grid.prototype.editCell = function (index, field) {\n        if (this.editModule) {\n            this.editModule.editCell(index, field);\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     * {% codeBlock src='grid/saveCell/index.md' %}{% endcodeBlock %}\n     */\n    Grid.prototype.saveCell = function () {\n        if (this.editModule) {\n            this.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     */\n    Grid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.editModule) {\n            this.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     * {% codeBlock src='grid/updateRow/index.md' %}{% endcodeBlock %}\n     */\n    Grid.prototype.updateRow = function (index, data) {\n        if (this.editModule) {\n            this.editModule.updateRow(index, data);\n        }\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    Grid.prototype.getBatchChanges = function () {\n        if (this.editModule) {\n            return this.editModule.getBatchChanges();\n        }\n        return {};\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     */\n    Grid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.toolbarModule) {\n            this.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     */\n    Grid.prototype.copy = function (withHeader) {\n        if (this.clipboardModule) {\n            this.clipboardModule.copy(withHeader);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.recalcIndentWidth = function () {\n        var _this = this;\n        if (!this.getHeaderTable().querySelector('.e-emptycell')) {\n            return;\n        }\n        if ((!this.groupSettings.columns.length && !this.isDetail() && !this.isRowDragable()) ||\n            this.getHeaderTable().querySelector('.e-emptycell').getAttribute('indentRefreshed') ||\n            !this.getContentTable()) {\n            return;\n        }\n        var indentWidth = this.getHeaderTable().querySelector('.e-emptycell').parentElement.offsetWidth;\n        var headerCol = [].slice.call(this.getHeaderTable().querySelector('colgroup').childNodes);\n        var contentCol = [].slice.call(this.getContentTable().querySelector('colgroup').childNodes);\n        var perPixel = indentWidth / 30;\n        var i = this.getFrozenMode() === 'Right' ? this.frozenRightCount : 0;\n        var parentOffset = this.element.offsetWidth;\n        var applyWidth = function (index, width) {\n            if (ispercentageWidth(_this)) {\n                var newWidth = (width / parentOffset * 100).toFixed(1) + '%';\n                headerCol[index].style.width = newWidth;\n                contentCol[index].style.width = newWidth;\n            }\n            else {\n                headerCol[index].style.width = width + 'px';\n                contentCol[index].style.width = width + 'px';\n            }\n            _this.notify(events.columnWidthChanged, { index: index, width: width });\n        };\n        if (perPixel >= 1) {\n            indentWidth = (30 / perPixel);\n        }\n        if (this.enableColumnVirtualization || this.isAutoGen) {\n            indentWidth = 30;\n        }\n        while (i < this.groupSettings.columns.length) {\n            applyWidth(i, indentWidth);\n            i++;\n        }\n        if (this.isDetail()) {\n            applyWidth(i, indentWidth);\n            i++;\n        }\n        if (this.isRowDragable()) {\n            applyWidth(i, indentWidth);\n        }\n        this.isAutoGen = false;\n        this.getHeaderTable().querySelector('.e-emptycell').setAttribute('indentRefreshed', 'true');\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.resetIndentWidth = function () {\n        if (ispercentageWidth(this)) {\n            this.getHeaderTable().querySelector('.e-emptycell').removeAttribute('indentRefreshed');\n            this.widthService.setWidthToColumns();\n            this.recalcIndentWidth();\n        }\n        if ((this.width === 'auto' || typeof (this.width) === 'string' && this.width.indexOf('%') !== -1)\n            && this.getColumns().filter(function (col) { return (!col.width || col.width === 'auto') && col.minWidth; }).length > 0) {\n            var tgridWidth = this.widthService.getTableWidth(this.getColumns());\n            this.widthService.setMinwidthBycalculation(tgridWidth);\n        }\n        if (this.isFrozenGrid() && this.widthService) {\n            this.widthService.refreshFrozenScrollbar();\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.isRowDragable = function () {\n        return this.allowRowDragAndDrop && !this.rowDropSettings.targetID && !this.enableVirtualization;\n    };\n    /**\n     * Changes the Grid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    Grid.prototype.reorderColumns = function (fromFName, toFName) {\n        if (this.reorderModule) {\n            this.reorderModule.reorderColumns(fromFName, toFName);\n        }\n    };\n    /**\n     * Changes the Grid column positions by field index. If you invoke reorderColumnByIndex multiple times,\n     * then you won't get the same results every time.\n     * @param  {number} fromIndex - Defines the origin field index.\n     * @param  {number} toIndex - Defines the destination field index.\n     * @return {void}\n     */\n    Grid.prototype.reorderColumnByIndex = function (fromIndex, toIndex) {\n        if (this.reorderModule) {\n            this.reorderModule.reorderColumnByIndex(fromIndex, toIndex);\n        }\n    };\n    /**\n     * Changes the Grid column positions by field index. If you invoke reorderColumnByTargetIndex multiple times,\n     * then you will get the same results every time.\n     * @param  {string} fieldName - Defines the field name.\n     * @param  {number} toIndex - Defines the destination field index.\n     * @return {void}\n     */\n    Grid.prototype.reorderColumnByTargetIndex = function (fieldName, toIndex) {\n        if (this.reorderModule) {\n            this.reorderModule.reorderColumnByTargetIndex(fieldName, toIndex);\n        }\n    };\n    /**\n     * Changes the Grid Row position with given indexes.\n     * @param  {number} fromIndexes - Defines the origin Indexes.\n     * @param  {number} toIndex - Defines the destination Index.\n     * @return {void}\n     */\n    Grid.prototype.reorderRows = function (fromIndexes, toIndex) {\n        if (this.rowDragAndDropModule) {\n            this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.refreshDataSource = function (e, args) {\n        this.notify('refreshdataSource', e);\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.disableRowDD = function (enable) {\n        var headerTable = this.getHeaderTable();\n        var contentTable = this.getContentTable();\n        var headerRows = headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell');\n        var rows = this.getRows();\n        var disValue = enable ? 'none' : '';\n        setStyleAttribute(headerTable.querySelector('colgroup').childNodes[0], { 'display': disValue });\n        setStyleAttribute(contentTable.querySelector('colgroup').childNodes[0], { 'display': disValue });\n        for (var i = 0; i < this.getRows().length; i++) {\n            var ele = rows[i].firstElementChild;\n            enable ? addClass([ele], 'e-hide') : removeClass([ele], ['e-hide']);\n        }\n        for (var j = 0; j < headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell').length; j++) {\n            var ele = headerRows[j];\n            enable ? addClass([ele], 'e-hide') : removeClass([ele], ['e-hide']);\n        }\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     * ```typescript\n     * <div id=\"Grid\"></div>\n     * <script>\n     * let gridObj: Grid = new Grid({\n     *     dataSource: employeeData,\n     *     columns: [\n     *         { field: 'OrderID', headerText: 'Order ID', width:100 },\n     *         { field: 'EmployeeID', headerText: 'Employee ID' }],\n     *     dataBound: () => gridObj.autoFitColumns('EmployeeID')\n     * });\n     * gridObj.appendTo('#Grid');\n     * </script>\n     * ```\n     *\n     */\n    Grid.prototype.autoFitColumns = function (fieldNames) {\n        if (this.resizeModule) {\n            this.resizeModule.autoFitColumns(fieldNames);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.createColumnchooser = function (x, y, target) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.renderColumnChooser(x, y, target);\n        }\n    };\n    Grid.prototype.initializeServices = function () {\n        this.serviceLocator.register('widthService', this.widthService = new ColumnWidthService(this));\n        this.serviceLocator.register('cellRendererFactory', new CellRendererFactory);\n        this.serviceLocator.register('rendererFactory', new RendererFactory);\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n        this.serviceLocator.register('valueFormatter', this.valueFormatterService = new ValueFormatter(this.locale));\n        this.serviceLocator.register('showHideService', this.showHider = new ShowHide(this));\n        this.serviceLocator.register('ariaService', this.ariaService = new AriaService());\n        this.serviceLocator.register('focus', this.focusModule = new FocusStrategy(this));\n    };\n    Grid.prototype.processModel = function () {\n        var gCols = this.groupSettings.columns;\n        var sCols = this.sortSettings.columns;\n        var flag;\n        var j;\n        if (this.allowGrouping) {\n            var _loop_1 = function (i, len) {\n                j = 0;\n                for (var sLen = sCols.length; j < sLen; j++) {\n                    if (sCols[j].field === gCols[i]) {\n                        flag = true;\n                        break;\n                    }\n                }\n                if (!flag) {\n                    sCols.push({ field: gCols[i], direction: 'Ascending', isFromGroup: true });\n                }\n                else {\n                    if (this_1.allowSorting) {\n                        this_1.sortedColumns.push(sCols[j].field);\n                    }\n                    else {\n                        sCols[j].direction = 'Ascending';\n                    }\n                }\n                if (!this_1.groupSettings.showGroupedColumn) {\n                    var column = this_1.enableColumnVirtualization ?\n                        this_1.columns.filter(function (c) { return c.field === gCols[i]; })[0] : this_1.getColumnByField(gCols[i]);\n                    if (column) {\n                        column.visible = false;\n                    }\n                    else {\n                        this_1.log('initial_action', { moduleName: 'group', columnName: gCols[i] });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var i = 0, len = gCols.length; i < len; i++) {\n                _loop_1(i, len);\n            }\n        }\n        if (!gCols.length) {\n            for (var i = 0; i < sCols.length; i++) {\n                this.sortedColumns.push(sCols[i].field);\n            }\n        }\n        this.rowTemplateFn = templateCompiler(this.rowTemplate);\n        this.detailTemplateFn = templateCompiler(this.detailTemplate);\n        this.editTemplateFn = templateCompiler(this.editSettings.template);\n        this.editHeaderTemplateFn = templateCompiler(this.editSettings.headerTemplate);\n        this.editFooterTemplateFn = templateCompiler(this.editSettings.footerTemplate);\n        if (!isNullOrUndefined(this.parentDetails)) {\n            var value = isNullOrUndefined(this.parentDetails.parentKeyFieldValue) ? 'undefined' :\n                this.parentDetails.parentKeyFieldValue;\n            this.query.where(this.queryString, 'equal', value, true);\n        }\n        this.initForeignColumn();\n    };\n    Grid.prototype.initForeignColumn = function () {\n        if (this.isForeignKeyEnabled(this.getColumns())) {\n            this.notify(events.initForeignKeyColumn, this.getForeignKeyColumns());\n        }\n    };\n    Grid.prototype.gridRender = function () {\n        this.updateRTL();\n        if (this.enableHover) {\n            this.element.classList.add('e-gridhover');\n        }\n        if (Browser.isDevice) {\n            this.element.classList.add('e-device');\n        }\n        if (this.rowHeight) {\n            this.element.classList.add('e-grid-min-height');\n        }\n        classList(this.element, ['e-responsive', 'e-default'], []);\n        var rendererFactory = this.serviceLocator.getService('rendererFactory');\n        this.headerModule = rendererFactory.getRenderer(RenderType.Header);\n        this.contentModule = rendererFactory.getRenderer(RenderType.Content);\n        this.printModule = new Print(this, this.scrollModule);\n        this.clipboardModule = new Clipboard(this);\n        this.renderModule.render();\n        this.eventInitializer();\n        this.createGridPopUpElement();\n        this.widthService.setWidthToColumns();\n        this.updateGridLines();\n        this.applyTextWrap();\n        this.createTooltip(); //for clip mode ellipsis\n        this.enableBoxSelection();\n    };\n    Grid.prototype.dataReady = function () {\n        this.scrollModule.setWidth();\n        this.scrollModule.setHeight();\n        if (this.height !== 'auto') {\n            this.scrollModule.setPadding();\n        }\n    };\n    Grid.prototype.updateRTL = function () {\n        if (this.enableRtl) {\n            this.element.classList.add('e-rtl');\n        }\n        else {\n            this.element.classList.remove('e-rtl');\n        }\n    };\n    Grid.prototype.createGridPopUpElement = function () {\n        var popup = this.createElement('div', { className: 'e-gridpopup', styles: 'display:none;' });\n        var content = this.createElement('div', { className: 'e-content', attrs: { tabIndex: '-1' } });\n        append([content, this.createElement('div', { className: 'e-uptail e-tail' })], popup);\n        content.appendChild(this.createElement('span'));\n        append([content, this.createElement('div', { className: 'e-downtail e-tail' })], popup);\n        this.element.appendChild(popup);\n    };\n    Grid.prototype.updateGridLines = function () {\n        classList(this.element, [], ['e-verticallines', 'e-horizontallines', 'e-hidelines', 'e-bothlines']);\n        switch (this.gridLines) {\n            case 'Horizontal':\n                this.element.classList.add('e-horizontallines');\n                break;\n            case 'Vertical':\n                this.element.classList.add('e-verticallines');\n                break;\n            case 'None':\n                this.element.classList.add('e-hidelines');\n                break;\n            case 'Both':\n                this.element.classList.add('e-bothlines');\n                break;\n        }\n        this.updateResizeLines();\n    };\n    Grid.prototype.updateResizeLines = function () {\n        if (this.allowResizing &&\n            !(this.gridLines === 'Vertical' || this.gridLines === 'Both')) {\n            this.element.classList.add('e-resize-lines');\n        }\n        else {\n            this.element.classList.remove('e-resize-lines');\n        }\n    };\n    /**\n     * The function is used to apply text wrap\n     * @return {void}\n     * @hidden\n     */\n    Grid.prototype.applyTextWrap = function () {\n        if (this.allowTextWrap) {\n            var headerRows = [].slice.call(this.element.querySelectorAll('.e-columnheader'));\n            switch (this.textWrapSettings.wrapMode) {\n                case 'Header':\n                    wrap(this.element, false);\n                    wrap(this.getContent(), false);\n                    wrap(headerRows, true);\n                    break;\n                case 'Content':\n                    wrap(this.getContent(), true);\n                    wrap(this.element, false);\n                    wrap(headerRows, false);\n                    break;\n                default:\n                    wrap(this.element, true);\n                    wrap(this.getContent(), false);\n                    wrap(headerRows, false);\n            }\n            if (this.textWrapSettings.wrapMode !== 'Content') {\n                this.notify(events.refreshHandlers, {});\n            }\n        }\n    };\n    /**\n     * The function is used to remove text wrap\n     * @return {void}\n     * @hidden\n     */\n    Grid.prototype.removeTextWrap = function () {\n        wrap(this.element, false);\n        var headerRows = [].slice.call(this.element.querySelectorAll('.e-columnheader'));\n        wrap(headerRows, false);\n        wrap(this.getContent(), false);\n        if (this.textWrapSettings.wrapMode !== 'Content') {\n            this.notify(events.refreshHandlers, {});\n        }\n    };\n    /**\n     * The function is used to add Tooltip to the grid cell that has ellipsiswithtooltip clip mode.\n     * @return {void}\n     * @hidden\n     */\n    Grid.prototype.createTooltip = function () {\n        this.toolTipObj = new Tooltip({ opensOn: 'custom', content: '' }, this.element);\n    };\n    /** @hidden */\n    Grid.prototype.freezeRefresh = function () {\n        if (this.enableVirtualization) {\n            this.pageSettings.currentPage = 1;\n        }\n        this.componentRefresh();\n    };\n    Grid.prototype.getTooltipStatus = function (element) {\n        var width;\n        var headerTable = this.getHeaderTable();\n        var contentTable = this.getContentTable();\n        var headerDivTag = 'e-gridheader';\n        var contentDivTag = 'e-gridcontent';\n        var htable = this.createTable(headerTable, headerDivTag, 'header');\n        var ctable = this.createTable(headerTable, headerDivTag, 'content');\n        var td = element;\n        var table = element.classList.contains('e-headercell') ? htable : ctable;\n        var ele = element.classList.contains('e-headercell') ? 'th' : 'tr';\n        table.querySelector(ele).className = element.className;\n        table.querySelector(ele).innerHTML = element.innerHTML;\n        width = table.querySelector(ele).getBoundingClientRect().width;\n        document.body.removeChild(htable);\n        document.body.removeChild(ctable);\n        if (width > element.getBoundingClientRect().width) {\n            return true;\n        }\n        return false;\n    };\n    Grid.prototype.mouseMoveHandler = function (e) {\n        if (this.isEllipsisTooltip()) {\n            var element = parentsUntil(e.target, 'e-ellipsistooltip');\n            if (this.prevElement !== element || e.type === 'mouseout') {\n                this.toolTipObj.close();\n            }\n            var tagName = e.target.tagName;\n            var elemNames = ['A', 'BUTTON', 'INPUT'];\n            if (element && e.type !== 'mouseout' && !(Browser.isDevice && elemNames.indexOf(tagName) !== -1)) {\n                if (element.getAttribute('aria-describedby')) {\n                    return;\n                }\n                if (this.getTooltipStatus(element)) {\n                    if (element.getElementsByClassName('e-headertext').length) {\n                        this.toolTipObj.content = element.getElementsByClassName('e-headertext')[0].innerText;\n                    }\n                    else {\n                        this.toolTipObj.content = element.innerText;\n                    }\n                    this.prevElement = element;\n                    this.toolTipObj.open(element);\n                }\n            }\n        }\n        this.hoverFrozenRows(e);\n    };\n    /** @hidden */\n    Grid.prototype.hoverFrozenRows = function (e) {\n        if (this.isFrozenGrid()) {\n            var row = parentsUntil(e.target, 'e-row');\n            if ([].slice.call(this.element.querySelectorAll('.e-frozenhover')).length && e.type === 'mouseout') {\n                var rows = [].slice.call(this.element.querySelectorAll('.e-frozenhover'));\n                for (var i = 0; i < rows.length; i++) {\n                    rows[i].classList.remove('e-frozenhover');\n                }\n            }\n            else if (row) {\n                var rows = [].slice.call(this.element.querySelectorAll('tr[aria-rowindex=\"' + row.getAttribute('aria-rowindex') + '\"]'));\n                rows.splice(rows.indexOf(row), 1);\n                for (var i = 0; i < rows.length; i++) {\n                    if (row.getAttribute('aria-selected') != 'true' && rows[i]) {\n                        rows[i].classList.add('e-frozenhover');\n                    }\n                    else if (rows[i]) {\n                        rows[i].classList.remove('e-frozenhover');\n                    }\n                }\n            }\n        }\n    };\n    Grid.prototype.isEllipsisTooltip = function () {\n        var cols = this.getColumns();\n        if (this.clipMode === 'EllipsisWithTooltip') {\n            return true;\n        }\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[i].clipMode === 'EllipsisWithTooltip') {\n                return true;\n            }\n        }\n        return false;\n    };\n    Grid.prototype.scrollHandler = function () {\n        if (this.isEllipsisTooltip()) {\n            this.toolTipObj.close();\n        }\n    };\n    /**\n     * To create table for ellipsiswithtooltip\n     * @hidden\n     */\n    Grid.prototype.createTable = function (table, tag, type) {\n        var myTableDiv = this.createElement('div');\n        myTableDiv.className = this.element.className;\n        myTableDiv.style.cssText = 'display: inline-block;visibility:hidden;position:absolute';\n        var mySubDiv = this.createElement('div');\n        mySubDiv.className = tag;\n        var myTable = this.createElement('table');\n        myTable.className = table.className;\n        myTable.style.cssText = 'table-layout: auto;width: auto';\n        var ele = (type === 'header') ? 'th' : 'td';\n        var myTr = this.createElement('tr');\n        var mytd = this.createElement(ele);\n        myTr.appendChild(mytd);\n        myTable.appendChild(myTr);\n        mySubDiv.appendChild(myTable);\n        myTableDiv.appendChild(mySubDiv);\n        document.body.appendChild(myTableDiv);\n        return myTableDiv;\n    };\n    Grid.prototype.onKeyPressed = function (e) {\n        if (e.action === 'tab' || e.action === 'shiftTab') {\n            this.toolTipObj.close();\n        }\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    Grid.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);\n        EventHandler.add(this.element, 'dblclick', this.dblClickHandler, this);\n        EventHandler.add(this.element, 'keydown', this.keyPressHandler, this);\n        /* tslint:disable-next-line:no-any */\n        EventHandler.add(window, 'resize', this.resetIndentWidth, this);\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        EventHandler.add(this.getContent().firstElementChild, 'scroll', this.scrollHandler, this);\n        EventHandler.add(this.element, 'mousemove', this.mouseMoveHandler, this);\n        EventHandler.add(this.element, 'mouseout', this.mouseMoveHandler, this);\n        EventHandler.add(this.getContent(), 'touchstart', this.tapEvent, this);\n        EventHandler.add(document.body, 'keydown', this.keyDownHandler, this);\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    Grid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n        EventHandler.remove(this.element, 'touchend', this.mouseClickHandler);\n        EventHandler.remove(this.element, 'focusout', this.focusOutHandler);\n        EventHandler.remove(this.element, 'dblclick', this.dblClickHandler);\n        EventHandler.remove(this.getContent().firstElementChild, 'scroll', this.scrollHandler);\n        EventHandler.remove(this.element, 'mousemove', this.mouseMoveHandler);\n        EventHandler.remove(this.element, 'mouseout', this.mouseMoveHandler);\n        EventHandler.remove(this.element, 'keydown', this.keyPressHandler);\n        EventHandler.remove(this.getContent(), 'touchstart', this.tapEvent);\n        EventHandler.remove(document.body, 'keydown', this.keyDownHandler);\n        /* tslint:disable-next-line:no-any */\n        EventHandler.remove(window, 'resize', this.resetIndentWidth);\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.addListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.on(events.dataReady, this.dataReady, this);\n        this.on(events.contentReady, this.recalcIndentWidth, this);\n        this.on(events.headerRefreshed, this.recalcIndentWidth, this);\n        this.dataBoundFunction = this.refreshMediaCol.bind(this);\n        this.addEventListener(events.dataBound, this.dataBoundFunction);\n        this.on(events.keyPressed, this.onKeyPressed, this);\n        this.on(events.contentReady, this.blazorTemplate, this);\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off(events.dataReady, this.dataReady);\n        this.off(events.contentReady, this.recalcIndentWidth);\n        this.off(events.headerRefreshed, this.recalcIndentWidth);\n        this.removeEventListener(events.dataBound, this.dataBoundFunction);\n        this.off(events.keyPressed, this.onKeyPressed);\n    };\n    Grid.prototype.blazorTemplate = function () {\n        if (isBlazor()) {\n            if (this.pageSettings.template) {\n                updateBlazorTemplate(this.element.id + \"_template\", 'Template', this.pageSettings);\n            }\n            for (var i = 0; i < this.columnModel.length; i++) {\n                if (this.columnModel[i].template) {\n                    updateBlazorTemplate(this.element.id + this.columnModel[i].uid, 'Template', this.columnModel[i], false);\n                }\n                if (this.columnModel[i].headerTemplate) {\n                    updateBlazorTemplate(this.element.id + this.columnModel[i].uid + 'headerTemplate', 'HeaderTemplate', this.columnModel[i], false);\n                }\n                if (this.filterSettings.type == 'FilterBar' && this.columnModel[i].filterTemplate) {\n                    var fieldName = this.columnModel[i].field;\n                    var tempID = this.element.id + this.columnModel[i].uid + 'filterTemplate';\n                    var filteredColumns = this.filterSettings.columns;\n                    for (var k = 0; k < filteredColumns.length; k++) {\n                        if (fieldName == filteredColumns[k].field) {\n                            blazorTemplates[tempID][0][fieldName] = filteredColumns[k].value;\n                        }\n                    }\n                    updateBlazorTemplate(this.element.id + this.columnModel[i].uid + 'filterTemplate', 'FilterTemplate', this.columnModel[i], false);\n                }\n                if (this.filterSettings.type != 'FilterBar' && this.columnModel[i].filterTemplate) {\n                    updateBlazorTemplate(this.element.id + this.columnModel[i].uid + 'filterTemplate', 'FilterTemplate', this.columnModel[i]);\n                }\n            }\n            if (this.groupSettings.captionTemplate) {\n                updateBlazorTemplate(this.element.id + 'captionTemplate', 'CaptionTemplate', this.groupSettings);\n            }\n            var guid = 'guid';\n            for (var k = 0; k < this.aggregates.length; k++) {\n                for (var j = 0; j < this.aggregates[k].columns.length; j++) {\n                    if (this.aggregates[k].columns[j].footerTemplate) {\n                        updateBlazorTemplate(this.element.id + this.aggregates[k].columns[j][guid] + 'footerTemplate', 'FooterTemplate', this.aggregates[k].columns[j]);\n                    }\n                    if (this.aggregates[k].columns[j].groupFooterTemplate) {\n                        updateBlazorTemplate(this.element.id + this.aggregates[k].columns[j][guid] + 'groupFooterTemplate', 'GroupFooterTemplate', this.aggregates[k].columns[j]);\n                    }\n                    if (this.aggregates[k].columns[j].groupCaptionTemplate) {\n                        updateBlazorTemplate(this.element.id + this.aggregates[k].columns[j][guid] + 'groupCaptionTemplate', 'GroupCaptionTemplate', this.aggregates[k].columns[j]);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Get current visible data of grid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    Grid.prototype.getCurrentViewRecords = function () {\n        if (isGroupAdaptive(this)) {\n            return isNullOrUndefined(this.currentViewData.records) ?\n                this.currentViewData : this.currentViewData.records;\n        }\n        if (this.groupSettings.enableLazyLoading) {\n            return this.currentViewData;\n        }\n        ;\n        return (this.allowGrouping && this.groupSettings.columns.length && this.currentViewData.length && this.currentViewData.records) ?\n            this.currentViewData.records : this.currentViewData;\n    };\n    Grid.prototype.mouseClickHandler = function (e) {\n        if (this.isChildGrid(e) || (parentsUntil(e.target, 'e-gridpopup') && e.touches) ||\n            this.element.querySelectorAll('.e-cloneproperties').length || this.checkEdit(e)) {\n            return;\n        }\n        if (((!this.allowRowDragAndDrop && (parentsUntil(e.target, 'e-gridcontent') ||\n            e.target.tagName === 'TD')) || (!(this.allowGrouping || this.allowReordering) &&\n            parentsUntil(e.target, 'e-gridheader'))) && e.touches) {\n            return;\n        }\n        if (parentsUntil(e.target, 'e-gridheader') && this.allowRowDragAndDrop &&\n            !(parentsUntil(e.target, 'e-filterbarcell'))) {\n            e.preventDefault();\n        }\n        var args = this.getRowInfo(e.target);\n        var cancel = 'cancel';\n        args[cancel] = false;\n        var isDataRow = false;\n        var tr = closest(e.target, 'tr');\n        if (tr && tr.getAttribute('data-uid')) {\n            var rowObj = this.getRowObjectFromUID(tr.getAttribute('data-uid'));\n            isDataRow = rowObj ? rowObj.isDataRow : false;\n        }\n        if (isBlazor()) {\n            var clonedColumn = extend({}, args.column);\n            args = { rowData: args.rowData, rowIndex: args.rowIndex,\n                cellIndex: args.cellIndex, column: clonedColumn };\n        }\n        if (isDataRow) {\n            this.trigger(events.recordClick, args);\n        }\n        this.notify(events.click, e);\n    };\n    Grid.prototype.checkEdit = function (e) {\n        var tr = parentsUntil(e.target, 'e-row');\n        var isEdit = this.editSettings.mode !== 'Batch' &&\n            this.isEdit && tr && (tr.classList.contains('e-editedrow') || tr.classList.contains('e-addedrow'));\n        return !parentsUntil(e.target, 'e-unboundcelldiv') && (isEdit || (parentsUntil(e.target, 'e-rowcell') &&\n            parentsUntil(e.target, 'e-rowcell').classList.contains('e-editedbatchcell')));\n    };\n    Grid.prototype.dblClickHandler = function (e) {\n        var grid = parentsUntil(e.target, 'e-grid');\n        if (isNullOrUndefined(grid) || grid.id !== this.element.id || closest(e.target, '.e-unboundcelldiv')) {\n            return;\n        }\n        var dataRow = false;\n        var tr = closest(e.target, 'tr');\n        if (tr && tr.getAttribute('data-uid')) {\n            var rowObj = this.getRowObjectFromUID(tr.getAttribute('data-uid'));\n            dataRow = rowObj ? rowObj.isDataRow : false;\n        }\n        var args = this.getRowInfo(e.target);\n        args.target = e.target;\n        if (dataRow) {\n            this.trigger(events.recordDoubleClick, args);\n        }\n        this.notify(events.dblclick, e);\n    };\n    Grid.prototype.focusOutHandler = function (e) {\n        if (this.isChildGrid(e)) {\n            return;\n        }\n        if (!parentsUntil(e.target, 'e-grid')) {\n            this.element.querySelector('.e-gridpopup').style.display = 'None';\n        }\n        var filterClear = this.element.querySelector('.e-cancel:not(.e-hide)');\n        if (filterClear) {\n            filterClear.classList.add('e-hide');\n        }\n        var relatedTarget = e.relatedTarget;\n        var ariaOwns = relatedTarget ? relatedTarget.getAttribute('aria-owns') : null;\n        if ((!relatedTarget || (!parentsUntil(relatedTarget, 'e-grid') &&\n            (!isNullOrUndefined(ariaOwns) &&\n                (ariaOwns)) !== e.target.getAttribute('aria-owns')))\n            && !this.keyPress && this.isEdit && !Browser.isDevice) {\n            if (this.editSettings.mode === 'Batch') {\n                this.editModule.saveCell();\n                this.notify(events.editNextValCell, {});\n            }\n            if (this.editSettings.mode === 'Normal') {\n                this.editModule.editFormValidate();\n            }\n        }\n        this.keyPress = false;\n    };\n    Grid.prototype.isChildGrid = function (e) {\n        var gridElement = parentsUntil(e.target, 'e-grid');\n        if (gridElement && gridElement.id !== this.element.id) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.mergePersistGridData = function (persistedData) {\n        var data = this.getLocalData();\n        if (!(isNullOrUndefined(data) || (data === '')) || !isNullOrUndefined(persistedData)) {\n            var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n            if (this.enableVirtualization) {\n                dataObj.pageSettings.currentPage = 1;\n            }\n            var keys = Object.keys(dataObj);\n            this.isProtectedOnChange = true;\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if ((typeof this[key] === 'object') && !isNullOrUndefined(this[key])) {\n                    if (Array.isArray(this[key]) && key === 'columns') {\n                        if (!(isBlazor() && this.isServerRendered)) {\n                            setColumnIndex(this[key]);\n                        }\n                        this.mergeColumns(dataObj[key], this[key]);\n                        this[key] = dataObj[key];\n                    }\n                    else {\n                        extend(this[key], dataObj[key]);\n                    }\n                }\n                else {\n                    this[key] = dataObj[key];\n                }\n            }\n            this.isProtectedOnChange = false;\n        }\n    };\n    Grid.prototype.mergeColumns = function (storedColumn, columns) {\n        var storedColumns = storedColumn;\n        var _loop_2 = function (i) {\n            var localCol = columns.filter(function (tCol) { return tCol.index === storedColumns[i].index; })[0];\n            if (!isNullOrUndefined(localCol)) {\n                if (localCol.columns && localCol.columns.length) {\n                    this_2.mergeColumns(storedColumns[i].columns, localCol.columns);\n                    storedColumns[i] = extend(localCol, storedColumns[i], {}, true);\n                }\n                else {\n                    if (isBlazor()) {\n                        var guid = 'guid';\n                        storedColumns[i][guid] = localCol[guid];\n                        storedColumns[i].uid = localCol.uid;\n                    }\n                    storedColumns[i] = extend(localCol, storedColumns[i], {}, true);\n                }\n            }\n        };\n        var this_2 = this;\n        for (var i = 0; i < storedColumns.length; i++) {\n            _loop_2(i);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.isDetail = function () {\n        return !isNullOrUndefined(this.detailTemplate) || !isNullOrUndefined(this.childGrid);\n    };\n    Grid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    Grid.prototype.isForeignKeyEnabled = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isForeignKeyEnabled(col.columns);\n            }\n            return !!(col.dataSource && col.foreignKeyValue);\n        });\n    };\n    Grid.prototype.keyPressHandler = function (e) {\n        var presskey = extend(e, { cancel: false, });\n        this.trigger(\"keyPressed\", presskey);\n        if (presskey.cancel === true) {\n            e.stopImmediatePropagation();\n        }\n    };\n    Grid.prototype.keyDownHandler = function (e) {\n        if (e.altKey) {\n            if (e.keyCode === 74) { //alt j\n                if (this.keyA) { //alt A J\n                    this.notify(events.groupCollapse, { target: e.target, collapse: false });\n                    this.keyA = false;\n                }\n                else {\n                    this.focusModule.focusHeader();\n                    this.focusModule.addOutline();\n                }\n            }\n            if (e.keyCode === 87) { //alt w\n                this.focusModule.focusContent();\n                this.focusModule.addOutline();\n            }\n            if (e.keyCode === 65) { //alt A\n                this.keyA = true;\n            }\n            if (e.keyCode === 72 && this.keyA) { //alt A H\n                this.notify(events.groupCollapse, { target: e.target, collapse: true });\n                this.keyA = false;\n            }\n        }\n    };\n    Grid.prototype.keyActionHandler = function (e) {\n        if (this.isChildGrid(e) ||\n            (this.isEdit && e.action !== 'escape' && e.action !== 'enter' && e.action !== 'shiftEnter'\n                && e.action !== 'tab' && e.action !== 'shiftTab')) {\n            return;\n        }\n        else {\n            this.keyPress = true;\n        }\n        if (this.allowKeyboard) {\n            if (e.action === 'ctrlPlusP') {\n                e.preventDefault();\n                this.print();\n            }\n            this.notify(events.keyPressed, e);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.setInjectedModules = function (modules) {\n        this.injectedModules = modules;\n    };\n    Grid.prototype.updateColumnObject = function () {\n        prepareColumns(this.columns, this.enableColumnVirtualization, this);\n        if (!(isBlazor() && this.isServerRendered)) {\n            setColumnIndex(this.columns);\n        }\n        this.initForeignColumn();\n        this.notify(events.autoCol, {});\n    };\n    /**\n     * Gets the foreign columns from Grid.\n     * @return {Column[]}\n     * @blazorType List<GridColumn>\n     */\n    Grid.prototype.getForeignKeyColumns = function () {\n        return this.getColumns().filter(function (col) {\n            return col.isForeignColumn();\n        });\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getRowHeight = function () {\n        return this.rowHeight ? this.rowHeight : getRowHeight(this.element);\n    };\n    /**\n     * Refreshes the Grid column changes.\n     */\n    Grid.prototype.refreshColumns = function () {\n        this.setFrozenCount();\n        var fCnt = this.getContent().querySelector('.e-frozen-left-content');\n        var frCnt = this.getContent().querySelector('.e-frozen-right-content');\n        var isColFrozen = !this.frozenRightCount && !this.frozenLeftCount;\n        var isFrozen = this.getFrozenColumns() !== 0;\n        if (!isFrozen && ((!fCnt && this.frozenLeftCount) || (!frCnt && this.frozenRightCount) || (fCnt && !this.frozenLeftCount)\n            || (frCnt && !this.frozenRightCount))) {\n            this.tableIndex = 0;\n            this.tablesCount = 1;\n            if (this.enableColumnVirtualization) {\n                this.columnModel = [];\n                this.updateColumnModel(this.columns);\n            }\n            this.freezeRefresh();\n        }\n        else if (isColFrozen && ((this.getFrozenColumns() === 1 && !fCnt) || (this.getFrozenColumns() === 0 && fCnt))) {\n            this.tableIndex = 0;\n            this.tablesCount = 1;\n            if (this.enableColumnVirtualization) {\n                this.columnModel = [];\n                this.updateColumnModel(this.columns);\n            }\n            this.freezeRefresh();\n        }\n        else {\n            this.isPreventScrollEvent = true;\n            this.updateColumnObject();\n            this.checkLockColumns(this.getColumns());\n            this.refresh();\n            if (this.isFrozenGrid()) {\n                var mTbl = this.contentModule.getMovableContent().querySelector('.e-table');\n                remove(mTbl.querySelector('colgroup'));\n                var colGroup = ((this.getHeaderContent()\n                    .querySelector('.e-movableheader').querySelector('colgroup')).cloneNode(true));\n                mTbl.insertBefore(colGroup, mTbl.querySelector('tbody'));\n                if (this.getFrozenMode() === 'Left-Right') {\n                    var frTbl = this.contentModule.getFrozenRightContent().querySelector('.e-table');\n                    remove(frTbl.querySelector('colgroup'));\n                    var colGrp = ((this.getHeaderContent()\n                        .querySelector('.e-frozen-right-header').querySelector('colgroup')).cloneNode(true));\n                    frTbl.insertBefore(colGrp, frTbl.querySelector('tbody'));\n                }\n            }\n        }\n        if (this.isFrozenGrid()) {\n            var left = this.getContent().querySelector('.e-movablescrollbar').scrollLeft;\n            this.headerModule.getMovableHeader().scrollLeft = left;\n            this.contentModule.getMovableContent().scrollLeft = left;\n        }\n    };\n    /**\n     * Export Grid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    Grid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, false, isBlob);\n            return null;\n        }\n        return this.excelExportModule ?\n            this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, false, isBlob) : null;\n    };\n    /**\n     * Export Grid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    Grid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, true, isBlob);\n            return null;\n        }\n        return this.excelExportModule ?\n            this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, true, isBlob) : null;\n    };\n    /**\n     * Export Grid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    Grid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        if (isBlazor()) {\n            this.pdfExportModule.Map(this, pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            return null;\n        }\n        return this.pdfExportModule ? this.pdfExportModule.Map(this, pdfExportProperties, isMultipleExport, pdfDoc, isBlob) : null;\n    };\n    /**\n     * Groups a column by column name.\n     * @param  {string} columnName - Defines the column name to group.\n     * @return {void}\n     */\n    Grid.prototype.groupColumn = function (columnName) {\n        if (this.groupModule) {\n            this.groupModule.groupColumn(columnName);\n        }\n    };\n    /**\n     * Expands all the grouped rows of the Grid.\n     * @return {void}\n     */\n    Grid.prototype.groupExpandAll = function () {\n        if (this.groupModule) {\n            this.groupModule.expandAll();\n        }\n    };\n    /**\n    * Collapses all the grouped rows of the Grid.\n    * @return {void}\n    */\n    Grid.prototype.groupCollapseAll = function () {\n        if (this.groupModule) {\n            this.groupModule.collapseAll();\n        }\n    };\n    /**\n     * Expands or collapses grouped rows by target element.\n     * @param  {Element} target - Defines the target element of the grouped row.\n     * @return {void}\n     */\n    // public expandCollapseRows(target: Element): void {\n    //     if (this.groupModule) {\n    //         this.groupModule.expandCollapseRows(target);\n    //     }\n    // }\n    /**\n     * Clears all the grouped columns of the Grid.\n     * @return {void}\n     */\n    Grid.prototype.clearGrouping = function () {\n        if (this.groupModule) {\n            this.groupModule.clearGrouping();\n        }\n    };\n    /**\n     * Ungroups a column by column name.\n     * @param  {string} columnName - Defines the column name to ungroup.\n     * {% codeBlock src='grid/ungroupColumn/index.md' %}{% endcodeBlock %}\n     * @return {void}\n     */\n    Grid.prototype.ungroupColumn = function (columnName) {\n        if (this.groupModule) {\n            this.groupModule.ungroupColumn(columnName);\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    Grid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    Grid.prototype.scrollRefresh = function () {\n        var _this = this;\n        var refresh = function () {\n            _this.scrollModule.refresh();\n            _this.off(events.contentReady, refresh);\n        };\n        this.on(events.contentReady, refresh, this);\n    };\n    /**\n     * Collapses a detail row with the given target.\n     * @param  {Element} target - Defines the expanded element to collapse.\n     * @return {void}\n     */\n    // public detailCollapse(target: number | Element): void {\n    //     if (this.detailRowModule) {\n    //         this.detailRowModule.collapse(target);\n    //     }\n    // }\n    /**\n     * Collapses all the detail rows of the Grid.\n     * @return {void}\n     */\n    Grid.prototype.detailCollapseAll = function () {\n        if (this.detailRowModule) {\n            this.detailRowModule.collapseAll();\n        }\n    };\n    /**\n     * Expands a detail row with the given target.\n     * @param  {Element} target - Defines the collapsed element to expand.\n     * @return {void}\n     */\n    // public detailExpand(target: number | Element): void {\n    //     if (this.detailRowModule) {\n    //         this.detailRowModule.expand(target);\n    //     }\n    // }\n    /**\n    * Expands all the detail rows of the Grid.\n    * @return {void}\n    */\n    Grid.prototype.detailExpandAll = function () {\n        if (this.detailRowModule) {\n            this.detailRowModule.expandAll();\n        }\n    };\n    /**\n     * Deselects the currently selected cells.\n     * @return {void}\n     */\n    Grid.prototype.clearCellSelection = function () {\n        if (this.selectionModule) {\n            this.selectionModule.clearCellSelection();\n        }\n    };\n    /**\n     * Deselects the currently selected rows.\n     * @return {void}\n     */\n    Grid.prototype.clearRowSelection = function () {\n        if (this.selectionModule) {\n            this.selectionModule.clearRowSelection();\n        }\n    };\n    /**\n     * Selects a collection of cells by row and column indexes.\n     * @param  {ISelectedCell[]} rowCellIndexes - Specifies the row and column indexes.\n     * @return {void}\n     */\n    Grid.prototype.selectCells = function (rowCellIndexes) {\n        if (this.selectionModule) {\n            this.selectionModule.selectCells(rowCellIndexes);\n        }\n    };\n    /**\n     * Selects a range of rows from start and end row indexes.\n     * @param  {number} startIndex - Specifies the start row index.\n     * @param  {number} endIndex - Specifies the end row index.\n     * @return {void}\n     */\n    Grid.prototype.selectRowsByRange = function (startIndex, endIndex) {\n        if (this.selectionModule) {\n            this.selectionModule.selectRowsByRange(startIndex, endIndex);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.isContextMenuOpen = function () {\n        return this.contextMenuModule && this.contextMenuModule.isOpen;\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.ensureModuleInjected = function (module) {\n        return this.getInjectedModules().indexOf(module) >= 0;\n    };\n    /**\n     * Destroys the given template reference.\n     * @param {string[]} propertyNames - Defines the collection of template name.\n     */\n    //tslint:disable-next-line:no-any\n    Grid.prototype.destroyTemplate = function (propertyNames, index) {\n        this.clearTemplate(propertyNames, index);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    Grid.prototype.log = function (type, args) {\n        this.loggerModule ? this.loggerModule.log(type, args) : (function () { return 0; })();\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.applyBiggerTheme = function (element) {\n        if (this.element.classList.contains('e-bigger')) {\n            element.classList.add('e-bigger');\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getPreviousRowData = function () {\n        var previousRowData = this.getRowsObject()[this.getRows().length - 1].data;\n        return previousRowData;\n    };\n    /**\n     * Hides the scrollbar placeholder of Grid content when grid content is not overflown.\n     * @return {void}\n     */\n    Grid.prototype.hideScroll = function () {\n        var content = this.getContent().querySelector('.e-content');\n        var scrollBar = this.getContent().querySelector('.e-scrollbar');\n        if (content.scrollHeight <= content.clientHeight) {\n            this.scrollModule.removePadding();\n            content.style.overflowY = 'auto';\n        }\n        if (this.isFrozenGrid() && scrollBar) {\n            var mvblScrollBar = this.getContent().querySelector('.e-movablescrollbar');\n            var mvblChild = this.getContent().querySelector('.e-movablechild');\n            scrollBar.style.display = 'flex';\n            if (mvblScrollBar.offsetWidth >= mvblChild.offsetWidth) {\n                scrollBar.style.display = 'none';\n                this.notify(events.frozenHeight, 0);\n            }\n        }\n    };\n    /**\n     * Get row index by primary key or row data.\n     * @param  {string} value - Defines the primary key value.\n     * @param  {Object} value - Defines the row data.\n     */\n    Grid.prototype.getRowIndexByPrimaryKey = function (value) {\n        var pkName = this.getPrimaryKeyFieldNames()[0];\n        value = typeof value === 'object' ? value[pkName] : value;\n        for (var i = 0; i < this.getRowsObject().length; i++) {\n            if (this.getRowsObject()[i].data[pkName] === value) {\n                return this.getRowsObject()[i].index;\n            }\n        }\n        return -1;\n    };\n    ;\n    /**\n    * @hidden\n    */\n    // Need to have all columns while filtering with ColumnVirtualization.\n    Grid.prototype.grabColumnByFieldFromAllCols = function (field) {\n        var column;\n        this.columnModel = [];\n        this.updateColumnModel(this.columns);\n        var gCols = this.columnModel;\n        for (var i = 0; i < gCols.length; i++) {\n            if (field === gCols[i].field) {\n                column = gCols[i];\n            }\n        }\n        return column;\n    };\n    /**\n    * @hidden\n    */\n    // Need to have all columns while filtering with ColumnVirtualization.\n    Grid.prototype.grabColumnByUidFromAllCols = function (uid) {\n        var column;\n        this.columnModel = [];\n        this.updateColumnModel(this.columns);\n        var gCols = this.columnModel;\n        for (var i = 0; i < gCols.length; i++) {\n            if (uid === gCols[i].uid) {\n                column = gCols[i];\n            }\n        }\n        return column;\n    };\n    /**\n     * Get all filtered records from the Grid and it returns array of objects for the local dataSource, returns a promise object if the Grid has remote data.\n     * @return {Object[] | Promise<Object>}\n\n     */\n    Grid.prototype.getFilteredRecords = function () {\n        if (this.allowFiltering && this.filterSettings.columns.length) {\n            var query = this.renderModule.data.generateQuery(true);\n            if (this.dataSource && this.renderModule.data.isRemote() && this.dataSource instanceof DataManager) {\n                return this.renderModule.data.getData(this.dataSource, query);\n            }\n            else {\n                if (this.dataSource instanceof DataManager) {\n                    return this.dataSource.executeLocal(query);\n                }\n                else {\n                    return new DataManager(this.dataSource, query).executeLocal(query);\n                }\n            }\n        }\n        return [];\n    };\n    Grid.prototype.getUserAgent = function () {\n        var userAgent = Browser.userAgent.toLowerCase();\n        return /iphone|ipod|ipad/.test(userAgent);\n    };\n    /**\n     * @hidden\n     */\n    // Need to have all columns while filtering with ColumnVirtualization.\n    Grid.prototype.tapEvent = function (e) {\n        if (this.getUserAgent()) {\n            if (!Global.timer) {\n                Global.timer = setTimeout(function () {\n                    Global.timer = null;\n                }, 300);\n            }\n            else {\n                clearTimeout(Global.timer);\n                Global.timer = null;\n                this.dblClickHandler(e);\n                this.notify(events.doubleTap, e);\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getRowUid = function (prefix) {\n        return \"\" + prefix + this.rowUid++;\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getMovableVirtualContent = function () {\n        return this.getContent().querySelector('.e-movablecontent');\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getFrozenVirtualContent = function () {\n        return this.getContent().querySelector('.e-frozencontent');\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getMovableVirtualHeader = function () {\n        return this.getHeaderContent().querySelector('.e-movableheader');\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getFrozenVirtualHeader = function () {\n        return this.getHeaderContent().querySelector('.e-frozenheader');\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getRowElementByUID = function (uid) {\n        var rowEle;\n        var rows = [];\n        if (this.isFrozenGrid()) {\n            var fRows = [].slice.call(this.getFrozenVirtualContent().querySelector('tbody').children);\n            var mRows = [].slice.call(this.getMovableVirtualContent().querySelector('tbody').children);\n            var frozenRigtRows = [];\n            if (this.tablesCount === 3) {\n                frozenRigtRows = [].slice.call(this.getContent().querySelector('.e-frozen-right-content').querySelector('tbody').children);\n            }\n            if (this.frozenRows) {\n                rows = [].slice.call(this.getFrozenVirtualHeader().querySelector('tbody').children);\n                rows = rows.concat([].slice.call(this.getMovableVirtualHeader().querySelector('tbody').children));\n                if (this.tablesCount === 3) {\n                    var frHdr = this.getHeaderContent().querySelector('.e-frozen-right-header');\n                    rows = rows.concat([].slice.call(frHdr.querySelector('tbody').children)).concat(frozenRigtRows);\n                }\n                ;\n                rows = rows.concat(fRows).concat(mRows);\n            }\n            else {\n                rows = fRows.concat(mRows).concat(frozenRigtRows);\n            }\n        }\n        else {\n            var cntRows = [].slice.call(this.getContent().querySelector('tbody').children);\n            if (this.frozenRows) {\n                rows = [].slice.call(this.getHeaderContent().querySelector('tbody').children);\n                rows = rows.concat(cntRows);\n            }\n            else {\n                rows = cntRows;\n            }\n        }\n        for (var _i = 0, rows_2 = rows; _i < rows_2.length; _i++) {\n            var row = rows_2[_i];\n            if (row.getAttribute('data-uid') === uid) {\n                rowEle = row;\n                break;\n            }\n        }\n        return rowEle;\n    };\n    /**\n    * Gets the hidden columns from the Grid.\n    * @return {Column[]}\n    * @blazorType List<GridColumn>\n    */\n    Grid.prototype.getHiddenColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible === false) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     *  calculatePageSizeByParentHeight\n\n     */\n    Grid.prototype.calculatePageSizeByParentHeight = function (containerHeight) {\n        if (this.allowPaging) {\n            if ((this.allowTextWrap && this.textWrapSettings.wrapMode == 'Header') || (!this.allowTextWrap)) {\n                var pagesize = 0;\n                if (containerHeight.indexOf('%') != -1) {\n                    containerHeight = parseInt(containerHeight) / 100 * this.element.clientHeight;\n                }\n                var nonContentHeight = this.getNoncontentHeight() + this.getRowHeight();\n                if (containerHeight > nonContentHeight) {\n                    var contentHeight = 0;\n                    contentHeight = containerHeight - this.getNoncontentHeight();\n                    pagesize = (contentHeight / this.getRowHeight());\n                }\n                if (pagesize > 0) {\n                    return Math.floor(pagesize);\n                }\n            }\n        }\n        return 0;\n    };\n    Grid.prototype.getNoncontentHeight = function () {\n        var height = 0;\n        if (!isNullOrUndefined(this.getHeaderContent().clientHeight)) {\n            height += this.getHeaderContent().clientHeight;\n        }\n        if (this.toolbar && !isNullOrUndefined(this.element.querySelector('.e-toolbar').clientHeight)) {\n            height += this.element.querySelector('.e-toolbar').clientHeight;\n        }\n        if (this.allowPaging && !isNullOrUndefined(this.element.querySelector('.e-gridpager').clientHeight)) {\n            height += this.element.querySelector('.e-gridpager').clientHeight;\n        }\n        if (this.showColumnChooser && !isNullOrUndefined(this.element.querySelector(\".e-columnheader\").clientHeight)) {\n            height += this.element.querySelector(\".e-columnheader\").clientHeight;\n        }\n        if (this.allowGrouping && this.groupSettings.showDropArea && !isNullOrUndefined(this.element.querySelector('.e-groupdroparea').clientHeight)) {\n            height += this.element.querySelector('.e-groupdroparea').clientHeight;\n        }\n        if (this.aggregates.length > 0 && !isNullOrUndefined(this.element.querySelector('.e-summaryrow').clientHeight)) {\n            for (var i = 0; i < this.element.querySelectorAll('.e-summaryrow').length; i++) {\n                height += this.element.querySelectorAll('.e-summaryrow')[i].clientHeight;\n            }\n        }\n        return height;\n    };\n    /**\n     *To perform aggregate operation on a column.\n     *@param  {AggregateColumnModel} summaryCol - Pass Aggregate Column details.\n     *@param  {Object} summaryData - Pass JSON Array for which its field values to be calculated.\n\n     */\n    Grid.prototype.getSummaryValues = function (summaryCol, summaryData) {\n        return DataUtil.aggregates[summaryCol.type.toLowerCase()](summaryData, summaryCol.field);\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.isCollapseStateEnabled = function () {\n        var isExpanded = 'isExpanded';\n        return this[isExpanded] === false;\n    };\n    /**\n     * @param {number} key - Defines the primary key value.\n     * @param {Object} value - Defines the row data.\n\n     */\n    Grid.prototype.updateRowValue = function (key, rowData) {\n        var args = {\n            requestType: 'save', data: rowData,\n        };\n        this.showSpinner();\n        this.notify(events.updateData, args);\n        this.refresh();\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.setForeignKeyData = function () {\n        this.dataBind();\n        var colpending = this.getDataModule().getForeignKeyDataState();\n        if (colpending.isPending) {\n            this.getDataModule().setForeignKeyDataState({});\n            colpending.resolver();\n        }\n        else {\n            this.getDataModule().setForeignKeyDataState({ isDataChanged: false });\n            if (this.contentModule || this.headerModule) {\n                this.renderModule.render();\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.resetFilterDlgPosition = function (field) {\n        var header = this.getColumnHeaderByField(field);\n        if (header) {\n            var target = header.querySelector('.e-filtermenudiv');\n            var filterDlg = this.element.querySelector('.e-filter-popup');\n            if (target && filterDlg) {\n                var gClient = this.element.getBoundingClientRect();\n                var fClient = target.getBoundingClientRect();\n                if (filterDlg) {\n                    filterDlg.style.left = (fClient.right - gClient.left).toString() + 'px';\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.renderTemplates = function () {\n        var portals = 'portals';\n        this.notify('reactTemplateRender', this[portals]);\n        this.renderReactTemplates();\n    };\n    /**\n     * Apply the changes to the Grid without refreshing the rows.\n     * @param  {BatchChanges} changes - Defines changes to be updated.\n     * @return {void}\n     */\n    Grid.prototype.batchUpdate = function (changes) {\n        this.processRowChanges(changes);\n    };\n    /**\n     * Apply the changes to the Grid in one batch after 50ms without refreshing the rows.\n     * @param  {BatchChanges} changes - Defines changes to be updated.\n     * @return {void}\n     */\n    Grid.prototype.batchAsyncUpdate = function (changes) {\n        this.processBulkRowChanges(changes);\n    };\n    Grid.prototype.processBulkRowChanges = function (changes) {\n        var _this = this;\n        if (!this.dataToBeUpdated) {\n            this.dataToBeUpdated = Object.assign({ addedRecords: [], changedRecords: [], deletedRecords: [] }, changes);\n            setTimeout(function () {\n                _this.processRowChanges(_this.dataToBeUpdated);\n                _this.dataToBeUpdated = null;\n            }, this.asyncTimeOut);\n        }\n        else {\n            var loopstring = ['addedRecords', 'changedRecords', 'deletedRecords'];\n            var keyField = this.getPrimaryKeyFieldNames()[0];\n            for (var i = 0; i < loopstring.length; i++) {\n                if (changes[loopstring[i]]) {\n                    compareChanges(this, changes, loopstring[i], keyField);\n                }\n            }\n        }\n    };\n    Grid.prototype.processRowChanges = function (changes) {\n        var _this = this;\n        var keyField = this.getPrimaryKeyFieldNames()[0];\n        changes = Object.assign({ addedRecords: [], changedRecords: [], deletedRecords: [] }, changes);\n        var promise = this.getDataModule().saveChanges(changes, keyField, {}, this.getDataModule().generateQuery().requiresCount());\n        if (this.getDataModule().isRemote()) {\n            promise.then(function (e) {\n                _this.setNewData();\n            });\n        }\n        else {\n            this.setNewData();\n        }\n    };\n    Grid.prototype.setNewData = function () {\n        var _this = this;\n        var oldValues = JSON.parse(JSON.stringify(this.getCurrentViewRecords()));\n        var getData = this.getDataModule().getData({}, this.getDataModule().generateQuery().requiresCount());\n        getData.then(function (e) {\n            _this.bulkRefresh(e.result, oldValues, e.count);\n        });\n    };\n    Grid.prototype.deleteRowElement = function (row) {\n        var tr = this.getRowElementByUID(row.uid);\n        var index = parseInt(tr.getAttribute('aria-rowindex'), 10);\n        remove(tr);\n        if (this.getFrozenColumns()) {\n            var mtr = this.getMovableRows()[index];\n            remove(mtr);\n        }\n    };\n    Grid.prototype.bulkRefresh = function (result, oldValues, count) {\n        var _this = this;\n        var rowObj = this.getRowsObject();\n        var keyField = this.getPrimaryKeyFieldNames()[0];\n        var _loop_3 = function (i) {\n            if (!result.filter(function (e) { return e[keyField] === rowObj[i].data[keyField]; }).length) {\n                this_3.deleteRowElement(rowObj[i]);\n                rowObj.splice(i, 1);\n                i--;\n            }\n            out_i_1 = i;\n        };\n        var this_3 = this, out_i_1;\n        for (var i = 0; i < rowObj.length; i++) {\n            _loop_3(i);\n            i = out_i_1;\n        }\n        var _loop_4 = function (i) {\n            var isRowExist;\n            oldValues.filter(function (e) {\n                if (e[keyField] === result[i][keyField]) {\n                    if (e !== result[i]) {\n                        _this.setRowData(result[i][keyField], result[i]);\n                    }\n                    isRowExist = true;\n                }\n            });\n            if (!isRowExist) {\n                this_4.renderRowElement(result[i], i);\n            }\n        };\n        var this_4 = this;\n        for (var i = 0; i < result.length; i++) {\n            _loop_4(i);\n        }\n        this.currentViewData = result;\n        var rows = [].slice.call(this.getContentTable().querySelectorAll('.e-row'));\n        resetRowIndex(this, this.getRowsObject(), rows);\n        setRowElements(this);\n        if (this.allowPaging) {\n            this.notify(events.inBoundModelChanged, { module: 'pager', properties: { totalRecordsCount: count } });\n        }\n    };\n    Grid.prototype.renderRowElement = function (data, index) {\n        var row = new RowRenderer(this.serviceLocator, null, this);\n        var model = new RowModelGenerator(this);\n        var modelData = model.generateRows([data]);\n        var tr = row.render(modelData[0], this.getColumns());\n        var mTr;\n        var mTbody;\n        this.addRowObject(modelData[0], index);\n        var tbody = this.getContentTable().querySelector('tbody');\n        if (tbody.querySelector('.e-emptyrow')) {\n            var emptyRow = tbody.querySelector('.e-emptyrow');\n            emptyRow.parentNode.removeChild(emptyRow);\n            if (this.getFrozenColumns()) {\n                var moveTbody = this.getContent().querySelector('.e-movablecontent').querySelector('tbody');\n                (moveTbody.firstElementChild).parentNode.removeChild(moveTbody.firstElementChild);\n            }\n        }\n        if (this.getFrozenColumns()) {\n            mTr = renderMovable(tr, this.getFrozenColumns(), this);\n            if (this.frozenRows && index < this.frozenRows) {\n                mTbody = this.getHeaderContent().querySelector('.e-movableheader').querySelector('tbody');\n            }\n            else {\n                mTbody = this.getContent().querySelector('.e-movablecontent').querySelector('tbody');\n            }\n            mTbody.appendChild(mTr);\n            if (this.height === 'auto') {\n                this.notify(events.frozenHeight, {});\n            }\n        }\n        if (this.frozenRows && index < this.frozenRows) {\n            tbody = this.getHeaderContent().querySelector('tbody');\n        }\n        else {\n            tbody = this.getContent().querySelector('tbody');\n        }\n        tbody = this.getContent().querySelector('tbody');\n        tbody.appendChild(tr);\n    };\n    Grid.prototype.addRowObject = function (row, index) {\n        var frzCols = this.getFrozenColumns();\n        if (frzCols) {\n            var mRows = this.getMovableRowsObject();\n            var mRow = row.clone();\n            mRow.cells = mRow.cells.slice(frzCols);\n            row.cells = row.cells.slice(0, frzCols);\n            mRows.splice(index, 1, mRow);\n        }\n        this.getRowsObject().splice(index, 1, row);\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getHeight = function (height) {\n        if (!Number.isInteger(height) && height.indexOf('%') != -1) {\n            height = parseInt(height) / 100 * this.element.clientHeight;\n        }\n        else if (!Number.isInteger(height) && this.height !== 'auto') {\n            height = parseInt(height);\n        }\n        else {\n            height = this.height;\n        }\n        return height;\n    };\n    /** @hidden */\n    Grid.prototype.getFrozenRightContent = function () {\n        return this.getContent().querySelector('.e-frozen-right-content');\n    };\n    /** @hidden */\n    Grid.prototype.getFrozenRightHeader = function () {\n        return this.getHeaderContent().querySelector('.e-frozen-right-header');\n    };\n    /** @hidden */\n    Grid.prototype.getMovableHeaderTbody = function () {\n        return this.getMovableVirtualHeader().querySelector('tbody');\n    };\n    /** @hidden */\n    Grid.prototype.getMovableContentTbody = function () {\n        return this.getMovableVirtualContent().querySelector('tbody');\n    };\n    /** @hidden */\n    Grid.prototype.getFrozenHeaderTbody = function () {\n        return this.getFrozenVirtualHeader().querySelector('tbody');\n    };\n    /** @hidden */\n    Grid.prototype.getFrozenLeftContentTbody = function () {\n        return this.getFrozenVirtualContent().querySelector('tbody');\n    };\n    /** @hidden */\n    Grid.prototype.getFrozenRightHeaderTbody = function () {\n        return this.getFrozenRightHeader().querySelector('tbody');\n    };\n    /** @hidden */\n    Grid.prototype.getFrozenRightContentTbody = function () {\n        var cnt = this.getFrozenRightContent();\n        var tbody;\n        if (cnt) {\n            tbody = this.getFrozenRightContent().querySelector('tbody');\n        }\n        return tbody;\n    };\n    var Grid_1;\n    __decorate([\n        Property()\n    ], Grid.prototype, \"parentDetails\", void 0);\n    __decorate([\n        Property([])\n    ], Grid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], Grid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Complex({}, ResizeSettings)\n    ], Grid.prototype, \"resizeSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Grid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableColumnVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], Grid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], Grid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], Grid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Complex({}, InfiniteScrollSettings)\n    ], Grid.prototype, \"infiniteScrollSettings\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Property(-1)\n    ], Grid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], Grid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], Grid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], Grid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowGrouping\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Complex({}, GroupSettings)\n    ], Grid.prototype, \"groupSettings\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], Grid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], Grid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Complex({}, ColumnChooserSettings)\n    ], Grid.prototype, \"columnChooserSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableHeaderFocus\", void 0);\n    __decorate([\n        Property('auto')\n    ], Grid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], Grid.prototype, \"width\", void 0);\n    __decorate([\n        Property('Default')\n    ], Grid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"childGrid\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"queryString\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], Grid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property('Expanded')\n    ], Grid.prototype, \"hierarchyPrintMode\", void 0);\n    __decorate([\n        Property([])\n    ], Grid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], Grid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"query\", void 0);\n    __decorate([\n        Property('USD')\n    ], Grid.prototype, \"currencyCode\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(0)\n    ], Grid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], Grid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('All')\n    ], Grid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Property({})\n    ], Grid.prototype, \"currentAction\", void 0);\n    __decorate([\n        Property('18.4.31')\n    ], Grid.prototype, \"ej2StatePersistenceVersion\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"destroyed\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"recordClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnSelecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnSelected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDeselected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"pdfAggregateQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"excelAggregateQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"exportDetailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"pdfExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeOpenColumnChooser\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"commandClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"keyPressed\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"checkBoxChange\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeAutoFill\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"exportGroupCaption\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"lazyLoadGroupExpand\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"lazyLoadGroupCollapse\", void 0);\n    Grid = Grid_1 = __decorate([\n        NotifyPropertyChanges\n    ], Grid);\n    return Grid;\n}(Component));\nexport { Grid };\n"]},"metadata":{},"sourceType":"module"}