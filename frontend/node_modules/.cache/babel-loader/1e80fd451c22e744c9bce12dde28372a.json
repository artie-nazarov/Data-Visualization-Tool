{"ast":null,"code":"import { isNullOrUndefined, remove, extend } from '@syncfusion/ej2-base';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { FreezeRowModelGenerator } from '../services/freeze-row-model-generator';\nimport { RowRenderer } from '../renderer/row-renderer';\nimport * as events from '../base/constant';\nimport { getScrollBarWidth, ensureLastRow, ensureFirstRow, getEditedDataIndex, resetRowIndex, setRowElements } from '../base/util';\n/**\n * Infinite Scrolling class\n * @hidden\n */\n\nvar InfiniteScroll =\n/** @class */\nfunction () {\n  /**\n   * Constructor for the Grid infinite scrolling.\n   * @hidden\n   */\n  function InfiniteScroll(parent, serviceLocator) {\n    this.infiniteCache = {};\n    this.infiniteFrozenCache = {};\n    this.isDownScroll = false;\n    this.isUpScroll = false;\n    this.isScroll = true;\n    this.enableContinuousScroll = false;\n    this.initialRender = true;\n    this.isRemove = false;\n    this.isInitialCollapse = false;\n    this.prevScrollTop = 0;\n    this.actions = ['filtering', 'searching', 'grouping', 'ungrouping', 'reorder', 'sorting'];\n    this.keys = ['downArrow', 'upArrow', 'PageUp', 'PageDown'];\n    this.rowTop = 0;\n    this.isInitialMovableRender = true;\n    this.virtualInfiniteData = {};\n    this.isCancel = false;\n    this.emptyRowData = {};\n    this.isNormaledit = false;\n    this.isInfiniteScroll = false;\n    this.isLastPage = false;\n    this.isInitialRender = true;\n    this.parent = parent;\n    this.serviceLocator = serviceLocator;\n    this.isNormaledit = this.parent.editSettings.mode === 'Normal';\n    this.addEventListener();\n    this.widthService = serviceLocator.getService('widthService');\n    this.rowModelGenerator = this.parent.isFrozenGrid() ? new FreezeRowModelGenerator(this.parent) : new RowModelGenerator(this.parent);\n  }\n\n  InfiniteScroll.prototype.getModuleName = function () {\n    return 'infiniteScroll';\n  };\n  /**\n   * @hidden\n   */\n\n\n  InfiniteScroll.prototype.addEventListener = function () {\n    this.parent.on(events.dataReady, this.onDataReady, this);\n    this.parent.on(events.dataSourceModified, this.dataSourceModified, this);\n    this.parent.on(events.infinitePageQuery, this.infinitePageQuery, this);\n    this.parent.on(events.infiniteScrollHandler, this.infiniteScrollHandler, this);\n    this.parent.on(events.beforeCellFocused, this.infiniteCellFocus, this);\n    this.parent.on(events.appendInfiniteContent, this.appendInfiniteRows, this);\n    this.parent.on(events.removeInfiniteRows, this.removeInfiniteCacheRows, this);\n    this.parent.on(events.resetInfiniteBlocks, this.resetInfiniteBlocks, this);\n    this.parent.on(events.setInfiniteCache, this.setCache, this);\n    this.parent.on(events.initialCollapse, this.ensureIntialCollapse, this);\n    this.parent.on(events.keyPressed, this.infiniteCellFocus, this);\n    this.parent.on(events.infiniteShowHide, this.setDisplayNone, this);\n    this.parent.on(events.virtualScrollEditActionBegin, this.editActionBegin, this);\n    this.parent.on(events.getVirtualData, this.getVirtualInfiniteData, this);\n    this.parent.on(events.editReset, this.resetInfiniteEdit, this);\n    this.parent.on(events.virtualScrollEditSuccess, this.infiniteEditSuccess, this);\n    this.parent.on(events.refreshVirtualCache, this.refreshInfiniteCache, this);\n    this.parent.on(events.infiniteEditHandler, this.infiniteEditHandler, this);\n    this.parent.on(events.virtualScrollAddActionBegin, this.infiniteAddActionBegin, this);\n    this.parent.on(events.modelChanged, this.modelChanged, this);\n    this.parent.on(events.deleteComplete, this.deleteComplate, this);\n    this.parent.addEventListener(events.actionBegin, this.actionBegin.bind(this));\n    this.parent.addEventListener(events.actionComplete, this.actionComplete.bind(this));\n  };\n  /**\n   * @hidden\n   */\n\n\n  InfiniteScroll.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off(events.dataReady, this.onDataReady);\n    this.parent.off(events.dataSourceModified, this.dataSourceModified);\n    this.parent.off(events.infinitePageQuery, this.infinitePageQuery);\n    this.parent.off(events.infiniteScrollHandler, this.infiniteScrollHandler);\n    this.parent.off(events.beforeCellFocused, this.infiniteCellFocus);\n    this.parent.off(events.appendInfiniteContent, this.appendInfiniteRows);\n    this.parent.off(events.removeInfiniteRows, this.removeInfiniteCacheRows);\n    this.parent.off(events.resetInfiniteBlocks, this.resetInfiniteBlocks);\n    this.parent.off(events.setInfiniteCache, this.setCache);\n    this.parent.off(events.initialCollapse, this.ensureIntialCollapse);\n    this.parent.off(events.keyPressed, this.infiniteCellFocus);\n    this.parent.off(events.infiniteShowHide, this.setDisplayNone);\n    this.parent.off(events.virtualScrollEditActionBegin, this.editActionBegin);\n    this.parent.off(events.getVirtualData, this.getVirtualInfiniteData);\n    this.parent.off(events.editReset, this.resetInfiniteEdit);\n    this.parent.off(events.virtualScrollEditSuccess, this.infiniteEditSuccess);\n    this.parent.off(events.refreshVirtualCache, this.refreshInfiniteCache);\n    this.parent.off(events.infiniteEditHandler, this.infiniteEditHandler);\n    this.parent.off(events.virtualScrollAddActionBegin, this.infiniteAddActionBegin);\n    this.parent.off(events.modelChanged, this.modelChanged);\n    this.parent.removeEventListener(events.actionBegin, this.actionBegin.bind(this));\n    this.parent.removeEventListener(events.actionComplete, this.actionComplete.bind(this));\n  };\n\n  InfiniteScroll.prototype.deleteComplate = function () {\n    if (this.parent.isFrozenGrid() && !this.parent.infiniteScrollSettings.enableCache) {\n      this.parent.contentModule.refreshScrollOffset();\n    }\n  };\n\n  InfiniteScroll.prototype.modelChanged = function (args) {\n    if (args.requestType !== 'infiniteScroll' && (args.requestType === 'delete' || this.requestType === 'add')) {\n      var rows = this.parent.getRows();\n      this.firstIndex = parseInt(rows[0].getAttribute('aria-rowindex'), 10);\n      this.firstBlock = Math.ceil((this.firstIndex + 1) / this.parent.pageSettings.pageSize);\n      this.lastIndex = parseInt(rows[rows.length - 1].getAttribute('aria-rowindex'), 10);\n\n      if (args.requestType === 'delete') {\n        var rowObj = this.parent.getRowsObject();\n        args.startIndex = this.parent.infiniteScrollSettings.enableCache ? (this.firstBlock - 1) * this.parent.pageSettings.pageSize : rowObj[rowObj.length - 1].index;\n      } else {\n        args.startIndex = this.firstIndex;\n      }\n\n      if (!this.parent.infiniteScrollSettings.enableCache && this.parent.pageSettings.currentPage === this.maxPage && args.requestType === 'delete') {\n        this.isLastPage = true;\n        this.lastIndex = this.lastIndex - 1;\n      }\n    }\n  };\n\n  InfiniteScroll.prototype.infiniteAddActionBegin = function (args) {\n    if (this.isNormaledit) {\n      this.isAdd = true;\n\n      if (this.parent.infiniteScrollSettings.enableCache) {\n        if (!Object.keys(this.emptyRowData).length) {\n          this.createEmptyRowdata();\n        }\n\n        if (this.parent.pageSettings.currentPage > 1) {\n          args.startEdit = false;\n          this.resetInfiniteBlocks({}, true);\n          this.makeRequest({\n            currentPage: 1\n          });\n        }\n      }\n    }\n  };\n\n  InfiniteScroll.prototype.infiniteEditHandler = function (args) {\n    if (!this.parent.infiniteScrollSettings.enableCache && (args.e.requestType === 'delete' || args.e.requestType === 'save' && this.requestType === 'add')) {\n      var frozenCols = this.parent.isFrozenGrid();\n      var rowElms = this.parent.getRows();\n      var rows = this.parent.getRowsObject();\n\n      if (this.ensureRowAvailability(rows, args.result[0])) {\n        this.resetRowIndex(rows, args.e, rowElms, this.requestType === 'add');\n\n        if (frozenCols) {\n          var rows_1 = this.parent.getMovableRowsObject();\n          this.resetRowIndex(rows_1, args.e, this.parent.getMovableDataRows(), this.requestType === 'add');\n\n          if (this.parent.getFrozenMode() === 'Left-Right') {\n            var frRows = this.parent.getFrozenRightRowsObject();\n            this.resetRowIndex(frRows, args.e, this.parent.getFrozenRightRows(), this.requestType === 'add');\n          }\n        }\n\n        if (!this.isLastPage) {\n          this.createRow(rows, args);\n        } else {\n          this.isLastPage = false;\n          this.parent.pageSettings.currentPage = this.maxPage;\n\n          if (this.parent.selectionModule.index < this.parent.frozenRows) {\n            remove(rowElms[this.parent.frozenRows - 1]);\n            this.createRow([rows[this.parent.frozenRows - 1]], args, false, true);\n\n            if (frozenCols) {\n              var movableRows = this.parent.getMovableDataRows();\n              remove(movableRows[this.parent.frozenRows]);\n              this.createRow([this.parent.getMovableRowsObject()[this.parent.frozenRows - 1]], args, true, true);\n\n              if (this.parent.getFrozenMode() === 'Left-Right') {\n                var rightRows = this.parent.getFrozenRightDataRows();\n                remove(rightRows[this.parent.frozenRows]);\n                this.createRow([this.parent.getFrozenRightRowsObject()[this.parent.frozenRows - 1]], args, false, true, true);\n              }\n            }\n\n            setRowElements(this.parent);\n          }\n        }\n      }\n\n      this.parent.hideSpinner();\n      this.requestType === 'delete' ? this.parent.notify(events.deleteComplete, args.e) : this.parent.notify(events.saveComplete, args.e);\n    }\n\n    this.parent.notify(events.freezeRender, {\n      case: 'refreshHeight'\n    });\n  };\n\n  InfiniteScroll.prototype.createRow = function (rows, args, isMovable, isFrozenRows, isFrozenRight) {\n    var row = !isFrozenRows ? this.generateRows(args.result, args.e) : rows;\n    var rowRenderer = new RowRenderer(this.serviceLocator, null, this.parent);\n    var tbody;\n\n    if (isFrozenRight) {\n      tbody = this.parent.element.querySelector('.e-frozen-right-content').querySelector('tbody');\n    } else {\n      tbody = !this.parent.isFrozenGrid() ? this.parent.getContent().querySelector('tbody') : isMovable ? this.parent.getMovableVirtualContent().querySelector('tbody') : this.parent.getFrozenVirtualContent().querySelector('tbody');\n    }\n\n    if (this.parent.frozenRows) {\n      tbody = isFrozenRows && this.requestType !== 'add' || !isFrozenRows && this.requestType === 'add' ? !this.parent.isFrozenGrid() ? this.parent.getHeaderContent().querySelector('tbody') : isMovable ? this.parent.getMovableVirtualHeader().querySelector('tbody') : isFrozenRight ? this.parent.element.querySelector('.e-frozen-right-header').querySelector('tbody') : this.parent.getFrozenVirtualHeader().querySelector('tbody') : tbody;\n    }\n\n    for (var i = row.length - 1; i >= 0; i--) {\n      if (this.requestType === 'delete') {\n        tbody.appendChild(rowRenderer.render(row[i], this.parent.getColumns()));\n      } else {\n        tbody.insertBefore(rowRenderer.render(row[i], this.parent.getColumns()), tbody.firstElementChild);\n      }\n    }\n\n    if (!isFrozenRows && this.parent.frozenRows && (this.parent.selectionModule.index < this.parent.frozenRows || this.requestType === 'add')) {\n      var rowElems = isMovable ? this.parent.getMovableDataRows() : isFrozenRight ? this.parent.getFrozenRightDataRows() : this.parent.getRows();\n      var index = (isMovable || isFrozenRight) && this.requestType === 'add' ? this.parent.frozenRows : this.parent.frozenRows - 1;\n      remove(rowElems[index]);\n      this.createRow([rows[this.parent.frozenRows - 1]], args, isMovable, true, isFrozenRight);\n    }\n\n    if (!this.parent.infiniteScrollSettings.enableCache && !isFrozenRows) {\n      if (isFrozenRight) {\n        setRowElements(this.parent);\n        this.parent.contentModule.rightFreezeRows = this.requestType === 'add' ? row.concat(rows) : rows.concat(row);\n      } else if (!this.parent.isFrozenGrid() || isMovable) {\n        setRowElements(this.parent);\n        this.parent.contentModule.visibleRows = this.requestType === 'add' ? row.concat(rows) : rows.concat(row);\n\n        if (this.parent.getFrozenMode() === 'Left-Right') {\n          this.createRow(this.parent.getFrozenRightRowsObject(), args, false, false, true);\n        }\n      } else {\n        this.parent.contentModule.visibleFrozenRows = this.requestType === 'add' ? row.concat(rows) : rows.concat(row);\n        this.createRow(this.parent.getMovableRowsObject(), args, true);\n      }\n    }\n  };\n\n  InfiniteScroll.prototype.ensureRowAvailability = function (rows, data) {\n    var resume = true;\n\n    if (this.parent.frozenRows && !this.parent.infiniteScrollSettings.enableCache && this.parent.sortSettings.columns && this.requestType === 'add') {\n      var key = this.parent.getPrimaryKeyFieldNames()[0];\n\n      for (var i = 0; i < rows.length; i++) {\n        if (rows[i].data[key] === data[key]) {\n          resume = false;\n          break;\n        }\n      }\n    }\n\n    return resume;\n  };\n\n  InfiniteScroll.prototype.generateRows = function (data, args) {\n    return this.rowModelGenerator.generateRows(data, args);\n  };\n\n  InfiniteScroll.prototype.resetRowIndex = function (rows, args, rowElms, isAdd) {\n    var keyField = this.parent.getPrimaryKeyFieldNames()[0];\n    var isRemove = !(rowElms.length % this.parent.pageSettings.pageSize);\n\n    if (isAdd) {\n      if (isRemove) {\n        remove(rowElms[rows.length - 1]);\n        rowElms.splice(rows.length - 1, 1);\n        rows.splice(rows.length - 1, 1);\n      }\n    } else {\n      rows.filter(function (e, index) {\n        if (e.data[keyField] === args.data[0][keyField]) {\n          rows.splice(index, 1);\n          remove(rowElms[index]);\n          rowElms.splice(index, 1);\n        }\n      });\n    }\n\n    var startIndex = isAdd ? 1 : 0;\n    resetRowIndex(this.parent, rows, rowElms, startIndex);\n  };\n\n  InfiniteScroll.prototype.setDisplayNone = function (args) {\n    if (this.parent.infiniteScrollSettings.enableCache) {\n      var frozenCols = this.parent.isFrozenGrid();\n      var keys = frozenCols ? Object.keys(this.infiniteFrozenCache) : Object.keys(this.infiniteCache);\n\n      for (var i = 1; i <= keys.length; i++) {\n        var cache = frozenCols ? args.isFreeze ? this.infiniteFrozenCache[i][0] : this.infiniteFrozenCache[i][1] : this.infiniteCache[i];\n        cache.filter(function (e) {\n          e.cells[args.index].visible = args.visible === '';\n        });\n      }\n\n      this.resetContentModuleCache(frozenCols ? this.infiniteFrozenCache : this.infiniteCache);\n    }\n  };\n\n  InfiniteScroll.prototype.refreshInfiniteCache = function (data) {\n    this.getEditedRowObject().data = data;\n  };\n\n  InfiniteScroll.prototype.getEditedRowObject = function () {\n    var rowObjects = this.parent.getRowsObject();\n    var editedrow;\n\n    for (var i = 0; i < rowObjects.length; i++) {\n      if (rowObjects[i].index === this.editRowIndex) {\n        editedrow = rowObjects[i];\n      }\n    }\n\n    return editedrow;\n  };\n\n  InfiniteScroll.prototype.infiniteEditSuccess = function (args) {\n    if (this.isNormaledit) {\n      if (!this.isAdd && args.data) {\n        this.updateCurrentViewRecords(args.data);\n      }\n\n      this.isAdd = false;\n    }\n  };\n\n  InfiniteScroll.prototype.updateCurrentViewRecords = function (data) {\n    var index = getEditedDataIndex(this.parent, data);\n\n    if (!isNullOrUndefined(index)) {\n      this.parent.getCurrentViewRecords()[index] = data;\n    }\n  };\n\n  InfiniteScroll.prototype.actionBegin = function (args) {\n    if (args.requestType === 'add' || args.requestType === 'delete') {\n      this.requestType = args.requestType;\n    }\n\n    if (this.parent.isFrozenGrid() && !args.cancel && args.requestType === 'searching' || args.requestType === 'sorting' || args.requestType === 'filtering') {\n      this.isInitialRender = true;\n    }\n  };\n\n  InfiniteScroll.prototype.actionComplete = function (args) {\n    if (args.requestType === 'delete' || args.requestType === 'save' || args.requestType === 'cancel') {\n      this.requestType = this.empty;\n      this.isCancel = args.requestType === 'cancel' || args.requestType === 'save';\n      this.isAdd = this.isEdit = false;\n\n      if (this.isNormaledit) {\n        this.editRowIndex = this.empty;\n        this.virtualInfiniteData = {};\n        this.parent.editModule.previousVirtualData = {};\n      }\n    }\n  };\n\n  InfiniteScroll.prototype.resetInfiniteEdit = function () {\n    if (this.parent.enableInfiniteScrolling && this.isNormaledit) {\n      if (this.parent.editSettings.allowEditing && this.isEdit || this.parent.editSettings.allowAdding && this.isAdd) {\n        this.parent.isEdit = true;\n      }\n    }\n  };\n\n  InfiniteScroll.prototype.getVirtualInfiniteData = function (data) {\n    data.virtualData = this.virtualInfiniteData;\n    data.isAdd = this.isAdd;\n    data.isCancel = this.isCancel;\n  };\n\n  InfiniteScroll.prototype.editActionBegin = function (e) {\n    this.isEdit = true;\n    this.editRowIndex = e.index;\n    var rowObject = extend({}, this.getEditedRowObject().data);\n    e.data = Object.keys(this.virtualInfiniteData).length ? this.virtualInfiniteData : rowObject;\n  };\n\n  InfiniteScroll.prototype.dataSourceModified = function () {\n    this.resetInfiniteBlocks({\n      requestType: this.empty\n    }, true);\n  };\n\n  InfiniteScroll.prototype.onDataReady = function (e) {\n    if (!isNullOrUndefined(e.count)) {\n      this.maxPage = Math.ceil(e.count / this.parent.pageSettings.pageSize);\n    }\n  };\n\n  InfiniteScroll.prototype.ensureIntialCollapse = function (isExpand) {\n    this.isInitialCollapse = !isExpand;\n  };\n\n  InfiniteScroll.prototype.infiniteScrollHandler = function (e) {\n    var _this = this;\n\n    this.restoreInfiniteEdit();\n    this.restoreInfiniteAdd();\n    var targetEle = e.target;\n    var isInfinite = targetEle.classList.contains('e-content');\n\n    if (isInfinite && this.parent.enableInfiniteScrolling) {\n      var scrollEle = this.parent.getContent().firstElementChild;\n      this.prevScrollTop = scrollEle.scrollTop;\n      var rows = this.parent.getRows();\n      var index = parseInt(rows[rows.length - 1].getAttribute('aria-rowindex'), 10) + 1;\n      var prevPage = this.parent.pageSettings.currentPage;\n      var args = void 0;\n      var offset = targetEle.scrollHeight - targetEle.scrollTop;\n      var round = Math.round(targetEle.scrollHeight - targetEle.scrollTop);\n      var floor = offset < targetEle.clientHeight ? Math.ceil(offset) : Math.floor(offset);\n      var isBottom = floor === targetEle.clientHeight || round === targetEle.clientHeight;\n\n      if (this.isScroll && isBottom && (this.parent.pageSettings.currentPage <= this.maxPage - 1 || this.enableContinuousScroll)) {\n        if (this.parent.infiniteScrollSettings.enableCache) {\n          this.isUpScroll = false;\n          this.isDownScroll = true;\n          setTimeout(function () {\n            _this.isScroll = true;\n          }, 600);\n        }\n\n        var rows_2 = [].slice.call(scrollEle.querySelectorAll('.e-row:not(.e-addedrow)'));\n        var row = rows_2[rows_2.length - 1];\n        var rowIndex = parseInt(row.getAttribute('aria-rowindex'), 10);\n        this.parent.pageSettings.currentPage = Math.ceil(rowIndex / this.parent.pageSettings.pageSize) + 1;\n        args = {\n          requestType: 'infiniteScroll',\n          currentPage: this.parent.pageSettings.currentPage,\n          prevPage: prevPage,\n          startIndex: index,\n          direction: 'down'\n        };\n        this.makeRequest(args);\n      }\n\n      if (this.isScroll && this.parent.infiniteScrollSettings.enableCache && targetEle.scrollTop === 0 && this.parent.pageSettings.currentPage !== 1) {\n        if (this.parent.infiniteScrollSettings.enableCache) {\n          this.isDownScroll = false;\n          this.isUpScroll = true;\n          setTimeout(function () {\n            _this.isScroll = true;\n          }, 600);\n        }\n\n        var row = [].slice.call(scrollEle.querySelectorAll('.e-row'));\n        var rowIndex = parseInt(row[this.parent.pageSettings.pageSize - 1].getAttribute('aria-rowindex'), 10);\n        var startIndex = parseInt(row[0].getAttribute('aria-rowindex'), 10) - this.parent.pageSettings.pageSize;\n        this.parent.pageSettings.currentPage = Math.ceil(rowIndex / this.parent.pageSettings.pageSize) - 1;\n\n        if (this.parent.pageSettings.currentPage) {\n          args = {\n            requestType: 'infiniteScroll',\n            currentPage: this.parent.pageSettings.currentPage,\n            prevPage: prevPage,\n            startIndex: startIndex,\n            direction: 'up'\n          };\n          this.makeRequest(args);\n        }\n      }\n\n      if (this.parent.infiniteScrollSettings.enableCache && !this.isScroll && isNullOrUndefined(args)) {\n        if (this.isDownScroll || this.isUpScroll) {\n          scrollEle.scrollTop = this.top;\n        }\n      }\n    }\n  };\n\n  InfiniteScroll.prototype.makeRequest = function (args) {\n    var _this = this;\n\n    if (this.parent.pageSettings.currentPage !== args.prevPage) {\n      if (this.parent.pageSettings.currentPage <= this.maxPage) {\n        this.isInfiniteScroll = true;\n\n        if (isNullOrUndefined(this.infiniteCache[args.currentPage])) {\n          setTimeout(function () {\n            _this.getVirtualInfiniteEditedData();\n\n            _this.parent.notify('model-changed', args);\n          }, 100);\n        } else {\n          setTimeout(function () {\n            _this.getVirtualInfiniteEditedData();\n\n            _this.parent.notify(events.refreshInfiniteModeBlocks, args);\n          }, 100);\n        }\n      } else {\n        this.parent.pageSettings.currentPage = this.maxPage;\n      }\n    }\n  };\n\n  InfiniteScroll.prototype.infinitePageQuery = function (query) {\n    if (this.initialRender) {\n      this.initialRender = false;\n      this.intialPageQuery(query);\n    } else {\n      if (!this.isInfiniteScroll && (this.requestType === 'delete' || this.requestType === 'add')) {\n        this.editPageQuery(query);\n      } else {\n        query.page(this.parent.pageSettings.currentPage, this.parent.pageSettings.pageSize);\n      }\n    }\n  };\n\n  InfiniteScroll.prototype.editPageQuery = function (query) {\n    var initialBlocks = this.parent.infiniteScrollSettings.initialBlocks;\n    var isCache = this.parent.infiniteScrollSettings.enableCache;\n\n    if (isCache) {\n      this.infiniteCache = {};\n      this.infiniteFrozenCache = {};\n      query.skip(this.firstIndex);\n      query.take(initialBlocks * this.parent.pageSettings.pageSize);\n    } else {\n      if (this.parent.editSettings.mode === 'Dialog') {\n        this.parent.clearSelection();\n      }\n\n      var index = this.requestType === 'delete' ? this.lastIndex : this.firstIndex;\n      query.skip(index);\n      query.take(1);\n    }\n  };\n\n  InfiniteScroll.prototype.intialPageQuery = function (query) {\n    if (this.parent.infiniteScrollSettings.enableCache && this.parent.infiniteScrollSettings.initialBlocks > this.parent.infiniteScrollSettings.maxBlocks) {\n      this.parent.infiniteScrollSettings.initialBlocks = this.parent.infiniteScrollSettings.maxBlocks;\n    }\n\n    var pageSize = this.parent.pageSettings.pageSize * this.parent.infiniteScrollSettings.initialBlocks;\n    query.page(1, pageSize);\n  };\n\n  InfiniteScroll.prototype.infiniteCellFocus = function (e) {\n    if (e.byKey && (e.keyArgs.action === 'upArrow' || e.keyArgs.action === 'downArrow')) {\n      this.pressedKey = e.keyArgs.action;\n      var ele = document.activeElement;\n      var rowIndex = parseInt(ele.parentElement.getAttribute('aria-rowindex'), 10);\n      var scrollEle = this.parent.getContent().firstElementChild;\n      this.rowIndex = e.keyArgs.action === 'downArrow' ? rowIndex + 1 : rowIndex - 1;\n      this.cellIndex = parseInt(ele.getAttribute('aria-colindex'), 10);\n      var row = this.parent.getRowByIndex(rowIndex);\n      var visibleRowCount = Math.floor(scrollEle.offsetHeight / this.parent.getRowHeight());\n\n      if (!row || ensureLastRow(row, this.parent) || ensureFirstRow(row, this.rowTop)) {\n        var height = row ? row.getBoundingClientRect().height : this.parent.getRowHeight();\n\n        if (!this.parent.infiniteScrollSettings.enableCache) {\n          if (e.keyArgs.action === 'downArrow' && (ensureLastRow(row, this.parent) || !row)) {\n            var nTop = (this.rowIndex - visibleRowCount) * height;\n            var oTop = scrollEle.scrollTop + this.parent.getRowHeight();\n            scrollEle.scrollTop = nTop < oTop ? oTop : nTop;\n          }\n\n          if (e.keyArgs.action === 'upArrow' && ensureFirstRow(row, this.rowTop)) {\n            scrollEle.scrollTop = this.rowIndex * height;\n          }\n        }\n      } else {\n        this.pressedKey = this.empty;\n      }\n    } else if (e.key === 'PageDown' || e.key === 'PageUp') {\n      this.pressedKey = e.key;\n    }\n  };\n\n  InfiniteScroll.prototype.createEmptyRowdata = function () {\n    var _this = this;\n\n    this.parent.getColumns().filter(function (e) {\n      _this.emptyRowData[e.field] = _this.empty;\n    });\n  };\n\n  InfiniteScroll.prototype.getVirtualInfiniteEditedData = function () {\n    var editForm = this.parent.element.querySelector('.e-editedrow');\n    var addForm = this.parent.element.querySelector('.e-addedrow');\n    var gridForm = this.parent.element.querySelector('.e-gridform');\n\n    if (this.parent.infiniteScrollSettings.enableCache && (editForm || addForm)) {\n      var rowData = editForm ? extend({}, this.getEditedRowObject().data) : extend({}, this.emptyRowData);\n      this.virtualInfiniteData = this.parent.editModule.getCurrentEditedData(gridForm, rowData);\n\n      if (this.parent.isFrozenGrid()) {\n        this.virtualInfiniteData = this.parent.editModule.getCurrentEditedData(this.parent.getMovableVirtualContent().querySelector('.e-gridform'), rowData);\n      }\n    }\n  };\n\n  InfiniteScroll.prototype.restoreInfiniteEdit = function () {\n    var content = this.parent.getContent().firstElementChild;\n    var frozenEdit = this.parent.frozenRows ? this.editRowIndex >= this.parent.frozenRows : true;\n\n    if (this.isNormaledit && this.parent.infiniteScrollSettings.enableCache && frozenEdit) {\n      if (this.parent.editSettings.allowEditing && !isNullOrUndefined(this.editRowIndex)) {\n        var row = this.parent.getRowByIndex(this.editRowIndex);\n\n        if (Object.keys(this.virtualInfiniteData).length && row && !this.parent.getContent().querySelector('.e-editedrow')) {\n          var top_1 = row.getBoundingClientRect().top;\n\n          if (top_1 < content.offsetHeight && top_1 > this.parent.getRowHeight()) {\n            this.parent.isEdit = false;\n            this.parent.editModule.startEdit(row);\n          }\n        }\n      }\n    }\n  };\n\n  InfiniteScroll.prototype.restoreInfiniteAdd = function () {\n    var content = this.parent.getContent().firstElementChild;\n\n    if (this.parent.getRowByIndex(0) && this.isNormaledit && this.parent.infiniteScrollSettings.enableCache && this.isAdd && !content.querySelector('.e-addedrow')) {\n      var isTop = content.scrollTop < this.parent.getRowHeight();\n\n      if (isTop) {\n        this.parent.isEdit = false;\n        this.parent.addRecord();\n      }\n    }\n  };\n\n  InfiniteScroll.prototype.appendInfiniteRows = function (e) {\n    var target = document.activeElement;\n    var frozenCols = this.parent.isFrozenGrid();\n    var scrollEle = this.parent.getContent().firstElementChild;\n    var isInfiniteScroll = this.parent.enableInfiniteScrolling && e.args.requestType === 'infiniteScroll';\n    var isMovable = this.parent.getFrozenMode() === 'Left-Right' && e.tableName === 'movable';\n\n    if (isInfiniteScroll && !e.args.isFrozen && !isMovable || !isInfiniteScroll) {\n      if (isInfiniteScroll && e.args.direction === 'up') {\n        e.tbody.insertBefore(e.frag, e.tbody.firstElementChild);\n      } else {\n        e.tbody.appendChild(e.frag);\n      }\n    }\n\n    if (!frozenCols) {\n      this.parent.contentModule.getTable().appendChild(e.tbody);\n    } else {\n      if (isInfiniteScroll) {\n        if (e.tableName === 'frozen-left' || this.parent.getFrozenMode() === 'Right' && e.tableName === 'frozen-right') {\n          this.frozenFrag = e.frag;\n        } else if (this.parent.getFrozenMode() === 'Left-Right' && e.tableName === 'movable') {\n          this.movableFrag = e.frag;\n        } else {\n          var tbody = this.parent.getFrozenVirtualContent().querySelector('tbody');\n          e.args.direction === 'up' ? tbody.insertBefore(this.frozenFrag, tbody.firstElementChild) : tbody.appendChild(this.frozenFrag);\n\n          if (e.tableName === 'frozen-right') {\n            this.parent.getMovableVirtualContent().querySelector('tbody').appendChild(this.movableFrag);\n            this.parent.element.querySelector('.e-frozen-right-content').querySelector('tbody').appendChild(e.frag);\n          } else {\n            this.parent.getMovableVirtualContent().querySelector('.e-table').appendChild(e.tbody);\n          }\n\n          this.parent.contentModule.refreshScrollOffset();\n        }\n      } else {\n        var table = void 0;\n\n        if (e.tableName === 'frozen-left') {\n          table = this.parent.getFrozenVirtualContent().querySelector('.e-table');\n        } else if (e.tableName === 'movable') {\n          table = this.parent.getMovableVirtualContent().querySelector('.e-table');\n\n          if (this.parent.getFrozenMode() !== 'Left-Right') {\n            this.parent.contentModule.refreshScrollOffset();\n          }\n        } else {\n          table = this.parent.element.querySelector('.e-frozen-right-content').querySelector('.e-table');\n\n          if (this.parent.getFrozenMode() === 'Left-Right') {\n            this.parent.contentModule.refreshScrollOffset();\n          }\n        }\n\n        table.appendChild(e.tbody);\n        this.widthService.refreshFrozenScrollbar();\n      }\n    }\n\n    if (this.isInitialRender && !e.args.isFrozen) {\n      this.isInitialRender = false;\n      this.parent.scrollModule.setHeight();\n    }\n\n    if (!e.args.isFrozen) {\n      this.rowTop = !this.rowTop ? this.parent.getRows()[0].getBoundingClientRect().top : this.rowTop;\n\n      if (isInfiniteScroll) {\n        if (this.parent.infiniteScrollSettings.enableCache && this.isRemove) {\n          scrollEle.scrollTop = this.top;\n        }\n\n        setRowElements(this.parent);\n        this.selectNewRow(e.tbody, e.args.startIndex);\n        this.pressedKey = undefined;\n      }\n\n      this.restoreInfiniteAdd();\n    }\n\n    this.isInfiniteScroll = false;\n  };\n\n  InfiniteScroll.prototype.selectNewRow = function (tbody, startIndex) {\n    var _this = this;\n\n    var row = this.parent.getRowByIndex(this.rowIndex);\n\n    if (this.keys.some(function (value) {\n      return value === _this.pressedKey;\n    })) {\n      if (this.pressedKey === 'downArrow' || this.parent.infiniteScrollSettings.enableCache && this.pressedKey === 'upArrow') {\n        setTimeout(function () {\n          // tslint:disable-next-line:no-any\n          var target = row.cells[0];\n          target.focus({\n            preventScroll: true\n          });\n\n          _this.parent.selectRow(_this.rowIndex);\n\n          _this.parent.getContent().firstElementChild.scrollTop += _this.parent.getRowHeight();\n        }, 0);\n      }\n\n      if (this.pressedKey === 'PageDown') {\n        var row_1 = this.parent.getRowByIndex(startIndex);\n\n        if (row_1) {\n          row_1.cells[0].focus();\n        }\n      }\n\n      if (this.pressedKey === 'PageUp') {\n        tbody.querySelector('.e-row').cells[0].focus();\n      }\n    }\n  };\n\n  InfiniteScroll.prototype.removeInfiniteCacheRows = function (e) {\n    var isInfiniteScroll = this.parent.enableInfiniteScrolling && e.args.requestType === 'infiniteScroll';\n\n    if (!e.args.isFrozen && isInfiniteScroll && this.parent.infiniteScrollSettings.enableCache && this.isRemove) {\n      var rows = [].slice.call(this.parent.getContentTable().querySelectorAll('.e-row'));\n\n      if (e.args.direction === 'down') {\n        if (this.parent.allowGrouping && this.parent.groupSettings.columns.length) {\n          var captionRows = [].slice.call(this.parent.getContentTable().querySelectorAll('tr'));\n          this.removeCaptionRows(captionRows, e.args);\n        }\n\n        var addRowCount = this.parent.element.querySelector('.e-addedrow') ? 0 : 1;\n        this.removeTopRows(rows, this.parent.pageSettings.pageSize - addRowCount);\n      }\n\n      if (e.args.direction === 'up') {\n        if (this.parent.allowGrouping && this.parent.groupSettings.columns.length) {\n          var captionRows = [].slice.call(this.parent.getContentTable().querySelectorAll('tr'));\n          this.removeCaptionRows(captionRows, e.args);\n        } else {\n          this.removeBottomRows(rows, rows.length - 1, e.args);\n        }\n      }\n\n      this.isScroll = false;\n      this.top = this.calculateScrollTop(e.args);\n    }\n  };\n\n  InfiniteScroll.prototype.calculateScrollTop = function (args) {\n    var top = 0;\n    var scrollCnt = this.parent.getContent().firstElementChild;\n\n    if (args.direction === 'down') {\n      if (this.parent.allowGrouping && this.parent.groupSettings.columns.length && !this.isInitialCollapse) {\n        top = this.captionRowHeight();\n      }\n\n      var captionRows = [].slice.call(this.parent.getContent().firstElementChild.querySelectorAll('tr:not(.e-row)'));\n      var captionCount = 0;\n\n      if (this.isInitialCollapse && !isNullOrUndefined(captionRows)) {\n        captionCount = Math.round((captionRows.length - 1) / this.parent.groupSettings.columns.length);\n      }\n\n      var value = captionCount ? captionCount : this.parent.pageSettings.pageSize * (this.parent.infiniteScrollSettings.maxBlocks - 1);\n      var currentViewRowCount = 0;\n      var i = 0;\n\n      while (currentViewRowCount < scrollCnt.clientHeight) {\n        i++;\n        currentViewRowCount = i * this.parent.getRowHeight();\n      }\n\n      i = i - 1;\n      top += (value - i) * this.parent.getRowHeight();\n    }\n\n    if (args.direction === 'up') {\n      if (this.parent.allowGrouping && this.parent.groupSettings.columns.length && !this.isInitialCollapse) {\n        top = this.infiniteCache[this.parent.pageSettings.currentPage].length * this.parent.getRowHeight();\n      } else if (this.isInitialCollapse) {\n        var groupedData = this.infiniteCache[this.parent.pageSettings.currentPage];\n        var count = 0;\n\n        for (var i = 0; i < groupedData.length; i++) {\n          if (groupedData[i].isCaptionRow) {\n            count++;\n          }\n        }\n\n        top += Math.round(count / this.parent.groupSettings.columns.length) * this.parent.getRowHeight();\n      } else {\n        top += this.parent.pageSettings.pageSize * this.parent.getRowHeight() + getScrollBarWidth();\n      }\n    }\n\n    return top;\n  };\n\n  InfiniteScroll.prototype.captionRowHeight = function () {\n    var rows = [].slice.call(this.parent.getContent().querySelectorAll('tr:not(.e-row)'));\n    return rows.length * this.parent.getRowHeight();\n  };\n\n  InfiniteScroll.prototype.removeTopRows = function (rows, maxIndx) {\n    var frozeCols = this.parent.isFrozenGrid();\n    var frRows = this.parent.getFrozenMode() === 'Left-Right' ? [].slice.call(this.parent.element.querySelector('.e-frozen-right-content').querySelectorAll('.e-row')) : null;\n    var movableRows = frozeCols ? [].slice.call(this.parent.getMovableVirtualContent().querySelectorAll('.e-row')) : null;\n\n    for (var i = 0; i <= maxIndx; i++) {\n      if (this.parent.frozenRows && this.parent.pageSettings.currentPage === this.parent.infiniteScrollSettings.maxBlocks + 1 && i > maxIndx - this.parent.frozenRows) {\n        continue;\n      }\n\n      remove(rows[i]);\n\n      if (movableRows) {\n        remove(movableRows[i]);\n      }\n\n      if (frRows) {\n        remove(frRows[i]);\n      }\n    }\n  };\n\n  InfiniteScroll.prototype.removeBottomRows = function (rows, maxIndx, args) {\n    var cnt = 0;\n    var frozeCols = this.parent.isFrozenGrid();\n    var movableRows = frozeCols ? [].slice.call(this.parent.getMovableVirtualContent().querySelectorAll('.e-row')) : null;\n    var frRows = this.parent.getFrozenMode() === 'Left-Right' ? [].slice.call(this.parent.element.querySelector('.e-frozen-right-content').querySelectorAll('.e-row')) : null;\n    var pageSize = this.parent.pageSettings.pageSize;\n\n    if (!frozeCols && this.infiniteCache[args.prevPage].length < pageSize) {\n      cnt = this.parent.pageSettings.pageSize - this.infiniteCache[args.prevPage].length;\n    }\n\n    if (frozeCols && this.infiniteFrozenCache[args.prevPage][1].length < pageSize) {\n      cnt = this.parent.pageSettings.pageSize - this.infiniteFrozenCache[args.prevPage][1].length;\n    }\n\n    for (var i = maxIndx; cnt < pageSize; i--) {\n      cnt++;\n      remove(rows[i]);\n\n      if (movableRows) {\n        remove(movableRows[i]);\n      }\n\n      if (frRows) {\n        remove(frRows[i]);\n      }\n    }\n  };\n\n  InfiniteScroll.prototype.removeCaptionRows = function (rows, args) {\n    if (args.direction === 'down') {\n      var lastRow = this.parent.getRows()[this.parent.pageSettings.pageSize];\n      var lastRowIndex = parseInt(lastRow.getAttribute('aria-rowindex'), 10) - 1;\n      var k = 0;\n\n      for (var i = 0; k < lastRowIndex; i++) {\n        if (!rows[i].classList.contains('e-row')) {\n          remove(rows[i]);\n        } else {\n          k = parseInt(rows[i].getAttribute('aria-rowindex'), 10);\n        }\n      }\n    }\n\n    if (args.direction === 'up') {\n      var rowElements = [].slice.call(this.parent.getContent().querySelectorAll('.e-row'));\n      var lastIndex = parseInt(rowElements[rowElements.length - 1].getAttribute('aria-rowindex'), 10);\n      var page = Math.ceil(lastIndex / this.parent.pageSettings.pageSize);\n      var startIndex = 0;\n\n      for (var i = this.parent.pageSettings.currentPage + 1; i < page; i++) {\n        startIndex += this.infiniteCache[i].length;\n      }\n\n      for (var i = startIndex; i < rows.length; i++) {\n        remove(rows[i]);\n      }\n    }\n  };\n\n  InfiniteScroll.prototype.resetInfiniteBlocks = function (args, isDataModified) {\n    var isInfiniteScroll = this.parent.enableInfiniteScrolling && args.requestType !== 'infiniteScroll';\n\n    if (!this.initialRender && !isNullOrUndefined(this.parent.infiniteScrollModule) && isInfiniteScroll) {\n      if (this.actions.some(function (value) {\n        return value === args.requestType;\n      }) || isDataModified) {\n        var scrollEle = this.parent.getContent().firstElementChild;\n        this.initialRender = true;\n        scrollEle.scrollTop = 0;\n        this.parent.pageSettings.currentPage = 1;\n        this.infiniteCache = this.infiniteFrozenCache = {};\n        this.resetContentModuleCache({});\n        this.isRemove = false;\n        this.top = 0;\n        this.isInitialMovableRender = true;\n        this.isInitialCollapse = false;\n        this.parent.contentModule.isRemove = this.isRemove;\n        this.parent.contentModule.isAddRows = this.isRemove;\n        this.parent.contentModule.visibleRows = [];\n        this.parent.contentModule.visibleFrozenRows = [];\n      }\n    }\n  };\n\n  InfiniteScroll.prototype.setCache = function (e) {\n    if (this.parent.enableInfiniteScrolling && this.parent.infiniteScrollSettings.enableCache) {\n      var frozeCols = this.parent.isFrozenGrid();\n      var idx = e.args.isFrozen ? 1 : 0;\n      var isEdit = e.args.requestType !== 'infiniteScroll' && (this.requestType === 'delete' || this.requestType === 'add');\n      var currentPage = this.parent.pageSettings.currentPage;\n\n      if (frozeCols && this.isInitialMovableRender || !frozeCols && !Object.keys(this.infiniteCache).length || isEdit) {\n        this.isInitialMovableRender = !e.args.isFrozen;\n        this.setInitialCache(e.modelData, e.args, isEdit);\n      }\n\n      if (!frozeCols && isNullOrUndefined(this.infiniteCache[this.parent.pageSettings.currentPage])) {\n        this.infiniteCache[this.parent.pageSettings.currentPage] = e.modelData;\n        this.resetContentModuleCache(this.infiniteCache);\n      }\n\n      if (frozeCols) {\n        if (idx === 0 && isNullOrUndefined(this.infiniteFrozenCache[currentPage]) || !this.infiniteFrozenCache[currentPage][idx].length) {\n          this.createFrozenCache(currentPage);\n          this.infiniteFrozenCache[currentPage][idx] = e.modelData;\n\n          if (idx === 1) {\n            this.resetContentModuleCache(this.infiniteFrozenCache);\n          }\n        }\n      }\n\n      if (e.isInfiniteScroll && !this.isRemove) {\n        this.isRemove = (currentPage - 1) % this.parent.infiniteScrollSettings.maxBlocks === 0;\n        this.parent.contentModule.isRemove = this.isRemove;\n      }\n    }\n  };\n\n  InfiniteScroll.prototype.setInitialCache = function (data, args, isEdit) {\n    var frozenCols = this.parent.isFrozenGrid();\n    var idx = args.isFrozen ? 1 : 0;\n    var k = !isEdit ? 1 : this.firstBlock;\n\n    for (var i = 1; i <= this.parent.infiniteScrollSettings.initialBlocks; i++) {\n      var startIndex = (i - 1) * this.parent.pageSettings.pageSize;\n      var endIndex = i * this.parent.pageSettings.pageSize;\n\n      if (this.parent.allowGrouping && this.parent.groupSettings.columns.length) {\n        this.setInitialGroupCache(data, k, startIndex, endIndex);\n      } else {\n        if (frozenCols) {\n          this.createFrozenCache(k);\n          this.infiniteFrozenCache[k][idx] = data.slice(startIndex, endIndex);\n          this.resetContentModuleCache(this.infiniteFrozenCache);\n        } else {\n          this.infiniteCache[k] = data.slice(startIndex, endIndex);\n          this.resetContentModuleCache(this.infiniteCache);\n        }\n      }\n\n      k++;\n    }\n  };\n\n  InfiniteScroll.prototype.createFrozenCache = function (index) {\n    if (!this.infiniteFrozenCache[index]) {\n      this.infiniteFrozenCache[index] = [[], []];\n    }\n  };\n\n  InfiniteScroll.prototype.setInitialGroupCache = function (data, index, sIndex, eIndex) {\n    var pageData = [];\n    var startIndex = 0;\n\n    for (var i = 1; i <= Object.keys(this.infiniteCache).length; i++) {\n      startIndex += this.infiniteCache[i].length;\n    }\n\n    var k = sIndex;\n\n    for (var i = startIndex; i < data.length && k < eIndex; i++) {\n      if (data[i].index < eIndex || data[i].isCaptionRow) {\n        k = data[i].isCaptionRow ? k : data[i].index;\n        pageData.push(data[i]);\n      }\n\n      if (data[i].index >= eIndex || data[i].index === eIndex - 1) {\n        break;\n      }\n    }\n\n    this.infiniteCache[index] = pageData;\n    this.resetContentModuleCache(this.infiniteCache);\n  };\n\n  InfiniteScroll.prototype.resetContentModuleCache = function (data) {\n    this.parent.contentModule.infiniteCache = data;\n  };\n  /**\n   * @hidden\n   */\n\n\n  InfiniteScroll.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n\n  return InfiniteScroll;\n}();\n\nexport { InfiniteScroll };","map":{"version":3,"sources":["C:/Users/appsk/Documents/Projects/PredictiveMaintenance/React PDM/env/frontend/node_modules/@syncfusion/ej2-grids/src/grid/actions/infinite-scroll.js"],"names":["isNullOrUndefined","remove","extend","RowModelGenerator","FreezeRowModelGenerator","RowRenderer","events","getScrollBarWidth","ensureLastRow","ensureFirstRow","getEditedDataIndex","resetRowIndex","setRowElements","InfiniteScroll","parent","serviceLocator","infiniteCache","infiniteFrozenCache","isDownScroll","isUpScroll","isScroll","enableContinuousScroll","initialRender","isRemove","isInitialCollapse","prevScrollTop","actions","keys","rowTop","isInitialMovableRender","virtualInfiniteData","isCancel","emptyRowData","isNormaledit","isInfiniteScroll","isLastPage","isInitialRender","editSettings","mode","addEventListener","widthService","getService","rowModelGenerator","isFrozenGrid","prototype","getModuleName","on","dataReady","onDataReady","dataSourceModified","infinitePageQuery","infiniteScrollHandler","beforeCellFocused","infiniteCellFocus","appendInfiniteContent","appendInfiniteRows","removeInfiniteRows","removeInfiniteCacheRows","resetInfiniteBlocks","setInfiniteCache","setCache","initialCollapse","ensureIntialCollapse","keyPressed","infiniteShowHide","setDisplayNone","virtualScrollEditActionBegin","editActionBegin","getVirtualData","getVirtualInfiniteData","editReset","resetInfiniteEdit","virtualScrollEditSuccess","infiniteEditSuccess","refreshVirtualCache","refreshInfiniteCache","infiniteEditHandler","virtualScrollAddActionBegin","infiniteAddActionBegin","modelChanged","deleteComplete","deleteComplate","actionBegin","bind","actionComplete","removeEventListener","isDestroyed","off","infiniteScrollSettings","enableCache","contentModule","refreshScrollOffset","args","requestType","rows","getRows","firstIndex","parseInt","getAttribute","firstBlock","Math","ceil","pageSettings","pageSize","lastIndex","length","rowObj","getRowsObject","startIndex","index","currentPage","maxPage","isAdd","Object","createEmptyRowdata","startEdit","makeRequest","e","frozenCols","rowElms","ensureRowAvailability","result","rows_1","getMovableRowsObject","getMovableDataRows","getFrozenMode","frRows","getFrozenRightRowsObject","getFrozenRightRows","createRow","selectionModule","frozenRows","movableRows","rightRows","getFrozenRightDataRows","hideSpinner","notify","saveComplete","freezeRender","case","isMovable","isFrozenRows","isFrozenRight","row","generateRows","rowRenderer","tbody","element","querySelector","getContent","getMovableVirtualContent","getFrozenVirtualContent","getHeaderContent","getMovableVirtualHeader","getFrozenVirtualHeader","i","appendChild","render","getColumns","insertBefore","firstElementChild","rowElems","rightFreezeRows","concat","visibleRows","visibleFrozenRows","data","resume","sortSettings","columns","key","getPrimaryKeyFieldNames","keyField","splice","filter","cache","isFreeze","cells","visible","resetContentModuleCache","getEditedRowObject","rowObjects","editedrow","editRowIndex","updateCurrentViewRecords","getCurrentViewRecords","cancel","empty","isEdit","editModule","previousVirtualData","enableInfiniteScrolling","allowEditing","allowAdding","virtualData","rowObject","count","isExpand","_this","restoreInfiniteEdit","restoreInfiniteAdd","targetEle","target","isInfinite","classList","contains","scrollEle","scrollTop","prevPage","offset","scrollHeight","round","floor","clientHeight","isBottom","setTimeout","rows_2","slice","call","querySelectorAll","rowIndex","direction","top","getVirtualInfiniteEditedData","refreshInfiniteModeBlocks","query","intialPageQuery","editPageQuery","page","initialBlocks","isCache","skip","take","clearSelection","maxBlocks","byKey","keyArgs","action","pressedKey","ele","document","activeElement","parentElement","cellIndex","getRowByIndex","visibleRowCount","offsetHeight","getRowHeight","height","getBoundingClientRect","nTop","oTop","field","editForm","addForm","gridForm","rowData","getCurrentEditedData","content","frozenEdit","top_1","isTop","addRecord","tableName","isFrozen","frag","getTable","frozenFrag","movableFrag","table","refreshFrozenScrollbar","scrollModule","setHeight","selectNewRow","undefined","some","value","focus","preventScroll","selectRow","row_1","getContentTable","allowGrouping","groupSettings","captionRows","removeCaptionRows","addRowCount","removeTopRows","removeBottomRows","calculateScrollTop","scrollCnt","captionRowHeight","captionCount","currentViewRowCount","groupedData","isCaptionRow","maxIndx","frozeCols","cnt","lastRow","lastRowIndex","k","rowElements","isDataModified","infiniteScrollModule","isAddRows","idx","setInitialCache","modelData","createFrozenCache","endIndex","setInitialGroupCache","sIndex","eIndex","pageData","push","destroy"],"mappings":"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","sourcesContent":["import { isNullOrUndefined, remove, extend } from '@syncfusion/ej2-base';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { FreezeRowModelGenerator } from '../services/freeze-row-model-generator';\nimport { RowRenderer } from '../renderer/row-renderer';\nimport * as events from '../base/constant';\nimport { getScrollBarWidth, ensureLastRow, ensureFirstRow, getEditedDataIndex, resetRowIndex, setRowElements } from '../base/util';\n/**\n * Infinite Scrolling class\n * @hidden\n */\nvar InfiniteScroll = /** @class */ (function () {\n    /**\n     * Constructor for the Grid infinite scrolling.\n     * @hidden\n     */\n    function InfiniteScroll(parent, serviceLocator) {\n        this.infiniteCache = {};\n        this.infiniteFrozenCache = {};\n        this.isDownScroll = false;\n        this.isUpScroll = false;\n        this.isScroll = true;\n        this.enableContinuousScroll = false;\n        this.initialRender = true;\n        this.isRemove = false;\n        this.isInitialCollapse = false;\n        this.prevScrollTop = 0;\n        this.actions = ['filtering', 'searching', 'grouping', 'ungrouping', 'reorder', 'sorting'];\n        this.keys = ['downArrow', 'upArrow', 'PageUp', 'PageDown'];\n        this.rowTop = 0;\n        this.isInitialMovableRender = true;\n        this.virtualInfiniteData = {};\n        this.isCancel = false;\n        this.emptyRowData = {};\n        this.isNormaledit = false;\n        this.isInfiniteScroll = false;\n        this.isLastPage = false;\n        this.isInitialRender = true;\n        this.parent = parent;\n        this.serviceLocator = serviceLocator;\n        this.isNormaledit = this.parent.editSettings.mode === 'Normal';\n        this.addEventListener();\n        this.widthService = serviceLocator.getService('widthService');\n        this.rowModelGenerator = this.parent.isFrozenGrid() ? new FreezeRowModelGenerator(this.parent)\n            : new RowModelGenerator(this.parent);\n    }\n    InfiniteScroll.prototype.getModuleName = function () {\n        return 'infiniteScroll';\n    };\n    /**\n     * @hidden\n     */\n    InfiniteScroll.prototype.addEventListener = function () {\n        this.parent.on(events.dataReady, this.onDataReady, this);\n        this.parent.on(events.dataSourceModified, this.dataSourceModified, this);\n        this.parent.on(events.infinitePageQuery, this.infinitePageQuery, this);\n        this.parent.on(events.infiniteScrollHandler, this.infiniteScrollHandler, this);\n        this.parent.on(events.beforeCellFocused, this.infiniteCellFocus, this);\n        this.parent.on(events.appendInfiniteContent, this.appendInfiniteRows, this);\n        this.parent.on(events.removeInfiniteRows, this.removeInfiniteCacheRows, this);\n        this.parent.on(events.resetInfiniteBlocks, this.resetInfiniteBlocks, this);\n        this.parent.on(events.setInfiniteCache, this.setCache, this);\n        this.parent.on(events.initialCollapse, this.ensureIntialCollapse, this);\n        this.parent.on(events.keyPressed, this.infiniteCellFocus, this);\n        this.parent.on(events.infiniteShowHide, this.setDisplayNone, this);\n        this.parent.on(events.virtualScrollEditActionBegin, this.editActionBegin, this);\n        this.parent.on(events.getVirtualData, this.getVirtualInfiniteData, this);\n        this.parent.on(events.editReset, this.resetInfiniteEdit, this);\n        this.parent.on(events.virtualScrollEditSuccess, this.infiniteEditSuccess, this);\n        this.parent.on(events.refreshVirtualCache, this.refreshInfiniteCache, this);\n        this.parent.on(events.infiniteEditHandler, this.infiniteEditHandler, this);\n        this.parent.on(events.virtualScrollAddActionBegin, this.infiniteAddActionBegin, this);\n        this.parent.on(events.modelChanged, this.modelChanged, this);\n        this.parent.on(events.deleteComplete, this.deleteComplate, this);\n        this.parent.addEventListener(events.actionBegin, this.actionBegin.bind(this));\n        this.parent.addEventListener(events.actionComplete, this.actionComplete.bind(this));\n    };\n    /**\n     * @hidden\n     */\n    InfiniteScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.dataReady, this.onDataReady);\n        this.parent.off(events.dataSourceModified, this.dataSourceModified);\n        this.parent.off(events.infinitePageQuery, this.infinitePageQuery);\n        this.parent.off(events.infiniteScrollHandler, this.infiniteScrollHandler);\n        this.parent.off(events.beforeCellFocused, this.infiniteCellFocus);\n        this.parent.off(events.appendInfiniteContent, this.appendInfiniteRows);\n        this.parent.off(events.removeInfiniteRows, this.removeInfiniteCacheRows);\n        this.parent.off(events.resetInfiniteBlocks, this.resetInfiniteBlocks);\n        this.parent.off(events.setInfiniteCache, this.setCache);\n        this.parent.off(events.initialCollapse, this.ensureIntialCollapse);\n        this.parent.off(events.keyPressed, this.infiniteCellFocus);\n        this.parent.off(events.infiniteShowHide, this.setDisplayNone);\n        this.parent.off(events.virtualScrollEditActionBegin, this.editActionBegin);\n        this.parent.off(events.getVirtualData, this.getVirtualInfiniteData);\n        this.parent.off(events.editReset, this.resetInfiniteEdit);\n        this.parent.off(events.virtualScrollEditSuccess, this.infiniteEditSuccess);\n        this.parent.off(events.refreshVirtualCache, this.refreshInfiniteCache);\n        this.parent.off(events.infiniteEditHandler, this.infiniteEditHandler);\n        this.parent.off(events.virtualScrollAddActionBegin, this.infiniteAddActionBegin);\n        this.parent.off(events.modelChanged, this.modelChanged);\n        this.parent.removeEventListener(events.actionBegin, this.actionBegin.bind(this));\n        this.parent.removeEventListener(events.actionComplete, this.actionComplete.bind(this));\n    };\n    InfiniteScroll.prototype.deleteComplate = function () {\n        if (this.parent.isFrozenGrid() && !this.parent.infiniteScrollSettings.enableCache) {\n            this.parent.contentModule.refreshScrollOffset();\n        }\n    };\n    InfiniteScroll.prototype.modelChanged = function (args) {\n        if (args.requestType !== 'infiniteScroll' && (args.requestType === 'delete' || this.requestType === 'add')) {\n            var rows = this.parent.getRows();\n            this.firstIndex = parseInt(rows[0].getAttribute('aria-rowindex'), 10);\n            this.firstBlock = Math.ceil((this.firstIndex + 1) / this.parent.pageSettings.pageSize);\n            this.lastIndex = parseInt(rows[rows.length - 1].getAttribute('aria-rowindex'), 10);\n            if (args.requestType === 'delete') {\n                var rowObj = this.parent.getRowsObject();\n                args.startIndex = this.parent.infiniteScrollSettings.enableCache\n                    ? (this.firstBlock - 1) * this.parent.pageSettings.pageSize : rowObj[rowObj.length - 1].index;\n            }\n            else {\n                args.startIndex = this.firstIndex;\n            }\n            if (!this.parent.infiniteScrollSettings.enableCache\n                && this.parent.pageSettings.currentPage === this.maxPage && args.requestType === 'delete') {\n                this.isLastPage = true;\n                this.lastIndex = this.lastIndex - 1;\n            }\n        }\n    };\n    InfiniteScroll.prototype.infiniteAddActionBegin = function (args) {\n        if (this.isNormaledit) {\n            this.isAdd = true;\n            if (this.parent.infiniteScrollSettings.enableCache) {\n                if (!Object.keys(this.emptyRowData).length) {\n                    this.createEmptyRowdata();\n                }\n                if (this.parent.pageSettings.currentPage > 1) {\n                    args.startEdit = false;\n                    this.resetInfiniteBlocks({}, true);\n                    this.makeRequest({ currentPage: 1 });\n                }\n            }\n        }\n    };\n    InfiniteScroll.prototype.infiniteEditHandler = function (args) {\n        if (!this.parent.infiniteScrollSettings.enableCache && (args.e.requestType === 'delete'\n            || (args.e.requestType === 'save' && this.requestType === 'add'))) {\n            var frozenCols = this.parent.isFrozenGrid();\n            var rowElms = this.parent.getRows();\n            var rows = this.parent.getRowsObject();\n            if (this.ensureRowAvailability(rows, args.result[0])) {\n                this.resetRowIndex(rows, args.e, rowElms, this.requestType === 'add');\n                if (frozenCols) {\n                    var rows_1 = this.parent.getMovableRowsObject();\n                    this.resetRowIndex(rows_1, args.e, this.parent.getMovableDataRows(), this.requestType === 'add');\n                    if (this.parent.getFrozenMode() === 'Left-Right') {\n                        var frRows = this.parent.getFrozenRightRowsObject();\n                        this.resetRowIndex(frRows, args.e, this.parent.getFrozenRightRows(), this.requestType === 'add');\n                    }\n                }\n                if (!this.isLastPage) {\n                    this.createRow(rows, args);\n                }\n                else {\n                    this.isLastPage = false;\n                    this.parent.pageSettings.currentPage = this.maxPage;\n                    if (this.parent.selectionModule.index < this.parent.frozenRows) {\n                        remove(rowElms[this.parent.frozenRows - 1]);\n                        this.createRow([rows[this.parent.frozenRows - 1]], args, false, true);\n                        if (frozenCols) {\n                            var movableRows = this.parent.getMovableDataRows();\n                            remove(movableRows[this.parent.frozenRows]);\n                            this.createRow([this.parent.getMovableRowsObject()[this.parent.frozenRows - 1]], args, true, true);\n                            if (this.parent.getFrozenMode() === 'Left-Right') {\n                                var rightRows = this.parent.getFrozenRightDataRows();\n                                remove(rightRows[this.parent.frozenRows]);\n                                this.createRow([this.parent.getFrozenRightRowsObject()[this.parent.frozenRows - 1]], args, false, true, true);\n                            }\n                        }\n                        setRowElements(this.parent);\n                    }\n                }\n            }\n            this.parent.hideSpinner();\n            this.requestType === 'delete' ? this.parent.notify(events.deleteComplete, args.e)\n                : this.parent.notify(events.saveComplete, args.e);\n        }\n        this.parent.notify(events.freezeRender, { case: 'refreshHeight' });\n    };\n    InfiniteScroll.prototype.createRow = function (rows, args, isMovable, isFrozenRows, isFrozenRight) {\n        var row = !isFrozenRows ? this.generateRows(args.result, args.e) : rows;\n        var rowRenderer = new RowRenderer(this.serviceLocator, null, this.parent);\n        var tbody;\n        if (isFrozenRight) {\n            tbody = this.parent.element.querySelector('.e-frozen-right-content').querySelector('tbody');\n        }\n        else {\n            tbody = !this.parent.isFrozenGrid() ? this.parent.getContent().querySelector('tbody') : isMovable\n                ? this.parent.getMovableVirtualContent().querySelector('tbody')\n                : this.parent.getFrozenVirtualContent().querySelector('tbody');\n        }\n        if (this.parent.frozenRows) {\n            tbody = isFrozenRows && this.requestType !== 'add' || !isFrozenRows && this.requestType === 'add'\n                ? !this.parent.isFrozenGrid() ? this.parent.getHeaderContent().querySelector('tbody')\n                    : isMovable ? this.parent.getMovableVirtualHeader().querySelector('tbody')\n                        : isFrozenRight ? this.parent.element.querySelector('.e-frozen-right-header').querySelector('tbody')\n                            : this.parent.getFrozenVirtualHeader().querySelector('tbody') : tbody;\n        }\n        for (var i = row.length - 1; i >= 0; i--) {\n            if (this.requestType === 'delete') {\n                tbody.appendChild(rowRenderer.render(row[i], this.parent.getColumns()));\n            }\n            else {\n                tbody.insertBefore(rowRenderer.render(row[i], this.parent.getColumns()), tbody.firstElementChild);\n            }\n        }\n        if (!isFrozenRows && this.parent.frozenRows\n            && (this.parent.selectionModule.index < this.parent.frozenRows || this.requestType === 'add')) {\n            var rowElems = isMovable ? this.parent.getMovableDataRows() : isFrozenRight ? this.parent.getFrozenRightDataRows()\n                : this.parent.getRows();\n            var index = (isMovable || isFrozenRight) && this.requestType === 'add'\n                ? this.parent.frozenRows : this.parent.frozenRows - 1;\n            remove(rowElems[index]);\n            this.createRow([rows[this.parent.frozenRows - 1]], args, isMovable, true, isFrozenRight);\n        }\n        if (!this.parent.infiniteScrollSettings.enableCache && !isFrozenRows) {\n            if (isFrozenRight) {\n                setRowElements(this.parent);\n                this.parent.contentModule.rightFreezeRows = this.requestType === 'add'\n                    ? row.concat(rows) : rows.concat(row);\n            }\n            else if (!this.parent.isFrozenGrid() || isMovable) {\n                setRowElements(this.parent);\n                this.parent.contentModule.visibleRows = this.requestType === 'add'\n                    ? row.concat(rows) : rows.concat(row);\n                if (this.parent.getFrozenMode() === 'Left-Right') {\n                    this.createRow(this.parent.getFrozenRightRowsObject(), args, false, false, true);\n                }\n            }\n            else {\n                this.parent.contentModule.visibleFrozenRows = this.requestType === 'add'\n                    ? row.concat(rows) : rows.concat(row);\n                this.createRow(this.parent.getMovableRowsObject(), args, true);\n            }\n        }\n    };\n    InfiniteScroll.prototype.ensureRowAvailability = function (rows, data) {\n        var resume = true;\n        if (this.parent.frozenRows && !this.parent.infiniteScrollSettings.enableCache\n            && this.parent.sortSettings.columns && this.requestType === 'add') {\n            var key = this.parent.getPrimaryKeyFieldNames()[0];\n            for (var i = 0; i < rows.length; i++) {\n                if (rows[i].data[key] === data[key]) {\n                    resume = false;\n                    break;\n                }\n            }\n        }\n        return resume;\n    };\n    InfiniteScroll.prototype.generateRows = function (data, args) {\n        return this.rowModelGenerator.generateRows(data, args);\n    };\n    InfiniteScroll.prototype.resetRowIndex = function (rows, args, rowElms, isAdd) {\n        var keyField = this.parent.getPrimaryKeyFieldNames()[0];\n        var isRemove = !(rowElms.length % this.parent.pageSettings.pageSize);\n        if (isAdd) {\n            if (isRemove) {\n                remove(rowElms[rows.length - 1]);\n                rowElms.splice(rows.length - 1, 1);\n                rows.splice(rows.length - 1, 1);\n            }\n        }\n        else {\n            rows.filter(function (e, index) {\n                if (e.data[keyField] === args.data[0][keyField]) {\n                    rows.splice(index, 1);\n                    remove(rowElms[index]);\n                    rowElms.splice(index, 1);\n                }\n            });\n        }\n        var startIndex = isAdd ? 1 : 0;\n        resetRowIndex(this.parent, rows, rowElms, startIndex);\n    };\n    InfiniteScroll.prototype.setDisplayNone = function (args) {\n        if (this.parent.infiniteScrollSettings.enableCache) {\n            var frozenCols = this.parent.isFrozenGrid();\n            var keys = frozenCols ? Object.keys(this.infiniteFrozenCache) : Object.keys(this.infiniteCache);\n            for (var i = 1; i <= keys.length; i++) {\n                var cache = frozenCols ? args.isFreeze ? this.infiniteFrozenCache[i][0]\n                    : this.infiniteFrozenCache[i][1] : this.infiniteCache[i];\n                cache.filter(function (e) {\n                    e.cells[args.index].visible = args.visible === '';\n                });\n            }\n            this.resetContentModuleCache(frozenCols ? this.infiniteFrozenCache : this.infiniteCache);\n        }\n    };\n    InfiniteScroll.prototype.refreshInfiniteCache = function (data) {\n        this.getEditedRowObject().data = data;\n    };\n    InfiniteScroll.prototype.getEditedRowObject = function () {\n        var rowObjects = this.parent.getRowsObject();\n        var editedrow;\n        for (var i = 0; i < rowObjects.length; i++) {\n            if (rowObjects[i].index === this.editRowIndex) {\n                editedrow = rowObjects[i];\n            }\n        }\n        return editedrow;\n    };\n    InfiniteScroll.prototype.infiniteEditSuccess = function (args) {\n        if (this.isNormaledit) {\n            if (!this.isAdd && args.data) {\n                this.updateCurrentViewRecords(args.data);\n            }\n            this.isAdd = false;\n        }\n    };\n    InfiniteScroll.prototype.updateCurrentViewRecords = function (data) {\n        var index = getEditedDataIndex(this.parent, data);\n        if (!isNullOrUndefined(index)) {\n            this.parent.getCurrentViewRecords()[index] = data;\n        }\n    };\n    InfiniteScroll.prototype.actionBegin = function (args) {\n        if (args.requestType === 'add' || args.requestType === 'delete') {\n            this.requestType = args.requestType;\n        }\n        if (this.parent.isFrozenGrid() && !args.cancel && args.requestType === 'searching'\n            || args.requestType === 'sorting' || args.requestType === 'filtering') {\n            this.isInitialRender = true;\n        }\n    };\n    InfiniteScroll.prototype.actionComplete = function (args) {\n        if (args.requestType === 'delete' || args.requestType === 'save' || args.requestType === 'cancel') {\n            this.requestType = this.empty;\n            this.isCancel = args.requestType === 'cancel' || args.requestType === 'save';\n            this.isAdd = this.isEdit = false;\n            if (this.isNormaledit) {\n                this.editRowIndex = this.empty;\n                this.virtualInfiniteData = {};\n                this.parent.editModule.previousVirtualData = {};\n            }\n        }\n    };\n    InfiniteScroll.prototype.resetInfiniteEdit = function () {\n        if (this.parent.enableInfiniteScrolling && this.isNormaledit) {\n            if ((this.parent.editSettings.allowEditing && this.isEdit) || (this.parent.editSettings.allowAdding && this.isAdd)) {\n                this.parent.isEdit = true;\n            }\n        }\n    };\n    InfiniteScroll.prototype.getVirtualInfiniteData = function (data) {\n        data.virtualData = this.virtualInfiniteData;\n        data.isAdd = this.isAdd;\n        data.isCancel = this.isCancel;\n    };\n    InfiniteScroll.prototype.editActionBegin = function (e) {\n        this.isEdit = true;\n        this.editRowIndex = e.index;\n        var rowObject = extend({}, this.getEditedRowObject().data);\n        e.data = Object.keys(this.virtualInfiniteData).length ? this.virtualInfiniteData : rowObject;\n    };\n    InfiniteScroll.prototype.dataSourceModified = function () {\n        this.resetInfiniteBlocks({ requestType: this.empty }, true);\n    };\n    InfiniteScroll.prototype.onDataReady = function (e) {\n        if (!isNullOrUndefined(e.count)) {\n            this.maxPage = Math.ceil(e.count / this.parent.pageSettings.pageSize);\n        }\n    };\n    InfiniteScroll.prototype.ensureIntialCollapse = function (isExpand) {\n        this.isInitialCollapse = !isExpand;\n    };\n    InfiniteScroll.prototype.infiniteScrollHandler = function (e) {\n        var _this = this;\n        this.restoreInfiniteEdit();\n        this.restoreInfiniteAdd();\n        var targetEle = e.target;\n        var isInfinite = targetEle.classList.contains('e-content');\n        if (isInfinite && this.parent.enableInfiniteScrolling) {\n            var scrollEle = this.parent.getContent().firstElementChild;\n            this.prevScrollTop = scrollEle.scrollTop;\n            var rows = this.parent.getRows();\n            var index = parseInt(rows[rows.length - 1].getAttribute('aria-rowindex'), 10) + 1;\n            var prevPage = this.parent.pageSettings.currentPage;\n            var args = void 0;\n            var offset = targetEle.scrollHeight - targetEle.scrollTop;\n            var round = Math.round(targetEle.scrollHeight - targetEle.scrollTop);\n            var floor = offset < targetEle.clientHeight ? Math.ceil(offset) : Math.floor(offset);\n            var isBottom = (floor === targetEle.clientHeight || round === targetEle.clientHeight);\n            if (this.isScroll && isBottom && (this.parent.pageSettings.currentPage <= this.maxPage - 1 || this.enableContinuousScroll)) {\n                if (this.parent.infiniteScrollSettings.enableCache) {\n                    this.isUpScroll = false;\n                    this.isDownScroll = true;\n                    setTimeout(function () {\n                        _this.isScroll = true;\n                    }, 600);\n                }\n                var rows_2 = [].slice.call(scrollEle.querySelectorAll('.e-row:not(.e-addedrow)'));\n                var row = rows_2[rows_2.length - 1];\n                var rowIndex = parseInt(row.getAttribute('aria-rowindex'), 10);\n                this.parent.pageSettings.currentPage = Math.ceil(rowIndex / this.parent.pageSettings.pageSize) + 1;\n                args = {\n                    requestType: 'infiniteScroll',\n                    currentPage: this.parent.pageSettings.currentPage,\n                    prevPage: prevPage,\n                    startIndex: index,\n                    direction: 'down'\n                };\n                this.makeRequest(args);\n            }\n            if (this.isScroll && this.parent.infiniteScrollSettings.enableCache && targetEle.scrollTop === 0\n                && this.parent.pageSettings.currentPage !== 1) {\n                if (this.parent.infiniteScrollSettings.enableCache) {\n                    this.isDownScroll = false;\n                    this.isUpScroll = true;\n                    setTimeout(function () {\n                        _this.isScroll = true;\n                    }, 600);\n                }\n                var row = [].slice.call(scrollEle.querySelectorAll('.e-row'));\n                var rowIndex = parseInt(row[this.parent.pageSettings.pageSize - 1].getAttribute('aria-rowindex'), 10);\n                var startIndex = parseInt(row[0].getAttribute('aria-rowindex'), 10) - this.parent.pageSettings.pageSize;\n                this.parent.pageSettings.currentPage = Math.ceil(rowIndex / this.parent.pageSettings.pageSize) - 1;\n                if (this.parent.pageSettings.currentPage) {\n                    args = {\n                        requestType: 'infiniteScroll',\n                        currentPage: this.parent.pageSettings.currentPage,\n                        prevPage: prevPage,\n                        startIndex: startIndex,\n                        direction: 'up'\n                    };\n                    this.makeRequest(args);\n                }\n            }\n            if (this.parent.infiniteScrollSettings.enableCache && !this.isScroll && isNullOrUndefined(args)) {\n                if (this.isDownScroll || this.isUpScroll) {\n                    scrollEle.scrollTop = this.top;\n                }\n            }\n        }\n    };\n    InfiniteScroll.prototype.makeRequest = function (args) {\n        var _this = this;\n        if (this.parent.pageSettings.currentPage !== args.prevPage) {\n            if (this.parent.pageSettings.currentPage <= this.maxPage) {\n                this.isInfiniteScroll = true;\n                if (isNullOrUndefined(this.infiniteCache[args.currentPage])) {\n                    setTimeout(function () {\n                        _this.getVirtualInfiniteEditedData();\n                        _this.parent.notify('model-changed', args);\n                    }, 100);\n                }\n                else {\n                    setTimeout(function () {\n                        _this.getVirtualInfiniteEditedData();\n                        _this.parent.notify(events.refreshInfiniteModeBlocks, args);\n                    }, 100);\n                }\n            }\n            else {\n                this.parent.pageSettings.currentPage = this.maxPage;\n            }\n        }\n    };\n    InfiniteScroll.prototype.infinitePageQuery = function (query) {\n        if (this.initialRender) {\n            this.initialRender = false;\n            this.intialPageQuery(query);\n        }\n        else {\n            if (!this.isInfiniteScroll && (this.requestType === 'delete' || this.requestType === 'add')) {\n                this.editPageQuery(query);\n            }\n            else {\n                query.page(this.parent.pageSettings.currentPage, this.parent.pageSettings.pageSize);\n            }\n        }\n    };\n    InfiniteScroll.prototype.editPageQuery = function (query) {\n        var initialBlocks = this.parent.infiniteScrollSettings.initialBlocks;\n        var isCache = this.parent.infiniteScrollSettings.enableCache;\n        if (isCache) {\n            this.infiniteCache = {};\n            this.infiniteFrozenCache = {};\n            query.skip(this.firstIndex);\n            query.take(initialBlocks * this.parent.pageSettings.pageSize);\n        }\n        else {\n            if (this.parent.editSettings.mode === 'Dialog') {\n                this.parent.clearSelection();\n            }\n            var index = this.requestType === 'delete' ? this.lastIndex : this.firstIndex;\n            query.skip(index);\n            query.take(1);\n        }\n    };\n    InfiniteScroll.prototype.intialPageQuery = function (query) {\n        if (this.parent.infiniteScrollSettings.enableCache\n            && this.parent.infiniteScrollSettings.initialBlocks > this.parent.infiniteScrollSettings.maxBlocks) {\n            this.parent.infiniteScrollSettings.initialBlocks = this.parent.infiniteScrollSettings.maxBlocks;\n        }\n        var pageSize = this.parent.pageSettings.pageSize * this.parent.infiniteScrollSettings.initialBlocks;\n        query.page(1, pageSize);\n    };\n    InfiniteScroll.prototype.infiniteCellFocus = function (e) {\n        if (e.byKey && (e.keyArgs.action === 'upArrow' || e.keyArgs.action === 'downArrow')) {\n            this.pressedKey = e.keyArgs.action;\n            var ele = document.activeElement;\n            var rowIndex = parseInt(ele.parentElement.getAttribute('aria-rowindex'), 10);\n            var scrollEle = this.parent.getContent().firstElementChild;\n            this.rowIndex = e.keyArgs.action === 'downArrow' ? rowIndex + 1 : rowIndex - 1;\n            this.cellIndex = parseInt(ele.getAttribute('aria-colindex'), 10);\n            var row = this.parent.getRowByIndex(rowIndex);\n            var visibleRowCount = Math.floor(scrollEle.offsetHeight / this.parent.getRowHeight());\n            if (!row || ensureLastRow(row, this.parent) || ensureFirstRow(row, this.rowTop)) {\n                var height = row ? row.getBoundingClientRect().height : this.parent.getRowHeight();\n                if (!this.parent.infiniteScrollSettings.enableCache) {\n                    if (e.keyArgs.action === 'downArrow' && (ensureLastRow(row, this.parent) || !row)) {\n                        var nTop = (this.rowIndex - visibleRowCount) * height;\n                        var oTop = scrollEle.scrollTop + this.parent.getRowHeight();\n                        scrollEle.scrollTop = nTop < oTop ? oTop : nTop;\n                    }\n                    if (e.keyArgs.action === 'upArrow' && ensureFirstRow(row, this.rowTop)) {\n                        scrollEle.scrollTop = this.rowIndex * height;\n                    }\n                }\n            }\n            else {\n                this.pressedKey = this.empty;\n            }\n        }\n        else if (e.key === 'PageDown' || e.key === 'PageUp') {\n            this.pressedKey = e.key;\n        }\n    };\n    InfiniteScroll.prototype.createEmptyRowdata = function () {\n        var _this = this;\n        this.parent.getColumns().filter(function (e) {\n            _this.emptyRowData[e.field] = _this.empty;\n        });\n    };\n    InfiniteScroll.prototype.getVirtualInfiniteEditedData = function () {\n        var editForm = this.parent.element.querySelector('.e-editedrow');\n        var addForm = this.parent.element.querySelector('.e-addedrow');\n        var gridForm = this.parent.element.querySelector('.e-gridform');\n        if (this.parent.infiniteScrollSettings.enableCache && (editForm || addForm)) {\n            var rowData = editForm ? extend({}, this.getEditedRowObject().data)\n                : extend({}, this.emptyRowData);\n            this.virtualInfiniteData = this.parent.editModule.getCurrentEditedData(gridForm, rowData);\n            if (this.parent.isFrozenGrid()) {\n                this.virtualInfiniteData = this.parent.editModule\n                    .getCurrentEditedData(this.parent.getMovableVirtualContent().querySelector('.e-gridform'), rowData);\n            }\n        }\n    };\n    InfiniteScroll.prototype.restoreInfiniteEdit = function () {\n        var content = this.parent.getContent().firstElementChild;\n        var frozenEdit = this.parent.frozenRows ? this.editRowIndex >= this.parent.frozenRows : true;\n        if (this.isNormaledit && this.parent.infiniteScrollSettings.enableCache && frozenEdit) {\n            if (this.parent.editSettings.allowEditing && !isNullOrUndefined(this.editRowIndex)) {\n                var row = this.parent.getRowByIndex(this.editRowIndex);\n                if (Object.keys(this.virtualInfiniteData).length && row && !this.parent.getContent().querySelector('.e-editedrow')) {\n                    var top_1 = row.getBoundingClientRect().top;\n                    if (top_1 < content.offsetHeight && top_1 > this.parent.getRowHeight()) {\n                        this.parent.isEdit = false;\n                        this.parent.editModule.startEdit(row);\n                    }\n                }\n            }\n        }\n    };\n    InfiniteScroll.prototype.restoreInfiniteAdd = function () {\n        var content = this.parent.getContent().firstElementChild;\n        if (this.parent.getRowByIndex(0) && this.isNormaledit && this.parent.infiniteScrollSettings.enableCache\n            && this.isAdd && !content.querySelector('.e-addedrow')) {\n            var isTop = content.scrollTop < this.parent.getRowHeight();\n            if (isTop) {\n                this.parent.isEdit = false;\n                this.parent.addRecord();\n            }\n        }\n    };\n    InfiniteScroll.prototype.appendInfiniteRows = function (e) {\n        var target = document.activeElement;\n        var frozenCols = this.parent.isFrozenGrid();\n        var scrollEle = this.parent.getContent().firstElementChild;\n        var isInfiniteScroll = this.parent.enableInfiniteScrolling && e.args.requestType === 'infiniteScroll';\n        var isMovable = this.parent.getFrozenMode() === 'Left-Right' && e.tableName === 'movable';\n        if ((isInfiniteScroll && !e.args.isFrozen && !isMovable) || !isInfiniteScroll) {\n            if (isInfiniteScroll && e.args.direction === 'up') {\n                e.tbody.insertBefore(e.frag, e.tbody.firstElementChild);\n            }\n            else {\n                e.tbody.appendChild(e.frag);\n            }\n        }\n        if (!frozenCols) {\n            this.parent.contentModule.getTable().appendChild(e.tbody);\n        }\n        else {\n            if (isInfiniteScroll) {\n                if (e.tableName === 'frozen-left' || (this.parent.getFrozenMode() === 'Right' && e.tableName === 'frozen-right')) {\n                    this.frozenFrag = e.frag;\n                }\n                else if (this.parent.getFrozenMode() === 'Left-Right' && e.tableName === 'movable') {\n                    this.movableFrag = e.frag;\n                }\n                else {\n                    var tbody = this.parent.getFrozenVirtualContent().querySelector('tbody');\n                    e.args.direction === 'up' ? tbody.insertBefore(this.frozenFrag, tbody.firstElementChild)\n                        : tbody.appendChild(this.frozenFrag);\n                    if (e.tableName === 'frozen-right') {\n                        this.parent.getMovableVirtualContent().querySelector('tbody').appendChild(this.movableFrag);\n                        this.parent.element.querySelector('.e-frozen-right-content').querySelector('tbody').appendChild(e.frag);\n                    }\n                    else {\n                        this.parent.getMovableVirtualContent().querySelector('.e-table').appendChild(e.tbody);\n                    }\n                    this.parent.contentModule.refreshScrollOffset();\n                }\n            }\n            else {\n                var table = void 0;\n                if (e.tableName === 'frozen-left') {\n                    table = this.parent.getFrozenVirtualContent().querySelector('.e-table');\n                }\n                else if (e.tableName === 'movable') {\n                    table = this.parent.getMovableVirtualContent().querySelector('.e-table');\n                    if (this.parent.getFrozenMode() !== 'Left-Right') {\n                        this.parent.contentModule.refreshScrollOffset();\n                    }\n                }\n                else {\n                    table = this.parent.element.querySelector('.e-frozen-right-content').querySelector('.e-table');\n                    if (this.parent.getFrozenMode() === 'Left-Right') {\n                        this.parent.contentModule.refreshScrollOffset();\n                    }\n                }\n                table.appendChild(e.tbody);\n                this.widthService.refreshFrozenScrollbar();\n            }\n        }\n        if (this.isInitialRender && !e.args.isFrozen) {\n            this.isInitialRender = false;\n            this.parent.scrollModule.setHeight();\n        }\n        if (!e.args.isFrozen) {\n            this.rowTop = !this.rowTop ? this.parent.getRows()[0].getBoundingClientRect().top : this.rowTop;\n            if (isInfiniteScroll) {\n                if (this.parent.infiniteScrollSettings.enableCache && this.isRemove) {\n                    scrollEle.scrollTop = this.top;\n                }\n                setRowElements(this.parent);\n                this.selectNewRow(e.tbody, e.args.startIndex);\n                this.pressedKey = undefined;\n            }\n            this.restoreInfiniteAdd();\n        }\n        this.isInfiniteScroll = false;\n    };\n    InfiniteScroll.prototype.selectNewRow = function (tbody, startIndex) {\n        var _this = this;\n        var row = this.parent.getRowByIndex(this.rowIndex);\n        if (this.keys.some(function (value) { return value === _this.pressedKey; })) {\n            if (this.pressedKey === 'downArrow' || (this.parent.infiniteScrollSettings.enableCache && this.pressedKey === 'upArrow')) {\n                setTimeout(function () {\n                    // tslint:disable-next-line:no-any\n                    var target = row.cells[0];\n                    target.focus({ preventScroll: true });\n                    _this.parent.selectRow(_this.rowIndex);\n                    _this.parent.getContent().firstElementChild.scrollTop += _this.parent.getRowHeight();\n                }, 0);\n            }\n            if (this.pressedKey === 'PageDown') {\n                var row_1 = this.parent.getRowByIndex(startIndex);\n                if (row_1) {\n                    row_1.cells[0].focus();\n                }\n            }\n            if (this.pressedKey === 'PageUp') {\n                tbody.querySelector('.e-row').cells[0].focus();\n            }\n        }\n    };\n    InfiniteScroll.prototype.removeInfiniteCacheRows = function (e) {\n        var isInfiniteScroll = this.parent.enableInfiniteScrolling && e.args.requestType === 'infiniteScroll';\n        if (!e.args.isFrozen && isInfiniteScroll && this.parent.infiniteScrollSettings.enableCache && this.isRemove) {\n            var rows = [].slice.call(this.parent.getContentTable().querySelectorAll('.e-row'));\n            if (e.args.direction === 'down') {\n                if (this.parent.allowGrouping && this.parent.groupSettings.columns.length) {\n                    var captionRows = [].slice.call(this.parent.getContentTable().querySelectorAll('tr'));\n                    this.removeCaptionRows(captionRows, e.args);\n                }\n                var addRowCount = this.parent.element.querySelector('.e-addedrow') ? 0 : 1;\n                this.removeTopRows(rows, this.parent.pageSettings.pageSize - addRowCount);\n            }\n            if (e.args.direction === 'up') {\n                if (this.parent.allowGrouping && this.parent.groupSettings.columns.length) {\n                    var captionRows = [].slice.call(this.parent.getContentTable().querySelectorAll('tr'));\n                    this.removeCaptionRows(captionRows, e.args);\n                }\n                else {\n                    this.removeBottomRows(rows, rows.length - 1, e.args);\n                }\n            }\n            this.isScroll = false;\n            this.top = this.calculateScrollTop(e.args);\n        }\n    };\n    InfiniteScroll.prototype.calculateScrollTop = function (args) {\n        var top = 0;\n        var scrollCnt = this.parent.getContent().firstElementChild;\n        if (args.direction === 'down') {\n            if (this.parent.allowGrouping && this.parent.groupSettings.columns.length && !this.isInitialCollapse) {\n                top = this.captionRowHeight();\n            }\n            var captionRows = [].slice.call(this.parent.getContent().firstElementChild.querySelectorAll('tr:not(.e-row)'));\n            var captionCount = 0;\n            if (this.isInitialCollapse && !isNullOrUndefined(captionRows)) {\n                captionCount = Math.round((captionRows.length - 1) / this.parent.groupSettings.columns.length);\n            }\n            var value = captionCount ? captionCount\n                : this.parent.pageSettings.pageSize * (this.parent.infiniteScrollSettings.maxBlocks - 1);\n            var currentViewRowCount = 0;\n            var i = 0;\n            while (currentViewRowCount < scrollCnt.clientHeight) {\n                i++;\n                currentViewRowCount = i * this.parent.getRowHeight();\n            }\n            i = i - 1;\n            top += (value - i) * this.parent.getRowHeight();\n        }\n        if (args.direction === 'up') {\n            if (this.parent.allowGrouping && this.parent.groupSettings.columns.length && !this.isInitialCollapse) {\n                top = this.infiniteCache[this.parent.pageSettings.currentPage].length * this.parent.getRowHeight();\n            }\n            else if (this.isInitialCollapse) {\n                var groupedData = this.infiniteCache[this.parent.pageSettings.currentPage];\n                var count = 0;\n                for (var i = 0; i < groupedData.length; i++) {\n                    if (groupedData[i].isCaptionRow) {\n                        count++;\n                    }\n                }\n                top += Math.round(count / this.parent.groupSettings.columns.length) * this.parent.getRowHeight();\n            }\n            else {\n                top += (this.parent.pageSettings.pageSize * this.parent.getRowHeight() + getScrollBarWidth());\n            }\n        }\n        return top;\n    };\n    InfiniteScroll.prototype.captionRowHeight = function () {\n        var rows = [].slice.call(this.parent.getContent().querySelectorAll('tr:not(.e-row)'));\n        return rows.length * this.parent.getRowHeight();\n    };\n    InfiniteScroll.prototype.removeTopRows = function (rows, maxIndx) {\n        var frozeCols = this.parent.isFrozenGrid();\n        var frRows = this.parent.getFrozenMode() === 'Left-Right'\n            ? [].slice.call(this.parent.element.querySelector('.e-frozen-right-content').querySelectorAll('.e-row')) : null;\n        var movableRows = frozeCols ?\n            [].slice.call(this.parent.getMovableVirtualContent().querySelectorAll('.e-row')) : null;\n        for (var i = 0; i <= maxIndx; i++) {\n            if (this.parent.frozenRows && this.parent.pageSettings.currentPage === this.parent.infiniteScrollSettings.maxBlocks + 1\n                && i > (maxIndx - this.parent.frozenRows)) {\n                continue;\n            }\n            remove(rows[i]);\n            if (movableRows) {\n                remove(movableRows[i]);\n            }\n            if (frRows) {\n                remove(frRows[i]);\n            }\n        }\n    };\n    InfiniteScroll.prototype.removeBottomRows = function (rows, maxIndx, args) {\n        var cnt = 0;\n        var frozeCols = this.parent.isFrozenGrid();\n        var movableRows = frozeCols ?\n            [].slice.call(this.parent.getMovableVirtualContent().querySelectorAll('.e-row')) : null;\n        var frRows = this.parent.getFrozenMode() === 'Left-Right' ?\n            [].slice.call(this.parent.element.querySelector('.e-frozen-right-content').querySelectorAll('.e-row')) : null;\n        var pageSize = this.parent.pageSettings.pageSize;\n        if (!frozeCols && this.infiniteCache[args.prevPage].length < pageSize) {\n            cnt = this.parent.pageSettings.pageSize - this.infiniteCache[args.prevPage].length;\n        }\n        if (frozeCols && this.infiniteFrozenCache[args.prevPage][1].length < pageSize) {\n            cnt = this.parent.pageSettings.pageSize - this.infiniteFrozenCache[args.prevPage][1].length;\n        }\n        for (var i = maxIndx; cnt < pageSize; i--) {\n            cnt++;\n            remove(rows[i]);\n            if (movableRows) {\n                remove(movableRows[i]);\n            }\n            if (frRows) {\n                remove(frRows[i]);\n            }\n        }\n    };\n    InfiniteScroll.prototype.removeCaptionRows = function (rows, args) {\n        if (args.direction === 'down') {\n            var lastRow = this.parent.getRows()[this.parent.pageSettings.pageSize];\n            var lastRowIndex = parseInt(lastRow.getAttribute('aria-rowindex'), 10) - 1;\n            var k = 0;\n            for (var i = 0; k < lastRowIndex; i++) {\n                if (!rows[i].classList.contains('e-row')) {\n                    remove(rows[i]);\n                }\n                else {\n                    k = parseInt(rows[i].getAttribute('aria-rowindex'), 10);\n                }\n            }\n        }\n        if (args.direction === 'up') {\n            var rowElements = [].slice.call(this.parent.getContent().querySelectorAll('.e-row'));\n            var lastIndex = parseInt(rowElements[rowElements.length - 1].getAttribute('aria-rowindex'), 10);\n            var page = Math.ceil(lastIndex / this.parent.pageSettings.pageSize);\n            var startIndex = 0;\n            for (var i = this.parent.pageSettings.currentPage + 1; i < page; i++) {\n                startIndex += this.infiniteCache[i].length;\n            }\n            for (var i = startIndex; i < rows.length; i++) {\n                remove(rows[i]);\n            }\n        }\n    };\n    InfiniteScroll.prototype.resetInfiniteBlocks = function (args, isDataModified) {\n        var isInfiniteScroll = this.parent.enableInfiniteScrolling && args.requestType !== 'infiniteScroll';\n        if (!this.initialRender && !isNullOrUndefined(this.parent.infiniteScrollModule) && isInfiniteScroll) {\n            if (this.actions.some(function (value) { return value === args.requestType; }) || isDataModified) {\n                var scrollEle = this.parent.getContent().firstElementChild;\n                this.initialRender = true;\n                scrollEle.scrollTop = 0;\n                this.parent.pageSettings.currentPage = 1;\n                this.infiniteCache = this.infiniteFrozenCache = {};\n                this.resetContentModuleCache({});\n                this.isRemove = false;\n                this.top = 0;\n                this.isInitialMovableRender = true;\n                this.isInitialCollapse = false;\n                this.parent.contentModule.isRemove = this.isRemove;\n                this.parent.contentModule.isAddRows = this.isRemove;\n                this.parent.contentModule.visibleRows = [];\n                this.parent.contentModule.visibleFrozenRows = [];\n            }\n        }\n    };\n    InfiniteScroll.prototype.setCache = function (e) {\n        if (this.parent.enableInfiniteScrolling && this.parent.infiniteScrollSettings.enableCache) {\n            var frozeCols = this.parent.isFrozenGrid();\n            var idx = e.args.isFrozen ? 1 : 0;\n            var isEdit = e.args.requestType !== 'infiniteScroll'\n                && (this.requestType === 'delete' || this.requestType === 'add');\n            var currentPage = this.parent.pageSettings.currentPage;\n            if ((frozeCols && this.isInitialMovableRender) || (!frozeCols && !Object.keys(this.infiniteCache).length) || isEdit) {\n                this.isInitialMovableRender = !e.args.isFrozen;\n                this.setInitialCache(e.modelData, e.args, isEdit);\n            }\n            if (!frozeCols && isNullOrUndefined(this.infiniteCache[this.parent.pageSettings.currentPage])) {\n                this.infiniteCache[this.parent.pageSettings.currentPage] = e.modelData;\n                this.resetContentModuleCache(this.infiniteCache);\n            }\n            if (frozeCols) {\n                if ((idx === 0 && isNullOrUndefined(this.infiniteFrozenCache[currentPage]))\n                    || !this.infiniteFrozenCache[currentPage][idx].length) {\n                    this.createFrozenCache(currentPage);\n                    this.infiniteFrozenCache[currentPage][idx] = e.modelData;\n                    if (idx === 1) {\n                        this.resetContentModuleCache(this.infiniteFrozenCache);\n                    }\n                }\n            }\n            if (e.isInfiniteScroll && !this.isRemove) {\n                this.isRemove = (currentPage - 1) % this.parent.infiniteScrollSettings.maxBlocks === 0;\n                this.parent.contentModule.isRemove = this.isRemove;\n            }\n        }\n    };\n    InfiniteScroll.prototype.setInitialCache = function (data, args, isEdit) {\n        var frozenCols = this.parent.isFrozenGrid();\n        var idx = args.isFrozen ? 1 : 0;\n        var k = !isEdit ? 1 : this.firstBlock;\n        for (var i = 1; i <= this.parent.infiniteScrollSettings.initialBlocks; i++) {\n            var startIndex = (i - 1) * this.parent.pageSettings.pageSize;\n            var endIndex = i * this.parent.pageSettings.pageSize;\n            if (this.parent.allowGrouping && this.parent.groupSettings.columns.length) {\n                this.setInitialGroupCache(data, k, startIndex, endIndex);\n            }\n            else {\n                if (frozenCols) {\n                    this.createFrozenCache(k);\n                    this.infiniteFrozenCache[k][idx] = data.slice(startIndex, endIndex);\n                    this.resetContentModuleCache(this.infiniteFrozenCache);\n                }\n                else {\n                    this.infiniteCache[k] = data.slice(startIndex, endIndex);\n                    this.resetContentModuleCache(this.infiniteCache);\n                }\n            }\n            k++;\n        }\n    };\n    InfiniteScroll.prototype.createFrozenCache = function (index) {\n        if (!this.infiniteFrozenCache[index]) {\n            this.infiniteFrozenCache[index] = [[], []];\n        }\n    };\n    InfiniteScroll.prototype.setInitialGroupCache = function (data, index, sIndex, eIndex) {\n        var pageData = [];\n        var startIndex = 0;\n        for (var i = 1; i <= Object.keys(this.infiniteCache).length; i++) {\n            startIndex += this.infiniteCache[i].length;\n        }\n        var k = sIndex;\n        for (var i = startIndex; i < data.length && k < eIndex; i++) {\n            if (data[i].index < eIndex || data[i].isCaptionRow) {\n                k = data[i].isCaptionRow ? k : data[i].index;\n                pageData.push(data[i]);\n            }\n            if (data[i].index >= eIndex || data[i].index === eIndex - 1) {\n                break;\n            }\n        }\n        this.infiniteCache[index] = pageData;\n        this.resetContentModuleCache(this.infiniteCache);\n    };\n    InfiniteScroll.prototype.resetContentModuleCache = function (data) {\n        this.parent.contentModule\n            .infiniteCache = data;\n    };\n    /**\n     * @hidden\n     */\n    InfiniteScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return InfiniteScroll;\n}());\nexport { InfiniteScroll };\n"]},"metadata":{},"sourceType":"module"}