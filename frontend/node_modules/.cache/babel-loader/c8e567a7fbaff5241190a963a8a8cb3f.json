{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\appsk\\\\Documents\\\\Projects\\\\PredictiveMaintenance\\\\React PDM\\\\env\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport XLSX from 'xlsx';\nimport { make_cols } from './MakeColumns';\nimport { SheetJSFT } from './types';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = null;\n    this.state = {\n      file: {},\n      data: [],\n      cols: []\n    };\n    this.handleFile = this.handleFile.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  renderChart() {\n    var Chart = require('chart.js');\n\n    var ctx = this.canvasRef.getContext('2d');\n    var myChart = new Chart(ctx, {\n      type: 'bar',\n      data: {\n        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n        datasets: [{\n          label: '# of Votes',\n          data: [12, 19, 3, 5, 2, 3],\n          backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n          borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    });\n  }\n\n  download(content, fileName, contentType) {\n    var a = document.createElement(\"a\");\n    var file = new Blob([content], {\n      type: contentType\n    });\n    a.href = URL.createObjectURL(file);\n    a.download = fileName;\n    a.click();\n  }\n\n  handleChange(e) {\n    const files = e.target.files;\n    if (files && files[0]) this.setState({\n      file: files[0]\n    });\n  }\n\n  handleFile() {\n    /* Boilerplate to set up FileReader */\n    const reader = new FileReader();\n    const rABS = !!reader.readAsBinaryString;\n\n    const groupBy = require('json-groupby');\n\n    reader.onload = e => {\n      const bstr = e.target.result;\n      const wb = XLSX.read(bstr, {\n        type: rABS ? 'binary' : 'array',\n        bookVBA: true\n      });\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      const data = XLSX.utils.sheet_to_json(ws);\n      /* Update state */\n\n      this.setState({\n        data: data,\n        cols: make_cols(ws['!ref'])\n      }, () => {\n        const strData = JSON.stringify(this.state.data, null, 2);\n        var jsonObject = JSON.parse(strData);\n        var i;\n\n        for (i = 0; i < jsonObject.length; i++) {\n          if (!(\"Part Number\" in jsonObject[i] && \"Code\" in jsonObject[i] && \"Date\" in jsonObject[i])) {\n            delete jsonObject[i];\n          } else {\n            if (typeof jsonObject[i].Code !== 'number') {\n              delete jsonObject[i];\n            }\n          }\n        }\n\n        console.log(groupBy(jsonObject, ['Equipment ID', 'Part Number']));\n      });\n    };\n\n    if (rABS) {\n      reader.readAsBinaryString(this.state.file);\n    } else {\n      reader.readAsArrayBuffer(this.state.file);\n    }\n\n    ;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file\",\n        children: \"Upload your Excel File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"form-control\",\n        id: \"file\",\n        accept: SheetJSFT,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Update\",\n        onClick: this.handleFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"chart\",\n          width: \"400\",\n          height: \"400\",\n          onMouseOver: this.loadChart,\n          ref: this.canvasRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/appsk/Documents/Projects/PredictiveMaintenance/React PDM/env/frontend/src/App.js"],"names":["React","Component","Fabric","DefaultButton","XLSX","make_cols","SheetJSFT","App","constructor","props","canvasRef","state","file","data","cols","handleFile","bind","handleChange","renderChart","Chart","require","ctx","getContext","myChart","type","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero","download","content","fileName","contentType","a","document","createElement","Blob","href","URL","createObjectURL","click","e","files","target","setState","reader","FileReader","rABS","readAsBinaryString","groupBy","onload","bstr","result","wb","read","bookVBA","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","strData","JSON","stringify","jsonObject","parse","i","length","Code","console","log","readAsArrayBuffer","render","loadChart"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport XLSX from 'xlsx';\nimport { make_cols } from './MakeColumns';\nimport { SheetJSFT } from './types';\n \nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = null;\n    this.state = {\n      file: {},\n      data: [],\n      cols: []\n    }\n    this.handleFile = this.handleFile.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  renderChart() {\n    var Chart = require('chart.js');\n    var ctx = this.canvasRef.getContext('2d');\n    var myChart = new Chart(ctx, {\n    type: 'bar',\n    data: {\n        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n        datasets: [{\n            label: '# of Votes',\n            data: [12, 19, 3, 5, 2, 3],\n            backgroundColor: [\n                'rgba(255, 99, 132, 0.2)',\n                'rgba(54, 162, 235, 0.2)',\n                'rgba(255, 206, 86, 0.2)',\n                'rgba(75, 192, 192, 0.2)',\n                'rgba(153, 102, 255, 0.2)',\n                'rgba(255, 159, 64, 0.2)'\n            ],\n            borderColor: [\n                'rgba(255, 99, 132, 1)',\n                'rgba(54, 162, 235, 1)',\n                'rgba(255, 206, 86, 1)',\n                'rgba(75, 192, 192, 1)',\n                'rgba(153, 102, 255, 1)',\n                'rgba(255, 159, 64, 1)'\n            ],\n            borderWidth: 1\n        }]\n    },\n    options: {\n        scales: {\n            yAxes: [{\n                ticks: {\n                    beginAtZero: true\n                }\n            }]\n        }\n    }\n});\n  }\n\n\n   download(content, fileName, contentType) {\n    var a = document.createElement(\"a\");\n    var file = new Blob([content], {type: contentType});\n    a.href = URL.createObjectURL(file);\n    a.download = fileName;\n    a.click();\n}\n \n  handleChange(e) {\n    const files = e.target.files;\n    if (files && files[0]) this.setState({ file: files[0] });\n  };\n \n  handleFile() {\n    /* Boilerplate to set up FileReader */\n    const reader = new FileReader();\n    const rABS = !!reader.readAsBinaryString;\n    const groupBy = require('json-groupby');\n\n \n    reader.onload = (e) => {\n      const bstr = e.target.result;\n      const wb = XLSX.read(bstr, { type: rABS ? 'binary' : 'array', bookVBA : true });\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      const data = XLSX.utils.sheet_to_json(ws);\n\n      /* Update state */\n      this.setState({ data: data, cols: make_cols(ws['!ref']) }, () => {\n\n        const strData = JSON.stringify(this.state.data, null, 2)\n        var jsonObject = JSON.parse(strData);\n        var i;\n        for(i = 0; i < jsonObject.length; i++){\n          if (!(\"Part Number\" in jsonObject[i] && \"Code\" in jsonObject[i] && \"Date\" in jsonObject[i])) {\n            delete jsonObject[i];\n          }\n          else {\n            if(typeof jsonObject[i].Code !== 'number') {\n              delete jsonObject[i];\n            }\n          }\n        }\n\n        console.log(groupBy(jsonObject, ['Equipment ID', 'Part Number']))\n\n      });\n    };\n    if (rABS) {\n      reader.readAsBinaryString(this.state.file);\n    } else {\n      reader.readAsArrayBuffer(this.state.file);\n    };\n  }\n \n  render() {\n    return (\n      <div>\n        <label htmlFor=\"file\">Upload your Excel File</label>\n        <br />\n        <input type=\"file\" className=\"form-control\" id=\"file\" accept={SheetJSFT} onChange={this.handleChange} />\n        <br />\n        <input type='submit' \n          value=\"Update\"\n          onClick={this.handleFile} />\n        <div>\n          <canvas id=\"chart\" width=\"400\" height=\"400\" onMouseOver={this.loadChart} ref={this.canvasRef}></canvas>\n        </div>\n      </div>       \n\n    )\n  }\n}\n \nexport default App;"]},"metadata":{},"sourceType":"module"}