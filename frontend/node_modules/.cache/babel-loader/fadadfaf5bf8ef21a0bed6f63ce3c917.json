{"ast":null,"code":"import * as events from '../base/constant';\nimport { PdfDocument, PdfGrid, PdfBorders, PdfPen, PdfPaddings } from '@syncfusion/ej2-pdf-export';\nimport { PdfStandardFont, PdfFontFamily, PdfFontStyle, PdfBitmap } from '@syncfusion/ej2-pdf-export';\nimport { PdfStringFormat, PdfTextAlignment, PdfColor, PdfSolidBrush } from '@syncfusion/ej2-pdf-export';\nimport { PdfVerticalAlignment, RectangleF, PdfPageTemplateElement } from '@syncfusion/ej2-pdf-export';\nimport { PointF, PdfPageNumberField, PdfCompositeField } from '@syncfusion/ej2-pdf-export';\nimport { PdfPageCountField, SizeF, PdfPageSettings, PdfPageOrientation } from '@syncfusion/ej2-pdf-export';\nimport { PdfTrueTypeFont } from '@syncfusion/ej2-pdf-export';\nimport { ExportHelper, ExportValueFormatter } from './export-helper';\nimport { Data } from '../actions/data';\nimport { SummaryModelGenerator, GroupSummaryModelGenerator, CaptionSummaryModelGenerator } from '../services/summary-model-generator';\nimport { compile, getEnumValue, isNullOrUndefined, detach, isBlazor } from '@syncfusion/ej2-base';\nimport { CellType } from '../base/enum';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getUid, getPrintGridModel, measureColumnDepth, isExportColumns, updateColumnTypeForExportColumns, prepareColumns } from '../base/util';\n/**\n * `PDF Export` module is used to handle the exportToPDF action.\n * @hidden\n */\n\nvar PdfExport =\n/** @class */\nfunction () {\n  /**\n   * Constructor for the Grid PDF Export module\n   * @hidden\n   */\n  function PdfExport(parent) {\n    this.hideColumnInclude = false;\n    this.currentViewData = false;\n    this.customDataSource = false;\n    this.isGrouping = false;\n    this.headerOnPages = [];\n    this.drawPosition = {\n      xPosition: 0,\n      yPosition: 0\n    };\n    this.parent = parent;\n    this.helper = new ExportHelper(parent);\n    this.gridPool = {};\n  }\n  /**\n   * For internal use only - Get the module name.\n   */\n\n\n  PdfExport.prototype.getModuleName = function () {\n    return 'PdfExport';\n  };\n\n  PdfExport.prototype.init = function (parent) {\n    this.exportValueFormatter = new ExportValueFormatter(parent.locale);\n    this.pdfDocument = undefined;\n    this.hideColumnInclude = false;\n    this.currentViewData = false;\n    this.parent = parent;\n    this.isGrouping = false;\n    this.isExporting = true;\n    parent.id = getUid('main-grid');\n    this.gridPool[parent.id] = false;\n    this.pdfPageSettings = new PdfPageSettings();\n  };\n\n  PdfExport.prototype.exportWithData = function (parent, pdfDoc, resolve, returnType, pdfExportProperties, isMultipleExport, reject) {\n    var _this = this;\n\n    this.init(parent);\n\n    if (!isNullOrUndefined(pdfDoc)) {\n      this.pdfDocument = pdfDoc;\n    } else {\n      this.pdfDocument = new PdfDocument();\n    }\n\n    this.processExport(parent, returnType, pdfExportProperties, isMultipleExport).then(function () {\n      _this.isExporting = false;\n      parent.trigger(events.pdfExportComplete, _this.isBlob ? {\n        promise: _this.blobPromise\n      } : {});\n\n      _this.parent.log('exporting_complete', _this.getModuleName());\n\n      resolve(_this.pdfDocument);\n    }).catch(function (e) {\n      reject(_this.pdfDocument);\n\n      _this.parent.trigger(events.actionFailure, e);\n    });\n  };\n  /**\n   * Used to map the input data\n   * @return {void}\n   */\n\n\n  PdfExport.prototype.Map = function (parent, pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n    var _this = this;\n\n    this.data = new Data(this.parent);\n    this.isBlob = isBlob;\n    this.gridPool = {};\n\n    if (parent.childGrid && !(!isNullOrUndefined(pdfExportProperties) && pdfExportProperties.hierarchyExportMode === 'None')) {\n      parent.expandedRows = getPrintGridModel(parent).expandedRows;\n    }\n\n    var args = {\n      requestType: 'beforePdfExport',\n      cancel: false,\n      headerPageNumbers: [],\n      gridDrawPosition: {\n        xPosition: 0,\n        yPosition: 0\n      }\n    };\n\n    if (!isBlazor()) {\n      var gridObject = 'gridObject';\n      args[gridObject] = parent;\n    }\n\n    var can = 'cancel';\n    var header = 'headerPageNumbers';\n    var drawPos = 'gridDrawPosition';\n    parent.trigger(events.beforePdfExport, args);\n\n    if (args[can] === true) {\n      return new Promise(function (resolve, reject) {\n        return resolve();\n      });\n    }\n\n    if (isExportColumns(pdfExportProperties)) {\n      updateColumnTypeForExportColumns(pdfExportProperties, parent);\n    }\n\n    this.headerOnPages = args[header];\n    this.drawPosition = args[drawPos];\n    this.parent.log('exporting_begin', this.getModuleName());\n\n    if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource) && pdfExportProperties.dataSource instanceof DataManager) {\n      return new Promise(function (resolve, reject) {\n        pdfExportProperties.dataSource.executeQuery(new Query()).then(function (returnType) {\n          _this.exportWithData(parent, pdfDoc, resolve, returnType, pdfExportProperties, isMultipleExport, reject);\n        });\n      });\n    } else if (!isNullOrUndefined(pdfExportProperties) && pdfExportProperties.exportType === 'CurrentPage') {\n      return new Promise(function (resolve, reject) {\n        _this.exportWithData(parent, pdfDoc, resolve, _this.parent.getCurrentViewRecords(), pdfExportProperties, isMultipleExport, reject);\n      });\n    } else {\n      var allPromise_1 = [];\n      allPromise_1.push(this.data.getData({}, ExportHelper.getQuery(parent, this.data)));\n      allPromise_1.push(this.helper.getColumnData(parent));\n      return new Promise(function (resolve, reject) {\n        Promise.all(allPromise_1).then(function (e) {\n          _this.init(parent);\n\n          if (!isNullOrUndefined(pdfDoc)) {\n            _this.pdfDocument = pdfDoc;\n          } else {\n            _this.pdfDocument = new PdfDocument();\n          }\n\n          _this.processExport(parent, e[0], pdfExportProperties, isMultipleExport).then(function () {\n            _this.isExporting = false;\n            parent.trigger(events.pdfExportComplete, _this.isBlob ? {\n              promise: _this.blobPromise\n            } : {});\n\n            _this.parent.log('exporting_complete', _this.getModuleName());\n\n            resolve(_this.pdfDocument);\n          }).catch(function (e) {\n            reject(_this.pdfDocument);\n\n            _this.parent.trigger(events.actionFailure, e);\n          });\n        });\n      });\n    }\n  };\n\n  PdfExport.prototype.processExport = function (gObj, returnType, pdfExportProperties, isMultipleExport) {\n    var _this = this;\n\n    var section = this.pdfDocument.sections.add();\n    var pdfGrid;\n    this.processSectionExportProperties(section, pdfExportProperties);\n    var pdfPage = section.pages.add();\n    return new Promise(function (resolve, reject) {\n      pdfGrid = _this.processGridExport(gObj, returnType, pdfExportProperties);\n      _this.globalResolve = resolve;\n      _this.gridPool[gObj.id] = true;\n\n      _this.helper.checkAndExport(_this.gridPool, _this.globalResolve);\n    }).then(function () {\n      // draw the grid\n      var xPosition = 'xPosition';\n      var yPosition = 'yPosition';\n      pdfGrid.draw(pdfPage, _this.drawPosition[xPosition], _this.drawPosition[yPosition]);\n\n      _this.drawHeader(pdfExportProperties);\n\n      if (!isMultipleExport) {\n        // save the PDF\n        if (!_this.isBlob) {\n          if (!isNullOrUndefined(pdfExportProperties) && pdfExportProperties.fileName) {\n            _this.pdfDocument.save(pdfExportProperties.fileName);\n          } else {\n            _this.pdfDocument.save('Export.pdf');\n          }\n        } else {\n          _this.blobPromise = _this.pdfDocument.save();\n        }\n\n        _this.pdfDocument.destroy();\n\n        delete gObj.expandedRows;\n      }\n\n      return _this.pdfDocument;\n    });\n  };\n\n  PdfExport.prototype.processSectionExportProperties = function (section, pdfExportProperties) {\n    if (!isNullOrUndefined(pdfExportProperties) && (!isNullOrUndefined(pdfExportProperties.pageOrientation) || !isNullOrUndefined(pdfExportProperties.pageSize))) {\n      this.pdfPageSettings.orientation = pdfExportProperties.pageOrientation === 'Landscape' ? PdfPageOrientation.Landscape : PdfPageOrientation.Portrait;\n      this.pdfPageSettings.size = this.getPageSize(pdfExportProperties.pageSize);\n      section.setPageSettings(this.pdfPageSettings);\n    }\n\n    return section;\n  };\n\n  PdfExport.prototype.processGridExport = function (gObj, returnType, pdfExportProperties) {\n    var allowHorizontalOverflow = true;\n    var isFrozen = this.parent.isFrozenGrid() && !this.parent.getFrozenColumns();\n\n    if (!isNullOrUndefined(pdfExportProperties)) {\n      this.gridTheme = pdfExportProperties.theme;\n\n      if (isBlazor() && !isNullOrUndefined(this.gridTheme)) {\n        this.getGridPdfFont(this.gridTheme);\n      }\n\n      allowHorizontalOverflow = isNullOrUndefined(pdfExportProperties.allowHorizontalOverflow) ? true : pdfExportProperties.allowHorizontalOverflow;\n    }\n\n    var helper = new ExportHelper(gObj);\n    var dataSource = this.processExportProperties(pdfExportProperties, returnType.result);\n    var columns = isExportColumns(pdfExportProperties) ? prepareColumns(pdfExportProperties.columns, gObj.enableColumnVirtualization) : helper.getGridExportColumns(isFrozen ? gObj.getColumns() : gObj.columns);\n    columns = columns.filter(function (columns) {\n      return isNullOrUndefined(columns.commands);\n    });\n    var isGrouping = false;\n\n    if (gObj.groupSettings.columns.length) {\n      isGrouping = true;\n    }\n\n    if (gObj.childGrid && !isNullOrUndefined(pdfExportProperties)) {\n      gObj.hierarchyPrintMode = pdfExportProperties.hierarchyExportMode || 'Expanded';\n    } // create a grid\n\n\n    var pdfGrid = new PdfGrid(); // get header theme style\n\n    var headerThemeStyle = this.getHeaderThemeStyle();\n    var border = headerThemeStyle.border;\n    var headerFont = headerThemeStyle.font;\n    var headerBrush = headerThemeStyle.brush;\n    var returnValue = helper.getHeaders(columns, this.hideColumnInclude); // Column collection with respect to the records in the grid\n\n    var gridColumns = returnValue.columns; // process grid header content\n\n    pdfGrid = this.processGridHeaders(gObj.groupSettings.columns.length, pdfGrid, returnValue.rows, gridColumns, border, headerFont, headerBrush, gObj, allowHorizontalOverflow, columns); // set alignment, width and type of the values of the column\n\n    this.setColumnProperties(gridColumns, pdfGrid, helper, gObj, allowHorizontalOverflow);\n    var captionThemeStyle = this.getSummaryCaptionThemeStyle();\n\n    if (!isNullOrUndefined(dataSource) && dataSource.length) {\n      if (isGrouping) {\n        if (!isNullOrUndefined(captionThemeStyle.border)) {\n          border = captionThemeStyle.border;\n        }\n\n        this.processGroupedRecords(pdfGrid, dataSource, gridColumns, gObj, border, 0, captionThemeStyle.font, captionThemeStyle.brush, captionThemeStyle.backgroundBrush, returnType, pdfExportProperties, helper, 0);\n      } else {\n        this.processRecord(border, gridColumns, gObj, dataSource, pdfGrid, 0, pdfExportProperties, helper, 0);\n      }\n\n      if (!isNullOrUndefined(returnType.aggregates)) {\n        var summaryModel = new SummaryModelGenerator(gObj);\n        var sRows = void 0;\n        var column = summaryModel.getColumns();\n        column = column.filter(function (col) {\n          return isNullOrUndefined(col.commands) && col.type !== 'checkbox';\n        });\n\n        if (gObj.aggregates.length && this.parent !== gObj) {\n          gObj.aggregateModule.prepareSummaryInfo();\n        }\n\n        if (this.customDataSource) {\n          sRows = summaryModel.generateRows(dataSource, returnType.aggregates);\n        } else if (this.currentViewData) {\n          sRows = summaryModel.generateRows(this.parent.getCurrentViewRecords(), returnType.aggregates);\n        } else if (isGrouping) {\n          sRows = summaryModel.generateRows(dataSource.records, returnType.aggregates);\n        } else {\n          sRows = summaryModel.generateRows(returnType.result, returnType.aggregates, null, null, column);\n        }\n\n        this.processAggregates(sRows, pdfGrid, border, captionThemeStyle.font, captionThemeStyle.brush, captionThemeStyle.backgroundBrush, false);\n      }\n    } else {\n      var row = pdfGrid.rows.addRow();\n      row.style.setBorder(border);\n    }\n\n    return pdfGrid;\n  };\n\n  PdfExport.prototype.getSummaryCaptionThemeStyle = function () {\n    if (!isNullOrUndefined(this.gridTheme) && !isNullOrUndefined(this.gridTheme.caption)) {\n      var fontSize = !isNullOrUndefined(this.gridTheme.caption.fontSize) ? this.gridTheme.caption.fontSize : 9.75;\n      var fontFamily = !isNullOrUndefined(this.gridTheme.caption.fontName) ? this.getFontFamily(this.gridTheme.caption.fontName) : PdfFontFamily.Helvetica;\n      var fontStyle = this.getFontStyle(this.gridTheme.caption);\n      var pdfColor = new PdfColor(0, 0, 0);\n\n      if (!isNullOrUndefined(this.gridTheme.caption.fontColor)) {\n        var penBrushColor = this.hexToRgb(this.gridTheme.caption.fontColor);\n        pdfColor = new PdfColor(penBrushColor.r, penBrushColor.g, penBrushColor.b);\n      }\n\n      var borderCaption = this.gridTheme.caption.border ? this.getBorderStyle(this.gridTheme.caption.border) : null;\n      var font = new PdfStandardFont(fontFamily, fontSize, fontStyle);\n\n      if (!isNullOrUndefined(this.gridTheme.caption.font)) {\n        font = this.gridTheme.caption.font;\n      }\n\n      return {\n        font: font,\n        brush: new PdfSolidBrush(pdfColor),\n        backgroundBrush: new PdfSolidBrush(new PdfColor(246, 246, 246)),\n        border: borderCaption\n      };\n    } else {\n      //Material theme\n      return {\n        font: new PdfStandardFont(PdfFontFamily.Helvetica, 9.75),\n        brush: new PdfSolidBrush(new PdfColor(0, 0, 0)),\n        backgroundBrush: new PdfSolidBrush(new PdfColor(246, 246, 246))\n      };\n    }\n  };\n\n  PdfExport.prototype.getGridPdfFont = function (args) {\n    var fontFamily = 'fontFamily';\n    var fontSize = 'fontSize';\n    var fontStyle = 'fontStyle';\n    var isTrueType = 'isTrueType';\n    var style = 0;\n\n    if (args.header && args.header.font) {\n      var headerFont = args.header.font[fontFamily];\n      var headerSize = args.header.font[fontSize];\n      var headerStyle = args.header.font[fontStyle];\n      style = isNullOrUndefined(PdfFontStyle[headerStyle]) ? 0 : PdfFontStyle[headerStyle];\n\n      if (args.header.font[isTrueType]) {\n        args.header.font = new PdfTrueTypeFont(headerFont, headerSize, style);\n      } else {\n        var fontFamily_1 = !isNullOrUndefined(headerFont) ? this.getFontFamily(headerFont) : PdfFontFamily.Helvetica;\n        args.header.font = new PdfStandardFont(fontFamily_1, headerSize, style);\n      }\n    }\n\n    if (args.caption && args.caption.font) {\n      var captionFont = args.caption.font[fontFamily];\n      var captionSize = args.caption.font[fontSize];\n      var captionStyle = args.caption.font[fontStyle];\n      style = isNullOrUndefined(PdfFontStyle[captionStyle]) ? 0 : PdfFontStyle[captionStyle];\n\n      if (args.caption.font[isTrueType]) {\n        args.caption.font = new PdfTrueTypeFont(captionFont, captionSize, style);\n      } else {\n        var fontFamily_2 = !isNullOrUndefined(captionFont) ? this.getFontFamily(captionFont) : PdfFontFamily.Helvetica;\n        args.caption.font = new PdfStandardFont(fontFamily_2, captionSize, style);\n      }\n    }\n\n    if (args.record && args.record.font) {\n      var recordFont = args.record.font[fontFamily];\n      var recordSize = args.record.font[fontSize];\n      var recordStyle = args.record.font[fontStyle];\n      style = isNullOrUndefined(PdfFontStyle[recordStyle]) ? 0 : PdfFontStyle[recordStyle];\n\n      if (args.record.font[isTrueType]) {\n        args.record.font = new PdfTrueTypeFont(recordFont, recordSize, style);\n      } else {\n        var fontFamily_3 = !isNullOrUndefined(recordFont) ? this.getFontFamily(recordFont) : PdfFontFamily.Helvetica;\n        args.record.font = new PdfStandardFont(fontFamily_3, recordSize, style);\n      }\n    }\n  };\n\n  PdfExport.prototype.getHeaderThemeStyle = function () {\n    var border = new PdfBorders();\n\n    if (!isNullOrUndefined(this.gridTheme) && !isNullOrUndefined(this.gridTheme.header)) {\n      var fontFamily = !isNullOrUndefined(this.gridTheme.header.fontName) ? this.getFontFamily(this.gridTheme.header.fontName) : PdfFontFamily.Helvetica;\n      var fontStyle = this.getFontStyle(this.gridTheme.header);\n      var fontSize = !isNullOrUndefined(this.gridTheme.header.fontSize) ? this.gridTheme.header.fontSize : 10.5;\n      var pdfColor = new PdfColor();\n\n      if (!isNullOrUndefined(this.gridTheme.header.fontColor)) {\n        var penBrushColor = this.hexToRgb(this.gridTheme.header.fontColor);\n        pdfColor = new PdfColor(penBrushColor.r, penBrushColor.g, penBrushColor.b);\n      }\n\n      var font = new PdfStandardFont(fontFamily, fontSize, fontStyle);\n\n      if (!isNullOrUndefined(this.gridTheme.header.font)) {\n        font = this.gridTheme.header.font;\n      }\n\n      return {\n        border: this.getBorderStyle(this.gridTheme.header.border),\n        font: font,\n        brush: new PdfSolidBrush(pdfColor)\n      };\n    } else {\n      //Material theme\n      border.all = new PdfPen(new PdfColor(234, 234, 234));\n      return {\n        border: border,\n        font: new PdfStandardFont(PdfFontFamily.Helvetica, 10.5),\n        brush: new PdfSolidBrush(new PdfColor(102, 102, 102))\n      };\n    }\n  };\n  /* tslint:disable-next-line:no-any */\n\n\n  PdfExport.prototype.processGroupedRecords = function (pdfGrid, dataSource, gridColumns, gObj, border, level, font, brush, backgroundBrush, returnType, pdfExportProperties, helper, index) {\n    var _this = this;\n\n    var groupIndex = level;\n\n    var _loop_1 = function (dataSourceItems) {\n      var row = pdfGrid.rows.addRow();\n      var col = gObj.getColumnByField(dataSourceItems.field);\n      /* tslint:disable-next-line:no-any */\n\n      var args = {\n        value: dataSourceItems.key,\n        column: col,\n        style: undefined,\n        isForeignKey: col.isForeignColumn()\n      };\n      /* tslint:disable-next-line:max-line-length */\n\n      var value = this_1.parent.getColumnByField(dataSourceItems.field).headerText + ': ' + (!col.enableGroupByFormat ? this_1.exportValueFormatter.formatCellValue(args) : dataSourceItems.key) + ' - ' + dataSourceItems.count + (dataSource.count > 1 ? ' items' : ' item');\n      var cArgs = {\n        captionText: value,\n        type: 'PDF'\n      };\n      this_1.parent.trigger(events.exportGroupCaption, cArgs, function (cArgs) {\n        row.cells.getCell(groupIndex).value = cArgs.captionText;\n        row.cells.getCell(groupIndex + 1).style.stringFormat = new PdfStringFormat(PdfTextAlignment.Left);\n        row.style.setBorder(border);\n        row.style.setFont(font);\n        row.style.setTextBrush(brush);\n        row.style.setBackgroundBrush(backgroundBrush);\n        var sRows;\n        var captionSummaryModel = new CaptionSummaryModelGenerator(gObj);\n\n        if (!isNullOrUndefined(dataSourceItems.items.records)) {\n          sRows = captionSummaryModel.generateRows(dataSourceItems.items.records, dataSourceItems);\n        } else {\n          sRows = captionSummaryModel.generateRows(dataSourceItems.items, dataSourceItems);\n        }\n\n        if (!isNullOrUndefined(sRows) && sRows.length === 0) {\n          row.cells.getCell(groupIndex + 1).columnSpan = pdfGrid.columns.count - (groupIndex + 1);\n        }\n\n        if (!isNullOrUndefined(dataSource.childLevels) && dataSource.childLevels > 0) {\n          _this.processAggregates(sRows, pdfGrid, border, font, brush, backgroundBrush, true, row, groupIndex);\n\n          _this.processGroupedRecords(pdfGrid, dataSourceItems.items, gridColumns, gObj, border, groupIndex + 1, font, brush, backgroundBrush, returnType, pdfExportProperties, helper, index);\n\n          var groupSummaryModel = new GroupSummaryModelGenerator(gObj);\n          sRows = groupSummaryModel.generateRows(dataSourceItems.items.records, dataSourceItems);\n\n          _this.processAggregates(sRows, pdfGrid, border, font, brush, backgroundBrush, false);\n        } else {\n          _this.processAggregates(sRows, pdfGrid, border, font, brush, backgroundBrush, true, row, groupIndex);\n\n          index = _this.processRecord(border, gridColumns, gObj, dataSourceItems.items, pdfGrid, groupIndex + 1, pdfExportProperties, helper, index);\n          var groupSummaryModel = new GroupSummaryModelGenerator(gObj);\n          sRows = groupSummaryModel.generateRows(dataSourceItems.items, dataSourceItems);\n          var isGroupedFooter = true;\n\n          _this.processAggregates(sRows, pdfGrid, border, font, brush, backgroundBrush, false, null, null, isGroupedFooter);\n        }\n      });\n    };\n\n    var this_1 = this;\n\n    for (var _i = 0, dataSource_1 = dataSource; _i < dataSource_1.length; _i++) {\n      var dataSourceItems = dataSource_1[_i];\n\n      _loop_1(dataSourceItems);\n    }\n  };\n\n  PdfExport.prototype.processGridHeaders = function (childLevels, pdfGrid, rows, gridColumn, border, headerFont, headerBrush, grid, allowHorizontalOverflow, eCols) {\n    var _this = this;\n\n    var columnCount = gridColumn.length + childLevels;\n    var depth = measureColumnDepth(eCols);\n    var cols = eCols;\n    var index = 0;\n\n    if (this.parent.allowGrouping) {\n      index = this.parent.groupSettings.columns.length;\n    }\n\n    pdfGrid.columns.add(columnCount);\n    pdfGrid.headers.add(rows.length);\n\n    var applyTextAndSpan = function (rowIdx, colIdx, col, rowSpan, colSpan) {\n      var gridHeader = pdfGrid.headers.getHeader(rowIdx);\n      var pdfCell = gridHeader.cells.getCell(colIdx);\n      var cell = rows[rowIdx].cells[colIdx];\n\n      if (!isNullOrUndefined(col.headerTextAlign)) {\n        pdfCell.style.stringFormat = _this.getHorizontalAlignment(col.headerTextAlign);\n      }\n\n      if (rowSpan > 0) {\n        pdfCell.rowSpan = rowSpan;\n        pdfCell.style.stringFormat = _this.getVerticalAlignment('Bottom', pdfCell.style.stringFormat, col.textAlign);\n      }\n\n      if (colSpan > 0) {\n        pdfCell.columnSpan = colSpan;\n      }\n\n      gridHeader.style.setBorder(border);\n      gridHeader.style.setFont(headerFont);\n      gridHeader.style.setTextBrush(headerBrush);\n      pdfCell.value = col.headerText;\n\n      if (!isNullOrUndefined(cell) && (cell.cellType === CellType.HeaderIndent || cell.cellType === CellType.DetailHeader)) {\n        pdfCell.value = '';\n        pdfCell.width = 20;\n      }\n\n      var args = {\n        cell: pdfCell,\n        gridCell: cell,\n        style: pdfCell.style\n      };\n\n      _this.parent.trigger(events.pdfHeaderQueryCellInfo, args);\n    };\n\n    var recuHeader = function (cols, depth, spanCnt, colIndex, rowIndex, isRoot) {\n      var cidx = 0;\n\n      for (var i = 0; i < cols.length; i++) {\n        if (isRoot) {\n          cidx = cidx + spanCnt + (i === 0 ? 0 : -1);\n          colIndex = cidx;\n          spanCnt = 0;\n        }\n\n        if (cols[i].columns && cols[i].columns.length) {\n          var newSpanCnt = recuHeader(cols[i].columns, depth - 1, 0, i + colIndex, rowIndex + 1, false);\n          applyTextAndSpan(rowIndex, i + colIndex, cols[i], 0, newSpanCnt);\n          spanCnt = spanCnt + newSpanCnt;\n          colIndex = colIndex + newSpanCnt - 1;\n        } else if (cols[i].visible || _this.hideColumnInclude) {\n          spanCnt++;\n          applyTextAndSpan(rowIndex, i + colIndex + index, cols[i], depth, 0);\n        }\n      }\n\n      return spanCnt;\n    };\n\n    recuHeader(cols, depth, 0, 0, 0, true);\n\n    if (pdfGrid.columns.count >= 6 && allowHorizontalOverflow) {\n      pdfGrid.style.allowHorizontalOverflow = true;\n    }\n\n    return pdfGrid;\n  };\n\n  PdfExport.prototype.processExportProperties = function (pdfExportProperties, dataSource) {\n    if (!isNullOrUndefined(pdfExportProperties)) {\n      if (!isNullOrUndefined(pdfExportProperties.theme)) {\n        this.gridTheme = pdfExportProperties.theme;\n      }\n\n      var clientSize = this.pdfPageSettings.size;\n      this.drawHeader(pdfExportProperties);\n\n      if (!isNullOrUndefined(pdfExportProperties.footer)) {\n        /* tslint:disable-next-line:no-any */\n        var footer = pdfExportProperties.footer;\n        var position = new PointF(0, clientSize.width - 80 - footer.fromBottom * 0.75);\n        var size = new SizeF(clientSize.width - 80, footer.height * 0.75);\n        var bounds = new RectangleF(position, size);\n        this.pdfDocument.template.bottom = this.drawPageTemplate(new PdfPageTemplateElement(bounds), footer);\n      }\n\n      if (!isNullOrUndefined(pdfExportProperties.includeHiddenColumn) && !this.isGrouping) {\n        this.hideColumnInclude = pdfExportProperties.includeHiddenColumn;\n      }\n\n      if (!isNullOrUndefined(pdfExportProperties.dataSource)) {\n        if (!(pdfExportProperties.dataSource instanceof DataManager)) {\n          dataSource = pdfExportProperties.dataSource;\n        }\n\n        this.customDataSource = true;\n        this.currentViewData = false;\n      } else if (!isNullOrUndefined(pdfExportProperties.exportType)) {\n        if (pdfExportProperties.exportType === 'CurrentPage') {\n          dataSource = this.parent.currentViewData;\n          this.currentViewData = true;\n          this.customDataSource = false;\n        } else {\n          this.currentViewData = false;\n          this.customDataSource = false;\n        }\n      } else {\n        this.currentViewData = false;\n        this.customDataSource = false;\n      }\n    } else {\n      this.currentViewData = false;\n      this.customDataSource = false;\n    }\n\n    return dataSource;\n  };\n\n  PdfExport.prototype.drawHeader = function (pdfExportProperties) {\n    var _this = this;\n\n    var clientSize = this.pdfPageSettings.size;\n\n    if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.header)) {\n      /* tslint:disable-next-line:no-any */\n      var header = pdfExportProperties.header;\n      var position = new PointF(0, header.fromTop);\n      var size = new SizeF(clientSize.width - 80, header.height * 0.75);\n      var bounds = new RectangleF(position, size);\n\n      if (!this.headerOnPages.length) {\n        this.pdfDocument.template.top = this.drawPageTemplate(new PdfPageTemplateElement(bounds), header);\n      } else {\n        var headerTemplate_1 = this.drawPageTemplate(new PdfPageTemplateElement(bounds), header);\n        this.headerOnPages.filter(function (index) {\n          if (index - 1 >= 0 && index - 1 < _this.pdfDocument.pages.count - 1) {\n            _this.pdfDocument.pages.getPageByIndex(index - 1).graphics.drawPdfTemplate(headerTemplate_1.template, new PointF(0, 0));\n          }\n        });\n      }\n    }\n  };\n\n  PdfExport.prototype.drawPageTemplate = function (template, element) {\n    for (var _i = 0, _a = element.contents; _i < _a.length; _i++) {\n      var content = _a[_i];\n      this.processContentValidation(content);\n\n      switch (content.type) {\n        case 'Text':\n          /* tslint:disable-next-line:max-line-length */\n          if (content.value === '' || content.value === undefined || content.value === null || typeof content.value !== 'string') {\n            throw new Error('please enter the valid input value in text content...');\n          }\n\n          this.drawText(template, content);\n          break;\n\n        case 'PageNumber':\n          this.drawPageNumber(template, content);\n          break;\n\n        case 'Image':\n          if (content.src === undefined || content.src === null || content.src === '') {\n            throw new Error('please enter the valid base64 string in image content...');\n          }\n\n          this.drawImage(template, content);\n          break;\n\n        case 'Line':\n          this.drawLine(template, content);\n          break;\n\n        default:\n          throw new Error('Please set valid content type...');\n      }\n    }\n\n    return template;\n  };\n\n  PdfExport.prototype.processContentValidation = function (content) {\n    if (content.type === undefined || content.type === null) {\n      throw new Error('please set valid content type...');\n    } else {\n      if (content.type === 'Line') {\n        if (content.points === undefined || content.points === null) {\n          throw new Error('please enter valid points in ' + content.type + ' content...');\n        } else {\n          if (content.points.x1 === undefined || content.points.x1 === null || typeof content.points.x1 !== 'number') {\n            throw new Error('please enter valid x1 co-ordinate in ' + content.type + ' points...');\n          }\n\n          if (content.points.y1 === undefined || content.points.y1 === null || typeof content.points.y1 !== 'number') {\n            throw new Error('please enter valid y1 co-ordinate in ' + content.type + ' points...');\n          }\n\n          if (content.points.x2 === undefined || content.points.x2 === null || typeof content.points.x2 !== 'number') {\n            throw new Error('please enter valid x2 co-ordinate in ' + content.type + ' points...');\n          }\n\n          if (content.points.y2 === undefined || content.points.y2 === null || typeof content.points.y2 !== 'number') {\n            throw new Error('please enter valid y2 co-ordinate in ' + content.type + ' points...');\n          }\n        }\n      } else {\n        if (content.position === undefined || content.position === null) {\n          throw new Error('please enter valid position in ' + content.type + ' content...');\n        } else {\n          if (content.position.x === undefined || content.position.x === null || typeof content.position.x !== 'number') {\n            throw new Error('please enter valid x co-ordinate in ' + content.type + ' position...');\n          }\n\n          if (content.position.y === undefined || content.position.y === null || typeof content.position.y !== 'number') {\n            throw new Error('please enter valid y co-ordinate in ' + content.type + ' position...');\n          }\n        }\n      }\n    }\n  };\n  /* tslint:disable-next-line:no-any */\n\n\n  PdfExport.prototype.drawText = function (pageTemplate, content) {\n    var font = this.getFont(content);\n    var brush = this.getBrushFromContent(content);\n    var pen = null;\n\n    if (!isNullOrUndefined(content.style.textPenColor)) {\n      var penColor = this.hexToRgb(content.style.textPenColor);\n      pen = new PdfPen(new PdfColor(penColor.r, penColor.g, penColor.b));\n    }\n\n    if (brush == null && pen == null) {\n      brush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n    }\n\n    var value = content.value.toString();\n    var x = content.position.x * 0.75;\n    var y = content.position.y * 0.75;\n    var format = new PdfStringFormat();\n    var result = this.setContentFormat(content, format);\n\n    if (result !== null && !isNullOrUndefined(result.format) && !isNullOrUndefined(result.size)) {\n      pageTemplate.graphics.drawString(value, font, pen, brush, x, y, result.size.width, result.size.height, result.format);\n    } else {\n      pageTemplate.graphics.drawString(value, font, pen, brush, x, y, format);\n    }\n  };\n  /* tslint:disable-next-line:no-any */\n\n\n  PdfExport.prototype.drawPageNumber = function (documentHeader, content) {\n    var font = this.getFont(content);\n    var brush = null;\n\n    if (!isNullOrUndefined(content.style.textBrushColor)) {\n      /* tslint:disable-next-line:max-line-length */\n      var brushColor = this.hexToRgb(content.style.textBrushColor);\n      brush = new PdfSolidBrush(new PdfColor(brushColor.r, brushColor.g, brushColor.b));\n    } else {\n      brush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n    }\n\n    var pageNumber = new PdfPageNumberField(font, brush);\n    pageNumber.numberStyle = this.getPageNumberStyle(content.pageNumberType);\n    var compositeField;\n    var format;\n\n    if (!isNullOrUndefined(content.format)) {\n      if (content.format.indexOf('$total') !== -1 && content.format.indexOf('$current') !== -1) {\n        var pageCount = new PdfPageCountField(font);\n        pageCount.numberStyle = this.getPageNumberStyle(content.pageNumberType);\n\n        if (content.format.indexOf('$total') > content.format.indexOf('$current')) {\n          format = content.format.replace('$current', '0');\n          format = format.replace('$total', '1');\n        } else {\n          format = content.format.replace('$current', '1');\n          format = format.replace('$total', '0');\n        }\n\n        compositeField = new PdfCompositeField(font, brush, format, pageNumber, pageCount);\n      } else if (content.format.indexOf('$current') !== -1 && content.format.indexOf('$total') === -1) {\n        format = content.format.replace('$current', '0');\n        compositeField = new PdfCompositeField(font, brush, format, pageNumber);\n      } else {\n        var pageCount = new PdfPageCountField(font);\n        format = content.format.replace('$total', '0');\n        compositeField = new PdfCompositeField(font, brush, format, pageCount);\n      }\n    } else {\n      format = '{0}';\n      compositeField = new PdfCompositeField(font, brush, format, pageNumber);\n    }\n\n    var x = content.position.x * 0.75;\n    var y = content.position.y * 0.75;\n    var result = this.setContentFormat(content, compositeField.stringFormat);\n\n    if (result !== null && !isNullOrUndefined(result.format) && !isNullOrUndefined(result.size)) {\n      compositeField.stringFormat = result.format;\n      compositeField.bounds = new RectangleF(x, y, result.size.width, result.size.height);\n    }\n\n    compositeField.draw(documentHeader.graphics, x, y);\n  };\n  /* tslint:disable-next-line:no-any */\n\n\n  PdfExport.prototype.drawImage = function (documentHeader, content) {\n    var x = content.position.x * 0.75;\n    var y = content.position.y * 0.75;\n    var width = !isNullOrUndefined(content.size) ? content.size.width * 0.75 : undefined;\n    var height = !isNullOrUndefined(content.size) ? content.size.height * 0.75 : undefined;\n    var image = new PdfBitmap(content.src);\n\n    if (!isNullOrUndefined(width)) {\n      documentHeader.graphics.drawImage(image, x, y, width, height);\n    } else {\n      documentHeader.graphics.drawImage(image, x, y);\n    }\n  };\n  /* tslint:disable-next-line:no-any */\n\n\n  PdfExport.prototype.drawLine = function (documentHeader, content) {\n    var x1 = content.points.x1 * 0.75;\n    var y1 = content.points.y1 * 0.75;\n    var x2 = content.points.x2 * 0.75;\n    var y2 = content.points.y2 * 0.75;\n    var pen = this.getPenFromContent(content);\n\n    if (!isNullOrUndefined(content.style) && content.style !== null) {\n      if (!isNullOrUndefined(content.style.penSize) && content.style.penSize !== null && typeof content.style.penSize === 'number') {\n        pen.width = content.style.penSize * 0.75;\n      }\n\n      pen.dashStyle = this.getDashStyle(content.style.dashStyle);\n    }\n\n    documentHeader.graphics.drawLine(pen, x1, y1, x2, y2);\n  };\n  /* tslint:disable-next-line:no-any */\n\n  /* tslint:disable-next-line:max-line-length */\n\n  /* tslint:disable-next-line:max-func-body-length */\n\n\n  PdfExport.prototype.processAggregates = function (sRows, pdfGrid, border, font, brush, backgroundBrush, isCaption, captionRow, groupIndex, isGroupedFooter) {\n    for (var _i = 0, sRows_1 = sRows; _i < sRows_1.length; _i++) {\n      var row = sRows_1[_i];\n      var startIndex = 0;\n      var leastCaptionSummaryIndex = -1;\n      var index = 0;\n      var isEmpty = true;\n      /* tslint:disable-next-line:no-any */\n\n      var value = [];\n\n      for (var i = 0; i < pdfGrid.columns.count; i++) {\n        var cell = row.cells[index];\n\n        if (cell.cellType === CellType.DetailFooterIntent) {\n          i--;\n          index++;\n          continue;\n        }\n\n        if (!this.hideColumnInclude) {\n          while (cell.visible === undefined) {\n            if (cell.cellType === CellType.DetailFooterIntent) {\n              continue;\n            }\n\n            if (!isNullOrUndefined(captionRow)) {\n              if (!isNullOrUndefined(captionRow.cells.getCell(i).value)) {\n                /* tslint:disable-next-line:max-line-length */\n                var args = {\n                  row: row,\n                  type: 'GroupCaption',\n                  style: captionRow.cells\n                };\n                this.parent.trigger(events.pdfAggregateQueryCellInfo, args);\n                value.push('');\n                value.push(captionRow.cells.getCell(i).value);\n                isEmpty = false;\n\n                if (!isCaption) {\n                  i += 1;\n                }\n              } else {\n                value.push('');\n              }\n            } else {\n              value.push('');\n            }\n\n            i += 1;\n            index = index + 1;\n            cell = row.cells[index];\n          }\n\n          while (!isNullOrUndefined(cell.visible) && !cell.visible) {\n            index = index + 1;\n            cell = row.cells[index];\n          }\n        }\n\n        if (cell.isDataCell) {\n          var templateFn = {};\n          /* tslint:disable-next-line:max-line-length */\n\n          if (!isNullOrUndefined(cell.column.footerTemplate) || !isNullOrUndefined(cell.column.groupCaptionTemplate) || !isNullOrUndefined(cell.column.groupFooterTemplate)) {\n            /* tslint:disable-next-line:no-any */\n            var result = this.getTemplateFunction(templateFn, i, leastCaptionSummaryIndex, cell);\n            templateFn = result.templateFunction;\n            leastCaptionSummaryIndex = result.leastCaptionSummaryIndex;\n            var txt = void 0;\n            var data = row.data[cell.column.field ? cell.column.field : cell.column.columnName];\n\n            if (this.parent.isReact || this.parent.isVue) {\n              txt = templateFn[getEnumValue(CellType, cell.cellType)](data, this.parent);\n\n              if (this.parent.isReact) {\n                this.parent.renderTemplates();\n              }\n            } else {\n              txt = templateFn[getEnumValue(CellType, cell.cellType)](data);\n            }\n\n            value.push(txt[0].textContent);\n            isEmpty = false;\n          } else {\n            /* tslint:disable-next-line:no-any */\n            var result = this.getSummaryWithoutTemplate(row.data[cell.column.field]);\n\n            if (!isNullOrUndefined(result)) {\n              value.push(result);\n            }\n          }\n        } else {\n          value.push('');\n        }\n\n        if (isEmpty && value[i] !== '' && !isNullOrUndefined(value[i]) && value[i] !== null) {\n          isEmpty = false;\n        }\n\n        index += 1;\n      }\n\n      if (isCaption) {\n        for (var i = this.parent.groupSettings.columns.length + 1; i < value.length - 1; i++) {\n          value[i] = value[i + 1];\n        }\n      }\n\n      if (!isEmpty) {\n        if (!isCaption) {\n          var gridRow = pdfGrid.rows.addRow();\n          gridRow.style.setBorder(border);\n          gridRow.style.setFont(font);\n          gridRow.style.setTextBrush(brush);\n          gridRow.style.setBackgroundBrush(backgroundBrush);\n          /* tslint:disable-next-line:max-line-length */\n\n          var args = {\n            row: row,\n            type: isGroupedFooter ? 'GroupFooter' : 'Footer',\n            style: gridRow.cells\n          };\n          this.parent.trigger(events.pdfAggregateQueryCellInfo, args);\n\n          for (var i = 0; i < pdfGrid.columns.count; i++) {\n            gridRow.cells.getCell(i).value = value[i].toString();\n          }\n        } else {\n          for (var i = 0; i < pdfGrid.columns.count; i++) {\n            captionRow.cells.getCell(i).value = value[i].toString();\n\n            if (i === groupIndex + 1 && leastCaptionSummaryIndex !== -1 && leastCaptionSummaryIndex !== 1) {\n              captionRow.cells.getCell(i).columnSpan = leastCaptionSummaryIndex - (groupIndex + 1);\n            } else if (i === groupIndex + 1 && leastCaptionSummaryIndex === -1) {\n              captionRow.cells.getCell(i).columnSpan = pdfGrid.columns.count - (groupIndex + 1);\n            }\n          }\n        }\n      }\n    }\n  };\n  /* tslint:disable-next-line:no-any */\n\n\n  PdfExport.prototype.getTemplateFunction = function (templateFn, index, leastCaptionSummaryIndex, cell) {\n    if (!isNullOrUndefined(cell.column.footerTemplate) && cell.cellType === CellType.Summary) {\n      templateFn[getEnumValue(CellType, CellType.Summary)] = compile(cell.column.footerTemplate);\n    } else if (!isNullOrUndefined(cell.column.groupCaptionTemplate)) {\n      if (leastCaptionSummaryIndex === -1) {\n        leastCaptionSummaryIndex = index;\n      }\n\n      templateFn[getEnumValue(CellType, CellType.CaptionSummary)] = compile(cell.column.groupCaptionTemplate);\n    } else {\n      templateFn[getEnumValue(CellType, CellType.GroupSummary)] = compile(cell.column.groupFooterTemplate);\n    }\n\n    return {\n      templateFunction: templateFn,\n      leastCaptionSummaryIndex: leastCaptionSummaryIndex\n    };\n  };\n  /* tslint:disable-next-line:no-any */\n\n\n  PdfExport.prototype.getSummaryWithoutTemplate = function (data) {\n    if (!isNullOrUndefined(data.Sum)) {\n      return data.Sum;\n    } else if (!isNullOrUndefined(data.Average)) {\n      return data.Average;\n    } else if (!isNullOrUndefined(data.Max)) {\n      return data.Max;\n    } else if (!isNullOrUndefined(data.Min)) {\n      return data.Min;\n    } else if (!isNullOrUndefined(data.Count)) {\n      return data.Count;\n    } else if (!isNullOrUndefined(data.TrueCount)) {\n      return data.TrueCount;\n    } else if (!isNullOrUndefined(data.FalseCount)) {\n      return data.FalseCount;\n    } else if (!isNullOrUndefined(data.Custom)) {\n      return data.Custom;\n    }\n  };\n  /**\n   * Set alignment, width and type of the values of the column\n   */\n\n\n  PdfExport.prototype.setColumnProperties = function (gridColumns, pdfGrid, helper, gObj, allowHorizontalOverflow) {\n    var startIndex = gObj.groupSettings.columns.length;\n\n    for (var i = 0; i < startIndex; i++) {\n      pdfGrid.columns.getColumn(i).width = 20;\n    }\n\n    for (var i = 0; i < gridColumns.length; i++) {\n      if (!isNullOrUndefined(gridColumns[i].textAlign)) {\n        pdfGrid.columns.getColumn(i + startIndex).format = this.getHorizontalAlignment(gridColumns[i].textAlign);\n      } // Need to add width consideration with % value\n\n\n      if (pdfGrid.style.allowHorizontalOverflow && !isNullOrUndefined(gridColumns[i].width) && allowHorizontalOverflow) {\n        pdfGrid.columns.getColumn(i + startIndex).width = typeof gridColumns[i].width === 'number' ? gridColumns[i].width * 0.75 : helper.getConvertedWidth(gridColumns[i].width) * 0.75;\n      }\n    }\n  };\n  /**\n   * set default style properties of each rows in exporting grid\n   * @private\n   */\n\n\n  PdfExport.prototype.setRecordThemeStyle = function (row, border) {\n    if (!isNullOrUndefined(this.gridTheme) && !isNullOrUndefined(this.gridTheme.record)) {\n      var fontFamily = !isNullOrUndefined(this.gridTheme.record.fontName) ? this.getFontFamily(this.gridTheme.record.fontName) : PdfFontFamily.Helvetica;\n      var fontSize = !isNullOrUndefined(this.gridTheme.record.fontSize) ? this.gridTheme.record.fontSize : 9.75;\n      var fontStyle = this.getFontStyle(this.gridTheme.record);\n      var font = new PdfStandardFont(fontFamily, fontSize, fontStyle);\n\n      if (!isNullOrUndefined(this.gridTheme.record.font)) {\n        font = this.gridTheme.record.font;\n      }\n\n      row.style.setFont(font);\n      var pdfColor = new PdfColor();\n\n      if (!isNullOrUndefined(this.gridTheme.record.fontColor)) {\n        var penBrushColor = this.hexToRgb(this.gridTheme.record.fontColor);\n        pdfColor = new PdfColor(penBrushColor.r, penBrushColor.g, penBrushColor.b);\n      }\n\n      row.style.setTextBrush(new PdfSolidBrush(pdfColor));\n    } else {\n      row.style.setTextBrush(new PdfSolidBrush(new PdfColor(0, 0, 0)));\n    }\n\n    var borderRecord = this.gridTheme && this.gridTheme.record && this.gridTheme.record.border ? this.getBorderStyle(this.gridTheme.record.border) : border;\n    row.style.setBorder(borderRecord);\n    return row;\n  };\n  /**\n   * generate the formatted cell values\n   * @private\n   */\n\n\n  PdfExport.prototype.processRecord = function (border, columns, gObj, dataSource, pdfGrid, startIndex, pdfExportProperties, helper, rowIndex) {\n    var rows = helper.getGridRowModel(columns, dataSource, gObj, rowIndex);\n\n    for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n      var row = rows_1[_i];\n      rowIndex++; // create a new row and set default style properties\n\n      var gridRow = this.setRecordThemeStyle(pdfGrid.rows.addRow(), border);\n      var cellLength = row.cells.length;\n\n      for (var j = 0; j < cellLength; j++) {\n        var gridCell = row.cells[j];\n\n        if (gridCell.cellType !== CellType.Data) {\n          continue;\n        }\n\n        var column = gridCell.column;\n        var field = column.field;\n        var cellValue = !isNullOrUndefined(field) ? column.valueAccessor(field, row.data, column) : '';\n        var value = !isNullOrUndefined(cellValue) ? cellValue : '';\n        var foreignKeyData = void 0;\n\n        if (column.isForeignColumn && column.isForeignColumn()) {\n          foreignKeyData = helper.getFData(value, column);\n          value = getValue(column.foreignKeyValue, foreignKeyData);\n        }\n\n        var data = row.data;\n        var cell = gridRow.cells.getCell(j);\n        var args = {\n          data: data,\n          value: value,\n          column: column,\n          style: undefined,\n          colSpan: 1,\n          cell: cell\n        };\n        args.value = this.exportValueFormatter.formatCellValue(args, gObj.isServerRendered);\n        this.parent.trigger(events.pdfQueryCellInfo, args);\n        cell.value = args.value;\n\n        if (!isNullOrUndefined(args.style)) {\n          this.processCellStyle(cell, args);\n        }\n\n        if (args.colSpan > 1) {\n          if (j + 1 + args.colSpan > gridRow.cells.count) {\n            args.colSpan = gridRow.cells.count - (j + 1);\n          }\n\n          cell.columnSpan = args.colSpan;\n\n          for (var i = 1; i < cell.columnSpan; i++) {\n            var spanCell = gridRow.cells.getCell(j + i);\n            spanCell.value = '';\n          }\n\n          j += args.colSpan - 1;\n        }\n      }\n\n      if (row.isExpand) {\n        var gridRow_1 = this.setRecordThemeStyle(pdfGrid.rows.addRow(), border);\n        var cell = gridRow_1.cells.getCell(startIndex);\n        cell.columnSpan = gridRow_1.cells.count - startIndex;\n        cell.style.cellPadding = new PdfPaddings(10, 10, 10, 10);\n        gObj.isPrinting = true;\n        var exportType = !isNullOrUndefined(pdfExportProperties) && pdfExportProperties.exportType ? pdfExportProperties.exportType : 'AllPages';\n        var returnValue = this.helper.createChildGrid(gObj, row, exportType, this.gridPool);\n        var childGridObj = returnValue.childGrid;\n        var element = returnValue.element;\n        childGridObj.actionFailure = helper.failureHandler(this.gridPool, childGridObj, this.globalResolve);\n        var args = {\n          childGrid: childGridObj,\n          row: row,\n          cell: cell,\n          exportProperties: pdfExportProperties\n        };\n        this.parent.trigger(events.exportDetailDataBound, args);\n        childGridObj.beforeDataBound = this.childGridCell(cell, childGridObj, pdfExportProperties);\n        childGridObj.appendTo(element);\n      }\n\n      this.parent.notify(events.exportRowDataBound, {\n        type: 'pdf',\n        rowObj: row\n      });\n    }\n\n    return rowIndex;\n  };\n\n  PdfExport.prototype.childGridCell = function (cell, childGridObj, pdfExportProperties) {\n    var _this = this;\n\n    return function (result) {\n      childGridObj.beforeDataBound = null;\n      result.cancel = true;\n      cell.value = _this.processGridExport(childGridObj, result, pdfExportProperties);\n      childGridObj.destroy();\n      detach(childGridObj.element);\n      _this.gridPool[childGridObj.id] = true;\n\n      _this.helper.checkAndExport(_this.gridPool, _this.globalResolve);\n\n      return cell;\n    };\n  };\n\n  PdfExport.prototype.processCellStyle = function (cell, args) {\n    if (!isNullOrUndefined(args.style.backgroundColor)) {\n      var backColor = this.hexToRgb(args.style.backgroundColor);\n      cell.style.backgroundBrush = new PdfSolidBrush(new PdfColor(backColor.r, backColor.g, backColor.b));\n    }\n\n    if (!isNullOrUndefined(args.style.textAlignment)) {\n      cell.style.stringFormat = this.getHorizontalAlignment(args.style.textAlignment);\n    }\n\n    if (!isNullOrUndefined(args.style.cellPadding)) {\n      cell.style.cellPadding = args.style.cellPadding;\n    }\n\n    if (!isNullOrUndefined(args.style.verticalAlignment)) {\n      cell.style.stringFormat = this.getVerticalAlignment(args.style.verticalAlignment, cell.style.stringFormat);\n    }\n\n    if (!isNullOrUndefined(args.style.textBrushColor)) {\n      var textBrushColor = this.hexToRgb(args.style.textBrushColor);\n      cell.style.textBrush = new PdfSolidBrush(new PdfColor(textBrushColor.r, textBrushColor.g, textBrushColor.b));\n    }\n\n    if (!isNullOrUndefined(args.style.textPenColor)) {\n      var textPenColor = this.hexToRgb(args.style.textPenColor);\n      cell.style.textPen = new PdfPen(new PdfColor(textPenColor.r, textPenColor.g, textPenColor.b));\n    }\n\n    if (!isNullOrUndefined(args.style.fontFamily) || !isNullOrUndefined(args.style.fontSize) || !isNullOrUndefined(args.style.bold) || !isNullOrUndefined(args.style.italic) || !isNullOrUndefined(args.style.underline) || !isNullOrUndefined(args.style.strikeout)) {\n      cell.style.font = this.getFont(args);\n    }\n\n    if (!isNullOrUndefined(args.style.border)) {\n      var border = new PdfBorders();\n      var borderWidth = args.style.border.width; // set border width\n\n      var width = !isNullOrUndefined(borderWidth) && typeof borderWidth === 'number' ? borderWidth * 0.75 : undefined; // set border color\n\n      var color = new PdfColor(196, 196, 196);\n\n      if (!isNullOrUndefined(args.style.border.color)) {\n        var borderColor = this.hexToRgb(args.style.border.color);\n        color = new PdfColor(borderColor.r, borderColor.g, borderColor.b);\n      }\n\n      var pen = new PdfPen(color, width); // set border dashStyle 'Solid <default>, Dash, Dot, DashDot, DashDotDot'\n\n      if (!isNullOrUndefined(args.style.border.dashStyle)) {\n        pen.dashStyle = this.getDashStyle(args.style.border.dashStyle);\n      }\n\n      border.all = pen;\n      cell.style.borders = border;\n    }\n\n    if (!isNullOrUndefined(args.style.paragraphIndent)) {\n      cell.style.stringFormat = new PdfStringFormat();\n      cell.style.stringFormat.paragraphIndent = args.style.paragraphIndent;\n    }\n  };\n  /**\n   * set text alignment of each columns in exporting grid\n   * @private\n   */\n\n\n  PdfExport.prototype.getHorizontalAlignment = function (textAlign, format) {\n    if (format === undefined) {\n      format = new PdfStringFormat();\n    }\n\n    switch (textAlign) {\n      case 'Right':\n        format.alignment = PdfTextAlignment.Right;\n        break;\n\n      case 'Center':\n        format.alignment = PdfTextAlignment.Center;\n        break;\n\n      case 'Justify':\n        format.alignment = PdfTextAlignment.Justify;\n        break;\n\n      case 'Left':\n        format.alignment = PdfTextAlignment.Left;\n        break;\n    }\n\n    return format;\n  };\n  /**\n   * set vertical alignment of each columns in exporting grid\n   * @private\n   */\n\n\n  PdfExport.prototype.getVerticalAlignment = function (verticalAlign, format, textAlign) {\n    if (format === undefined) {\n      format = new PdfStringFormat();\n      format = this.getHorizontalAlignment(textAlign, format);\n    }\n\n    switch (verticalAlign) {\n      case 'Bottom':\n        format.lineAlignment = PdfVerticalAlignment.Bottom;\n        break;\n\n      case 'Middle':\n        format.lineAlignment = PdfVerticalAlignment.Middle;\n        break;\n\n      case 'Top':\n        format.lineAlignment = PdfVerticalAlignment.Top;\n        break;\n    }\n\n    return format;\n  };\n\n  PdfExport.prototype.getFontFamily = function (fontFamily) {\n    switch (fontFamily) {\n      case 'TimesRoman':\n        return 2;\n\n      case 'Courier':\n        return 1;\n\n      case 'Symbol':\n        return 3;\n\n      case 'ZapfDingbats':\n        return 4;\n\n      default:\n        return 0;\n    }\n  };\n  /* tslint:disable-next-line:no-any */\n\n\n  PdfExport.prototype.getFont = function (content) {\n    if (content.font) {\n      return content.font;\n    }\n\n    var fontSize = !isNullOrUndefined(content.style.fontSize) ? content.style.fontSize * 0.75 : 9.75;\n    var fontFamily = !isNullOrUndefined(content.style.fontFamily) ? this.getFontFamily(content.style.fontFamily) : PdfFontFamily.TimesRoman;\n    var fontStyle = PdfFontStyle.Regular;\n\n    if (!isNullOrUndefined(content.style.bold) && content.style.bold) {\n      fontStyle |= PdfFontStyle.Bold;\n    }\n\n    if (!isNullOrUndefined(content.style.italic) && content.style.italic) {\n      fontStyle |= PdfFontStyle.Italic;\n    }\n\n    if (!isNullOrUndefined(content.style.underline) && content.style.underline) {\n      fontStyle |= PdfFontStyle.Underline;\n    }\n\n    if (!isNullOrUndefined(content.style.strikeout) && content.style.strikeout) {\n      fontStyle |= PdfFontStyle.Strikeout;\n    }\n\n    return new PdfStandardFont(fontFamily, fontSize, fontStyle);\n  };\n\n  PdfExport.prototype.getPageNumberStyle = function (pageNumberType) {\n    switch (pageNumberType) {\n      case 'LowerLatin':\n        return 2;\n\n      case 'LowerRoman':\n        return 3;\n\n      case 'UpperLatin':\n        return 4;\n\n      case 'UpperRoman':\n        return 5;\n\n      default:\n        return 1;\n    }\n  };\n\n  PdfExport.prototype.setContentFormat = function (content, format) {\n    if (!isNullOrUndefined(content.size)) {\n      var width = content.size.width * 0.75;\n      var height = content.size.height * 0.75;\n      format = new PdfStringFormat(PdfTextAlignment.Left, PdfVerticalAlignment.Middle);\n\n      if (!isNullOrUndefined(content.style.hAlign)) {\n        switch (content.style.hAlign) {\n          case 'Right':\n            format.alignment = PdfTextAlignment.Right;\n            break;\n\n          case 'Center':\n            format.alignment = PdfTextAlignment.Center;\n            break;\n\n          case 'Justify':\n            format.alignment = PdfTextAlignment.Justify;\n            break;\n\n          default:\n            format.alignment = PdfTextAlignment.Left;\n        }\n      }\n\n      if (!isNullOrUndefined(content.style.vAlign)) {\n        format = this.getVerticalAlignment(content.style.vAlign, format);\n      }\n\n      return {\n        format: format,\n        size: new SizeF(width, height)\n      };\n    }\n\n    return null;\n  };\n\n  PdfExport.prototype.getPageSize = function (pageSize) {\n    switch (pageSize) {\n      case 'Letter':\n        return new SizeF(612, 792);\n\n      case 'Note':\n        return new SizeF(540, 720);\n\n      case 'Legal':\n        return new SizeF(612, 1008);\n\n      case 'A0':\n        return new SizeF(2380, 3368);\n\n      case 'A1':\n        return new SizeF(1684, 2380);\n\n      case 'A2':\n        return new SizeF(1190, 1684);\n\n      case 'A3':\n        return new SizeF(842, 1190);\n\n      case 'A5':\n        return new SizeF(421, 595);\n\n      case 'A6':\n        return new SizeF(297, 421);\n\n      case 'A7':\n        return new SizeF(210, 297);\n\n      case 'A8':\n        return new SizeF(148, 210);\n\n      case 'A9':\n        return new SizeF(105, 148);\n      // case 'A10':\n      //     return new SizeF(74, 105);\n\n      case 'B0':\n        return new SizeF(2836, 4008);\n\n      case 'B1':\n        return new SizeF(2004, 2836);\n\n      case 'B2':\n        return new SizeF(1418, 2004);\n\n      case 'B3':\n        return new SizeF(1002, 1418);\n\n      case 'B4':\n        return new SizeF(709, 1002);\n\n      case 'B5':\n        return new SizeF(501, 709);\n\n      case 'Archa':\n        return new SizeF(648, 864);\n\n      case 'Archb':\n        return new SizeF(864, 1296);\n\n      case 'Archc':\n        return new SizeF(1296, 1728);\n\n      case 'Archd':\n        return new SizeF(1728, 2592);\n\n      case 'Arche':\n        return new SizeF(2592, 3456);\n\n      case 'Flsa':\n        return new SizeF(612, 936);\n\n      case 'HalfLetter':\n        return new SizeF(396, 612);\n\n      case 'Letter11x17':\n        return new SizeF(792, 1224);\n\n      case 'Ledger':\n        return new SizeF(1224, 792);\n\n      default:\n        return new SizeF(595, 842);\n    }\n  };\n\n  PdfExport.prototype.getDashStyle = function (dashStyle) {\n    switch (dashStyle) {\n      case 'Dash':\n        return 1;\n\n      case 'Dot':\n        return 2;\n\n      case 'DashDot':\n        return 3;\n\n      case 'DashDotDot':\n        return 4;\n\n      default:\n        return 0;\n    }\n  };\n\n  PdfExport.prototype.getPenFromContent = function (content) {\n    var pen = new PdfPen(new PdfColor(0, 0, 0));\n\n    if (!isNullOrUndefined(content.style) && content.style !== null && !isNullOrUndefined(content.style.penColor)) {\n      var penColor = this.hexToRgb(content.style.penColor);\n      pen = new PdfPen(new PdfColor(penColor.r, penColor.g, penColor.b));\n    }\n\n    return pen;\n  };\n\n  PdfExport.prototype.getBrushFromContent = function (content) {\n    var brush = null;\n\n    if (!isNullOrUndefined(content.style.textBrushColor)) {\n      /* tslint:disable-next-line:max-line-length */\n      var brushColor = this.hexToRgb(content.style.textBrushColor);\n      brush = new PdfSolidBrush(new PdfColor(brushColor.r, brushColor.g, brushColor.b));\n    }\n\n    return brush;\n  };\n\n  PdfExport.prototype.hexToRgb = function (hex) {\n    if (hex === null || hex === '' || hex.length !== 7) {\n      throw new Error('please set valid hex value for color...');\n    }\n\n    hex = hex.substring(1);\n    var bigint = parseInt(hex, 16);\n    var r = bigint >> 16 & 255;\n    var g = bigint >> 8 & 255;\n    var b = bigint & 255;\n    return {\n      r: r,\n      g: g,\n      b: b\n    };\n  };\n\n  PdfExport.prototype.getFontStyle = function (theme) {\n    var fontStyle = PdfFontStyle.Regular;\n\n    if (!isNullOrUndefined(theme) && theme.bold) {\n      fontStyle |= PdfFontStyle.Bold;\n    }\n\n    if (!isNullOrUndefined(theme) && theme.italic) {\n      fontStyle |= PdfFontStyle.Italic;\n    }\n\n    if (!isNullOrUndefined(theme) && theme.underline) {\n      fontStyle |= PdfFontStyle.Underline;\n    }\n\n    if (!isNullOrUndefined(theme) && theme.strikeout) {\n      fontStyle |= PdfFontStyle.Strikeout;\n    }\n\n    return fontStyle;\n  };\n\n  PdfExport.prototype.getBorderStyle = function (border) {\n    var borders = new PdfBorders();\n\n    if (!isNullOrUndefined(border)) {\n      var borderWidth = border.width; // set border width\n\n      var width = !isNullOrUndefined(borderWidth) && typeof borderWidth === 'number' ? borderWidth * 0.75 : undefined; // set border color\n\n      var color = new PdfColor(196, 196, 196);\n\n      if (!isNullOrUndefined(border.color)) {\n        var borderColor = this.hexToRgb(border.color);\n        color = new PdfColor(borderColor.r, borderColor.g, borderColor.b);\n      }\n\n      var pen = new PdfPen(color, width); // set border dashStyle 'Solid <default>, Dash, Dot, DashDot, DashDotDot'\n\n      if (!isNullOrUndefined(border.dashStyle)) {\n        pen.dashStyle = this.getDashStyle(border.dashStyle);\n      }\n\n      borders.all = pen;\n    } else {\n      borders.all = new PdfPen(new PdfColor(234, 234, 234));\n    }\n\n    return borders;\n  };\n  /**\n   * To destroy the pdf export\n   * @return {void}\n   * @hidden\n   */\n\n\n  PdfExport.prototype.destroy = function () {//destroy for exporting\n  };\n\n  return PdfExport;\n}();\n\nexport { PdfExport };","map":{"version":3,"sources":["C:/Users/appsk/Documents/Projects/PredictiveMaintenance/React PDM/env/frontend/node_modules/@syncfusion/ej2-grids/src/grid/actions/pdf-export.js"],"names":["events","PdfDocument","PdfGrid","PdfBorders","PdfPen","PdfPaddings","PdfStandardFont","PdfFontFamily","PdfFontStyle","PdfBitmap","PdfStringFormat","PdfTextAlignment","PdfColor","PdfSolidBrush","PdfVerticalAlignment","RectangleF","PdfPageTemplateElement","PointF","PdfPageNumberField","PdfCompositeField","PdfPageCountField","SizeF","PdfPageSettings","PdfPageOrientation","PdfTrueTypeFont","ExportHelper","ExportValueFormatter","Data","SummaryModelGenerator","GroupSummaryModelGenerator","CaptionSummaryModelGenerator","compile","getEnumValue","isNullOrUndefined","detach","isBlazor","CellType","DataManager","Query","getValue","getUid","getPrintGridModel","measureColumnDepth","isExportColumns","updateColumnTypeForExportColumns","prepareColumns","PdfExport","parent","hideColumnInclude","currentViewData","customDataSource","isGrouping","headerOnPages","drawPosition","xPosition","yPosition","helper","gridPool","prototype","getModuleName","init","exportValueFormatter","locale","pdfDocument","undefined","isExporting","id","pdfPageSettings","exportWithData","pdfDoc","resolve","returnType","pdfExportProperties","isMultipleExport","reject","_this","processExport","then","trigger","pdfExportComplete","isBlob","promise","blobPromise","log","catch","e","actionFailure","Map","data","childGrid","hierarchyExportMode","expandedRows","args","requestType","cancel","headerPageNumbers","gridDrawPosition","gridObject","can","header","drawPos","beforePdfExport","Promise","dataSource","executeQuery","exportType","getCurrentViewRecords","allPromise_1","push","getData","getQuery","getColumnData","all","gObj","section","sections","add","pdfGrid","processSectionExportProperties","pdfPage","pages","processGridExport","globalResolve","checkAndExport","draw","drawHeader","fileName","save","destroy","pageOrientation","pageSize","orientation","Landscape","Portrait","size","getPageSize","setPageSettings","allowHorizontalOverflow","isFrozen","isFrozenGrid","getFrozenColumns","gridTheme","theme","getGridPdfFont","processExportProperties","result","columns","enableColumnVirtualization","getGridExportColumns","getColumns","filter","commands","groupSettings","length","hierarchyPrintMode","headerThemeStyle","getHeaderThemeStyle","border","headerFont","font","headerBrush","brush","returnValue","getHeaders","gridColumns","processGridHeaders","rows","setColumnProperties","captionThemeStyle","getSummaryCaptionThemeStyle","processGroupedRecords","backgroundBrush","processRecord","aggregates","summaryModel","sRows","column","col","type","aggregateModule","prepareSummaryInfo","generateRows","records","processAggregates","row","addRow","style","setBorder","caption","fontSize","fontFamily","fontName","getFontFamily","Helvetica","fontStyle","getFontStyle","pdfColor","fontColor","penBrushColor","hexToRgb","r","g","b","borderCaption","getBorderStyle","isTrueType","headerSize","headerStyle","fontFamily_1","captionFont","captionSize","captionStyle","fontFamily_2","record","recordFont","recordSize","recordStyle","fontFamily_3","level","index","groupIndex","_loop_1","dataSourceItems","getColumnByField","field","value","key","isForeignKey","isForeignColumn","this_1","headerText","enableGroupByFormat","formatCellValue","count","cArgs","captionText","exportGroupCaption","cells","getCell","stringFormat","Left","setFont","setTextBrush","setBackgroundBrush","captionSummaryModel","items","columnSpan","childLevels","groupSummaryModel","isGroupedFooter","_i","dataSource_1","gridColumn","grid","eCols","columnCount","depth","cols","allowGrouping","headers","applyTextAndSpan","rowIdx","colIdx","rowSpan","colSpan","gridHeader","getHeader","pdfCell","cell","headerTextAlign","getHorizontalAlignment","getVerticalAlignment","textAlign","cellType","HeaderIndent","DetailHeader","width","gridCell","pdfHeaderQueryCellInfo","recuHeader","spanCnt","colIndex","rowIndex","isRoot","cidx","i","newSpanCnt","visible","clientSize","footer","position","fromBottom","height","bounds","template","bottom","drawPageTemplate","includeHiddenColumn","fromTop","top","headerTemplate_1","getPageByIndex","graphics","drawPdfTemplate","element","_a","contents","content","processContentValidation","Error","drawText","drawPageNumber","src","drawImage","drawLine","points","x1","y1","x2","y2","x","y","pageTemplate","getFont","getBrushFromContent","pen","textPenColor","penColor","toString","format","setContentFormat","drawString","documentHeader","textBrushColor","brushColor","pageNumber","numberStyle","getPageNumberStyle","pageNumberType","compositeField","indexOf","pageCount","replace","image","getPenFromContent","penSize","dashStyle","getDashStyle","isCaption","captionRow","sRows_1","startIndex","leastCaptionSummaryIndex","isEmpty","DetailFooterIntent","pdfAggregateQueryCellInfo","isDataCell","templateFn","footerTemplate","groupCaptionTemplate","groupFooterTemplate","getTemplateFunction","templateFunction","txt","columnName","isReact","isVue","renderTemplates","textContent","getSummaryWithoutTemplate","gridRow","Summary","CaptionSummary","GroupSummary","Sum","Average","Max","Min","Count","TrueCount","FalseCount","Custom","getColumn","getConvertedWidth","setRecordThemeStyle","borderRecord","getGridRowModel","rows_1","cellLength","j","cellValue","valueAccessor","foreignKeyData","getFData","foreignKeyValue","isServerRendered","pdfQueryCellInfo","processCellStyle","spanCell","isExpand","gridRow_1","cellPadding","isPrinting","createChildGrid","childGridObj","failureHandler","exportProperties","exportDetailDataBound","beforeDataBound","childGridCell","appendTo","notify","exportRowDataBound","rowObj","backgroundColor","backColor","textAlignment","verticalAlignment","textBrush","textPen","bold","italic","underline","strikeout","borderWidth","color","borderColor","borders","paragraphIndent","alignment","Right","Center","Justify","verticalAlign","lineAlignment","Bottom","Middle","Top","TimesRoman","Regular","Bold","Italic","Underline","Strikeout","hAlign","vAlign","hex","substring","bigint","parseInt"],"mappings":"AAAA,OAAO,KAAKA,MAAZ,MAAwB,kBAAxB;AACA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,UAA/B,EAA2CC,MAA3C,EAAmDC,WAAnD,QAAsE,4BAAtE;AACA,SAASC,eAAT,EAA0BC,aAA1B,EAAyCC,YAAzC,EAAuDC,SAAvD,QAAwE,4BAAxE;AACA,SAASC,eAAT,EAA0BC,gBAA1B,EAA4CC,QAA5C,EAAsDC,aAAtD,QAA2E,4BAA3E;AACA,SAASC,oBAAT,EAA+BC,UAA/B,EAA2CC,sBAA3C,QAAyE,4BAAzE;AACA,SAASC,MAAT,EAAiBC,kBAAjB,EAAqCC,iBAArC,QAA8D,4BAA9D;AACA,SAASC,iBAAT,EAA4BC,KAA5B,EAAmCC,eAAnC,EAAoDC,kBAApD,QAA8E,4BAA9E;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,YAAT,EAAuBC,oBAAvB,QAAmD,iBAAnD;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,qBAAT,EAAgCC,0BAAhC,EAA4DC,4BAA5D,QAAgG,qCAAhG;AACA,SAASC,OAAT,EAAkBC,YAAlB,EAAgCC,iBAAhC,EAAmDC,MAAnD,EAA2DC,QAA3D,QAA2E,sBAA3E;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,WAAT,EAAsBC,KAAtB,QAAmC,sBAAnC;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,MAAT,EAAiBC,iBAAjB,EAAoCC,kBAApC,EAAwDC,eAAxD,EAAyEC,gCAAzE,EAA2GC,cAA3G,QAAiI,cAAjI;AACA;AACA;AACA;AACA;;AACA,IAAIC,SAAS;AAAG;AAAe,YAAY;AACvC;AACJ;AACA;AACA;AACI,WAASA,SAAT,CAAmBC,MAAnB,EAA2B;AACvB,SAAKC,iBAAL,GAAyB,KAAzB;AACA,SAAKC,eAAL,GAAuB,KAAvB;AACA,SAAKC,gBAAL,GAAwB,KAAxB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,aAAL,GAAqB,EAArB;AACA,SAAKC,YAAL,GAAoB;AAAEC,MAAAA,SAAS,EAAE,CAAb;AAAgBC,MAAAA,SAAS,EAAE;AAA3B,KAApB;AACA,SAAKR,MAAL,GAAcA,MAAd;AACA,SAAKS,MAAL,GAAc,IAAI/B,YAAJ,CAAiBsB,MAAjB,CAAd;AACA,SAAKU,QAAL,GAAgB,EAAhB;AACH;AACD;AACJ;AACA;;;AACIX,EAAAA,SAAS,CAACY,SAAV,CAAoBC,aAApB,GAAoC,YAAY;AAC5C,WAAO,WAAP;AACH,GAFD;;AAGAb,EAAAA,SAAS,CAACY,SAAV,CAAoBE,IAApB,GAA2B,UAAUb,MAAV,EAAkB;AACzC,SAAKc,oBAAL,GAA4B,IAAInC,oBAAJ,CAAyBqB,MAAM,CAACe,MAAhC,CAA5B;AACA,SAAKC,WAAL,GAAmBC,SAAnB;AACA,SAAKhB,iBAAL,GAAyB,KAAzB;AACA,SAAKC,eAAL,GAAuB,KAAvB;AACA,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKI,UAAL,GAAkB,KAAlB;AACA,SAAKc,WAAL,GAAmB,IAAnB;AACAlB,IAAAA,MAAM,CAACmB,EAAP,GAAY1B,MAAM,CAAC,WAAD,CAAlB;AACA,SAAKiB,QAAL,CAAcV,MAAM,CAACmB,EAArB,IAA2B,KAA3B;AACA,SAAKC,eAAL,GAAuB,IAAI7C,eAAJ,EAAvB;AACH,GAXD;;AAYAwB,EAAAA,SAAS,CAACY,SAAV,CAAoBU,cAApB,GAAqC,UAAUrB,MAAV,EAAkBsB,MAAlB,EAA0BC,OAA1B,EAAmCC,UAAnC,EAA+CC,mBAA/C,EAAoEC,gBAApE,EAAsFC,MAAtF,EAA8F;AAC/H,QAAIC,KAAK,GAAG,IAAZ;;AACA,SAAKf,IAAL,CAAUb,MAAV;;AACA,QAAI,CAACd,iBAAiB,CAACoC,MAAD,CAAtB,EAAgC;AAC5B,WAAKN,WAAL,GAAmBM,MAAnB;AACH,KAFD,MAGK;AACD,WAAKN,WAAL,GAAmB,IAAI9D,WAAJ,EAAnB;AACH;;AACD,SAAK2E,aAAL,CAAmB7B,MAAnB,EAA2BwB,UAA3B,EAAuCC,mBAAvC,EAA4DC,gBAA5D,EAA8EI,IAA9E,CAAmF,YAAY;AAC3FF,MAAAA,KAAK,CAACV,WAAN,GAAoB,KAApB;AACAlB,MAAAA,MAAM,CAAC+B,OAAP,CAAe9E,MAAM,CAAC+E,iBAAtB,EAAyCJ,KAAK,CAACK,MAAN,GAAe;AAAEC,QAAAA,OAAO,EAAEN,KAAK,CAACO;AAAjB,OAAf,GAAgD,EAAzF;;AACAP,MAAAA,KAAK,CAAC5B,MAAN,CAAaoC,GAAb,CAAiB,oBAAjB,EAAuCR,KAAK,CAAChB,aAAN,EAAvC;;AACAW,MAAAA,OAAO,CAACK,KAAK,CAACZ,WAAP,CAAP;AACH,KALD,EAKGqB,KALH,CAKS,UAAUC,CAAV,EAAa;AAClBX,MAAAA,MAAM,CAACC,KAAK,CAACZ,WAAP,CAAN;;AACAY,MAAAA,KAAK,CAAC5B,MAAN,CAAa+B,OAAb,CAAqB9E,MAAM,CAACsF,aAA5B,EAA2CD,CAA3C;AACH,KARD;AASH,GAlBD;AAmBA;AACJ;AACA;AACA;;;AACIvC,EAAAA,SAAS,CAACY,SAAV,CAAoB6B,GAApB,GAA0B,UAAUxC,MAAV,EAAkByB,mBAAlB,EAAuCC,gBAAvC,EAAyDJ,MAAzD,EAAiEW,MAAjE,EAAyE;AAC/F,QAAIL,KAAK,GAAG,IAAZ;;AACA,SAAKa,IAAL,GAAY,IAAI7D,IAAJ,CAAS,KAAKoB,MAAd,CAAZ;AACA,SAAKiC,MAAL,GAAcA,MAAd;AACA,SAAKvB,QAAL,GAAgB,EAAhB;;AACA,QAAIV,MAAM,CAAC0C,SAAP,IAAoB,EAAE,CAACxD,iBAAiB,CAACuC,mBAAD,CAAlB,IAA2CA,mBAAmB,CAACkB,mBAApB,KAA4C,MAAzF,CAAxB,EAA0H;AACtH3C,MAAAA,MAAM,CAAC4C,YAAP,GAAsBlD,iBAAiB,CAACM,MAAD,CAAjB,CAA0B4C,YAAhD;AACH;;AACD,QAAIC,IAAI,GAAG;AACPC,MAAAA,WAAW,EAAE,iBADN;AACyBC,MAAAA,MAAM,EAAE,KADjC;AAEPC,MAAAA,iBAAiB,EAAE,EAFZ;AAEgBC,MAAAA,gBAAgB,EAAE;AAAE1C,QAAAA,SAAS,EAAE,CAAb;AAAgBC,QAAAA,SAAS,EAAE;AAA3B;AAFlC,KAAX;;AAIA,QAAI,CAACpB,QAAQ,EAAb,EAAiB;AACb,UAAI8D,UAAU,GAAG,YAAjB;AACAL,MAAAA,IAAI,CAACK,UAAD,CAAJ,GAAmBlD,MAAnB;AACH;;AACD,QAAImD,GAAG,GAAG,QAAV;AACA,QAAIC,MAAM,GAAG,mBAAb;AACA,QAAIC,OAAO,GAAG,kBAAd;AACArD,IAAAA,MAAM,CAAC+B,OAAP,CAAe9E,MAAM,CAACqG,eAAtB,EAAuCT,IAAvC;;AACA,QAAIA,IAAI,CAACM,GAAD,CAAJ,KAAc,IAAlB,EAAwB;AACpB,aAAO,IAAII,OAAJ,CAAY,UAAUhC,OAAV,EAAmBI,MAAnB,EAA2B;AAC1C,eAAOJ,OAAO,EAAd;AACH,OAFM,CAAP;AAGH;;AACD,QAAI3B,eAAe,CAAC6B,mBAAD,CAAnB,EAA0C;AACtC5B,MAAAA,gCAAgC,CAAC4B,mBAAD,EAAsBzB,MAAtB,CAAhC;AACH;;AACD,SAAKK,aAAL,GAAqBwC,IAAI,CAACO,MAAD,CAAzB;AACA,SAAK9C,YAAL,GAAoBuC,IAAI,CAACQ,OAAD,CAAxB;AACA,SAAKrD,MAAL,CAAYoC,GAAZ,CAAgB,iBAAhB,EAAmC,KAAKxB,aAAL,EAAnC;;AACA,QAAI,CAAC1B,iBAAiB,CAACuC,mBAAD,CAAlB,IAA2C,CAACvC,iBAAiB,CAACuC,mBAAmB,CAAC+B,UAArB,CAA7D,IACG/B,mBAAmB,CAAC+B,UAApB,YAA0ClE,WADjD,EAC8D;AAC1D,aAAO,IAAIiE,OAAJ,CAAY,UAAUhC,OAAV,EAAmBI,MAAnB,EAA2B;AAC1CF,QAAAA,mBAAmB,CAAC+B,UAApB,CAA+BC,YAA/B,CAA4C,IAAIlE,KAAJ,EAA5C,EAAyDuC,IAAzD,CAA8D,UAAUN,UAAV,EAAsB;AAChFI,UAAAA,KAAK,CAACP,cAAN,CAAqBrB,MAArB,EAA6BsB,MAA7B,EAAqCC,OAArC,EAA8CC,UAA9C,EAA0DC,mBAA1D,EAA+EC,gBAA/E,EAAiGC,MAAjG;AACH,SAFD;AAGH,OAJM,CAAP;AAKH,KAPD,MAQK,IAAI,CAACzC,iBAAiB,CAACuC,mBAAD,CAAlB,IAA2CA,mBAAmB,CAACiC,UAApB,KAAmC,aAAlF,EAAiG;AAClG,aAAO,IAAIH,OAAJ,CAAY,UAAUhC,OAAV,EAAmBI,MAAnB,EAA2B;AAC1CC,QAAAA,KAAK,CAACP,cAAN,CAAqBrB,MAArB,EAA6BsB,MAA7B,EAAqCC,OAArC,EAA8CK,KAAK,CAAC5B,MAAN,CAAa2D,qBAAb,EAA9C,EAAoFlC,mBAApF,EAAyGC,gBAAzG,EAA2HC,MAA3H;AACH,OAFM,CAAP;AAGH,KAJI,MAKA;AACD,UAAIiC,YAAY,GAAG,EAAnB;AACAA,MAAAA,YAAY,CAACC,IAAb,CAAkB,KAAKpB,IAAL,CAAUqB,OAAV,CAAkB,EAAlB,EAAsBpF,YAAY,CAACqF,QAAb,CAAsB/D,MAAtB,EAA8B,KAAKyC,IAAnC,CAAtB,CAAlB;AACAmB,MAAAA,YAAY,CAACC,IAAb,CAAkB,KAAKpD,MAAL,CAAYuD,aAAZ,CAA0BhE,MAA1B,CAAlB;AACA,aAAO,IAAIuD,OAAJ,CAAY,UAAUhC,OAAV,EAAmBI,MAAnB,EAA2B;AAC1C4B,QAAAA,OAAO,CAACU,GAAR,CAAYL,YAAZ,EAA0B9B,IAA1B,CAA+B,UAAUQ,CAAV,EAAa;AACxCV,UAAAA,KAAK,CAACf,IAAN,CAAWb,MAAX;;AACA,cAAI,CAACd,iBAAiB,CAACoC,MAAD,CAAtB,EAAgC;AAC5BM,YAAAA,KAAK,CAACZ,WAAN,GAAoBM,MAApB;AACH,WAFD,MAGK;AACDM,YAAAA,KAAK,CAACZ,WAAN,GAAoB,IAAI9D,WAAJ,EAApB;AACH;;AACD0E,UAAAA,KAAK,CAACC,aAAN,CAAoB7B,MAApB,EAA4BsC,CAAC,CAAC,CAAD,CAA7B,EAAkCb,mBAAlC,EAAuDC,gBAAvD,EAAyEI,IAAzE,CAA8E,YAAY;AACtFF,YAAAA,KAAK,CAACV,WAAN,GAAoB,KAApB;AACAlB,YAAAA,MAAM,CAAC+B,OAAP,CAAe9E,MAAM,CAAC+E,iBAAtB,EAAyCJ,KAAK,CAACK,MAAN,GAAe;AAAEC,cAAAA,OAAO,EAAEN,KAAK,CAACO;AAAjB,aAAf,GAAgD,EAAzF;;AACAP,YAAAA,KAAK,CAAC5B,MAAN,CAAaoC,GAAb,CAAiB,oBAAjB,EAAuCR,KAAK,CAAChB,aAAN,EAAvC;;AACAW,YAAAA,OAAO,CAACK,KAAK,CAACZ,WAAP,CAAP;AACH,WALD,EAKGqB,KALH,CAKS,UAAUC,CAAV,EAAa;AAClBX,YAAAA,MAAM,CAACC,KAAK,CAACZ,WAAP,CAAN;;AACAY,YAAAA,KAAK,CAAC5B,MAAN,CAAa+B,OAAb,CAAqB9E,MAAM,CAACsF,aAA5B,EAA2CD,CAA3C;AACH,WARD;AASH,SAjBD;AAkBH,OAnBM,CAAP;AAoBH;AACJ,GArED;;AAsEAvC,EAAAA,SAAS,CAACY,SAAV,CAAoBkB,aAApB,GAAoC,UAAUqC,IAAV,EAAgB1C,UAAhB,EAA4BC,mBAA5B,EAAiDC,gBAAjD,EAAmE;AACnG,QAAIE,KAAK,GAAG,IAAZ;;AACA,QAAIuC,OAAO,GAAG,KAAKnD,WAAL,CAAiBoD,QAAjB,CAA0BC,GAA1B,EAAd;AACA,QAAIC,OAAJ;AACA,SAAKC,8BAAL,CAAoCJ,OAApC,EAA6C1C,mBAA7C;AACA,QAAI+C,OAAO,GAAGL,OAAO,CAACM,KAAR,CAAcJ,GAAd,EAAd;AACA,WAAO,IAAId,OAAJ,CAAY,UAAUhC,OAAV,EAAmBI,MAAnB,EAA2B;AAC1C2C,MAAAA,OAAO,GAAG1C,KAAK,CAAC8C,iBAAN,CAAwBR,IAAxB,EAA8B1C,UAA9B,EAA0CC,mBAA1C,CAAV;AACAG,MAAAA,KAAK,CAAC+C,aAAN,GAAsBpD,OAAtB;AACAK,MAAAA,KAAK,CAAClB,QAAN,CAAewD,IAAI,CAAC/C,EAApB,IAA0B,IAA1B;;AACAS,MAAAA,KAAK,CAACnB,MAAN,CAAamE,cAAb,CAA4BhD,KAAK,CAAClB,QAAlC,EAA4CkB,KAAK,CAAC+C,aAAlD;AACH,KALM,EAKJ7C,IALI,CAKC,YAAY;AAChB;AACA,UAAIvB,SAAS,GAAG,WAAhB;AACA,UAAIC,SAAS,GAAG,WAAhB;AACA8D,MAAAA,OAAO,CAACO,IAAR,CAAaL,OAAb,EAAsB5C,KAAK,CAACtB,YAAN,CAAmBC,SAAnB,CAAtB,EAAqDqB,KAAK,CAACtB,YAAN,CAAmBE,SAAnB,CAArD;;AACAoB,MAAAA,KAAK,CAACkD,UAAN,CAAiBrD,mBAAjB;;AACA,UAAI,CAACC,gBAAL,EAAuB;AACnB;AACA,YAAI,CAACE,KAAK,CAACK,MAAX,EAAmB;AACf,cAAI,CAAC/C,iBAAiB,CAACuC,mBAAD,CAAlB,IAA2CA,mBAAmB,CAACsD,QAAnE,EAA6E;AACzEnD,YAAAA,KAAK,CAACZ,WAAN,CAAkBgE,IAAlB,CAAuBvD,mBAAmB,CAACsD,QAA3C;AACH,WAFD,MAGK;AACDnD,YAAAA,KAAK,CAACZ,WAAN,CAAkBgE,IAAlB,CAAuB,YAAvB;AACH;AACJ,SAPD,MAQK;AACDpD,UAAAA,KAAK,CAACO,WAAN,GAAoBP,KAAK,CAACZ,WAAN,CAAkBgE,IAAlB,EAApB;AACH;;AACDpD,QAAAA,KAAK,CAACZ,WAAN,CAAkBiE,OAAlB;;AACA,eAAOf,IAAI,CAACtB,YAAZ;AACH;;AACD,aAAOhB,KAAK,CAACZ,WAAb;AACH,KA5BM,CAAP;AA6BH,GAnCD;;AAoCAjB,EAAAA,SAAS,CAACY,SAAV,CAAoB4D,8BAApB,GAAqD,UAAUJ,OAAV,EAAmB1C,mBAAnB,EAAwC;AACzF,QAAI,CAACvC,iBAAiB,CAACuC,mBAAD,CAAlB,KAA4C,CAACvC,iBAAiB,CAACuC,mBAAmB,CAACyD,eAArB,CAAlB,IACzC,CAAChG,iBAAiB,CAACuC,mBAAmB,CAAC0D,QAArB,CADrB,CAAJ,EAC0D;AACtD,WAAK/D,eAAL,CAAqBgE,WAArB,GAAoC3D,mBAAmB,CAACyD,eAApB,KAAwC,WAAzC,GAC/B1G,kBAAkB,CAAC6G,SADY,GACA7G,kBAAkB,CAAC8G,QADtD;AAEA,WAAKlE,eAAL,CAAqBmE,IAArB,GAA4B,KAAKC,WAAL,CAAiB/D,mBAAmB,CAAC0D,QAArC,CAA5B;AACAhB,MAAAA,OAAO,CAACsB,eAAR,CAAwB,KAAKrE,eAA7B;AACH;;AACD,WAAO+C,OAAP;AACH,GATD;;AAUApE,EAAAA,SAAS,CAACY,SAAV,CAAoB+D,iBAApB,GAAwC,UAAUR,IAAV,EAAgB1C,UAAhB,EAA4BC,mBAA5B,EAAiD;AACrF,QAAIiE,uBAAuB,GAAG,IAA9B;AACA,QAAIC,QAAQ,GAAG,KAAK3F,MAAL,CAAY4F,YAAZ,MAA8B,CAAC,KAAK5F,MAAL,CAAY6F,gBAAZ,EAA9C;;AACA,QAAI,CAAC3G,iBAAiB,CAACuC,mBAAD,CAAtB,EAA6C;AACzC,WAAKqE,SAAL,GAAiBrE,mBAAmB,CAACsE,KAArC;;AACA,UAAI3G,QAAQ,MAAM,CAACF,iBAAiB,CAAC,KAAK4G,SAAN,CAApC,EAAsD;AAClD,aAAKE,cAAL,CAAoB,KAAKF,SAAzB;AACH;;AACDJ,MAAAA,uBAAuB,GAAGxG,iBAAiB,CAACuC,mBAAmB,CAACiE,uBAArB,CAAjB,GACtB,IADsB,GACfjE,mBAAmB,CAACiE,uBAD/B;AAEH;;AACD,QAAIjF,MAAM,GAAG,IAAI/B,YAAJ,CAAiBwF,IAAjB,CAAb;AACA,QAAIV,UAAU,GAAG,KAAKyC,uBAAL,CAA6BxE,mBAA7B,EAAkDD,UAAU,CAAC0E,MAA7D,CAAjB;AACA,QAAIC,OAAO,GAAGvG,eAAe,CAAC6B,mBAAD,CAAf,GACV3B,cAAc,CAAC2B,mBAAmB,CAAC0E,OAArB,EAA8BjC,IAAI,CAACkC,0BAAnC,CADJ,GAEV3F,MAAM,CAAC4F,oBAAP,CAA4BV,QAAQ,GAAGzB,IAAI,CAACoC,UAAL,EAAH,GAAuBpC,IAAI,CAACiC,OAAhE,CAFJ;AAGAA,IAAAA,OAAO,GAAGA,OAAO,CAACI,MAAR,CAAe,UAAUJ,OAAV,EAAmB;AAAE,aAAOjH,iBAAiB,CAACiH,OAAO,CAACK,QAAT,CAAxB;AAA6C,KAAjF,CAAV;AACA,QAAIpG,UAAU,GAAG,KAAjB;;AACA,QAAI8D,IAAI,CAACuC,aAAL,CAAmBN,OAAnB,CAA2BO,MAA/B,EAAuC;AACnCtG,MAAAA,UAAU,GAAG,IAAb;AACH;;AACD,QAAI8D,IAAI,CAACxB,SAAL,IAAkB,CAACxD,iBAAiB,CAACuC,mBAAD,CAAxC,EAA+D;AAC3DyC,MAAAA,IAAI,CAACyC,kBAAL,GAA0BlF,mBAAmB,CAACkB,mBAApB,IAA2C,UAArE;AACH,KAvBoF,CAwBrF;;;AACA,QAAI2B,OAAO,GAAG,IAAInH,OAAJ,EAAd,CAzBqF,CA0BrF;;AACA,QAAIyJ,gBAAgB,GAAG,KAAKC,mBAAL,EAAvB;AACA,QAAIC,MAAM,GAAGF,gBAAgB,CAACE,MAA9B;AACA,QAAIC,UAAU,GAAGH,gBAAgB,CAACI,IAAlC;AACA,QAAIC,WAAW,GAAGL,gBAAgB,CAACM,KAAnC;AACA,QAAIC,WAAW,GAAG1G,MAAM,CAAC2G,UAAP,CAAkBjB,OAAlB,EAA2B,KAAKlG,iBAAhC,CAAlB,CA/BqF,CAgCrF;;AACA,QAAIoH,WAAW,GAAGF,WAAW,CAAChB,OAA9B,CAjCqF,CAkCrF;;AACA7B,IAAAA,OAAO,GAAG,KAAKgD,kBAAL,CAAwBpD,IAAI,CAACuC,aAAL,CAAmBN,OAAnB,CAA2BO,MAAnD,EAA2DpC,OAA3D,EAAoE6C,WAAW,CAACI,IAAhF,EAAsFF,WAAtF,EAAmGP,MAAnG,EAA2GC,UAA3G,EAAuHE,WAAvH,EAAoI/C,IAApI,EAA0IwB,uBAA1I,EAAmKS,OAAnK,CAAV,CAnCqF,CAoCrF;;AACA,SAAKqB,mBAAL,CAAyBH,WAAzB,EAAsC/C,OAAtC,EAA+C7D,MAA/C,EAAuDyD,IAAvD,EAA6DwB,uBAA7D;AACA,QAAI+B,iBAAiB,GAAG,KAAKC,2BAAL,EAAxB;;AACA,QAAI,CAACxI,iBAAiB,CAACsE,UAAD,CAAlB,IAAkCA,UAAU,CAACkD,MAAjD,EAAyD;AACrD,UAAItG,UAAJ,EAAgB;AACZ,YAAI,CAAClB,iBAAiB,CAACuI,iBAAiB,CAACX,MAAnB,CAAtB,EAAkD;AAC9CA,UAAAA,MAAM,GAAGW,iBAAiB,CAACX,MAA3B;AACH;;AACD,aAAKa,qBAAL,CAA2BrD,OAA3B,EAAoCd,UAApC,EAAgD6D,WAAhD,EAA6DnD,IAA7D,EAAmE4C,MAAnE,EAA2E,CAA3E,EAA8EW,iBAAiB,CAACT,IAAhG,EAAsGS,iBAAiB,CACnHP,KADJ,EACWO,iBAAiB,CAACG,eAD7B,EAC8CpG,UAD9C,EAC0DC,mBAD1D,EAC+EhB,MAD/E,EACuF,CADvF;AAEH,OAND,MAOK;AACD,aAAKoH,aAAL,CAAmBf,MAAnB,EAA2BO,WAA3B,EAAwCnD,IAAxC,EAA8CV,UAA9C,EAA0Dc,OAA1D,EAAmE,CAAnE,EAAsE7C,mBAAtE,EAA2FhB,MAA3F,EAAmG,CAAnG;AACH;;AACD,UAAI,CAACvB,iBAAiB,CAACsC,UAAU,CAACsG,UAAZ,CAAtB,EAA+C;AAC3C,YAAIC,YAAY,GAAG,IAAIlJ,qBAAJ,CAA0BqF,IAA1B,CAAnB;AACA,YAAI8D,KAAK,GAAG,KAAK,CAAjB;AACA,YAAIC,MAAM,GAAGF,YAAY,CAACzB,UAAb,EAAb;AACA2B,QAAAA,MAAM,GAAGA,MAAM,CAAC1B,MAAP,CAAc,UAAU2B,GAAV,EAAe;AAAE,iBAAOhJ,iBAAiB,CAACgJ,GAAG,CAAC1B,QAAL,CAAjB,IAAmC0B,GAAG,CAACC,IAAJ,KAAa,UAAvD;AAAoE,SAAnG,CAAT;;AACA,YAAIjE,IAAI,CAAC4D,UAAL,CAAgBpB,MAAhB,IAA0B,KAAK1G,MAAL,KAAgBkE,IAA9C,EAAoD;AAChDA,UAAAA,IAAI,CAACkE,eAAL,CAAqBC,kBAArB;AACH;;AACD,YAAI,KAAKlI,gBAAT,EAA2B;AACvB6H,UAAAA,KAAK,GAAGD,YAAY,CAACO,YAAb,CAA0B9E,UAA1B,EAAsChC,UAAU,CAACsG,UAAjD,CAAR;AACH,SAFD,MAGK,IAAI,KAAK5H,eAAT,EAA0B;AAC3B8H,UAAAA,KAAK,GAAGD,YAAY,CAACO,YAAb,CAA0B,KAAKtI,MAAL,CAAY2D,qBAAZ,EAA1B,EAA+DnC,UAAU,CAACsG,UAA1E,CAAR;AACH,SAFI,MAGA,IAAI1H,UAAJ,EAAgB;AACjB4H,UAAAA,KAAK,GAAGD,YAAY,CAACO,YAAb,CAA0B9E,UAAU,CAAC+E,OAArC,EAA8C/G,UAAU,CAACsG,UAAzD,CAAR;AACH,SAFI,MAGA;AACDE,UAAAA,KAAK,GAAGD,YAAY,CAACO,YAAb,CAA0B9G,UAAU,CAAC0E,MAArC,EAA6C1E,UAAU,CAACsG,UAAxD,EAAoE,IAApE,EAA0E,IAA1E,EAAgFG,MAAhF,CAAR;AACH;;AACD,aAAKO,iBAAL,CAAuBR,KAAvB,EAA8B1D,OAA9B,EAAuCwC,MAAvC,EAA+CW,iBAAiB,CAACT,IAAjE,EAAuES,iBAAiB,CAACP,KAAzF,EAAgGO,iBAAiB,CAACG,eAAlH,EAAmI,KAAnI;AACH;AACJ,KAjCD,MAkCK;AACD,UAAIa,GAAG,GAAGnE,OAAO,CAACiD,IAAR,CAAamB,MAAb,EAAV;AACAD,MAAAA,GAAG,CAACE,KAAJ,CAAUC,SAAV,CAAoB9B,MAApB;AACH;;AACD,WAAOxC,OAAP;AACH,GA9ED;;AA+EAvE,EAAAA,SAAS,CAACY,SAAV,CAAoB+G,2BAApB,GAAkD,YAAY;AAC1D,QAAI,CAACxI,iBAAiB,CAAC,KAAK4G,SAAN,CAAlB,IAAsC,CAAC5G,iBAAiB,CAAC,KAAK4G,SAAL,CAAe+C,OAAhB,CAA5D,EAAsF;AAClF,UAAIC,QAAQ,GAAG,CAAC5J,iBAAiB,CAAC,KAAK4G,SAAL,CAAe+C,OAAf,CAAuBC,QAAxB,CAAlB,GAAsD,KAAKhD,SAAL,CAAe+C,OAAf,CAAuBC,QAA7E,GAAwF,IAAvG;AACA,UAAIC,UAAU,GAAG,CAAC7J,iBAAiB,CAAC,KAAK4G,SAAL,CAAe+C,OAAf,CAAuBG,QAAxB,CAAlB,GACb,KAAKC,aAAL,CAAmB,KAAKnD,SAAL,CAAe+C,OAAf,CAAuBG,QAA1C,CADa,GACyCxL,aAAa,CAAC0L,SADxE;AAEA,UAAIC,SAAS,GAAG,KAAKC,YAAL,CAAkB,KAAKtD,SAAL,CAAe+C,OAAjC,CAAhB;AACA,UAAIQ,QAAQ,GAAG,IAAIxL,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAf;;AACA,UAAI,CAACqB,iBAAiB,CAAC,KAAK4G,SAAL,CAAe+C,OAAf,CAAuBS,SAAxB,CAAtB,EAA0D;AACtD,YAAIC,aAAa,GAAG,KAAKC,QAAL,CAAc,KAAK1D,SAAL,CAAe+C,OAAf,CAAuBS,SAArC,CAApB;AACAD,QAAAA,QAAQ,GAAG,IAAIxL,QAAJ,CAAa0L,aAAa,CAACE,CAA3B,EAA8BF,aAAa,CAACG,CAA5C,EAA+CH,aAAa,CAACI,CAA7D,CAAX;AACH;;AACD,UAAIC,aAAa,GAAG,KAAK9D,SAAL,CAAe+C,OAAf,CAAuB/B,MAAvB,GAAgC,KAAK+C,cAAL,CAAoB,KAAK/D,SAAL,CAAe+C,OAAf,CAAuB/B,MAA3C,CAAhC,GAAqF,IAAzG;AACA,UAAIE,IAAI,GAAG,IAAIzJ,eAAJ,CAAoBwL,UAApB,EAAgCD,QAAhC,EAA0CK,SAA1C,CAAX;;AACA,UAAI,CAACjK,iBAAiB,CAAC,KAAK4G,SAAL,CAAe+C,OAAf,CAAuB7B,IAAxB,CAAtB,EAAqD;AACjDA,QAAAA,IAAI,GAAG,KAAKlB,SAAL,CAAe+C,OAAf,CAAuB7B,IAA9B;AACH;;AACD,aAAO;AAAEA,QAAAA,IAAI,EAAEA,IAAR;AAAcE,QAAAA,KAAK,EAAE,IAAIpJ,aAAJ,CAAkBuL,QAAlB,CAArB;AAAkDzB,QAAAA,eAAe,EAAE,IAAI9J,aAAJ,CAAkB,IAAID,QAAJ,CAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,CAAlB,CAAnE;AACHiJ,QAAAA,MAAM,EAAE8C;AADL,OAAP;AAEH,KAjBD,MAkBK;AACD;AACA,aAAO;AAAE5C,QAAAA,IAAI,EAAE,IAAIzJ,eAAJ,CAAoBC,aAAa,CAAC0L,SAAlC,EAA6C,IAA7C,CAAR;AAA4DhC,QAAAA,KAAK,EAAE,IAAIpJ,aAAJ,CAAkB,IAAID,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAlB,CAAnE;AACH+J,QAAAA,eAAe,EAAE,IAAI9J,aAAJ,CAAkB,IAAID,QAAJ,CAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,CAAlB;AADd,OAAP;AAEH;AACJ,GAxBD;;AAyBAkC,EAAAA,SAAS,CAACY,SAAV,CAAoBqF,cAApB,GAAqC,UAAUnD,IAAV,EAAgB;AACjD,QAAIkG,UAAU,GAAG,YAAjB;AACA,QAAID,QAAQ,GAAG,UAAf;AACA,QAAIK,SAAS,GAAG,WAAhB;AACA,QAAIW,UAAU,GAAG,YAAjB;AACA,QAAInB,KAAK,GAAG,CAAZ;;AACA,QAAI9F,IAAI,CAACO,MAAL,IAAeP,IAAI,CAACO,MAAL,CAAY4D,IAA/B,EAAqC;AACjC,UAAID,UAAU,GAAGlE,IAAI,CAACO,MAAL,CAAY4D,IAAZ,CAAiB+B,UAAjB,CAAjB;AACA,UAAIgB,UAAU,GAAGlH,IAAI,CAACO,MAAL,CAAY4D,IAAZ,CAAiB8B,QAAjB,CAAjB;AACA,UAAIkB,WAAW,GAAGnH,IAAI,CAACO,MAAL,CAAY4D,IAAZ,CAAiBmC,SAAjB,CAAlB;AACAR,MAAAA,KAAK,GAAIzJ,iBAAiB,CAACzB,YAAY,CAACuM,WAAD,CAAb,CAAjB,GAA+C,CAA/C,GAAmDvM,YAAY,CAACuM,WAAD,CAAxE;;AACA,UAAInH,IAAI,CAACO,MAAL,CAAY4D,IAAZ,CAAiB8C,UAAjB,CAAJ,EAAkC;AAC9BjH,QAAAA,IAAI,CAACO,MAAL,CAAY4D,IAAZ,GAAmB,IAAIvI,eAAJ,CAAoBsI,UAApB,EAAgCgD,UAAhC,EAA4CpB,KAA5C,CAAnB;AACH,OAFD,MAGK;AACD,YAAIsB,YAAY,GAAG,CAAC/K,iBAAiB,CAAC6H,UAAD,CAAlB,GACf,KAAKkC,aAAL,CAAmBlC,UAAnB,CADe,GACkBvJ,aAAa,CAAC0L,SADnD;AAEArG,QAAAA,IAAI,CAACO,MAAL,CAAY4D,IAAZ,GAAmB,IAAIzJ,eAAJ,CAAoB0M,YAApB,EAAkCF,UAAlC,EAA8CpB,KAA9C,CAAnB;AACH;AACJ;;AACD,QAAI9F,IAAI,CAACgG,OAAL,IAAgBhG,IAAI,CAACgG,OAAL,CAAa7B,IAAjC,EAAuC;AACnC,UAAIkD,WAAW,GAAGrH,IAAI,CAACgG,OAAL,CAAa7B,IAAb,CAAkB+B,UAAlB,CAAlB;AACA,UAAIoB,WAAW,GAAGtH,IAAI,CAACgG,OAAL,CAAa7B,IAAb,CAAkB8B,QAAlB,CAAlB;AACA,UAAIsB,YAAY,GAAGvH,IAAI,CAACgG,OAAL,CAAa7B,IAAb,CAAkBmC,SAAlB,CAAnB;AACAR,MAAAA,KAAK,GAAIzJ,iBAAiB,CAACzB,YAAY,CAAC2M,YAAD,CAAb,CAAjB,GAAgD,CAAhD,GAAoD3M,YAAY,CAAC2M,YAAD,CAAzE;;AACA,UAAIvH,IAAI,CAACgG,OAAL,CAAa7B,IAAb,CAAkB8C,UAAlB,CAAJ,EAAmC;AAC/BjH,QAAAA,IAAI,CAACgG,OAAL,CAAa7B,IAAb,GAAoB,IAAIvI,eAAJ,CAAoByL,WAApB,EAAiCC,WAAjC,EAA8CxB,KAA9C,CAApB;AACH,OAFD,MAGK;AACD,YAAI0B,YAAY,GAAG,CAACnL,iBAAiB,CAACgL,WAAD,CAAlB,GACf,KAAKjB,aAAL,CAAmBiB,WAAnB,CADe,GACmB1M,aAAa,CAAC0L,SADpD;AAEArG,QAAAA,IAAI,CAACgG,OAAL,CAAa7B,IAAb,GAAoB,IAAIzJ,eAAJ,CAAoB8M,YAApB,EAAkCF,WAAlC,EAA+CxB,KAA/C,CAApB;AACH;AACJ;;AACD,QAAI9F,IAAI,CAACyH,MAAL,IAAezH,IAAI,CAACyH,MAAL,CAAYtD,IAA/B,EAAqC;AACjC,UAAIuD,UAAU,GAAG1H,IAAI,CAACyH,MAAL,CAAYtD,IAAZ,CAAiB+B,UAAjB,CAAjB;AACA,UAAIyB,UAAU,GAAG3H,IAAI,CAACyH,MAAL,CAAYtD,IAAZ,CAAiB8B,QAAjB,CAAjB;AACA,UAAI2B,WAAW,GAAG5H,IAAI,CAACyH,MAAL,CAAYtD,IAAZ,CAAiBmC,SAAjB,CAAlB;AACAR,MAAAA,KAAK,GAAIzJ,iBAAiB,CAACzB,YAAY,CAACgN,WAAD,CAAb,CAAjB,GAA+C,CAA/C,GAAmDhN,YAAY,CAACgN,WAAD,CAAxE;;AACA,UAAI5H,IAAI,CAACyH,MAAL,CAAYtD,IAAZ,CAAiB8C,UAAjB,CAAJ,EAAkC;AAC9BjH,QAAAA,IAAI,CAACyH,MAAL,CAAYtD,IAAZ,GAAmB,IAAIvI,eAAJ,CAAoB8L,UAApB,EAAgCC,UAAhC,EAA4C7B,KAA5C,CAAnB;AACH,OAFD,MAGK;AACD,YAAI+B,YAAY,GAAG,CAACxL,iBAAiB,CAACqL,UAAD,CAAlB,GACf,KAAKtB,aAAL,CAAmBsB,UAAnB,CADe,GACkB/M,aAAa,CAAC0L,SADnD;AAEArG,QAAAA,IAAI,CAACyH,MAAL,CAAYtD,IAAZ,GAAmB,IAAIzJ,eAAJ,CAAoBmN,YAApB,EAAkCF,UAAlC,EAA8C7B,KAA9C,CAAnB;AACH;AACJ;AACJ,GAhDD;;AAiDA5I,EAAAA,SAAS,CAACY,SAAV,CAAoBkG,mBAApB,GAA0C,YAAY;AAClD,QAAIC,MAAM,GAAG,IAAI1J,UAAJ,EAAb;;AACA,QAAI,CAAC8B,iBAAiB,CAAC,KAAK4G,SAAN,CAAlB,IAAsC,CAAC5G,iBAAiB,CAAC,KAAK4G,SAAL,CAAe1C,MAAhB,CAA5D,EAAqF;AACjF,UAAI2F,UAAU,GAAG,CAAC7J,iBAAiB,CAAC,KAAK4G,SAAL,CAAe1C,MAAf,CAAsB4F,QAAvB,CAAlB,GACb,KAAKC,aAAL,CAAmB,KAAKnD,SAAL,CAAe1C,MAAf,CAAsB4F,QAAzC,CADa,GACwCxL,aAAa,CAAC0L,SADvE;AAEA,UAAIC,SAAS,GAAG,KAAKC,YAAL,CAAkB,KAAKtD,SAAL,CAAe1C,MAAjC,CAAhB;AACA,UAAI0F,QAAQ,GAAG,CAAC5J,iBAAiB,CAAC,KAAK4G,SAAL,CAAe1C,MAAf,CAAsB0F,QAAvB,CAAlB,GAAqD,KAAKhD,SAAL,CAAe1C,MAAf,CAAsB0F,QAA3E,GAAsF,IAArG;AACA,UAAIO,QAAQ,GAAG,IAAIxL,QAAJ,EAAf;;AACA,UAAI,CAACqB,iBAAiB,CAAC,KAAK4G,SAAL,CAAe1C,MAAf,CAAsBkG,SAAvB,CAAtB,EAAyD;AACrD,YAAIC,aAAa,GAAG,KAAKC,QAAL,CAAc,KAAK1D,SAAL,CAAe1C,MAAf,CAAsBkG,SAApC,CAApB;AACAD,QAAAA,QAAQ,GAAG,IAAIxL,QAAJ,CAAa0L,aAAa,CAACE,CAA3B,EAA8BF,aAAa,CAACG,CAA5C,EAA+CH,aAAa,CAACI,CAA7D,CAAX;AACH;;AACD,UAAI3C,IAAI,GAAG,IAAIzJ,eAAJ,CAAoBwL,UAApB,EAAgCD,QAAhC,EAA0CK,SAA1C,CAAX;;AACA,UAAI,CAACjK,iBAAiB,CAAC,KAAK4G,SAAL,CAAe1C,MAAf,CAAsB4D,IAAvB,CAAtB,EAAoD;AAChDA,QAAAA,IAAI,GAAG,KAAKlB,SAAL,CAAe1C,MAAf,CAAsB4D,IAA7B;AACH;;AACD,aAAO;AAAEF,QAAAA,MAAM,EAAE,KAAK+C,cAAL,CAAoB,KAAK/D,SAAL,CAAe1C,MAAf,CAAsB0D,MAA1C,CAAV;AAA6DE,QAAAA,IAAI,EAAEA,IAAnE;AAAyEE,QAAAA,KAAK,EAAE,IAAIpJ,aAAJ,CAAkBuL,QAAlB;AAAhF,OAAP;AACH,KAfD,MAgBK;AACD;AACAvC,MAAAA,MAAM,CAAC7C,GAAP,GAAa,IAAI5G,MAAJ,CAAW,IAAIQ,QAAJ,CAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,CAAX,CAAb;AACA,aAAO;AAAEiJ,QAAAA,MAAM,EAAEA,MAAV;AAAkBE,QAAAA,IAAI,EAAE,IAAIzJ,eAAJ,CAAoBC,aAAa,CAAC0L,SAAlC,EAA6C,IAA7C,CAAxB;AACHhC,QAAAA,KAAK,EAAE,IAAIpJ,aAAJ,CAAkB,IAAID,QAAJ,CAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,CAAlB;AADJ,OAAP;AAEH;AACJ,GAxBD;AAyBA;;;AACAkC,EAAAA,SAAS,CAACY,SAAV,CAAoBgH,qBAApB,GAA4C,UAAUrD,OAAV,EAAmBd,UAAnB,EAA+B6D,WAA/B,EAA4CnD,IAA5C,EAAkD4C,MAAlD,EAA0D6D,KAA1D,EAAiE3D,IAAjE,EAAuEE,KAAvE,EAA8EU,eAA9E,EAA+FpG,UAA/F,EAA2GC,mBAA3G,EAAgIhB,MAAhI,EAAwImK,KAAxI,EAA+I;AACvL,QAAIhJ,KAAK,GAAG,IAAZ;;AACA,QAAIiJ,UAAU,GAAGF,KAAjB;;AACA,QAAIG,OAAO,GAAG,UAAUC,eAAV,EAA2B;AACrC,UAAItC,GAAG,GAAGnE,OAAO,CAACiD,IAAR,CAAamB,MAAb,EAAV;AACA,UAAIR,GAAG,GAAGhE,IAAI,CAAC8G,gBAAL,CAAsBD,eAAe,CAACE,KAAtC,CAAV;AACA;;AACA,UAAIpI,IAAI,GAAG;AACPqI,QAAAA,KAAK,EAAEH,eAAe,CAACI,GADhB;AAEPlD,QAAAA,MAAM,EAAEC,GAFD;AAGPS,QAAAA,KAAK,EAAE1H,SAHA;AAIPmK,QAAAA,YAAY,EAAElD,GAAG,CAACmD,eAAJ;AAJP,OAAX;AAMA;;AACA,UAAIH,KAAK,GAAGI,MAAM,CAACtL,MAAP,CAAcgL,gBAAd,CAA+BD,eAAe,CAACE,KAA/C,EAAsDM,UAAtD,GAAmE,IAAnE,IAA2E,CAACrD,GAAG,CAACsD,mBAAL,GAA2BF,MAAM,CAACxK,oBAAP,CAA4B2K,eAA5B,CAA4C5I,IAA5C,CAA3B,GAA+EkI,eAAe,CAACI,GAA1K,IAAiL,KAAjL,GAAyLJ,eAAe,CAACW,KAAzM,IAAkNlI,UAAU,CAACkI,KAAX,GAAmB,CAAnB,GAAuB,QAAvB,GAAkC,OAApP,CAAZ;AACA,UAAIC,KAAK,GAAG;AAAEC,QAAAA,WAAW,EAAEV,KAAf;AAAsB/C,QAAAA,IAAI,EAAE;AAA5B,OAAZ;AACAmD,MAAAA,MAAM,CAACtL,MAAP,CAAc+B,OAAd,CAAsB9E,MAAM,CAAC4O,kBAA7B,EAAiDF,KAAjD,EAAwD,UAAUA,KAAV,EAAiB;AACrElD,QAAAA,GAAG,CAACqD,KAAJ,CAAUC,OAAV,CAAkBlB,UAAlB,EAA8BK,KAA9B,GAAsCS,KAAK,CAACC,WAA5C;AACAnD,QAAAA,GAAG,CAACqD,KAAJ,CAAUC,OAAV,CAAkBlB,UAAU,GAAG,CAA/B,EAAkClC,KAAlC,CAAwCqD,YAAxC,GAAuD,IAAIrO,eAAJ,CAAoBC,gBAAgB,CAACqO,IAArC,CAAvD;AACAxD,QAAAA,GAAG,CAACE,KAAJ,CAAUC,SAAV,CAAoB9B,MAApB;AACA2B,QAAAA,GAAG,CAACE,KAAJ,CAAUuD,OAAV,CAAkBlF,IAAlB;AACAyB,QAAAA,GAAG,CAACE,KAAJ,CAAUwD,YAAV,CAAuBjF,KAAvB;AACAuB,QAAAA,GAAG,CAACE,KAAJ,CAAUyD,kBAAV,CAA6BxE,eAA7B;AACA,YAAII,KAAJ;AACA,YAAIqE,mBAAmB,GAAG,IAAItN,4BAAJ,CAAiCmF,IAAjC,CAA1B;;AACA,YAAI,CAAChF,iBAAiB,CAAC6L,eAAe,CAACuB,KAAhB,CAAsB/D,OAAvB,CAAtB,EAAuD;AACnDP,UAAAA,KAAK,GAAGqE,mBAAmB,CAAC/D,YAApB,CAAiCyC,eAAe,CAACuB,KAAhB,CAAsB/D,OAAvD,EAAgEwC,eAAhE,CAAR;AACH,SAFD,MAGK;AACD/C,UAAAA,KAAK,GAAGqE,mBAAmB,CAAC/D,YAApB,CAAiCyC,eAAe,CAACuB,KAAjD,EAAwDvB,eAAxD,CAAR;AACH;;AACD,YAAI,CAAC7L,iBAAiB,CAAC8I,KAAD,CAAlB,IAA6BA,KAAK,CAACtB,MAAN,KAAiB,CAAlD,EAAqD;AACjD+B,UAAAA,GAAG,CAACqD,KAAJ,CAAUC,OAAV,CAAkBlB,UAAU,GAAG,CAA/B,EAAkC0B,UAAlC,GAA+CjI,OAAO,CAAC6B,OAAR,CAAgBuF,KAAhB,IAAyBb,UAAU,GAAG,CAAtC,CAA/C;AACH;;AACD,YAAI,CAAC3L,iBAAiB,CAACsE,UAAU,CAACgJ,WAAZ,CAAlB,IAA8ChJ,UAAU,CAACgJ,WAAX,GAAyB,CAA3E,EAA8E;AAC1E5K,UAAAA,KAAK,CAAC4G,iBAAN,CAAwBR,KAAxB,EAA+B1D,OAA/B,EAAwCwC,MAAxC,EAAgDE,IAAhD,EAAsDE,KAAtD,EAA6DU,eAA7D,EAA8E,IAA9E,EAAoFa,GAApF,EAAyFoC,UAAzF;;AACAjJ,UAAAA,KAAK,CAAC+F,qBAAN,CAA4BrD,OAA5B,EAAqCyG,eAAe,CAACuB,KAArD,EAA4DjF,WAA5D,EAAyEnD,IAAzE,EAA+E4C,MAA/E,EAAwF+D,UAAU,GAAG,CAArG,EAAyG7D,IAAzG,EAA+GE,KAA/G,EAAsHU,eAAtH,EAAuIpG,UAAvI,EAAmJC,mBAAnJ,EAAwKhB,MAAxK,EAAgLmK,KAAhL;;AACA,cAAI6B,iBAAiB,GAAG,IAAI3N,0BAAJ,CAA+BoF,IAA/B,CAAxB;AACA8D,UAAAA,KAAK,GAAGyE,iBAAiB,CAACnE,YAAlB,CAA+ByC,eAAe,CAACuB,KAAhB,CAAsB/D,OAArD,EAA8DwC,eAA9D,CAAR;;AACAnJ,UAAAA,KAAK,CAAC4G,iBAAN,CAAwBR,KAAxB,EAA+B1D,OAA/B,EAAwCwC,MAAxC,EAAgDE,IAAhD,EAAsDE,KAAtD,EAA6DU,eAA7D,EAA8E,KAA9E;AACH,SAND,MAOK;AACDhG,UAAAA,KAAK,CAAC4G,iBAAN,CAAwBR,KAAxB,EAA+B1D,OAA/B,EAAwCwC,MAAxC,EAAgDE,IAAhD,EAAsDE,KAAtD,EAA6DU,eAA7D,EAA8E,IAA9E,EAAoFa,GAApF,EAAyFoC,UAAzF;;AACAD,UAAAA,KAAK,GAAGhJ,KAAK,CAACiG,aAAN,CAAoBf,MAApB,EAA4BO,WAA5B,EAAyCnD,IAAzC,EAA+C6G,eAAe,CAACuB,KAA/D,EAAsEhI,OAAtE,EAAgFuG,UAAU,GAAG,CAA7F,EAAiGpJ,mBAAjG,EAAsHhB,MAAtH,EAA8HmK,KAA9H,CAAR;AACA,cAAI6B,iBAAiB,GAAG,IAAI3N,0BAAJ,CAA+BoF,IAA/B,CAAxB;AACA8D,UAAAA,KAAK,GAAGyE,iBAAiB,CAACnE,YAAlB,CAA+ByC,eAAe,CAACuB,KAA/C,EAAsDvB,eAAtD,CAAR;AACA,cAAI2B,eAAe,GAAG,IAAtB;;AACA9K,UAAAA,KAAK,CAAC4G,iBAAN,CAAwBR,KAAxB,EAA+B1D,OAA/B,EAAwCwC,MAAxC,EAAgDE,IAAhD,EAAsDE,KAAtD,EAA6DU,eAA7D,EAA8E,KAA9E,EAAqF,IAArF,EAA2F,IAA3F,EAAiG8E,eAAjG;AACH;AACJ,OAjCD;AAkCH,KA/CD;;AAgDA,QAAIpB,MAAM,GAAG,IAAb;;AACA,SAAK,IAAIqB,EAAE,GAAG,CAAT,EAAYC,YAAY,GAAGpJ,UAAhC,EAA4CmJ,EAAE,GAAGC,YAAY,CAAClG,MAA9D,EAAsEiG,EAAE,EAAxE,EAA4E;AACxE,UAAI5B,eAAe,GAAG6B,YAAY,CAACD,EAAD,CAAlC;;AACA7B,MAAAA,OAAO,CAACC,eAAD,CAAP;AACH;AACJ,GAxDD;;AAyDAhL,EAAAA,SAAS,CAACY,SAAV,CAAoB2G,kBAApB,GAAyC,UAAUkF,WAAV,EAAuBlI,OAAvB,EAAgCiD,IAAhC,EAAsCsF,UAAtC,EAAkD/F,MAAlD,EAA0DC,UAA1D,EAAsEE,WAAtE,EAAmF6F,IAAnF,EAAyFpH,uBAAzF,EAAkHqH,KAAlH,EAAyH;AAC9J,QAAInL,KAAK,GAAG,IAAZ;;AACA,QAAIoL,WAAW,GAAGH,UAAU,CAACnG,MAAX,GAAoB8F,WAAtC;AACA,QAAIS,KAAK,GAAGtN,kBAAkB,CAACoN,KAAD,CAA9B;AACA,QAAIG,IAAI,GAAGH,KAAX;AACA,QAAInC,KAAK,GAAG,CAAZ;;AACA,QAAI,KAAK5K,MAAL,CAAYmN,aAAhB,EAA+B;AAC3BvC,MAAAA,KAAK,GAAG,KAAK5K,MAAL,CAAYyG,aAAZ,CAA0BN,OAA1B,CAAkCO,MAA1C;AACH;;AACDpC,IAAAA,OAAO,CAAC6B,OAAR,CAAgB9B,GAAhB,CAAoB2I,WAApB;AACA1I,IAAAA,OAAO,CAAC8I,OAAR,CAAgB/I,GAAhB,CAAoBkD,IAAI,CAACb,MAAzB;;AACA,QAAI2G,gBAAgB,GAAG,UAAUC,MAAV,EAAkBC,MAAlB,EAA0BrF,GAA1B,EAA+BsF,OAA/B,EAAwCC,OAAxC,EAAiD;AACpE,UAAIC,UAAU,GAAGpJ,OAAO,CAAC8I,OAAR,CAAgBO,SAAhB,CAA0BL,MAA1B,CAAjB;AACA,UAAIM,OAAO,GAAGF,UAAU,CAAC5B,KAAX,CAAiBC,OAAjB,CAAyBwB,MAAzB,CAAd;AACA,UAAIM,IAAI,GAAGtG,IAAI,CAAC+F,MAAD,CAAJ,CAAaxB,KAAb,CAAmByB,MAAnB,CAAX;;AACA,UAAI,CAACrO,iBAAiB,CAACgJ,GAAG,CAAC4F,eAAL,CAAtB,EAA6C;AACzCF,QAAAA,OAAO,CAACjF,KAAR,CAAcqD,YAAd,GAA6BpK,KAAK,CAACmM,sBAAN,CAA6B7F,GAAG,CAAC4F,eAAjC,CAA7B;AACH;;AACD,UAAIN,OAAO,GAAG,CAAd,EAAiB;AACbI,QAAAA,OAAO,CAACJ,OAAR,GAAkBA,OAAlB;AACAI,QAAAA,OAAO,CAACjF,KAAR,CAAcqD,YAAd,GAA6BpK,KAAK,CAACoM,oBAAN,CAA2B,QAA3B,EAAqCJ,OAAO,CAACjF,KAAR,CAAcqD,YAAnD,EAAiE9D,GAAG,CAAC+F,SAArE,CAA7B;AACH;;AACD,UAAIR,OAAO,GAAG,CAAd,EAAiB;AACbG,QAAAA,OAAO,CAACrB,UAAR,GAAqBkB,OAArB;AACH;;AACDC,MAAAA,UAAU,CAAC/E,KAAX,CAAiBC,SAAjB,CAA2B9B,MAA3B;AACA4G,MAAAA,UAAU,CAAC/E,KAAX,CAAiBuD,OAAjB,CAAyBnF,UAAzB;AACA2G,MAAAA,UAAU,CAAC/E,KAAX,CAAiBwD,YAAjB,CAA8BlF,WAA9B;AACA2G,MAAAA,OAAO,CAAC1C,KAAR,GAAgBhD,GAAG,CAACqD,UAApB;;AACA,UAAI,CAACrM,iBAAiB,CAAC2O,IAAD,CAAlB,KAA6BA,IAAI,CAACK,QAAL,KAAkB7O,QAAQ,CAAC8O,YAA3B,IAA2CN,IAAI,CAACK,QAAL,KAAkB7O,QAAQ,CAAC+O,YAAnG,CAAJ,EAAsH;AAClHR,QAAAA,OAAO,CAAC1C,KAAR,GAAgB,EAAhB;AACA0C,QAAAA,OAAO,CAACS,KAAR,GAAgB,EAAhB;AACH;;AACD,UAAIxL,IAAI,GAAG;AACPgL,QAAAA,IAAI,EAAED,OADC;AAEPU,QAAAA,QAAQ,EAAET,IAFH;AAGPlF,QAAAA,KAAK,EAAEiF,OAAO,CAACjF;AAHR,OAAX;;AAKA/G,MAAAA,KAAK,CAAC5B,MAAN,CAAa+B,OAAb,CAAqB9E,MAAM,CAACsR,sBAA5B,EAAoD1L,IAApD;AACH,KA5BD;;AA6BA,QAAI2L,UAAU,GAAG,UAAUtB,IAAV,EAAgBD,KAAhB,EAAuBwB,OAAvB,EAAgCC,QAAhC,EAA0CC,QAA1C,EAAoDC,MAApD,EAA4D;AACzE,UAAIC,IAAI,GAAG,CAAX;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG5B,IAAI,CAACxG,MAAzB,EAAiCoI,CAAC,EAAlC,EAAsC;AAClC,YAAIF,MAAJ,EAAY;AACRC,UAAAA,IAAI,GAAGA,IAAI,GAAGJ,OAAP,IAAkBK,CAAC,KAAK,CAAN,GAAU,CAAV,GAAc,CAAC,CAAjC,CAAP;AACAJ,UAAAA,QAAQ,GAAGG,IAAX;AACAJ,UAAAA,OAAO,GAAG,CAAV;AACH;;AACD,YAAIvB,IAAI,CAAC4B,CAAD,CAAJ,CAAQ3I,OAAR,IAAmB+G,IAAI,CAAC4B,CAAD,CAAJ,CAAQ3I,OAAR,CAAgBO,MAAvC,EAA+C;AAC3C,cAAIqI,UAAU,GAAGP,UAAU,CAACtB,IAAI,CAAC4B,CAAD,CAAJ,CAAQ3I,OAAT,EAAkB8G,KAAK,GAAG,CAA1B,EAA6B,CAA7B,EAAgC6B,CAAC,GAAGJ,QAApC,EAA8CC,QAAQ,GAAG,CAAzD,EAA4D,KAA5D,CAA3B;AACAtB,UAAAA,gBAAgB,CAACsB,QAAD,EAAWG,CAAC,GAAGJ,QAAf,EAAyBxB,IAAI,CAAC4B,CAAD,CAA7B,EAAkC,CAAlC,EAAqCC,UAArC,CAAhB;AACAN,UAAAA,OAAO,GAAGA,OAAO,GAAGM,UAApB;AACAL,UAAAA,QAAQ,GAAGA,QAAQ,GAAGK,UAAX,GAAwB,CAAnC;AACH,SALD,MAMK,IAAI7B,IAAI,CAAC4B,CAAD,CAAJ,CAAQE,OAAR,IAAmBpN,KAAK,CAAC3B,iBAA7B,EAAgD;AACjDwO,UAAAA,OAAO;AACPpB,UAAAA,gBAAgB,CAACsB,QAAD,EAAWG,CAAC,GAAGJ,QAAJ,GAAe9D,KAA1B,EAAiCsC,IAAI,CAAC4B,CAAD,CAArC,EAA0C7B,KAA1C,EAAiD,CAAjD,CAAhB;AACH;AACJ;;AACD,aAAOwB,OAAP;AACH,KApBD;;AAqBAD,IAAAA,UAAU,CAACtB,IAAD,EAAOD,KAAP,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,IAAvB,CAAV;;AACA,QAAI3I,OAAO,CAAC6B,OAAR,CAAgBuF,KAAhB,IAAyB,CAAzB,IAA8BhG,uBAAlC,EAA2D;AACvDpB,MAAAA,OAAO,CAACqE,KAAR,CAAcjD,uBAAd,GAAwC,IAAxC;AACH;;AACD,WAAOpB,OAAP;AACH,GAlED;;AAmEAvE,EAAAA,SAAS,CAACY,SAAV,CAAoBsF,uBAApB,GAA8C,UAAUxE,mBAAV,EAA+B+B,UAA/B,EAA2C;AACrF,QAAI,CAACtE,iBAAiB,CAACuC,mBAAD,CAAtB,EAA6C;AACzC,UAAI,CAACvC,iBAAiB,CAACuC,mBAAmB,CAACsE,KAArB,CAAtB,EAAmD;AAC/C,aAAKD,SAAL,GAAiBrE,mBAAmB,CAACsE,KAArC;AACH;;AACD,UAAIkJ,UAAU,GAAG,KAAK7N,eAAL,CAAqBmE,IAAtC;AACA,WAAKT,UAAL,CAAgBrD,mBAAhB;;AACA,UAAI,CAACvC,iBAAiB,CAACuC,mBAAmB,CAACyN,MAArB,CAAtB,EAAoD;AAChD;AACA,YAAIA,MAAM,GAAGzN,mBAAmB,CAACyN,MAAjC;AACA,YAAIC,QAAQ,GAAG,IAAIjR,MAAJ,CAAW,CAAX,EAAgB+Q,UAAU,CAACZ,KAAX,GAAmB,EAApB,GAA2Ba,MAAM,CAACE,UAAP,GAAoB,IAA9D,CAAf;AACA,YAAI7J,IAAI,GAAG,IAAIjH,KAAJ,CAAW2Q,UAAU,CAACZ,KAAX,GAAmB,EAA9B,EAAoCa,MAAM,CAACG,MAAP,GAAgB,IAApD,CAAX;AACA,YAAIC,MAAM,GAAG,IAAItR,UAAJ,CAAemR,QAAf,EAAyB5J,IAAzB,CAAb;AACA,aAAKvE,WAAL,CAAiBuO,QAAjB,CAA0BC,MAA1B,GAAmC,KAAKC,gBAAL,CAAsB,IAAIxR,sBAAJ,CAA2BqR,MAA3B,CAAtB,EAA0DJ,MAA1D,CAAnC;AACH;;AACD,UAAI,CAAChQ,iBAAiB,CAACuC,mBAAmB,CAACiO,mBAArB,CAAlB,IAA+D,CAAC,KAAKtP,UAAzE,EAAqF;AACjF,aAAKH,iBAAL,GAAyBwB,mBAAmB,CAACiO,mBAA7C;AACH;;AACD,UAAI,CAACxQ,iBAAiB,CAACuC,mBAAmB,CAAC+B,UAArB,CAAtB,EAAwD;AACpD,YAAI,EAAE/B,mBAAmB,CAAC+B,UAApB,YAA0ClE,WAA5C,CAAJ,EAA8D;AAC1DkE,UAAAA,UAAU,GAAG/B,mBAAmB,CAAC+B,UAAjC;AACH;;AACD,aAAKrD,gBAAL,GAAwB,IAAxB;AACA,aAAKD,eAAL,GAAuB,KAAvB;AACH,OAND,MAOK,IAAI,CAAChB,iBAAiB,CAACuC,mBAAmB,CAACiC,UAArB,CAAtB,EAAwD;AACzD,YAAIjC,mBAAmB,CAACiC,UAApB,KAAmC,aAAvC,EAAsD;AAClDF,UAAAA,UAAU,GAAG,KAAKxD,MAAL,CAAYE,eAAzB;AACA,eAAKA,eAAL,GAAuB,IAAvB;AACA,eAAKC,gBAAL,GAAwB,KAAxB;AACH,SAJD,MAKK;AACD,eAAKD,eAAL,GAAuB,KAAvB;AACA,eAAKC,gBAAL,GAAwB,KAAxB;AACH;AACJ,OAVI,MAWA;AACD,aAAKD,eAAL,GAAuB,KAAvB;AACA,aAAKC,gBAAL,GAAwB,KAAxB;AACH;AACJ,KAvCD,MAwCK;AACD,WAAKD,eAAL,GAAuB,KAAvB;AACA,WAAKC,gBAAL,GAAwB,KAAxB;AACH;;AACD,WAAOqD,UAAP;AACH,GA9CD;;AA+CAzD,EAAAA,SAAS,CAACY,SAAV,CAAoBmE,UAApB,GAAiC,UAAUrD,mBAAV,EAA+B;AAC5D,QAAIG,KAAK,GAAG,IAAZ;;AACA,QAAIqN,UAAU,GAAG,KAAK7N,eAAL,CAAqBmE,IAAtC;;AACA,QAAI,CAACrG,iBAAiB,CAACuC,mBAAD,CAAlB,IAA2C,CAACvC,iBAAiB,CAACuC,mBAAmB,CAAC2B,MAArB,CAAjE,EAA+F;AAC3F;AACA,UAAIA,MAAM,GAAG3B,mBAAmB,CAAC2B,MAAjC;AACA,UAAI+L,QAAQ,GAAG,IAAIjR,MAAJ,CAAW,CAAX,EAAckF,MAAM,CAACuM,OAArB,CAAf;AACA,UAAIpK,IAAI,GAAG,IAAIjH,KAAJ,CAAW2Q,UAAU,CAACZ,KAAX,GAAmB,EAA9B,EAAoCjL,MAAM,CAACiM,MAAP,GAAgB,IAApD,CAAX;AACA,UAAIC,MAAM,GAAG,IAAItR,UAAJ,CAAemR,QAAf,EAAyB5J,IAAzB,CAAb;;AACA,UAAI,CAAC,KAAKlF,aAAL,CAAmBqG,MAAxB,EAAgC;AAC5B,aAAK1F,WAAL,CAAiBuO,QAAjB,CAA0BK,GAA1B,GAAgC,KAAKH,gBAAL,CAAsB,IAAIxR,sBAAJ,CAA2BqR,MAA3B,CAAtB,EAA0DlM,MAA1D,CAAhC;AACH,OAFD,MAGK;AACD,YAAIyM,gBAAgB,GAAG,KAAKJ,gBAAL,CAAsB,IAAIxR,sBAAJ,CAA2BqR,MAA3B,CAAtB,EAA0DlM,MAA1D,CAAvB;AACA,aAAK/C,aAAL,CAAmBkG,MAAnB,CAA0B,UAAUqE,KAAV,EAAiB;AACvC,cAAIA,KAAK,GAAG,CAAR,IAAa,CAAb,IAAkBA,KAAK,GAAG,CAAR,GAAYhJ,KAAK,CAACZ,WAAN,CAAkByD,KAAlB,CAAwBiH,KAAxB,GAAgC,CAAlE,EAAqE;AACjE9J,YAAAA,KAAK,CAACZ,WAAN,CAAkByD,KAAlB,CAAwBqL,cAAxB,CAAuClF,KAAK,GAAG,CAA/C,EAAkDmF,QAAlD,CACKC,eADL,CACqBH,gBAAgB,CAACN,QADtC,EACgD,IAAIrR,MAAJ,CAAW,CAAX,EAAc,CAAd,CADhD;AAEH;AACJ,SALD;AAMH;AACJ;AACJ,GAtBD;;AAuBA6B,EAAAA,SAAS,CAACY,SAAV,CAAoB8O,gBAApB,GAAuC,UAAUF,QAAV,EAAoBU,OAApB,EAA6B;AAChE,SAAK,IAAItD,EAAE,GAAG,CAAT,EAAYuD,EAAE,GAAGD,OAAO,CAACE,QAA9B,EAAwCxD,EAAE,GAAGuD,EAAE,CAACxJ,MAAhD,EAAwDiG,EAAE,EAA1D,EAA8D;AAC1D,UAAIyD,OAAO,GAAGF,EAAE,CAACvD,EAAD,CAAhB;AACA,WAAK0D,wBAAL,CAA8BD,OAA9B;;AACA,cAAQA,OAAO,CAACjI,IAAhB;AACI,aAAK,MAAL;AACI;AACA,cAAIiI,OAAO,CAAClF,KAAR,KAAkB,EAAlB,IAAwBkF,OAAO,CAAClF,KAAR,KAAkBjK,SAA1C,IAAuDmP,OAAO,CAAClF,KAAR,KAAkB,IAAzE,IAAiF,OAAOkF,OAAO,CAAClF,KAAf,KAAyB,QAA9G,EAAwH;AACpH,kBAAM,IAAIoF,KAAJ,CAAU,uDAAV,CAAN;AACH;;AACD,eAAKC,QAAL,CAAchB,QAAd,EAAwBa,OAAxB;AACA;;AACJ,aAAK,YAAL;AACI,eAAKI,cAAL,CAAoBjB,QAApB,EAA8Ba,OAA9B;AACA;;AACJ,aAAK,OAAL;AACI,cAAIA,OAAO,CAACK,GAAR,KAAgBxP,SAAhB,IAA6BmP,OAAO,CAACK,GAAR,KAAgB,IAA7C,IAAqDL,OAAO,CAACK,GAAR,KAAgB,EAAzE,EAA6E;AACzE,kBAAM,IAAIH,KAAJ,CAAU,0DAAV,CAAN;AACH;;AACD,eAAKI,SAAL,CAAenB,QAAf,EAAyBa,OAAzB;AACA;;AACJ,aAAK,MAAL;AACI,eAAKO,QAAL,CAAcpB,QAAd,EAAwBa,OAAxB;AACA;;AACJ;AACI,gBAAM,IAAIE,KAAJ,CAAU,kCAAV,CAAN;AArBR;AAuBH;;AACD,WAAOf,QAAP;AACH,GA7BD;;AA8BAxP,EAAAA,SAAS,CAACY,SAAV,CAAoB0P,wBAApB,GAA+C,UAAUD,OAAV,EAAmB;AAC9D,QAAIA,OAAO,CAACjI,IAAR,KAAiBlH,SAAjB,IAA8BmP,OAAO,CAACjI,IAAR,KAAiB,IAAnD,EAAyD;AACrD,YAAM,IAAImI,KAAJ,CAAU,kCAAV,CAAN;AACH,KAFD,MAGK;AACD,UAAIF,OAAO,CAACjI,IAAR,KAAiB,MAArB,EAA6B;AACzB,YAAIiI,OAAO,CAACQ,MAAR,KAAmB3P,SAAnB,IAAgCmP,OAAO,CAACQ,MAAR,KAAmB,IAAvD,EAA6D;AACzD,gBAAM,IAAIN,KAAJ,CAAU,kCAAkCF,OAAO,CAACjI,IAA1C,GAAiD,aAA3D,CAAN;AACH,SAFD,MAGK;AACD,cAAIiI,OAAO,CAACQ,MAAR,CAAeC,EAAf,KAAsB5P,SAAtB,IAAmCmP,OAAO,CAACQ,MAAR,CAAeC,EAAf,KAAsB,IAAzD,IAAiE,OAAOT,OAAO,CAACQ,MAAR,CAAeC,EAAtB,KAA6B,QAAlG,EAA4G;AACxG,kBAAM,IAAIP,KAAJ,CAAU,0CAA0CF,OAAO,CAACjI,IAAlD,GAAyD,YAAnE,CAAN;AACH;;AACD,cAAIiI,OAAO,CAACQ,MAAR,CAAeE,EAAf,KAAsB7P,SAAtB,IAAmCmP,OAAO,CAACQ,MAAR,CAAeE,EAAf,KAAsB,IAAzD,IAAiE,OAAOV,OAAO,CAACQ,MAAR,CAAeE,EAAtB,KAA6B,QAAlG,EAA4G;AACxG,kBAAM,IAAIR,KAAJ,CAAU,0CAA0CF,OAAO,CAACjI,IAAlD,GAAyD,YAAnE,CAAN;AACH;;AACD,cAAIiI,OAAO,CAACQ,MAAR,CAAeG,EAAf,KAAsB9P,SAAtB,IAAmCmP,OAAO,CAACQ,MAAR,CAAeG,EAAf,KAAsB,IAAzD,IAAiE,OAAOX,OAAO,CAACQ,MAAR,CAAeG,EAAtB,KAA6B,QAAlG,EAA4G;AACxG,kBAAM,IAAIT,KAAJ,CAAU,0CAA0CF,OAAO,CAACjI,IAAlD,GAAyD,YAAnE,CAAN;AACH;;AACD,cAAIiI,OAAO,CAACQ,MAAR,CAAeI,EAAf,KAAsB/P,SAAtB,IAAmCmP,OAAO,CAACQ,MAAR,CAAeI,EAAf,KAAsB,IAAzD,IAAiE,OAAOZ,OAAO,CAACQ,MAAR,CAAeI,EAAtB,KAA6B,QAAlG,EAA4G;AACxG,kBAAM,IAAIV,KAAJ,CAAU,0CAA0CF,OAAO,CAACjI,IAAlD,GAAyD,YAAnE,CAAN;AACH;AACJ;AACJ,OAlBD,MAmBK;AACD,YAAIiI,OAAO,CAACjB,QAAR,KAAqBlO,SAArB,IAAkCmP,OAAO,CAACjB,QAAR,KAAqB,IAA3D,EAAiE;AAC7D,gBAAM,IAAImB,KAAJ,CAAU,oCAAoCF,OAAO,CAACjI,IAA5C,GAAmD,aAA7D,CAAN;AACH,SAFD,MAGK;AACD,cAAIiI,OAAO,CAACjB,QAAR,CAAiB8B,CAAjB,KAAuBhQ,SAAvB,IAAoCmP,OAAO,CAACjB,QAAR,CAAiB8B,CAAjB,KAAuB,IAA3D,IAAmE,OAAOb,OAAO,CAACjB,QAAR,CAAiB8B,CAAxB,KAA8B,QAArG,EAA+G;AAC3G,kBAAM,IAAIX,KAAJ,CAAU,yCAAyCF,OAAO,CAACjI,IAAjD,GAAwD,cAAlE,CAAN;AACH;;AACD,cAAIiI,OAAO,CAACjB,QAAR,CAAiB+B,CAAjB,KAAuBjQ,SAAvB,IAAoCmP,OAAO,CAACjB,QAAR,CAAiB+B,CAAjB,KAAuB,IAA3D,IAAmE,OAAOd,OAAO,CAACjB,QAAR,CAAiB+B,CAAxB,KAA8B,QAArG,EAA+G;AAC3G,kBAAM,IAAIZ,KAAJ,CAAU,yCAAyCF,OAAO,CAACjI,IAAjD,GAAwD,cAAlE,CAAN;AACH;AACJ;AACJ;AACJ;AACJ,GAtCD;AAuCA;;;AACApI,EAAAA,SAAS,CAACY,SAAV,CAAoB4P,QAApB,GAA+B,UAAUY,YAAV,EAAwBf,OAAxB,EAAiC;AAC5D,QAAIpJ,IAAI,GAAG,KAAKoK,OAAL,CAAahB,OAAb,CAAX;AACA,QAAIlJ,KAAK,GAAG,KAAKmK,mBAAL,CAAyBjB,OAAzB,CAAZ;AACA,QAAIkB,GAAG,GAAG,IAAV;;AACA,QAAI,CAACpS,iBAAiB,CAACkR,OAAO,CAACzH,KAAR,CAAc4I,YAAf,CAAtB,EAAoD;AAChD,UAAIC,QAAQ,GAAG,KAAKhI,QAAL,CAAc4G,OAAO,CAACzH,KAAR,CAAc4I,YAA5B,CAAf;AACAD,MAAAA,GAAG,GAAG,IAAIjU,MAAJ,CAAW,IAAIQ,QAAJ,CAAa2T,QAAQ,CAAC/H,CAAtB,EAAyB+H,QAAQ,CAAC9H,CAAlC,EAAqC8H,QAAQ,CAAC7H,CAA9C,CAAX,CAAN;AACH;;AACD,QAAIzC,KAAK,IAAI,IAAT,IAAiBoK,GAAG,IAAI,IAA5B,EAAkC;AAC9BpK,MAAAA,KAAK,GAAG,IAAIpJ,aAAJ,CAAkB,IAAID,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAlB,CAAR;AACH;;AACD,QAAIqN,KAAK,GAAGkF,OAAO,CAAClF,KAAR,CAAcuG,QAAd,EAAZ;AACA,QAAIR,CAAC,GAAGb,OAAO,CAACjB,QAAR,CAAiB8B,CAAjB,GAAqB,IAA7B;AACA,QAAIC,CAAC,GAAGd,OAAO,CAACjB,QAAR,CAAiB+B,CAAjB,GAAqB,IAA7B;AACA,QAAIQ,MAAM,GAAG,IAAI/T,eAAJ,EAAb;AACA,QAAIuI,MAAM,GAAG,KAAKyL,gBAAL,CAAsBvB,OAAtB,EAA+BsB,MAA/B,CAAb;;AACA,QAAIxL,MAAM,KAAK,IAAX,IAAmB,CAAChH,iBAAiB,CAACgH,MAAM,CAACwL,MAAR,CAArC,IAAwD,CAACxS,iBAAiB,CAACgH,MAAM,CAACX,IAAR,CAA9E,EAA6F;AACzF4L,MAAAA,YAAY,CAACpB,QAAb,CAAsB6B,UAAtB,CAAiC1G,KAAjC,EAAwClE,IAAxC,EAA8CsK,GAA9C,EAAmDpK,KAAnD,EAA0D+J,CAA1D,EAA6DC,CAA7D,EAAgEhL,MAAM,CAACX,IAAP,CAAY8I,KAA5E,EAAmFnI,MAAM,CAACX,IAAP,CAAY8J,MAA/F,EAAuGnJ,MAAM,CAACwL,MAA9G;AACH,KAFD,MAGK;AACDP,MAAAA,YAAY,CAACpB,QAAb,CAAsB6B,UAAtB,CAAiC1G,KAAjC,EAAwClE,IAAxC,EAA8CsK,GAA9C,EAAmDpK,KAAnD,EAA0D+J,CAA1D,EAA6DC,CAA7D,EAAgEQ,MAAhE;AACH;AACJ,GAtBD;AAuBA;;;AACA3R,EAAAA,SAAS,CAACY,SAAV,CAAoB6P,cAApB,GAAqC,UAAUqB,cAAV,EAA0BzB,OAA1B,EAAmC;AACpE,QAAIpJ,IAAI,GAAG,KAAKoK,OAAL,CAAahB,OAAb,CAAX;AACA,QAAIlJ,KAAK,GAAG,IAAZ;;AACA,QAAI,CAAChI,iBAAiB,CAACkR,OAAO,CAACzH,KAAR,CAAcmJ,cAAf,CAAtB,EAAsD;AAClD;AACA,UAAIC,UAAU,GAAG,KAAKvI,QAAL,CAAc4G,OAAO,CAACzH,KAAR,CAAcmJ,cAA5B,CAAjB;AACA5K,MAAAA,KAAK,GAAG,IAAIpJ,aAAJ,CAAkB,IAAID,QAAJ,CAAakU,UAAU,CAACtI,CAAxB,EAA2BsI,UAAU,CAACrI,CAAtC,EAAyCqI,UAAU,CAACpI,CAApD,CAAlB,CAAR;AACH,KAJD,MAKK;AACDzC,MAAAA,KAAK,GAAG,IAAIpJ,aAAJ,CAAkB,IAAID,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAlB,CAAR;AACH;;AACD,QAAImU,UAAU,GAAG,IAAI7T,kBAAJ,CAAuB6I,IAAvB,EAA6BE,KAA7B,CAAjB;AACA8K,IAAAA,UAAU,CAACC,WAAX,GAAyB,KAAKC,kBAAL,CAAwB9B,OAAO,CAAC+B,cAAhC,CAAzB;AACA,QAAIC,cAAJ;AACA,QAAIV,MAAJ;;AACA,QAAI,CAACxS,iBAAiB,CAACkR,OAAO,CAACsB,MAAT,CAAtB,EAAwC;AACpC,UAAItB,OAAO,CAACsB,MAAR,CAAeW,OAAf,CAAuB,QAAvB,MAAqC,CAAC,CAAtC,IAA2CjC,OAAO,CAACsB,MAAR,CAAeW,OAAf,CAAuB,UAAvB,MAAuC,CAAC,CAAvF,EAA0F;AACtF,YAAIC,SAAS,GAAG,IAAIjU,iBAAJ,CAAsB2I,IAAtB,CAAhB;AACAsL,QAAAA,SAAS,CAACL,WAAV,GAAwB,KAAKC,kBAAL,CAAwB9B,OAAO,CAAC+B,cAAhC,CAAxB;;AACA,YAAI/B,OAAO,CAACsB,MAAR,CAAeW,OAAf,CAAuB,QAAvB,IAAmCjC,OAAO,CAACsB,MAAR,CAAeW,OAAf,CAAuB,UAAvB,CAAvC,EAA2E;AACvEX,UAAAA,MAAM,GAAGtB,OAAO,CAACsB,MAAR,CAAea,OAAf,CAAuB,UAAvB,EAAmC,GAAnC,CAAT;AACAb,UAAAA,MAAM,GAAGA,MAAM,CAACa,OAAP,CAAe,QAAf,EAAyB,GAAzB,CAAT;AACH,SAHD,MAIK;AACDb,UAAAA,MAAM,GAAGtB,OAAO,CAACsB,MAAR,CAAea,OAAf,CAAuB,UAAvB,EAAmC,GAAnC,CAAT;AACAb,UAAAA,MAAM,GAAGA,MAAM,CAACa,OAAP,CAAe,QAAf,EAAyB,GAAzB,CAAT;AACH;;AACDH,QAAAA,cAAc,GAAG,IAAIhU,iBAAJ,CAAsB4I,IAAtB,EAA4BE,KAA5B,EAAmCwK,MAAnC,EAA2CM,UAA3C,EAAuDM,SAAvD,CAAjB;AACH,OAZD,MAaK,IAAIlC,OAAO,CAACsB,MAAR,CAAeW,OAAf,CAAuB,UAAvB,MAAuC,CAAC,CAAxC,IAA6CjC,OAAO,CAACsB,MAAR,CAAeW,OAAf,CAAuB,QAAvB,MAAqC,CAAC,CAAvF,EAA0F;AAC3FX,QAAAA,MAAM,GAAGtB,OAAO,CAACsB,MAAR,CAAea,OAAf,CAAuB,UAAvB,EAAmC,GAAnC,CAAT;AACAH,QAAAA,cAAc,GAAG,IAAIhU,iBAAJ,CAAsB4I,IAAtB,EAA4BE,KAA5B,EAAmCwK,MAAnC,EAA2CM,UAA3C,CAAjB;AACH,OAHI,MAIA;AACD,YAAIM,SAAS,GAAG,IAAIjU,iBAAJ,CAAsB2I,IAAtB,CAAhB;AACA0K,QAAAA,MAAM,GAAGtB,OAAO,CAACsB,MAAR,CAAea,OAAf,CAAuB,QAAvB,EAAiC,GAAjC,CAAT;AACAH,QAAAA,cAAc,GAAG,IAAIhU,iBAAJ,CAAsB4I,IAAtB,EAA4BE,KAA5B,EAAmCwK,MAAnC,EAA2CY,SAA3C,CAAjB;AACH;AACJ,KAvBD,MAwBK;AACDZ,MAAAA,MAAM,GAAG,KAAT;AACAU,MAAAA,cAAc,GAAG,IAAIhU,iBAAJ,CAAsB4I,IAAtB,EAA4BE,KAA5B,EAAmCwK,MAAnC,EAA2CM,UAA3C,CAAjB;AACH;;AACD,QAAIf,CAAC,GAAGb,OAAO,CAACjB,QAAR,CAAiB8B,CAAjB,GAAqB,IAA7B;AACA,QAAIC,CAAC,GAAGd,OAAO,CAACjB,QAAR,CAAiB+B,CAAjB,GAAqB,IAA7B;AACA,QAAIhL,MAAM,GAAG,KAAKyL,gBAAL,CAAsBvB,OAAtB,EAA+BgC,cAAc,CAACpG,YAA9C,CAAb;;AACA,QAAI9F,MAAM,KAAK,IAAX,IAAmB,CAAChH,iBAAiB,CAACgH,MAAM,CAACwL,MAAR,CAArC,IAAwD,CAACxS,iBAAiB,CAACgH,MAAM,CAACX,IAAR,CAA9E,EAA6F;AACzF6M,MAAAA,cAAc,CAACpG,YAAf,GAA8B9F,MAAM,CAACwL,MAArC;AACAU,MAAAA,cAAc,CAAC9C,MAAf,GAAwB,IAAItR,UAAJ,CAAeiT,CAAf,EAAkBC,CAAlB,EAAqBhL,MAAM,CAACX,IAAP,CAAY8I,KAAjC,EAAwCnI,MAAM,CAACX,IAAP,CAAY8J,MAApD,CAAxB;AACH;;AACD+C,IAAAA,cAAc,CAACvN,IAAf,CAAoBgN,cAAc,CAAC9B,QAAnC,EAA6CkB,CAA7C,EAAgDC,CAAhD;AACH,GAnDD;AAoDA;;;AACAnR,EAAAA,SAAS,CAACY,SAAV,CAAoB+P,SAApB,GAAgC,UAAUmB,cAAV,EAA0BzB,OAA1B,EAAmC;AAC/D,QAAIa,CAAC,GAAGb,OAAO,CAACjB,QAAR,CAAiB8B,CAAjB,GAAqB,IAA7B;AACA,QAAIC,CAAC,GAAGd,OAAO,CAACjB,QAAR,CAAiB+B,CAAjB,GAAqB,IAA7B;AACA,QAAI7C,KAAK,GAAI,CAACnP,iBAAiB,CAACkR,OAAO,CAAC7K,IAAT,CAAnB,GAAsC6K,OAAO,CAAC7K,IAAR,CAAa8I,KAAb,GAAqB,IAA3D,GAAmEpN,SAA/E;AACA,QAAIoO,MAAM,GAAI,CAACnQ,iBAAiB,CAACkR,OAAO,CAAC7K,IAAT,CAAnB,GAAsC6K,OAAO,CAAC7K,IAAR,CAAa8J,MAAb,GAAsB,IAA5D,GAAoEpO,SAAjF;AACA,QAAIuR,KAAK,GAAG,IAAI9U,SAAJ,CAAc0S,OAAO,CAACK,GAAtB,CAAZ;;AACA,QAAI,CAACvR,iBAAiB,CAACmP,KAAD,CAAtB,EAA+B;AAC3BwD,MAAAA,cAAc,CAAC9B,QAAf,CAAwBW,SAAxB,CAAkC8B,KAAlC,EAAyCvB,CAAzC,EAA4CC,CAA5C,EAA+C7C,KAA/C,EAAsDgB,MAAtD;AACH,KAFD,MAGK;AACDwC,MAAAA,cAAc,CAAC9B,QAAf,CAAwBW,SAAxB,CAAkC8B,KAAlC,EAAyCvB,CAAzC,EAA4CC,CAA5C;AACH;AACJ,GAZD;AAaA;;;AACAnR,EAAAA,SAAS,CAACY,SAAV,CAAoBgQ,QAApB,GAA+B,UAAUkB,cAAV,EAA0BzB,OAA1B,EAAmC;AAC9D,QAAIS,EAAE,GAAGT,OAAO,CAACQ,MAAR,CAAeC,EAAf,GAAoB,IAA7B;AACA,QAAIC,EAAE,GAAGV,OAAO,CAACQ,MAAR,CAAeE,EAAf,GAAoB,IAA7B;AACA,QAAIC,EAAE,GAAGX,OAAO,CAACQ,MAAR,CAAeG,EAAf,GAAoB,IAA7B;AACA,QAAIC,EAAE,GAAGZ,OAAO,CAACQ,MAAR,CAAeI,EAAf,GAAoB,IAA7B;AACA,QAAIM,GAAG,GAAG,KAAKmB,iBAAL,CAAuBrC,OAAvB,CAAV;;AACA,QAAI,CAAClR,iBAAiB,CAACkR,OAAO,CAACzH,KAAT,CAAlB,IAAqCyH,OAAO,CAACzH,KAAR,KAAkB,IAA3D,EAAiE;AAC7D,UAAI,CAACzJ,iBAAiB,CAACkR,OAAO,CAACzH,KAAR,CAAc+J,OAAf,CAAlB,IAA6CtC,OAAO,CAACzH,KAAR,CAAc+J,OAAd,KAA0B,IAAvE,IAA+E,OAAOtC,OAAO,CAACzH,KAAR,CAAc+J,OAArB,KAAiC,QAApH,EAA8H;AAC1HpB,QAAAA,GAAG,CAACjD,KAAJ,GAAY+B,OAAO,CAACzH,KAAR,CAAc+J,OAAd,GAAwB,IAApC;AACH;;AACDpB,MAAAA,GAAG,CAACqB,SAAJ,GAAgB,KAAKC,YAAL,CAAkBxC,OAAO,CAACzH,KAAR,CAAcgK,SAAhC,CAAhB;AACH;;AACDd,IAAAA,cAAc,CAAC9B,QAAf,CAAwBY,QAAxB,CAAiCW,GAAjC,EAAsCT,EAAtC,EAA0CC,EAA1C,EAA8CC,EAA9C,EAAkDC,EAAlD;AACH,GAbD;AAcA;;AAAsC;;AAA+C;;;AACrFjR,EAAAA,SAAS,CAACY,SAAV,CAAoB6H,iBAApB,GAAwC,UAAUR,KAAV,EAAiB1D,OAAjB,EAA0BwC,MAA1B,EAAkCE,IAAlC,EAAwCE,KAAxC,EAA+CU,eAA/C,EAAgEiL,SAAhE,EAA2EC,UAA3E,EAAuFjI,UAAvF,EAAmG6B,eAAnG,EAAoH;AACxJ,SAAK,IAAIC,EAAE,GAAG,CAAT,EAAYoG,OAAO,GAAG/K,KAA3B,EAAkC2E,EAAE,GAAGoG,OAAO,CAACrM,MAA/C,EAAuDiG,EAAE,EAAzD,EAA6D;AACzD,UAAIlE,GAAG,GAAGsK,OAAO,CAACpG,EAAD,CAAjB;AACA,UAAIqG,UAAU,GAAG,CAAjB;AACA,UAAIC,wBAAwB,GAAG,CAAC,CAAhC;AACA,UAAIrI,KAAK,GAAG,CAAZ;AACA,UAAIsI,OAAO,GAAG,IAAd;AACA;;AACA,UAAIhI,KAAK,GAAG,EAAZ;;AACA,WAAK,IAAI4D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGxK,OAAO,CAAC6B,OAAR,CAAgBuF,KAApC,EAA2CoD,CAAC,EAA5C,EAAgD;AAC5C,YAAIjB,IAAI,GAAGpF,GAAG,CAACqD,KAAJ,CAAUlB,KAAV,CAAX;;AACA,YAAIiD,IAAI,CAACK,QAAL,KAAkB7O,QAAQ,CAAC8T,kBAA/B,EAAmD;AAC/CrE,UAAAA,CAAC;AACDlE,UAAAA,KAAK;AACL;AACH;;AACD,YAAI,CAAC,KAAK3K,iBAAV,EAA6B;AACzB,iBAAO4N,IAAI,CAACmB,OAAL,KAAiB/N,SAAxB,EAAmC;AAC/B,gBAAI4M,IAAI,CAACK,QAAL,KAAkB7O,QAAQ,CAAC8T,kBAA/B,EAAmD;AAC/C;AACH;;AACD,gBAAI,CAACjU,iBAAiB,CAAC4T,UAAD,CAAtB,EAAoC;AAChC,kBAAI,CAAC5T,iBAAiB,CAAC4T,UAAU,CAAChH,KAAX,CAAiBC,OAAjB,CAAyB+C,CAAzB,EAA4B5D,KAA7B,CAAtB,EAA2D;AACvD;AACA,oBAAIrI,IAAI,GAAG;AAAE4F,kBAAAA,GAAG,EAAEA,GAAP;AAAYN,kBAAAA,IAAI,EAAE,cAAlB;AAAkCQ,kBAAAA,KAAK,EAAEmK,UAAU,CAAChH;AAApD,iBAAX;AACA,qBAAK9L,MAAL,CAAY+B,OAAZ,CAAoB9E,MAAM,CAACmW,yBAA3B,EAAsDvQ,IAAtD;AACAqI,gBAAAA,KAAK,CAACrH,IAAN,CAAW,EAAX;AACAqH,gBAAAA,KAAK,CAACrH,IAAN,CAAWiP,UAAU,CAAChH,KAAX,CAAiBC,OAAjB,CAAyB+C,CAAzB,EAA4B5D,KAAvC;AACAgI,gBAAAA,OAAO,GAAG,KAAV;;AACA,oBAAI,CAACL,SAAL,EAAgB;AACZ/D,kBAAAA,CAAC,IAAI,CAAL;AACH;AACJ,eAVD,MAWK;AACD5D,gBAAAA,KAAK,CAACrH,IAAN,CAAW,EAAX;AACH;AACJ,aAfD,MAgBK;AACDqH,cAAAA,KAAK,CAACrH,IAAN,CAAW,EAAX;AACH;;AACDiL,YAAAA,CAAC,IAAI,CAAL;AACAlE,YAAAA,KAAK,GAAGA,KAAK,GAAG,CAAhB;AACAiD,YAAAA,IAAI,GAAGpF,GAAG,CAACqD,KAAJ,CAAUlB,KAAV,CAAP;AACH;;AACD,iBAAO,CAAC1L,iBAAiB,CAAC2O,IAAI,CAACmB,OAAN,CAAlB,IAAoC,CAACnB,IAAI,CAACmB,OAAjD,EAA0D;AACtDpE,YAAAA,KAAK,GAAGA,KAAK,GAAG,CAAhB;AACAiD,YAAAA,IAAI,GAAGpF,GAAG,CAACqD,KAAJ,CAAUlB,KAAV,CAAP;AACH;AACJ;;AACD,YAAIiD,IAAI,CAACwF,UAAT,EAAqB;AACjB,cAAIC,UAAU,GAAG,EAAjB;AACA;;AACA,cAAI,CAACpU,iBAAiB,CAAC2O,IAAI,CAAC5F,MAAL,CAAYsL,cAAb,CAAlB,IAAkD,CAACrU,iBAAiB,CAAC2O,IAAI,CAAC5F,MAAL,CAAYuL,oBAAb,CAApE,IAA0G,CAACtU,iBAAiB,CAAC2O,IAAI,CAAC5F,MAAL,CAAYwL,mBAAb,CAAhI,EAAmK;AAC/J;AACA,gBAAIvN,MAAM,GAAG,KAAKwN,mBAAL,CAAyBJ,UAAzB,EAAqCxE,CAArC,EAAwCmE,wBAAxC,EAAkEpF,IAAlE,CAAb;AACAyF,YAAAA,UAAU,GAAGpN,MAAM,CAACyN,gBAApB;AACAV,YAAAA,wBAAwB,GAAG/M,MAAM,CAAC+M,wBAAlC;AACA,gBAAIW,GAAG,GAAG,KAAK,CAAf;AACA,gBAAInR,IAAI,GAAGgG,GAAG,CAAChG,IAAJ,CAASoL,IAAI,CAAC5F,MAAL,CAAYgD,KAAZ,GAAoB4C,IAAI,CAAC5F,MAAL,CAAYgD,KAAhC,GAAwC4C,IAAI,CAAC5F,MAAL,CAAY4L,UAA7D,CAAX;;AACA,gBAAI,KAAK7T,MAAL,CAAY8T,OAAZ,IAAuB,KAAK9T,MAAL,CAAY+T,KAAvC,EAA8C;AAC1CH,cAAAA,GAAG,GAAIN,UAAU,CAACrU,YAAY,CAACI,QAAD,EAAWwO,IAAI,CAACK,QAAhB,CAAb,CAAV,CAAkDzL,IAAlD,EAAwD,KAAKzC,MAA7D,CAAP;;AACA,kBAAI,KAAKA,MAAL,CAAY8T,OAAhB,EAAyB;AACrB,qBAAK9T,MAAL,CAAYgU,eAAZ;AACH;AACJ,aALD,MAMK;AACDJ,cAAAA,GAAG,GAAIN,UAAU,CAACrU,YAAY,CAACI,QAAD,EAAWwO,IAAI,CAACK,QAAhB,CAAb,CAAV,CAAkDzL,IAAlD,CAAP;AACH;;AACDyI,YAAAA,KAAK,CAACrH,IAAN,CAAW+P,GAAG,CAAC,CAAD,CAAH,CAAOK,WAAlB;AACAf,YAAAA,OAAO,GAAG,KAAV;AACH,WAlBD,MAmBK;AACD;AACA,gBAAIhN,MAAM,GAAG,KAAKgO,yBAAL,CAA+BzL,GAAG,CAAChG,IAAJ,CAASoL,IAAI,CAAC5F,MAAL,CAAYgD,KAArB,CAA/B,CAAb;;AACA,gBAAI,CAAC/L,iBAAiB,CAACgH,MAAD,CAAtB,EAAgC;AAC5BgF,cAAAA,KAAK,CAACrH,IAAN,CAAWqC,MAAX;AACH;AACJ;AACJ,SA7BD,MA8BK;AACDgF,UAAAA,KAAK,CAACrH,IAAN,CAAW,EAAX;AACH;;AACD,YAAIqP,OAAO,IAAIhI,KAAK,CAAC4D,CAAD,CAAL,KAAa,EAAxB,IAA8B,CAAC5P,iBAAiB,CAACgM,KAAK,CAAC4D,CAAD,CAAN,CAAhD,IAA8D5D,KAAK,CAAC4D,CAAD,CAAL,KAAa,IAA/E,EAAqF;AACjFoE,UAAAA,OAAO,GAAG,KAAV;AACH;;AACDtI,QAAAA,KAAK,IAAI,CAAT;AACH;;AACD,UAAIiI,SAAJ,EAAe;AACX,aAAK,IAAI/D,CAAC,GAAI,KAAK9O,MAAL,CAAYyG,aAAZ,CAA0BN,OAA1B,CAAkCO,MAAnC,GAA6C,CAA1D,EAA6DoI,CAAC,GAAG5D,KAAK,CAACxE,MAAN,GAAe,CAAhF,EAAmFoI,CAAC,EAApF,EAAwF;AACpF5D,UAAAA,KAAK,CAAC4D,CAAD,CAAL,GAAW5D,KAAK,CAAC4D,CAAC,GAAG,CAAL,CAAhB;AACH;AACJ;;AACD,UAAI,CAACoE,OAAL,EAAc;AACV,YAAI,CAACL,SAAL,EAAgB;AACZ,cAAIsB,OAAO,GAAG7P,OAAO,CAACiD,IAAR,CAAamB,MAAb,EAAd;AACAyL,UAAAA,OAAO,CAACxL,KAAR,CAAcC,SAAd,CAAwB9B,MAAxB;AACAqN,UAAAA,OAAO,CAACxL,KAAR,CAAcuD,OAAd,CAAsBlF,IAAtB;AACAmN,UAAAA,OAAO,CAACxL,KAAR,CAAcwD,YAAd,CAA2BjF,KAA3B;AACAiN,UAAAA,OAAO,CAACxL,KAAR,CAAcyD,kBAAd,CAAiCxE,eAAjC;AACA;;AACA,cAAI/E,IAAI,GAAG;AAAE4F,YAAAA,GAAG,EAAEA,GAAP;AAAYN,YAAAA,IAAI,EAAEuE,eAAe,GAAG,aAAH,GAAmB,QAApD;AAA8D/D,YAAAA,KAAK,EAAEwL,OAAO,CAACrI;AAA7E,WAAX;AACA,eAAK9L,MAAL,CAAY+B,OAAZ,CAAoB9E,MAAM,CAACmW,yBAA3B,EAAsDvQ,IAAtD;;AACA,eAAK,IAAIiM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGxK,OAAO,CAAC6B,OAAR,CAAgBuF,KAApC,EAA2CoD,CAAC,EAA5C,EAAgD;AAC5CqF,YAAAA,OAAO,CAACrI,KAAR,CAAcC,OAAd,CAAsB+C,CAAtB,EAAyB5D,KAAzB,GAAiCA,KAAK,CAAC4D,CAAD,CAAL,CAAS2C,QAAT,EAAjC;AACH;AACJ,SAZD,MAaK;AACD,eAAK,IAAI3C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGxK,OAAO,CAAC6B,OAAR,CAAgBuF,KAApC,EAA2CoD,CAAC,EAA5C,EAAgD;AAC5CgE,YAAAA,UAAU,CAAChH,KAAX,CAAiBC,OAAjB,CAAyB+C,CAAzB,EAA4B5D,KAA5B,GAAoCA,KAAK,CAAC4D,CAAD,CAAL,CAAS2C,QAAT,EAApC;;AACA,gBAAI3C,CAAC,KAAMjE,UAAU,GAAG,CAApB,IAA0BoI,wBAAwB,KAAK,CAAC,CAAxD,IAA6DA,wBAAwB,KAAK,CAA9F,EAAiG;AAC7FH,cAAAA,UAAU,CAAChH,KAAX,CAAiBC,OAAjB,CAAyB+C,CAAzB,EAA4BvC,UAA5B,GAAyC0G,wBAAwB,IAAIpI,UAAU,GAAG,CAAjB,CAAjE;AACH,aAFD,MAGK,IAAIiE,CAAC,KAAMjE,UAAU,GAAG,CAApB,IAA0BoI,wBAAwB,KAAK,CAAC,CAA5D,EAA+D;AAChEH,cAAAA,UAAU,CAAChH,KAAX,CAAiBC,OAAjB,CAAyB+C,CAAzB,EAA4BvC,UAA5B,GAAyCjI,OAAO,CAAC6B,OAAR,CAAgBuF,KAAhB,IAAyBb,UAAU,GAAG,CAAtC,CAAzC;AACH;AACJ;AACJ;AACJ;AACJ;AACJ,GAvHD;AAwHA;;;AACA9K,EAAAA,SAAS,CAACY,SAAV,CAAoB+S,mBAApB,GAA0C,UAAUJ,UAAV,EAAsB1I,KAAtB,EAA6BqI,wBAA7B,EAAuDpF,IAAvD,EAA6D;AACnG,QAAI,CAAC3O,iBAAiB,CAAC2O,IAAI,CAAC5F,MAAL,CAAYsL,cAAb,CAAlB,IAAkD1F,IAAI,CAACK,QAAL,KAAkB7O,QAAQ,CAAC+U,OAAjF,EAA0F;AACtFd,MAAAA,UAAU,CAACrU,YAAY,CAACI,QAAD,EAAWA,QAAQ,CAAC+U,OAApB,CAAb,CAAV,GAAuDpV,OAAO,CAAC6O,IAAI,CAAC5F,MAAL,CAAYsL,cAAb,CAA9D;AACH,KAFD,MAGK,IAAI,CAACrU,iBAAiB,CAAC2O,IAAI,CAAC5F,MAAL,CAAYuL,oBAAb,CAAtB,EAA0D;AAC3D,UAAIP,wBAAwB,KAAK,CAAC,CAAlC,EAAqC;AACjCA,QAAAA,wBAAwB,GAAGrI,KAA3B;AACH;;AACD0I,MAAAA,UAAU,CAACrU,YAAY,CAACI,QAAD,EAAWA,QAAQ,CAACgV,cAApB,CAAb,CAAV,GAA8DrV,OAAO,CAAC6O,IAAI,CAAC5F,MAAL,CAAYuL,oBAAb,CAArE;AACH,KALI,MAMA;AACDF,MAAAA,UAAU,CAACrU,YAAY,CAACI,QAAD,EAAWA,QAAQ,CAACiV,YAApB,CAAb,CAAV,GAA4DtV,OAAO,CAAC6O,IAAI,CAAC5F,MAAL,CAAYwL,mBAAb,CAAnE;AACH;;AACD,WAAO;AAAEE,MAAAA,gBAAgB,EAAEL,UAApB;AAAgCL,MAAAA,wBAAwB,EAAEA;AAA1D,KAAP;AACH,GAdD;AAeA;;;AACAlT,EAAAA,SAAS,CAACY,SAAV,CAAoBuT,yBAApB,GAAgD,UAAUzR,IAAV,EAAgB;AAC5D,QAAI,CAACvD,iBAAiB,CAACuD,IAAI,CAAC8R,GAAN,CAAtB,EAAkC;AAC9B,aAAO9R,IAAI,CAAC8R,GAAZ;AACH,KAFD,MAGK,IAAI,CAACrV,iBAAiB,CAACuD,IAAI,CAAC+R,OAAN,CAAtB,EAAsC;AACvC,aAAO/R,IAAI,CAAC+R,OAAZ;AACH,KAFI,MAGA,IAAI,CAACtV,iBAAiB,CAACuD,IAAI,CAACgS,GAAN,CAAtB,EAAkC;AACnC,aAAOhS,IAAI,CAACgS,GAAZ;AACH,KAFI,MAGA,IAAI,CAACvV,iBAAiB,CAACuD,IAAI,CAACiS,GAAN,CAAtB,EAAkC;AACnC,aAAOjS,IAAI,CAACiS,GAAZ;AACH,KAFI,MAGA,IAAI,CAACxV,iBAAiB,CAACuD,IAAI,CAACkS,KAAN,CAAtB,EAAoC;AACrC,aAAOlS,IAAI,CAACkS,KAAZ;AACH,KAFI,MAGA,IAAI,CAACzV,iBAAiB,CAACuD,IAAI,CAACmS,SAAN,CAAtB,EAAwC;AACzC,aAAOnS,IAAI,CAACmS,SAAZ;AACH,KAFI,MAGA,IAAI,CAAC1V,iBAAiB,CAACuD,IAAI,CAACoS,UAAN,CAAtB,EAAyC;AAC1C,aAAOpS,IAAI,CAACoS,UAAZ;AACH,KAFI,MAGA,IAAI,CAAC3V,iBAAiB,CAACuD,IAAI,CAACqS,MAAN,CAAtB,EAAqC;AACtC,aAAOrS,IAAI,CAACqS,MAAZ;AACH;AACJ,GAzBD;AA0BA;AACJ;AACA;;;AACI/U,EAAAA,SAAS,CAACY,SAAV,CAAoB6G,mBAApB,GAA0C,UAAUH,WAAV,EAAuB/C,OAAvB,EAAgC7D,MAAhC,EAAwCyD,IAAxC,EAA8CwB,uBAA9C,EAAuE;AAC7G,QAAIsN,UAAU,GAAG9O,IAAI,CAACuC,aAAL,CAAmBN,OAAnB,CAA2BO,MAA5C;;AACA,SAAK,IAAIoI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkE,UAApB,EAAgClE,CAAC,EAAjC,EAAqC;AACjCxK,MAAAA,OAAO,CAAC6B,OAAR,CAAgB4O,SAAhB,CAA0BjG,CAA1B,EAA6BT,KAA7B,GAAqC,EAArC;AACH;;AACD,SAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGzH,WAAW,CAACX,MAAhC,EAAwCoI,CAAC,EAAzC,EAA6C;AACzC,UAAI,CAAC5P,iBAAiB,CAACmI,WAAW,CAACyH,CAAD,CAAX,CAAeb,SAAhB,CAAtB,EAAkD;AAC9C3J,QAAAA,OAAO,CAAC6B,OAAR,CAAgB4O,SAAhB,CAA0BjG,CAAC,GAAGkE,UAA9B,EAA0CtB,MAA1C,GAAmD,KAAK3D,sBAAL,CAA4B1G,WAAW,CAACyH,CAAD,CAAX,CAAeb,SAA3C,CAAnD;AACH,OAHwC,CAIzC;;;AACA,UAAI3J,OAAO,CAACqE,KAAR,CAAcjD,uBAAd,IAAyC,CAACxG,iBAAiB,CAACmI,WAAW,CAACyH,CAAD,CAAX,CAAeT,KAAhB,CAA3D,IAAqF3I,uBAAzF,EAAkH;AAC9GpB,QAAAA,OAAO,CAAC6B,OAAR,CAAgB4O,SAAhB,CAA0BjG,CAAC,GAAGkE,UAA9B,EAA0C3E,KAA1C,GAAkD,OAAOhH,WAAW,CAACyH,CAAD,CAAX,CAAeT,KAAtB,KAAgC,QAAhC,GAC9ChH,WAAW,CAACyH,CAAD,CAAX,CAAeT,KAAf,GAAuB,IADuB,GAChB5N,MAAM,CAACuU,iBAAP,CAAyB3N,WAAW,CAACyH,CAAD,CAAX,CAAeT,KAAxC,IAAiD,IADnF;AAEH;AACJ;AACJ,GAfD;AAgBA;AACJ;AACA;AACA;;;AACItO,EAAAA,SAAS,CAACY,SAAV,CAAoBsU,mBAApB,GAA0C,UAAUxM,GAAV,EAAe3B,MAAf,EAAuB;AAC7D,QAAI,CAAC5H,iBAAiB,CAAC,KAAK4G,SAAN,CAAlB,IAAsC,CAAC5G,iBAAiB,CAAC,KAAK4G,SAAL,CAAewE,MAAhB,CAA5D,EAAqF;AACjF,UAAIvB,UAAU,GAAG,CAAC7J,iBAAiB,CAAC,KAAK4G,SAAL,CAAewE,MAAf,CAAsBtB,QAAvB,CAAlB,GACb,KAAKC,aAAL,CAAmB,KAAKnD,SAAL,CAAewE,MAAf,CAAsBtB,QAAzC,CADa,GACwCxL,aAAa,CAAC0L,SADvE;AAEA,UAAIJ,QAAQ,GAAG,CAAC5J,iBAAiB,CAAC,KAAK4G,SAAL,CAAewE,MAAf,CAAsBxB,QAAvB,CAAlB,GAAqD,KAAKhD,SAAL,CAAewE,MAAf,CAAsBxB,QAA3E,GAAsF,IAArG;AACA,UAAIK,SAAS,GAAG,KAAKC,YAAL,CAAkB,KAAKtD,SAAL,CAAewE,MAAjC,CAAhB;AACA,UAAItD,IAAI,GAAG,IAAIzJ,eAAJ,CAAoBwL,UAApB,EAAgCD,QAAhC,EAA0CK,SAA1C,CAAX;;AACA,UAAI,CAACjK,iBAAiB,CAAC,KAAK4G,SAAL,CAAewE,MAAf,CAAsBtD,IAAvB,CAAtB,EAAoD;AAChDA,QAAAA,IAAI,GAAG,KAAKlB,SAAL,CAAewE,MAAf,CAAsBtD,IAA7B;AACH;;AACDyB,MAAAA,GAAG,CAACE,KAAJ,CAAUuD,OAAV,CAAkBlF,IAAlB;AACA,UAAIqC,QAAQ,GAAG,IAAIxL,QAAJ,EAAf;;AACA,UAAI,CAACqB,iBAAiB,CAAC,KAAK4G,SAAL,CAAewE,MAAf,CAAsBhB,SAAvB,CAAtB,EAAyD;AACrD,YAAIC,aAAa,GAAG,KAAKC,QAAL,CAAc,KAAK1D,SAAL,CAAewE,MAAf,CAAsBhB,SAApC,CAApB;AACAD,QAAAA,QAAQ,GAAG,IAAIxL,QAAJ,CAAa0L,aAAa,CAACE,CAA3B,EAA8BF,aAAa,CAACG,CAA5C,EAA+CH,aAAa,CAACI,CAA7D,CAAX;AACH;;AACDlB,MAAAA,GAAG,CAACE,KAAJ,CAAUwD,YAAV,CAAuB,IAAIrO,aAAJ,CAAkBuL,QAAlB,CAAvB;AACH,KAhBD,MAiBK;AACDZ,MAAAA,GAAG,CAACE,KAAJ,CAAUwD,YAAV,CAAuB,IAAIrO,aAAJ,CAAkB,IAAID,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAlB,CAAvB;AACH;;AACD,QAAIqX,YAAY,GAAG,KAAKpP,SAAL,IAAkB,KAAKA,SAAL,CAAewE,MAAjC,IACf,KAAKxE,SAAL,CAAewE,MAAf,CAAsBxD,MADP,GACgB,KAAK+C,cAAL,CAAoB,KAAK/D,SAAL,CAAewE,MAAf,CAAsBxD,MAA1C,CADhB,GACoEA,MADvF;AAEA2B,IAAAA,GAAG,CAACE,KAAJ,CAAUC,SAAV,CAAoBsM,YAApB;AACA,WAAOzM,GAAP;AACH,GAzBD;AA0BA;AACJ;AACA;AACA;;;AACI1I,EAAAA,SAAS,CAACY,SAAV,CAAoBkH,aAApB,GAAoC,UAAUf,MAAV,EAAkBX,OAAlB,EAA2BjC,IAA3B,EAAiCV,UAAjC,EAA6Cc,OAA7C,EAAsD0O,UAAtD,EAAkEvR,mBAAlE,EAAuFhB,MAAvF,EAA+FkO,QAA/F,EAAyG;AACzI,QAAIpH,IAAI,GAAG9G,MAAM,CAAC0U,eAAP,CAAuBhP,OAAvB,EAAgC3C,UAAhC,EAA4CU,IAA5C,EAAkDyK,QAAlD,CAAX;;AACA,SAAK,IAAIhC,EAAE,GAAG,CAAT,EAAYyI,MAAM,GAAG7N,IAA1B,EAAgCoF,EAAE,GAAGyI,MAAM,CAAC1O,MAA5C,EAAoDiG,EAAE,EAAtD,EAA0D;AACtD,UAAIlE,GAAG,GAAG2M,MAAM,CAACzI,EAAD,CAAhB;AACAgC,MAAAA,QAAQ,GAF8C,CAGtD;;AACA,UAAIwF,OAAO,GAAG,KAAKc,mBAAL,CAAyB3Q,OAAO,CAACiD,IAAR,CAAamB,MAAb,EAAzB,EAAgD5B,MAAhD,CAAd;AACA,UAAIuO,UAAU,GAAG5M,GAAG,CAACqD,KAAJ,CAAUpF,MAA3B;;AACA,WAAK,IAAI4O,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,UAApB,EAAgCC,CAAC,EAAjC,EAAqC;AACjC,YAAIhH,QAAQ,GAAG7F,GAAG,CAACqD,KAAJ,CAAUwJ,CAAV,CAAf;;AACA,YAAIhH,QAAQ,CAACJ,QAAT,KAAsB7O,QAAQ,CAACT,IAAnC,EAAyC;AACrC;AACH;;AACD,YAAIqJ,MAAM,GAAGqG,QAAQ,CAACrG,MAAtB;AACA,YAAIgD,KAAK,GAAGhD,MAAM,CAACgD,KAAnB;AACA,YAAIsK,SAAS,GAAG,CAACrW,iBAAiB,CAAC+L,KAAD,CAAlB,GAA4BhD,MAAM,CAACuN,aAAP,CAAqBvK,KAArB,EAA4BxC,GAAG,CAAChG,IAAhC,EAAsCwF,MAAtC,CAA5B,GAA4E,EAA5F;AACA,YAAIiD,KAAK,GAAG,CAAChM,iBAAiB,CAACqW,SAAD,CAAlB,GAAgCA,SAAhC,GAA4C,EAAxD;AACA,YAAIE,cAAc,GAAG,KAAK,CAA1B;;AACA,YAAIxN,MAAM,CAACoD,eAAP,IAA0BpD,MAAM,CAACoD,eAAP,EAA9B,EAAwD;AACpDoK,UAAAA,cAAc,GAAGhV,MAAM,CAACiV,QAAP,CAAgBxK,KAAhB,EAAuBjD,MAAvB,CAAjB;AACAiD,UAAAA,KAAK,GAAG1L,QAAQ,CAACyI,MAAM,CAAC0N,eAAR,EAAyBF,cAAzB,CAAhB;AACH;;AACD,YAAIhT,IAAI,GAAGgG,GAAG,CAAChG,IAAf;AACA,YAAIoL,IAAI,GAAGsG,OAAO,CAACrI,KAAR,CAAcC,OAAd,CAAsBuJ,CAAtB,CAAX;AACA,YAAIzS,IAAI,GAAG;AACPJ,UAAAA,IAAI,EAAEA,IADC;AAEPyI,UAAAA,KAAK,EAAEA,KAFA;AAGPjD,UAAAA,MAAM,EAAEA,MAHD;AAIPU,UAAAA,KAAK,EAAE1H,SAJA;AAKPwM,UAAAA,OAAO,EAAE,CALF;AAMPI,UAAAA,IAAI,EAAEA;AANC,SAAX;AAQAhL,QAAAA,IAAI,CAACqI,KAAL,GAAa,KAAKpK,oBAAL,CAA0B2K,eAA1B,CAA0C5I,IAA1C,EAAgDqB,IAAI,CAAC0R,gBAArD,CAAb;AACA,aAAK5V,MAAL,CAAY+B,OAAZ,CAAoB9E,MAAM,CAAC4Y,gBAA3B,EAA6ChT,IAA7C;AACAgL,QAAAA,IAAI,CAAC3C,KAAL,GAAarI,IAAI,CAACqI,KAAlB;;AACA,YAAI,CAAChM,iBAAiB,CAAC2D,IAAI,CAAC8F,KAAN,CAAtB,EAAoC;AAChC,eAAKmN,gBAAL,CAAsBjI,IAAtB,EAA4BhL,IAA5B;AACH;;AACD,YAAIA,IAAI,CAAC4K,OAAL,GAAe,CAAnB,EAAsB;AAClB,cAAK6H,CAAC,GAAG,CAAJ,GAAQzS,IAAI,CAAC4K,OAAd,GAAyB0G,OAAO,CAACrI,KAAR,CAAcJ,KAA3C,EAAkD;AAC9C7I,YAAAA,IAAI,CAAC4K,OAAL,GAAe0G,OAAO,CAACrI,KAAR,CAAcJ,KAAd,IAAuB4J,CAAC,GAAG,CAA3B,CAAf;AACH;;AACDzH,UAAAA,IAAI,CAACtB,UAAL,GAAkB1J,IAAI,CAAC4K,OAAvB;;AACA,eAAK,IAAIqB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjB,IAAI,CAACtB,UAAzB,EAAqCuC,CAAC,EAAtC,EAA0C;AACtC,gBAAIiH,QAAQ,GAAG5B,OAAO,CAACrI,KAAR,CAAcC,OAAd,CAAsBuJ,CAAC,GAAGxG,CAA1B,CAAf;AACAiH,YAAAA,QAAQ,CAAC7K,KAAT,GAAiB,EAAjB;AACH;;AACDoK,UAAAA,CAAC,IAAKzS,IAAI,CAAC4K,OAAL,GAAe,CAArB;AACH;AACJ;;AACD,UAAIhF,GAAG,CAACuN,QAAR,EAAkB;AACd,YAAIC,SAAS,GAAG,KAAKhB,mBAAL,CAAyB3Q,OAAO,CAACiD,IAAR,CAAamB,MAAb,EAAzB,EAAgD5B,MAAhD,CAAhB;AACA,YAAI+G,IAAI,GAAGoI,SAAS,CAACnK,KAAV,CAAgBC,OAAhB,CAAwBiH,UAAxB,CAAX;AACAnF,QAAAA,IAAI,CAACtB,UAAL,GAAkB0J,SAAS,CAACnK,KAAV,CAAgBJ,KAAhB,GAAyBsH,UAA3C;AACAnF,QAAAA,IAAI,CAAClF,KAAL,CAAWuN,WAAX,GAAyB,IAAI5Y,WAAJ,CAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB,EAA4B,EAA5B,CAAzB;AACA4G,QAAAA,IAAI,CAACiS,UAAL,GAAkB,IAAlB;AACA,YAAIzS,UAAU,GAAI,CAACxE,iBAAiB,CAACuC,mBAAD,CAAlB,IAA2CA,mBAAmB,CAACiC,UAAhE,GACbjC,mBAAmB,CAACiC,UADP,GACoB,UADrC;AAEA,YAAIyD,WAAW,GAAG,KAAK1G,MAAL,CAAY2V,eAAZ,CAA4BlS,IAA5B,EAAkCuE,GAAlC,EAAuC/E,UAAvC,EAAmD,KAAKhD,QAAxD,CAAlB;AACA,YAAI2V,YAAY,GAAGlP,WAAW,CAACzE,SAA/B;AACA,YAAIuN,OAAO,GAAG9I,WAAW,CAAC8I,OAA1B;AACAoG,QAAAA,YAAY,CAAC9T,aAAb,GACI9B,MAAM,CAAC6V,cAAP,CAAsB,KAAK5V,QAA3B,EAAqC2V,YAArC,EAAmD,KAAK1R,aAAxD,CADJ;AAEA,YAAI9B,IAAI,GAAG;AAAEH,UAAAA,SAAS,EAAE2T,YAAb;AAA2B5N,UAAAA,GAAG,EAAEA,GAAhC;AAAqCoF,UAAAA,IAAI,EAAEA,IAA3C;AAAiD0I,UAAAA,gBAAgB,EAAE9U;AAAnE,SAAX;AACA,aAAKzB,MAAL,CAAY+B,OAAZ,CAAoB9E,MAAM,CAACuZ,qBAA3B,EAAkD3T,IAAlD;AACAwT,QAAAA,YAAY,CAACI,eAAb,GAA+B,KAAKC,aAAL,CAAmB7I,IAAnB,EAAyBwI,YAAzB,EAAuC5U,mBAAvC,CAA/B;AACA4U,QAAAA,YAAY,CAACM,QAAb,CAAsB1G,OAAtB;AACH;;AACD,WAAKjQ,MAAL,CAAY4W,MAAZ,CAAmB3Z,MAAM,CAAC4Z,kBAA1B,EAA8C;AAAE1O,QAAAA,IAAI,EAAE,KAAR;AAAe2O,QAAAA,MAAM,EAAErO;AAAvB,OAA9C;AACH;;AACD,WAAOkG,QAAP;AACH,GAvED;;AAwEA5O,EAAAA,SAAS,CAACY,SAAV,CAAoB+V,aAApB,GAAoC,UAAU7I,IAAV,EAAgBwI,YAAhB,EAA8B5U,mBAA9B,EAAmD;AACnF,QAAIG,KAAK,GAAG,IAAZ;;AACA,WAAO,UAAUsE,MAAV,EAAkB;AACrBmQ,MAAAA,YAAY,CAACI,eAAb,GAA+B,IAA/B;AACAvQ,MAAAA,MAAM,CAACnD,MAAP,GAAgB,IAAhB;AACA8K,MAAAA,IAAI,CAAC3C,KAAL,GAAatJ,KAAK,CAAC8C,iBAAN,CAAwB2R,YAAxB,EAAsCnQ,MAAtC,EAA8CzE,mBAA9C,CAAb;AACA4U,MAAAA,YAAY,CAACpR,OAAb;AACA9F,MAAAA,MAAM,CAACkX,YAAY,CAACpG,OAAd,CAAN;AACArO,MAAAA,KAAK,CAAClB,QAAN,CAAe2V,YAAY,CAAClV,EAA5B,IAAkC,IAAlC;;AACAS,MAAAA,KAAK,CAACnB,MAAN,CAAamE,cAAb,CAA4BhD,KAAK,CAAClB,QAAlC,EAA4CkB,KAAK,CAAC+C,aAAlD;;AACA,aAAOkJ,IAAP;AACH,KATD;AAUH,GAZD;;AAaA9N,EAAAA,SAAS,CAACY,SAAV,CAAoBmV,gBAApB,GAAuC,UAAUjI,IAAV,EAAgBhL,IAAhB,EAAsB;AACzD,QAAI,CAAC3D,iBAAiB,CAAC2D,IAAI,CAAC8F,KAAL,CAAWoO,eAAZ,CAAtB,EAAoD;AAChD,UAAIC,SAAS,GAAG,KAAKxN,QAAL,CAAc3G,IAAI,CAAC8F,KAAL,CAAWoO,eAAzB,CAAhB;AACAlJ,MAAAA,IAAI,CAAClF,KAAL,CAAWf,eAAX,GAA6B,IAAI9J,aAAJ,CAAkB,IAAID,QAAJ,CAAamZ,SAAS,CAACvN,CAAvB,EAA0BuN,SAAS,CAACtN,CAApC,EAAuCsN,SAAS,CAACrN,CAAjD,CAAlB,CAA7B;AACH;;AACD,QAAI,CAACzK,iBAAiB,CAAC2D,IAAI,CAAC8F,KAAL,CAAWsO,aAAZ,CAAtB,EAAkD;AAC9CpJ,MAAAA,IAAI,CAAClF,KAAL,CAAWqD,YAAX,GAA0B,KAAK+B,sBAAL,CAA4BlL,IAAI,CAAC8F,KAAL,CAAWsO,aAAvC,CAA1B;AACH;;AACD,QAAI,CAAC/X,iBAAiB,CAAC2D,IAAI,CAAC8F,KAAL,CAAWuN,WAAZ,CAAtB,EAAgD;AAC5CrI,MAAAA,IAAI,CAAClF,KAAL,CAAWuN,WAAX,GAAyBrT,IAAI,CAAC8F,KAAL,CAAWuN,WAApC;AACH;;AACD,QAAI,CAAChX,iBAAiB,CAAC2D,IAAI,CAAC8F,KAAL,CAAWuO,iBAAZ,CAAtB,EAAsD;AAClDrJ,MAAAA,IAAI,CAAClF,KAAL,CAAWqD,YAAX,GAA0B,KAAKgC,oBAAL,CAA0BnL,IAAI,CAAC8F,KAAL,CAAWuO,iBAArC,EAAwDrJ,IAAI,CAAClF,KAAL,CAAWqD,YAAnE,CAA1B;AACH;;AACD,QAAI,CAAC9M,iBAAiB,CAAC2D,IAAI,CAAC8F,KAAL,CAAWmJ,cAAZ,CAAtB,EAAmD;AAC/C,UAAIA,cAAc,GAAG,KAAKtI,QAAL,CAAc3G,IAAI,CAAC8F,KAAL,CAAWmJ,cAAzB,CAArB;AACAjE,MAAAA,IAAI,CAAClF,KAAL,CAAWwO,SAAX,GAAuB,IAAIrZ,aAAJ,CAAkB,IAAID,QAAJ,CAAaiU,cAAc,CAACrI,CAA5B,EAA+BqI,cAAc,CAACpI,CAA9C,EAAiDoI,cAAc,CAACnI,CAAhE,CAAlB,CAAvB;AACH;;AACD,QAAI,CAACzK,iBAAiB,CAAC2D,IAAI,CAAC8F,KAAL,CAAW4I,YAAZ,CAAtB,EAAiD;AAC7C,UAAIA,YAAY,GAAG,KAAK/H,QAAL,CAAc3G,IAAI,CAAC8F,KAAL,CAAW4I,YAAzB,CAAnB;AACA1D,MAAAA,IAAI,CAAClF,KAAL,CAAWyO,OAAX,GAAqB,IAAI/Z,MAAJ,CAAW,IAAIQ,QAAJ,CAAa0T,YAAY,CAAC9H,CAA1B,EAA6B8H,YAAY,CAAC7H,CAA1C,EAA6C6H,YAAY,CAAC5H,CAA1D,CAAX,CAArB;AACH;;AACD,QAAI,CAACzK,iBAAiB,CAAC2D,IAAI,CAAC8F,KAAL,CAAWI,UAAZ,CAAlB,IAA6C,CAAC7J,iBAAiB,CAAC2D,IAAI,CAAC8F,KAAL,CAAWG,QAAZ,CAA/D,IAAwF,CAAC5J,iBAAiB,CAAC2D,IAAI,CAAC8F,KAAL,CAAW0O,IAAZ,CAA1G,IACA,CAACnY,iBAAiB,CAAC2D,IAAI,CAAC8F,KAAL,CAAW2O,MAAZ,CADlB,IACyC,CAACpY,iBAAiB,CAAC2D,IAAI,CAAC8F,KAAL,CAAW4O,SAAZ,CAD3D,IACqF,CAACrY,iBAAiB,CAAC2D,IAAI,CAAC8F,KAAL,CAAW6O,SAAZ,CAD3G,EACmI;AAC/H3J,MAAAA,IAAI,CAAClF,KAAL,CAAW3B,IAAX,GAAkB,KAAKoK,OAAL,CAAavO,IAAb,CAAlB;AACH;;AACD,QAAI,CAAC3D,iBAAiB,CAAC2D,IAAI,CAAC8F,KAAL,CAAW7B,MAAZ,CAAtB,EAA2C;AACvC,UAAIA,MAAM,GAAG,IAAI1J,UAAJ,EAAb;AACA,UAAIqa,WAAW,GAAG5U,IAAI,CAAC8F,KAAL,CAAW7B,MAAX,CAAkBuH,KAApC,CAFuC,CAGvC;;AACA,UAAIA,KAAK,GAAI,CAACnP,iBAAiB,CAACuY,WAAD,CAAlB,IAAmC,OAAOA,WAAP,KAAuB,QAA3D,GAAwEA,WAAW,GAAG,IAAtF,GAA+FxW,SAA3G,CAJuC,CAKvC;;AACA,UAAIyW,KAAK,GAAG,IAAI7Z,QAAJ,CAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,CAAZ;;AACA,UAAI,CAACqB,iBAAiB,CAAC2D,IAAI,CAAC8F,KAAL,CAAW7B,MAAX,CAAkB4Q,KAAnB,CAAtB,EAAiD;AAC7C,YAAIC,WAAW,GAAG,KAAKnO,QAAL,CAAc3G,IAAI,CAAC8F,KAAL,CAAW7B,MAAX,CAAkB4Q,KAAhC,CAAlB;AACAA,QAAAA,KAAK,GAAG,IAAI7Z,QAAJ,CAAa8Z,WAAW,CAAClO,CAAzB,EAA4BkO,WAAW,CAACjO,CAAxC,EAA2CiO,WAAW,CAAChO,CAAvD,CAAR;AACH;;AACD,UAAI2H,GAAG,GAAG,IAAIjU,MAAJ,CAAWqa,KAAX,EAAkBrJ,KAAlB,CAAV,CAXuC,CAYvC;;AACA,UAAI,CAACnP,iBAAiB,CAAC2D,IAAI,CAAC8F,KAAL,CAAW7B,MAAX,CAAkB6L,SAAnB,CAAtB,EAAqD;AACjDrB,QAAAA,GAAG,CAACqB,SAAJ,GAAgB,KAAKC,YAAL,CAAkB/P,IAAI,CAAC8F,KAAL,CAAW7B,MAAX,CAAkB6L,SAApC,CAAhB;AACH;;AACD7L,MAAAA,MAAM,CAAC7C,GAAP,GAAaqN,GAAb;AACAzD,MAAAA,IAAI,CAAClF,KAAL,CAAWiP,OAAX,GAAqB9Q,MAArB;AACH;;AACD,QAAI,CAAC5H,iBAAiB,CAAC2D,IAAI,CAAC8F,KAAL,CAAWkP,eAAZ,CAAtB,EAAoD;AAChDhK,MAAAA,IAAI,CAAClF,KAAL,CAAWqD,YAAX,GAA0B,IAAIrO,eAAJ,EAA1B;AACAkQ,MAAAA,IAAI,CAAClF,KAAL,CAAWqD,YAAX,CAAwB6L,eAAxB,GAA0ChV,IAAI,CAAC8F,KAAL,CAAWkP,eAArD;AACH;AACJ,GAjDD;AAkDA;AACJ;AACA;AACA;;;AACI9X,EAAAA,SAAS,CAACY,SAAV,CAAoBoN,sBAApB,GAA6C,UAAUE,SAAV,EAAqByD,MAArB,EAA6B;AACtE,QAAIA,MAAM,KAAKzQ,SAAf,EAA0B;AACtByQ,MAAAA,MAAM,GAAG,IAAI/T,eAAJ,EAAT;AACH;;AACD,YAAQsQ,SAAR;AACI,WAAK,OAAL;AACIyD,QAAAA,MAAM,CAACoG,SAAP,GAAmBla,gBAAgB,CAACma,KAApC;AACA;;AACJ,WAAK,QAAL;AACIrG,QAAAA,MAAM,CAACoG,SAAP,GAAmBla,gBAAgB,CAACoa,MAApC;AACA;;AACJ,WAAK,SAAL;AACItG,QAAAA,MAAM,CAACoG,SAAP,GAAmBla,gBAAgB,CAACqa,OAApC;AACA;;AACJ,WAAK,MAAL;AACIvG,QAAAA,MAAM,CAACoG,SAAP,GAAmBla,gBAAgB,CAACqO,IAApC;AACA;AAZR;;AAcA,WAAOyF,MAAP;AACH,GAnBD;AAoBA;AACJ;AACA;AACA;;;AACI3R,EAAAA,SAAS,CAACY,SAAV,CAAoBqN,oBAApB,GAA2C,UAAUkK,aAAV,EAAyBxG,MAAzB,EAAiCzD,SAAjC,EAA4C;AACnF,QAAIyD,MAAM,KAAKzQ,SAAf,EAA0B;AACtByQ,MAAAA,MAAM,GAAG,IAAI/T,eAAJ,EAAT;AACA+T,MAAAA,MAAM,GAAG,KAAK3D,sBAAL,CAA4BE,SAA5B,EAAuCyD,MAAvC,CAAT;AACH;;AACD,YAAQwG,aAAR;AACI,WAAK,QAAL;AACIxG,QAAAA,MAAM,CAACyG,aAAP,GAAuBpa,oBAAoB,CAACqa,MAA5C;AACA;;AACJ,WAAK,QAAL;AACI1G,QAAAA,MAAM,CAACyG,aAAP,GAAuBpa,oBAAoB,CAACsa,MAA5C;AACA;;AACJ,WAAK,KAAL;AACI3G,QAAAA,MAAM,CAACyG,aAAP,GAAuBpa,oBAAoB,CAACua,GAA5C;AACA;AATR;;AAWA,WAAO5G,MAAP;AACH,GAjBD;;AAkBA3R,EAAAA,SAAS,CAACY,SAAV,CAAoBsI,aAApB,GAAoC,UAAUF,UAAV,EAAsB;AACtD,YAAQA,UAAR;AACI,WAAK,YAAL;AACI,eAAO,CAAP;;AACJ,WAAK,SAAL;AACI,eAAO,CAAP;;AACJ,WAAK,QAAL;AACI,eAAO,CAAP;;AACJ,WAAK,cAAL;AACI,eAAO,CAAP;;AACJ;AACI,eAAO,CAAP;AAVR;AAYH,GAbD;AAcA;;;AACAhJ,EAAAA,SAAS,CAACY,SAAV,CAAoByQ,OAApB,GAA8B,UAAUhB,OAAV,EAAmB;AAC7C,QAAIA,OAAO,CAACpJ,IAAZ,EAAkB;AACd,aAAOoJ,OAAO,CAACpJ,IAAf;AACH;;AACD,QAAI8B,QAAQ,GAAI,CAAC5J,iBAAiB,CAACkR,OAAO,CAACzH,KAAR,CAAcG,QAAf,CAAnB,GAAgDsH,OAAO,CAACzH,KAAR,CAAcG,QAAd,GAAyB,IAAzE,GAAiF,IAAhG;AACA,QAAIC,UAAU,GAAI,CAAC7J,iBAAiB,CAACkR,OAAO,CAACzH,KAAR,CAAcI,UAAf,CAAnB,GACZ,KAAKE,aAAL,CAAmBmH,OAAO,CAACzH,KAAR,CAAcI,UAAjC,CADY,GACoCvL,aAAa,CAAC+a,UADnE;AAEA,QAAIpP,SAAS,GAAG1L,YAAY,CAAC+a,OAA7B;;AACA,QAAI,CAACtZ,iBAAiB,CAACkR,OAAO,CAACzH,KAAR,CAAc0O,IAAf,CAAlB,IAA0CjH,OAAO,CAACzH,KAAR,CAAc0O,IAA5D,EAAkE;AAC9DlO,MAAAA,SAAS,IAAI1L,YAAY,CAACgb,IAA1B;AACH;;AACD,QAAI,CAACvZ,iBAAiB,CAACkR,OAAO,CAACzH,KAAR,CAAc2O,MAAf,CAAlB,IAA4ClH,OAAO,CAACzH,KAAR,CAAc2O,MAA9D,EAAsE;AAClEnO,MAAAA,SAAS,IAAI1L,YAAY,CAACib,MAA1B;AACH;;AACD,QAAI,CAACxZ,iBAAiB,CAACkR,OAAO,CAACzH,KAAR,CAAc4O,SAAf,CAAlB,IAA+CnH,OAAO,CAACzH,KAAR,CAAc4O,SAAjE,EAA4E;AACxEpO,MAAAA,SAAS,IAAI1L,YAAY,CAACkb,SAA1B;AACH;;AACD,QAAI,CAACzZ,iBAAiB,CAACkR,OAAO,CAACzH,KAAR,CAAc6O,SAAf,CAAlB,IAA+CpH,OAAO,CAACzH,KAAR,CAAc6O,SAAjE,EAA4E;AACxErO,MAAAA,SAAS,IAAI1L,YAAY,CAACmb,SAA1B;AACH;;AACD,WAAO,IAAIrb,eAAJ,CAAoBwL,UAApB,EAAgCD,QAAhC,EAA0CK,SAA1C,CAAP;AACH,GArBD;;AAsBApJ,EAAAA,SAAS,CAACY,SAAV,CAAoBuR,kBAApB,GAAyC,UAAUC,cAAV,EAA0B;AAC/D,YAAQA,cAAR;AACI,WAAK,YAAL;AACI,eAAO,CAAP;;AACJ,WAAK,YAAL;AACI,eAAO,CAAP;;AACJ,WAAK,YAAL;AACI,eAAO,CAAP;;AACJ,WAAK,YAAL;AACI,eAAO,CAAP;;AACJ;AACI,eAAO,CAAP;AAVR;AAYH,GAbD;;AAcApS,EAAAA,SAAS,CAACY,SAAV,CAAoBgR,gBAApB,GAAuC,UAAUvB,OAAV,EAAmBsB,MAAnB,EAA2B;AAC9D,QAAI,CAACxS,iBAAiB,CAACkR,OAAO,CAAC7K,IAAT,CAAtB,EAAsC;AAClC,UAAI8I,KAAK,GAAG+B,OAAO,CAAC7K,IAAR,CAAa8I,KAAb,GAAqB,IAAjC;AACA,UAAIgB,MAAM,GAAGe,OAAO,CAAC7K,IAAR,CAAa8J,MAAb,GAAsB,IAAnC;AACAqC,MAAAA,MAAM,GAAG,IAAI/T,eAAJ,CAAoBC,gBAAgB,CAACqO,IAArC,EAA2ClO,oBAAoB,CAACsa,MAAhE,CAAT;;AACA,UAAI,CAACnZ,iBAAiB,CAACkR,OAAO,CAACzH,KAAR,CAAckQ,MAAf,CAAtB,EAA8C;AAC1C,gBAAQzI,OAAO,CAACzH,KAAR,CAAckQ,MAAtB;AACI,eAAK,OAAL;AACInH,YAAAA,MAAM,CAACoG,SAAP,GAAmBla,gBAAgB,CAACma,KAApC;AACA;;AACJ,eAAK,QAAL;AACIrG,YAAAA,MAAM,CAACoG,SAAP,GAAmBla,gBAAgB,CAACoa,MAApC;AACA;;AACJ,eAAK,SAAL;AACItG,YAAAA,MAAM,CAACoG,SAAP,GAAmBla,gBAAgB,CAACqa,OAApC;AACA;;AACJ;AACIvG,YAAAA,MAAM,CAACoG,SAAP,GAAmBla,gBAAgB,CAACqO,IAApC;AAXR;AAaH;;AACD,UAAI,CAAC/M,iBAAiB,CAACkR,OAAO,CAACzH,KAAR,CAAcmQ,MAAf,CAAtB,EAA8C;AAC1CpH,QAAAA,MAAM,GAAG,KAAK1D,oBAAL,CAA0BoC,OAAO,CAACzH,KAAR,CAAcmQ,MAAxC,EAAgDpH,MAAhD,CAAT;AACH;;AACD,aAAO;AAAEA,QAAAA,MAAM,EAAEA,MAAV;AAAkBnM,QAAAA,IAAI,EAAE,IAAIjH,KAAJ,CAAU+P,KAAV,EAAiBgB,MAAjB;AAAxB,OAAP;AACH;;AACD,WAAO,IAAP;AACH,GA1BD;;AA2BAtP,EAAAA,SAAS,CAACY,SAAV,CAAoB6E,WAApB,GAAkC,UAAUL,QAAV,EAAoB;AAClD,YAAQA,QAAR;AACI,WAAK,QAAL;AACI,eAAO,IAAI7G,KAAJ,CAAU,GAAV,EAAe,GAAf,CAAP;;AACJ,WAAK,MAAL;AACI,eAAO,IAAIA,KAAJ,CAAU,GAAV,EAAe,GAAf,CAAP;;AACJ,WAAK,OAAL;AACI,eAAO,IAAIA,KAAJ,CAAU,GAAV,EAAe,IAAf,CAAP;;AACJ,WAAK,IAAL;AACI,eAAO,IAAIA,KAAJ,CAAU,IAAV,EAAgB,IAAhB,CAAP;;AACJ,WAAK,IAAL;AACI,eAAO,IAAIA,KAAJ,CAAU,IAAV,EAAgB,IAAhB,CAAP;;AACJ,WAAK,IAAL;AACI,eAAO,IAAIA,KAAJ,CAAU,IAAV,EAAgB,IAAhB,CAAP;;AACJ,WAAK,IAAL;AACI,eAAO,IAAIA,KAAJ,CAAU,GAAV,EAAe,IAAf,CAAP;;AACJ,WAAK,IAAL;AACI,eAAO,IAAIA,KAAJ,CAAU,GAAV,EAAe,GAAf,CAAP;;AACJ,WAAK,IAAL;AACI,eAAO,IAAIA,KAAJ,CAAU,GAAV,EAAe,GAAf,CAAP;;AACJ,WAAK,IAAL;AACI,eAAO,IAAIA,KAAJ,CAAU,GAAV,EAAe,GAAf,CAAP;;AACJ,WAAK,IAAL;AACI,eAAO,IAAIA,KAAJ,CAAU,GAAV,EAAe,GAAf,CAAP;;AACJ,WAAK,IAAL;AACI,eAAO,IAAIA,KAAJ,CAAU,GAAV,EAAe,GAAf,CAAP;AACJ;AACA;;AACA,WAAK,IAAL;AACI,eAAO,IAAIA,KAAJ,CAAU,IAAV,EAAgB,IAAhB,CAAP;;AACJ,WAAK,IAAL;AACI,eAAO,IAAIA,KAAJ,CAAU,IAAV,EAAgB,IAAhB,CAAP;;AACJ,WAAK,IAAL;AACI,eAAO,IAAIA,KAAJ,CAAU,IAAV,EAAgB,IAAhB,CAAP;;AACJ,WAAK,IAAL;AACI,eAAO,IAAIA,KAAJ,CAAU,IAAV,EAAgB,IAAhB,CAAP;;AACJ,WAAK,IAAL;AACI,eAAO,IAAIA,KAAJ,CAAU,GAAV,EAAe,IAAf,CAAP;;AACJ,WAAK,IAAL;AACI,eAAO,IAAIA,KAAJ,CAAU,GAAV,EAAe,GAAf,CAAP;;AACJ,WAAK,OAAL;AACI,eAAO,IAAIA,KAAJ,CAAU,GAAV,EAAe,GAAf,CAAP;;AACJ,WAAK,OAAL;AACI,eAAO,IAAIA,KAAJ,CAAU,GAAV,EAAe,IAAf,CAAP;;AACJ,WAAK,OAAL;AACI,eAAO,IAAIA,KAAJ,CAAU,IAAV,EAAgB,IAAhB,CAAP;;AACJ,WAAK,OAAL;AACI,eAAO,IAAIA,KAAJ,CAAU,IAAV,EAAgB,IAAhB,CAAP;;AACJ,WAAK,OAAL;AACI,eAAO,IAAIA,KAAJ,CAAU,IAAV,EAAgB,IAAhB,CAAP;;AACJ,WAAK,MAAL;AACI,eAAO,IAAIA,KAAJ,CAAU,GAAV,EAAe,GAAf,CAAP;;AACJ,WAAK,YAAL;AACI,eAAO,IAAIA,KAAJ,CAAU,GAAV,EAAe,GAAf,CAAP;;AACJ,WAAK,aAAL;AACI,eAAO,IAAIA,KAAJ,CAAU,GAAV,EAAe,IAAf,CAAP;;AACJ,WAAK,QAAL;AACI,eAAO,IAAIA,KAAJ,CAAU,IAAV,EAAgB,GAAhB,CAAP;;AACJ;AACI,eAAO,IAAIA,KAAJ,CAAU,GAAV,EAAe,GAAf,CAAP;AA1DR;AA4DH,GA7DD;;AA8DAyB,EAAAA,SAAS,CAACY,SAAV,CAAoBiS,YAApB,GAAmC,UAAUD,SAAV,EAAqB;AACpD,YAAQA,SAAR;AACI,WAAK,MAAL;AACI,eAAO,CAAP;;AACJ,WAAK,KAAL;AACI,eAAO,CAAP;;AACJ,WAAK,SAAL;AACI,eAAO,CAAP;;AACJ,WAAK,YAAL;AACI,eAAO,CAAP;;AACJ;AACI,eAAO,CAAP;AAVR;AAYH,GAbD;;AAcA5S,EAAAA,SAAS,CAACY,SAAV,CAAoB8R,iBAApB,GAAwC,UAAUrC,OAAV,EAAmB;AACvD,QAAIkB,GAAG,GAAG,IAAIjU,MAAJ,CAAW,IAAIQ,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAX,CAAV;;AACA,QAAI,CAACqB,iBAAiB,CAACkR,OAAO,CAACzH,KAAT,CAAlB,IAAqCyH,OAAO,CAACzH,KAAR,KAAkB,IAAvD,IAA+D,CAACzJ,iBAAiB,CAACkR,OAAO,CAACzH,KAAR,CAAc6I,QAAf,CAArF,EAA+G;AAC3G,UAAIA,QAAQ,GAAG,KAAKhI,QAAL,CAAc4G,OAAO,CAACzH,KAAR,CAAc6I,QAA5B,CAAf;AACAF,MAAAA,GAAG,GAAG,IAAIjU,MAAJ,CAAW,IAAIQ,QAAJ,CAAa2T,QAAQ,CAAC/H,CAAtB,EAAyB+H,QAAQ,CAAC9H,CAAlC,EAAqC8H,QAAQ,CAAC7H,CAA9C,CAAX,CAAN;AACH;;AACD,WAAO2H,GAAP;AACH,GAPD;;AAQAvR,EAAAA,SAAS,CAACY,SAAV,CAAoB0Q,mBAApB,GAA0C,UAAUjB,OAAV,EAAmB;AACzD,QAAIlJ,KAAK,GAAG,IAAZ;;AACA,QAAI,CAAChI,iBAAiB,CAACkR,OAAO,CAACzH,KAAR,CAAcmJ,cAAf,CAAtB,EAAsD;AAClD;AACA,UAAIC,UAAU,GAAG,KAAKvI,QAAL,CAAc4G,OAAO,CAACzH,KAAR,CAAcmJ,cAA5B,CAAjB;AACA5K,MAAAA,KAAK,GAAG,IAAIpJ,aAAJ,CAAkB,IAAID,QAAJ,CAAakU,UAAU,CAACtI,CAAxB,EAA2BsI,UAAU,CAACrI,CAAtC,EAAyCqI,UAAU,CAACpI,CAApD,CAAlB,CAAR;AACH;;AACD,WAAOzC,KAAP;AACH,GARD;;AASAnH,EAAAA,SAAS,CAACY,SAAV,CAAoB6I,QAApB,GAA+B,UAAUuP,GAAV,EAAe;AAC1C,QAAIA,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAK,EAAxB,IAA8BA,GAAG,CAACrS,MAAJ,KAAe,CAAjD,EAAoD;AAChD,YAAM,IAAI4J,KAAJ,CAAU,yCAAV,CAAN;AACH;;AACDyI,IAAAA,GAAG,GAAGA,GAAG,CAACC,SAAJ,CAAc,CAAd,CAAN;AACA,QAAIC,MAAM,GAAGC,QAAQ,CAACH,GAAD,EAAM,EAAN,CAArB;AACA,QAAItP,CAAC,GAAIwP,MAAM,IAAI,EAAX,GAAiB,GAAzB;AACA,QAAIvP,CAAC,GAAIuP,MAAM,IAAI,CAAX,GAAgB,GAAxB;AACA,QAAItP,CAAC,GAAGsP,MAAM,GAAG,GAAjB;AACA,WAAO;AAAExP,MAAAA,CAAC,EAAEA,CAAL;AAAQC,MAAAA,CAAC,EAAEA,CAAX;AAAcC,MAAAA,CAAC,EAAEA;AAAjB,KAAP;AACH,GAVD;;AAWA5J,EAAAA,SAAS,CAACY,SAAV,CAAoByI,YAApB,GAAmC,UAAUrD,KAAV,EAAiB;AAChD,QAAIoD,SAAS,GAAG1L,YAAY,CAAC+a,OAA7B;;AACA,QAAI,CAACtZ,iBAAiB,CAAC6G,KAAD,CAAlB,IAA6BA,KAAK,CAACsR,IAAvC,EAA6C;AACzClO,MAAAA,SAAS,IAAI1L,YAAY,CAACgb,IAA1B;AACH;;AACD,QAAI,CAACvZ,iBAAiB,CAAC6G,KAAD,CAAlB,IAA6BA,KAAK,CAACuR,MAAvC,EAA+C;AAC3CnO,MAAAA,SAAS,IAAI1L,YAAY,CAACib,MAA1B;AACH;;AACD,QAAI,CAACxZ,iBAAiB,CAAC6G,KAAD,CAAlB,IAA6BA,KAAK,CAACwR,SAAvC,EAAkD;AAC9CpO,MAAAA,SAAS,IAAI1L,YAAY,CAACkb,SAA1B;AACH;;AACD,QAAI,CAACzZ,iBAAiB,CAAC6G,KAAD,CAAlB,IAA6BA,KAAK,CAACyR,SAAvC,EAAkD;AAC9CrO,MAAAA,SAAS,IAAI1L,YAAY,CAACmb,SAA1B;AACH;;AACD,WAAOzP,SAAP;AACH,GAfD;;AAgBApJ,EAAAA,SAAS,CAACY,SAAV,CAAoBkJ,cAApB,GAAqC,UAAU/C,MAAV,EAAkB;AACnD,QAAI8Q,OAAO,GAAG,IAAIxa,UAAJ,EAAd;;AACA,QAAI,CAAC8B,iBAAiB,CAAC4H,MAAD,CAAtB,EAAgC;AAC5B,UAAI2Q,WAAW,GAAG3Q,MAAM,CAACuH,KAAzB,CAD4B,CAE5B;;AACA,UAAIA,KAAK,GAAI,CAACnP,iBAAiB,CAACuY,WAAD,CAAlB,IAAmC,OAAOA,WAAP,KAAuB,QAA3D,GAAuEA,WAAW,GAAG,IAArF,GAA4FxW,SAAxG,CAH4B,CAI5B;;AACA,UAAIyW,KAAK,GAAG,IAAI7Z,QAAJ,CAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,CAAZ;;AACA,UAAI,CAACqB,iBAAiB,CAAC4H,MAAM,CAAC4Q,KAAR,CAAtB,EAAsC;AAClC,YAAIC,WAAW,GAAG,KAAKnO,QAAL,CAAc1C,MAAM,CAAC4Q,KAArB,CAAlB;AACAA,QAAAA,KAAK,GAAG,IAAI7Z,QAAJ,CAAa8Z,WAAW,CAAClO,CAAzB,EAA4BkO,WAAW,CAACjO,CAAxC,EAA2CiO,WAAW,CAAChO,CAAvD,CAAR;AACH;;AACD,UAAI2H,GAAG,GAAG,IAAIjU,MAAJ,CAAWqa,KAAX,EAAkBrJ,KAAlB,CAAV,CAV4B,CAW5B;;AACA,UAAI,CAACnP,iBAAiB,CAAC4H,MAAM,CAAC6L,SAAR,CAAtB,EAA0C;AACtCrB,QAAAA,GAAG,CAACqB,SAAJ,GAAgB,KAAKC,YAAL,CAAkB9L,MAAM,CAAC6L,SAAzB,CAAhB;AACH;;AACDiF,MAAAA,OAAO,CAAC3T,GAAR,GAAcqN,GAAd;AACH,KAhBD,MAiBK;AACDsG,MAAAA,OAAO,CAAC3T,GAAR,GAAc,IAAI5G,MAAJ,CAAW,IAAIQ,QAAJ,CAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,CAAX,CAAd;AACH;;AACD,WAAO+Z,OAAP;AACH,GAvBD;AAwBA;AACJ;AACA;AACA;AACA;;;AACI7X,EAAAA,SAAS,CAACY,SAAV,CAAoBsE,OAApB,GAA8B,YAAY,CACtC;AACH,GAFD;;AAGA,SAAOlF,SAAP;AACH,CAt0C8B,EAA/B;;AAu0CA,SAASA,SAAT","sourcesContent":["import * as events from '../base/constant';\nimport { PdfDocument, PdfGrid, PdfBorders, PdfPen, PdfPaddings } from '@syncfusion/ej2-pdf-export';\nimport { PdfStandardFont, PdfFontFamily, PdfFontStyle, PdfBitmap } from '@syncfusion/ej2-pdf-export';\nimport { PdfStringFormat, PdfTextAlignment, PdfColor, PdfSolidBrush } from '@syncfusion/ej2-pdf-export';\nimport { PdfVerticalAlignment, RectangleF, PdfPageTemplateElement } from '@syncfusion/ej2-pdf-export';\nimport { PointF, PdfPageNumberField, PdfCompositeField } from '@syncfusion/ej2-pdf-export';\nimport { PdfPageCountField, SizeF, PdfPageSettings, PdfPageOrientation } from '@syncfusion/ej2-pdf-export';\nimport { PdfTrueTypeFont } from '@syncfusion/ej2-pdf-export';\nimport { ExportHelper, ExportValueFormatter } from './export-helper';\nimport { Data } from '../actions/data';\nimport { SummaryModelGenerator, GroupSummaryModelGenerator, CaptionSummaryModelGenerator } from '../services/summary-model-generator';\nimport { compile, getEnumValue, isNullOrUndefined, detach, isBlazor } from '@syncfusion/ej2-base';\nimport { CellType } from '../base/enum';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getUid, getPrintGridModel, measureColumnDepth, isExportColumns, updateColumnTypeForExportColumns, prepareColumns } from '../base/util';\n/**\n * `PDF Export` module is used to handle the exportToPDF action.\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for the Grid PDF Export module\n     * @hidden\n     */\n    function PdfExport(parent) {\n        this.hideColumnInclude = false;\n        this.currentViewData = false;\n        this.customDataSource = false;\n        this.isGrouping = false;\n        this.headerOnPages = [];\n        this.drawPosition = { xPosition: 0, yPosition: 0 };\n        this.parent = parent;\n        this.helper = new ExportHelper(parent);\n        this.gridPool = {};\n    }\n    /**\n     * For internal use only - Get the module name.\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    PdfExport.prototype.init = function (parent) {\n        this.exportValueFormatter = new ExportValueFormatter(parent.locale);\n        this.pdfDocument = undefined;\n        this.hideColumnInclude = false;\n        this.currentViewData = false;\n        this.parent = parent;\n        this.isGrouping = false;\n        this.isExporting = true;\n        parent.id = getUid('main-grid');\n        this.gridPool[parent.id] = false;\n        this.pdfPageSettings = new PdfPageSettings();\n    };\n    PdfExport.prototype.exportWithData = function (parent, pdfDoc, resolve, returnType, pdfExportProperties, isMultipleExport, reject) {\n        var _this = this;\n        this.init(parent);\n        if (!isNullOrUndefined(pdfDoc)) {\n            this.pdfDocument = pdfDoc;\n        }\n        else {\n            this.pdfDocument = new PdfDocument();\n        }\n        this.processExport(parent, returnType, pdfExportProperties, isMultipleExport).then(function () {\n            _this.isExporting = false;\n            parent.trigger(events.pdfExportComplete, _this.isBlob ? { promise: _this.blobPromise } : {});\n            _this.parent.log('exporting_complete', _this.getModuleName());\n            resolve(_this.pdfDocument);\n        }).catch(function (e) {\n            reject(_this.pdfDocument);\n            _this.parent.trigger(events.actionFailure, e);\n        });\n    };\n    /**\n     * Used to map the input data\n     * @return {void}\n     */\n    PdfExport.prototype.Map = function (parent, pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        this.data = new Data(this.parent);\n        this.isBlob = isBlob;\n        this.gridPool = {};\n        if (parent.childGrid && !(!isNullOrUndefined(pdfExportProperties) && pdfExportProperties.hierarchyExportMode === 'None')) {\n            parent.expandedRows = getPrintGridModel(parent).expandedRows;\n        }\n        var args = {\n            requestType: 'beforePdfExport', cancel: false,\n            headerPageNumbers: [], gridDrawPosition: { xPosition: 0, yPosition: 0 }\n        };\n        if (!isBlazor()) {\n            var gridObject = 'gridObject';\n            args[gridObject] = parent;\n        }\n        var can = 'cancel';\n        var header = 'headerPageNumbers';\n        var drawPos = 'gridDrawPosition';\n        parent.trigger(events.beforePdfExport, args);\n        if (args[can] === true) {\n            return new Promise(function (resolve, reject) {\n                return resolve();\n            });\n        }\n        if (isExportColumns(pdfExportProperties)) {\n            updateColumnTypeForExportColumns(pdfExportProperties, parent);\n        }\n        this.headerOnPages = args[header];\n        this.drawPosition = args[drawPos];\n        this.parent.log('exporting_begin', this.getModuleName());\n        if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)\n            && pdfExportProperties.dataSource instanceof DataManager) {\n            return new Promise(function (resolve, reject) {\n                pdfExportProperties.dataSource.executeQuery(new Query()).then(function (returnType) {\n                    _this.exportWithData(parent, pdfDoc, resolve, returnType, pdfExportProperties, isMultipleExport, reject);\n                });\n            });\n        }\n        else if (!isNullOrUndefined(pdfExportProperties) && pdfExportProperties.exportType === 'CurrentPage') {\n            return new Promise(function (resolve, reject) {\n                _this.exportWithData(parent, pdfDoc, resolve, _this.parent.getCurrentViewRecords(), pdfExportProperties, isMultipleExport, reject);\n            });\n        }\n        else {\n            var allPromise_1 = [];\n            allPromise_1.push(this.data.getData({}, ExportHelper.getQuery(parent, this.data)));\n            allPromise_1.push(this.helper.getColumnData(parent));\n            return new Promise(function (resolve, reject) {\n                Promise.all(allPromise_1).then(function (e) {\n                    _this.init(parent);\n                    if (!isNullOrUndefined(pdfDoc)) {\n                        _this.pdfDocument = pdfDoc;\n                    }\n                    else {\n                        _this.pdfDocument = new PdfDocument();\n                    }\n                    _this.processExport(parent, e[0], pdfExportProperties, isMultipleExport).then(function () {\n                        _this.isExporting = false;\n                        parent.trigger(events.pdfExportComplete, _this.isBlob ? { promise: _this.blobPromise } : {});\n                        _this.parent.log('exporting_complete', _this.getModuleName());\n                        resolve(_this.pdfDocument);\n                    }).catch(function (e) {\n                        reject(_this.pdfDocument);\n                        _this.parent.trigger(events.actionFailure, e);\n                    });\n                });\n            });\n        }\n    };\n    PdfExport.prototype.processExport = function (gObj, returnType, pdfExportProperties, isMultipleExport) {\n        var _this = this;\n        var section = this.pdfDocument.sections.add();\n        var pdfGrid;\n        this.processSectionExportProperties(section, pdfExportProperties);\n        var pdfPage = section.pages.add();\n        return new Promise(function (resolve, reject) {\n            pdfGrid = _this.processGridExport(gObj, returnType, pdfExportProperties);\n            _this.globalResolve = resolve;\n            _this.gridPool[gObj.id] = true;\n            _this.helper.checkAndExport(_this.gridPool, _this.globalResolve);\n        }).then(function () {\n            // draw the grid\n            var xPosition = 'xPosition';\n            var yPosition = 'yPosition';\n            pdfGrid.draw(pdfPage, _this.drawPosition[xPosition], _this.drawPosition[yPosition]);\n            _this.drawHeader(pdfExportProperties);\n            if (!isMultipleExport) {\n                // save the PDF\n                if (!_this.isBlob) {\n                    if (!isNullOrUndefined(pdfExportProperties) && pdfExportProperties.fileName) {\n                        _this.pdfDocument.save(pdfExportProperties.fileName);\n                    }\n                    else {\n                        _this.pdfDocument.save('Export.pdf');\n                    }\n                }\n                else {\n                    _this.blobPromise = _this.pdfDocument.save();\n                }\n                _this.pdfDocument.destroy();\n                delete gObj.expandedRows;\n            }\n            return _this.pdfDocument;\n        });\n    };\n    PdfExport.prototype.processSectionExportProperties = function (section, pdfExportProperties) {\n        if (!isNullOrUndefined(pdfExportProperties) && (!isNullOrUndefined(pdfExportProperties.pageOrientation)\n            || !isNullOrUndefined(pdfExportProperties.pageSize))) {\n            this.pdfPageSettings.orientation = (pdfExportProperties.pageOrientation === 'Landscape') ?\n                PdfPageOrientation.Landscape : PdfPageOrientation.Portrait;\n            this.pdfPageSettings.size = this.getPageSize(pdfExportProperties.pageSize);\n            section.setPageSettings(this.pdfPageSettings);\n        }\n        return section;\n    };\n    PdfExport.prototype.processGridExport = function (gObj, returnType, pdfExportProperties) {\n        var allowHorizontalOverflow = true;\n        var isFrozen = this.parent.isFrozenGrid() && !this.parent.getFrozenColumns();\n        if (!isNullOrUndefined(pdfExportProperties)) {\n            this.gridTheme = pdfExportProperties.theme;\n            if (isBlazor() && !isNullOrUndefined(this.gridTheme)) {\n                this.getGridPdfFont(this.gridTheme);\n            }\n            allowHorizontalOverflow = isNullOrUndefined(pdfExportProperties.allowHorizontalOverflow) ?\n                true : pdfExportProperties.allowHorizontalOverflow;\n        }\n        var helper = new ExportHelper(gObj);\n        var dataSource = this.processExportProperties(pdfExportProperties, returnType.result);\n        var columns = isExportColumns(pdfExportProperties) ?\n            prepareColumns(pdfExportProperties.columns, gObj.enableColumnVirtualization) :\n            helper.getGridExportColumns(isFrozen ? gObj.getColumns() : gObj.columns);\n        columns = columns.filter(function (columns) { return isNullOrUndefined(columns.commands); });\n        var isGrouping = false;\n        if (gObj.groupSettings.columns.length) {\n            isGrouping = true;\n        }\n        if (gObj.childGrid && !isNullOrUndefined(pdfExportProperties)) {\n            gObj.hierarchyPrintMode = pdfExportProperties.hierarchyExportMode || 'Expanded';\n        }\n        // create a grid\n        var pdfGrid = new PdfGrid();\n        // get header theme style\n        var headerThemeStyle = this.getHeaderThemeStyle();\n        var border = headerThemeStyle.border;\n        var headerFont = headerThemeStyle.font;\n        var headerBrush = headerThemeStyle.brush;\n        var returnValue = helper.getHeaders(columns, this.hideColumnInclude);\n        // Column collection with respect to the records in the grid\n        var gridColumns = returnValue.columns;\n        // process grid header content\n        pdfGrid = this.processGridHeaders(gObj.groupSettings.columns.length, pdfGrid, returnValue.rows, gridColumns, border, headerFont, headerBrush, gObj, allowHorizontalOverflow, columns);\n        // set alignment, width and type of the values of the column\n        this.setColumnProperties(gridColumns, pdfGrid, helper, gObj, allowHorizontalOverflow);\n        var captionThemeStyle = this.getSummaryCaptionThemeStyle();\n        if (!isNullOrUndefined(dataSource) && dataSource.length) {\n            if (isGrouping) {\n                if (!isNullOrUndefined(captionThemeStyle.border)) {\n                    border = captionThemeStyle.border;\n                }\n                this.processGroupedRecords(pdfGrid, dataSource, gridColumns, gObj, border, 0, captionThemeStyle.font, captionThemeStyle.\n                    brush, captionThemeStyle.backgroundBrush, returnType, pdfExportProperties, helper, 0);\n            }\n            else {\n                this.processRecord(border, gridColumns, gObj, dataSource, pdfGrid, 0, pdfExportProperties, helper, 0);\n            }\n            if (!isNullOrUndefined(returnType.aggregates)) {\n                var summaryModel = new SummaryModelGenerator(gObj);\n                var sRows = void 0;\n                var column = summaryModel.getColumns();\n                column = column.filter(function (col) { return isNullOrUndefined(col.commands) && col.type !== 'checkbox'; });\n                if (gObj.aggregates.length && this.parent !== gObj) {\n                    gObj.aggregateModule.prepareSummaryInfo();\n                }\n                if (this.customDataSource) {\n                    sRows = summaryModel.generateRows(dataSource, returnType.aggregates);\n                }\n                else if (this.currentViewData) {\n                    sRows = summaryModel.generateRows(this.parent.getCurrentViewRecords(), returnType.aggregates);\n                }\n                else if (isGrouping) {\n                    sRows = summaryModel.generateRows(dataSource.records, returnType.aggregates);\n                }\n                else {\n                    sRows = summaryModel.generateRows(returnType.result, returnType.aggregates, null, null, column);\n                }\n                this.processAggregates(sRows, pdfGrid, border, captionThemeStyle.font, captionThemeStyle.brush, captionThemeStyle.backgroundBrush, false);\n            }\n        }\n        else {\n            var row = pdfGrid.rows.addRow();\n            row.style.setBorder(border);\n        }\n        return pdfGrid;\n    };\n    PdfExport.prototype.getSummaryCaptionThemeStyle = function () {\n        if (!isNullOrUndefined(this.gridTheme) && !isNullOrUndefined(this.gridTheme.caption)) {\n            var fontSize = !isNullOrUndefined(this.gridTheme.caption.fontSize) ? this.gridTheme.caption.fontSize : 9.75;\n            var fontFamily = !isNullOrUndefined(this.gridTheme.caption.fontName) ?\n                this.getFontFamily(this.gridTheme.caption.fontName) : PdfFontFamily.Helvetica;\n            var fontStyle = this.getFontStyle(this.gridTheme.caption);\n            var pdfColor = new PdfColor(0, 0, 0);\n            if (!isNullOrUndefined(this.gridTheme.caption.fontColor)) {\n                var penBrushColor = this.hexToRgb(this.gridTheme.caption.fontColor);\n                pdfColor = new PdfColor(penBrushColor.r, penBrushColor.g, penBrushColor.b);\n            }\n            var borderCaption = this.gridTheme.caption.border ? this.getBorderStyle(this.gridTheme.caption.border) : null;\n            var font = new PdfStandardFont(fontFamily, fontSize, fontStyle);\n            if (!isNullOrUndefined(this.gridTheme.caption.font)) {\n                font = this.gridTheme.caption.font;\n            }\n            return { font: font, brush: new PdfSolidBrush(pdfColor), backgroundBrush: new PdfSolidBrush(new PdfColor(246, 246, 246)),\n                border: borderCaption };\n        }\n        else {\n            //Material theme\n            return { font: new PdfStandardFont(PdfFontFamily.Helvetica, 9.75), brush: new PdfSolidBrush(new PdfColor(0, 0, 0)),\n                backgroundBrush: new PdfSolidBrush(new PdfColor(246, 246, 246)) };\n        }\n    };\n    PdfExport.prototype.getGridPdfFont = function (args) {\n        var fontFamily = 'fontFamily';\n        var fontSize = 'fontSize';\n        var fontStyle = 'fontStyle';\n        var isTrueType = 'isTrueType';\n        var style = 0;\n        if (args.header && args.header.font) {\n            var headerFont = args.header.font[fontFamily];\n            var headerSize = args.header.font[fontSize];\n            var headerStyle = args.header.font[fontStyle];\n            style = (isNullOrUndefined(PdfFontStyle[headerStyle]) ? 0 : PdfFontStyle[headerStyle]);\n            if (args.header.font[isTrueType]) {\n                args.header.font = new PdfTrueTypeFont(headerFont, headerSize, style);\n            }\n            else {\n                var fontFamily_1 = !isNullOrUndefined(headerFont) ?\n                    this.getFontFamily(headerFont) : PdfFontFamily.Helvetica;\n                args.header.font = new PdfStandardFont(fontFamily_1, headerSize, style);\n            }\n        }\n        if (args.caption && args.caption.font) {\n            var captionFont = args.caption.font[fontFamily];\n            var captionSize = args.caption.font[fontSize];\n            var captionStyle = args.caption.font[fontStyle];\n            style = (isNullOrUndefined(PdfFontStyle[captionStyle]) ? 0 : PdfFontStyle[captionStyle]);\n            if (args.caption.font[isTrueType]) {\n                args.caption.font = new PdfTrueTypeFont(captionFont, captionSize, style);\n            }\n            else {\n                var fontFamily_2 = !isNullOrUndefined(captionFont) ?\n                    this.getFontFamily(captionFont) : PdfFontFamily.Helvetica;\n                args.caption.font = new PdfStandardFont(fontFamily_2, captionSize, style);\n            }\n        }\n        if (args.record && args.record.font) {\n            var recordFont = args.record.font[fontFamily];\n            var recordSize = args.record.font[fontSize];\n            var recordStyle = args.record.font[fontStyle];\n            style = (isNullOrUndefined(PdfFontStyle[recordStyle]) ? 0 : PdfFontStyle[recordStyle]);\n            if (args.record.font[isTrueType]) {\n                args.record.font = new PdfTrueTypeFont(recordFont, recordSize, style);\n            }\n            else {\n                var fontFamily_3 = !isNullOrUndefined(recordFont) ?\n                    this.getFontFamily(recordFont) : PdfFontFamily.Helvetica;\n                args.record.font = new PdfStandardFont(fontFamily_3, recordSize, style);\n            }\n        }\n    };\n    PdfExport.prototype.getHeaderThemeStyle = function () {\n        var border = new PdfBorders();\n        if (!isNullOrUndefined(this.gridTheme) && !isNullOrUndefined(this.gridTheme.header)) {\n            var fontFamily = !isNullOrUndefined(this.gridTheme.header.fontName) ?\n                this.getFontFamily(this.gridTheme.header.fontName) : PdfFontFamily.Helvetica;\n            var fontStyle = this.getFontStyle(this.gridTheme.header);\n            var fontSize = !isNullOrUndefined(this.gridTheme.header.fontSize) ? this.gridTheme.header.fontSize : 10.5;\n            var pdfColor = new PdfColor();\n            if (!isNullOrUndefined(this.gridTheme.header.fontColor)) {\n                var penBrushColor = this.hexToRgb(this.gridTheme.header.fontColor);\n                pdfColor = new PdfColor(penBrushColor.r, penBrushColor.g, penBrushColor.b);\n            }\n            var font = new PdfStandardFont(fontFamily, fontSize, fontStyle);\n            if (!isNullOrUndefined(this.gridTheme.header.font)) {\n                font = this.gridTheme.header.font;\n            }\n            return { border: this.getBorderStyle(this.gridTheme.header.border), font: font, brush: new PdfSolidBrush(pdfColor) };\n        }\n        else {\n            //Material theme\n            border.all = new PdfPen(new PdfColor(234, 234, 234));\n            return { border: border, font: new PdfStandardFont(PdfFontFamily.Helvetica, 10.5),\n                brush: new PdfSolidBrush(new PdfColor(102, 102, 102)) };\n        }\n    };\n    /* tslint:disable-next-line:no-any */\n    PdfExport.prototype.processGroupedRecords = function (pdfGrid, dataSource, gridColumns, gObj, border, level, font, brush, backgroundBrush, returnType, pdfExportProperties, helper, index) {\n        var _this = this;\n        var groupIndex = level;\n        var _loop_1 = function (dataSourceItems) {\n            var row = pdfGrid.rows.addRow();\n            var col = gObj.getColumnByField(dataSourceItems.field);\n            /* tslint:disable-next-line:no-any */\n            var args = {\n                value: dataSourceItems.key,\n                column: col,\n                style: undefined,\n                isForeignKey: col.isForeignColumn(),\n            };\n            /* tslint:disable-next-line:max-line-length */\n            var value = this_1.parent.getColumnByField(dataSourceItems.field).headerText + ': ' + (!col.enableGroupByFormat ? this_1.exportValueFormatter.formatCellValue(args) : dataSourceItems.key) + ' - ' + dataSourceItems.count + (dataSource.count > 1 ? ' items' : ' item');\n            var cArgs = { captionText: value, type: 'PDF' };\n            this_1.parent.trigger(events.exportGroupCaption, cArgs, function (cArgs) {\n                row.cells.getCell(groupIndex).value = cArgs.captionText;\n                row.cells.getCell(groupIndex + 1).style.stringFormat = new PdfStringFormat(PdfTextAlignment.Left);\n                row.style.setBorder(border);\n                row.style.setFont(font);\n                row.style.setTextBrush(brush);\n                row.style.setBackgroundBrush(backgroundBrush);\n                var sRows;\n                var captionSummaryModel = new CaptionSummaryModelGenerator(gObj);\n                if (!isNullOrUndefined(dataSourceItems.items.records)) {\n                    sRows = captionSummaryModel.generateRows(dataSourceItems.items.records, dataSourceItems);\n                }\n                else {\n                    sRows = captionSummaryModel.generateRows(dataSourceItems.items, dataSourceItems);\n                }\n                if (!isNullOrUndefined(sRows) && sRows.length === 0) {\n                    row.cells.getCell(groupIndex + 1).columnSpan = pdfGrid.columns.count - (groupIndex + 1);\n                }\n                if (!isNullOrUndefined(dataSource.childLevels) && dataSource.childLevels > 0) {\n                    _this.processAggregates(sRows, pdfGrid, border, font, brush, backgroundBrush, true, row, groupIndex);\n                    _this.processGroupedRecords(pdfGrid, dataSourceItems.items, gridColumns, gObj, border, (groupIndex + 1), font, brush, backgroundBrush, returnType, pdfExportProperties, helper, index);\n                    var groupSummaryModel = new GroupSummaryModelGenerator(gObj);\n                    sRows = groupSummaryModel.generateRows(dataSourceItems.items.records, dataSourceItems);\n                    _this.processAggregates(sRows, pdfGrid, border, font, brush, backgroundBrush, false);\n                }\n                else {\n                    _this.processAggregates(sRows, pdfGrid, border, font, brush, backgroundBrush, true, row, groupIndex);\n                    index = _this.processRecord(border, gridColumns, gObj, dataSourceItems.items, pdfGrid, (groupIndex + 1), pdfExportProperties, helper, index);\n                    var groupSummaryModel = new GroupSummaryModelGenerator(gObj);\n                    sRows = groupSummaryModel.generateRows(dataSourceItems.items, dataSourceItems);\n                    var isGroupedFooter = true;\n                    _this.processAggregates(sRows, pdfGrid, border, font, brush, backgroundBrush, false, null, null, isGroupedFooter);\n                }\n            });\n        };\n        var this_1 = this;\n        for (var _i = 0, dataSource_1 = dataSource; _i < dataSource_1.length; _i++) {\n            var dataSourceItems = dataSource_1[_i];\n            _loop_1(dataSourceItems);\n        }\n    };\n    PdfExport.prototype.processGridHeaders = function (childLevels, pdfGrid, rows, gridColumn, border, headerFont, headerBrush, grid, allowHorizontalOverflow, eCols) {\n        var _this = this;\n        var columnCount = gridColumn.length + childLevels;\n        var depth = measureColumnDepth(eCols);\n        var cols = eCols;\n        var index = 0;\n        if (this.parent.allowGrouping) {\n            index = this.parent.groupSettings.columns.length;\n        }\n        pdfGrid.columns.add(columnCount);\n        pdfGrid.headers.add(rows.length);\n        var applyTextAndSpan = function (rowIdx, colIdx, col, rowSpan, colSpan) {\n            var gridHeader = pdfGrid.headers.getHeader(rowIdx);\n            var pdfCell = gridHeader.cells.getCell(colIdx);\n            var cell = rows[rowIdx].cells[colIdx];\n            if (!isNullOrUndefined(col.headerTextAlign)) {\n                pdfCell.style.stringFormat = _this.getHorizontalAlignment(col.headerTextAlign);\n            }\n            if (rowSpan > 0) {\n                pdfCell.rowSpan = rowSpan;\n                pdfCell.style.stringFormat = _this.getVerticalAlignment('Bottom', pdfCell.style.stringFormat, col.textAlign);\n            }\n            if (colSpan > 0) {\n                pdfCell.columnSpan = colSpan;\n            }\n            gridHeader.style.setBorder(border);\n            gridHeader.style.setFont(headerFont);\n            gridHeader.style.setTextBrush(headerBrush);\n            pdfCell.value = col.headerText;\n            if (!isNullOrUndefined(cell) && (cell.cellType === CellType.HeaderIndent || cell.cellType === CellType.DetailHeader)) {\n                pdfCell.value = '';\n                pdfCell.width = 20;\n            }\n            var args = {\n                cell: pdfCell,\n                gridCell: cell,\n                style: pdfCell.style\n            };\n            _this.parent.trigger(events.pdfHeaderQueryCellInfo, args);\n        };\n        var recuHeader = function (cols, depth, spanCnt, colIndex, rowIndex, isRoot) {\n            var cidx = 0;\n            for (var i = 0; i < cols.length; i++) {\n                if (isRoot) {\n                    cidx = cidx + spanCnt + (i === 0 ? 0 : -1);\n                    colIndex = cidx;\n                    spanCnt = 0;\n                }\n                if (cols[i].columns && cols[i].columns.length) {\n                    var newSpanCnt = recuHeader(cols[i].columns, depth - 1, 0, i + colIndex, rowIndex + 1, false);\n                    applyTextAndSpan(rowIndex, i + colIndex, cols[i], 0, newSpanCnt);\n                    spanCnt = spanCnt + newSpanCnt;\n                    colIndex = colIndex + newSpanCnt - 1;\n                }\n                else if (cols[i].visible || _this.hideColumnInclude) {\n                    spanCnt++;\n                    applyTextAndSpan(rowIndex, i + colIndex + index, cols[i], depth, 0);\n                }\n            }\n            return spanCnt;\n        };\n        recuHeader(cols, depth, 0, 0, 0, true);\n        if (pdfGrid.columns.count >= 6 && allowHorizontalOverflow) {\n            pdfGrid.style.allowHorizontalOverflow = true;\n        }\n        return pdfGrid;\n    };\n    PdfExport.prototype.processExportProperties = function (pdfExportProperties, dataSource) {\n        if (!isNullOrUndefined(pdfExportProperties)) {\n            if (!isNullOrUndefined(pdfExportProperties.theme)) {\n                this.gridTheme = pdfExportProperties.theme;\n            }\n            var clientSize = this.pdfPageSettings.size;\n            this.drawHeader(pdfExportProperties);\n            if (!isNullOrUndefined(pdfExportProperties.footer)) {\n                /* tslint:disable-next-line:no-any */\n                var footer = pdfExportProperties.footer;\n                var position = new PointF(0, ((clientSize.width - 80) - (footer.fromBottom * 0.75)));\n                var size = new SizeF((clientSize.width - 80), (footer.height * 0.75));\n                var bounds = new RectangleF(position, size);\n                this.pdfDocument.template.bottom = this.drawPageTemplate(new PdfPageTemplateElement(bounds), footer);\n            }\n            if (!isNullOrUndefined(pdfExportProperties.includeHiddenColumn) && !this.isGrouping) {\n                this.hideColumnInclude = pdfExportProperties.includeHiddenColumn;\n            }\n            if (!isNullOrUndefined(pdfExportProperties.dataSource)) {\n                if (!(pdfExportProperties.dataSource instanceof DataManager)) {\n                    dataSource = pdfExportProperties.dataSource;\n                }\n                this.customDataSource = true;\n                this.currentViewData = false;\n            }\n            else if (!isNullOrUndefined(pdfExportProperties.exportType)) {\n                if (pdfExportProperties.exportType === 'CurrentPage') {\n                    dataSource = this.parent.currentViewData;\n                    this.currentViewData = true;\n                    this.customDataSource = false;\n                }\n                else {\n                    this.currentViewData = false;\n                    this.customDataSource = false;\n                }\n            }\n            else {\n                this.currentViewData = false;\n                this.customDataSource = false;\n            }\n        }\n        else {\n            this.currentViewData = false;\n            this.customDataSource = false;\n        }\n        return dataSource;\n    };\n    PdfExport.prototype.drawHeader = function (pdfExportProperties) {\n        var _this = this;\n        var clientSize = this.pdfPageSettings.size;\n        if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.header)) {\n            /* tslint:disable-next-line:no-any */\n            var header = pdfExportProperties.header;\n            var position = new PointF(0, header.fromTop);\n            var size = new SizeF((clientSize.width - 80), (header.height * 0.75));\n            var bounds = new RectangleF(position, size);\n            if (!this.headerOnPages.length) {\n                this.pdfDocument.template.top = this.drawPageTemplate(new PdfPageTemplateElement(bounds), header);\n            }\n            else {\n                var headerTemplate_1 = this.drawPageTemplate(new PdfPageTemplateElement(bounds), header);\n                this.headerOnPages.filter(function (index) {\n                    if (index - 1 >= 0 && index - 1 < _this.pdfDocument.pages.count - 1) {\n                        _this.pdfDocument.pages.getPageByIndex(index - 1).graphics\n                            .drawPdfTemplate(headerTemplate_1.template, new PointF(0, 0));\n                    }\n                });\n            }\n        }\n    };\n    PdfExport.prototype.drawPageTemplate = function (template, element) {\n        for (var _i = 0, _a = element.contents; _i < _a.length; _i++) {\n            var content = _a[_i];\n            this.processContentValidation(content);\n            switch (content.type) {\n                case 'Text':\n                    /* tslint:disable-next-line:max-line-length */\n                    if (content.value === '' || content.value === undefined || content.value === null || typeof content.value !== 'string') {\n                        throw new Error('please enter the valid input value in text content...');\n                    }\n                    this.drawText(template, content);\n                    break;\n                case 'PageNumber':\n                    this.drawPageNumber(template, content);\n                    break;\n                case 'Image':\n                    if (content.src === undefined || content.src === null || content.src === '') {\n                        throw new Error('please enter the valid base64 string in image content...');\n                    }\n                    this.drawImage(template, content);\n                    break;\n                case 'Line':\n                    this.drawLine(template, content);\n                    break;\n                default:\n                    throw new Error('Please set valid content type...');\n            }\n        }\n        return template;\n    };\n    PdfExport.prototype.processContentValidation = function (content) {\n        if (content.type === undefined || content.type === null) {\n            throw new Error('please set valid content type...');\n        }\n        else {\n            if (content.type === 'Line') {\n                if (content.points === undefined || content.points === null) {\n                    throw new Error('please enter valid points in ' + content.type + ' content...');\n                }\n                else {\n                    if (content.points.x1 === undefined || content.points.x1 === null || typeof content.points.x1 !== 'number') {\n                        throw new Error('please enter valid x1 co-ordinate in ' + content.type + ' points...');\n                    }\n                    if (content.points.y1 === undefined || content.points.y1 === null || typeof content.points.y1 !== 'number') {\n                        throw new Error('please enter valid y1 co-ordinate in ' + content.type + ' points...');\n                    }\n                    if (content.points.x2 === undefined || content.points.x2 === null || typeof content.points.x2 !== 'number') {\n                        throw new Error('please enter valid x2 co-ordinate in ' + content.type + ' points...');\n                    }\n                    if (content.points.y2 === undefined || content.points.y2 === null || typeof content.points.y2 !== 'number') {\n                        throw new Error('please enter valid y2 co-ordinate in ' + content.type + ' points...');\n                    }\n                }\n            }\n            else {\n                if (content.position === undefined || content.position === null) {\n                    throw new Error('please enter valid position in ' + content.type + ' content...');\n                }\n                else {\n                    if (content.position.x === undefined || content.position.x === null || typeof content.position.x !== 'number') {\n                        throw new Error('please enter valid x co-ordinate in ' + content.type + ' position...');\n                    }\n                    if (content.position.y === undefined || content.position.y === null || typeof content.position.y !== 'number') {\n                        throw new Error('please enter valid y co-ordinate in ' + content.type + ' position...');\n                    }\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:no-any */\n    PdfExport.prototype.drawText = function (pageTemplate, content) {\n        var font = this.getFont(content);\n        var brush = this.getBrushFromContent(content);\n        var pen = null;\n        if (!isNullOrUndefined(content.style.textPenColor)) {\n            var penColor = this.hexToRgb(content.style.textPenColor);\n            pen = new PdfPen(new PdfColor(penColor.r, penColor.g, penColor.b));\n        }\n        if (brush == null && pen == null) {\n            brush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        }\n        var value = content.value.toString();\n        var x = content.position.x * 0.75;\n        var y = content.position.y * 0.75;\n        var format = new PdfStringFormat();\n        var result = this.setContentFormat(content, format);\n        if (result !== null && !isNullOrUndefined(result.format) && !isNullOrUndefined(result.size)) {\n            pageTemplate.graphics.drawString(value, font, pen, brush, x, y, result.size.width, result.size.height, result.format);\n        }\n        else {\n            pageTemplate.graphics.drawString(value, font, pen, brush, x, y, format);\n        }\n    };\n    /* tslint:disable-next-line:no-any */\n    PdfExport.prototype.drawPageNumber = function (documentHeader, content) {\n        var font = this.getFont(content);\n        var brush = null;\n        if (!isNullOrUndefined(content.style.textBrushColor)) {\n            /* tslint:disable-next-line:max-line-length */\n            var brushColor = this.hexToRgb(content.style.textBrushColor);\n            brush = new PdfSolidBrush(new PdfColor(brushColor.r, brushColor.g, brushColor.b));\n        }\n        else {\n            brush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        }\n        var pageNumber = new PdfPageNumberField(font, brush);\n        pageNumber.numberStyle = this.getPageNumberStyle(content.pageNumberType);\n        var compositeField;\n        var format;\n        if (!isNullOrUndefined(content.format)) {\n            if (content.format.indexOf('$total') !== -1 && content.format.indexOf('$current') !== -1) {\n                var pageCount = new PdfPageCountField(font);\n                pageCount.numberStyle = this.getPageNumberStyle(content.pageNumberType);\n                if (content.format.indexOf('$total') > content.format.indexOf('$current')) {\n                    format = content.format.replace('$current', '0');\n                    format = format.replace('$total', '1');\n                }\n                else {\n                    format = content.format.replace('$current', '1');\n                    format = format.replace('$total', '0');\n                }\n                compositeField = new PdfCompositeField(font, brush, format, pageNumber, pageCount);\n            }\n            else if (content.format.indexOf('$current') !== -1 && content.format.indexOf('$total') === -1) {\n                format = content.format.replace('$current', '0');\n                compositeField = new PdfCompositeField(font, brush, format, pageNumber);\n            }\n            else {\n                var pageCount = new PdfPageCountField(font);\n                format = content.format.replace('$total', '0');\n                compositeField = new PdfCompositeField(font, brush, format, pageCount);\n            }\n        }\n        else {\n            format = '{0}';\n            compositeField = new PdfCompositeField(font, brush, format, pageNumber);\n        }\n        var x = content.position.x * 0.75;\n        var y = content.position.y * 0.75;\n        var result = this.setContentFormat(content, compositeField.stringFormat);\n        if (result !== null && !isNullOrUndefined(result.format) && !isNullOrUndefined(result.size)) {\n            compositeField.stringFormat = result.format;\n            compositeField.bounds = new RectangleF(x, y, result.size.width, result.size.height);\n        }\n        compositeField.draw(documentHeader.graphics, x, y);\n    };\n    /* tslint:disable-next-line:no-any */\n    PdfExport.prototype.drawImage = function (documentHeader, content) {\n        var x = content.position.x * 0.75;\n        var y = content.position.y * 0.75;\n        var width = (!isNullOrUndefined(content.size)) ? (content.size.width * 0.75) : undefined;\n        var height = (!isNullOrUndefined(content.size)) ? (content.size.height * 0.75) : undefined;\n        var image = new PdfBitmap(content.src);\n        if (!isNullOrUndefined(width)) {\n            documentHeader.graphics.drawImage(image, x, y, width, height);\n        }\n        else {\n            documentHeader.graphics.drawImage(image, x, y);\n        }\n    };\n    /* tslint:disable-next-line:no-any */\n    PdfExport.prototype.drawLine = function (documentHeader, content) {\n        var x1 = content.points.x1 * 0.75;\n        var y1 = content.points.y1 * 0.75;\n        var x2 = content.points.x2 * 0.75;\n        var y2 = content.points.y2 * 0.75;\n        var pen = this.getPenFromContent(content);\n        if (!isNullOrUndefined(content.style) && content.style !== null) {\n            if (!isNullOrUndefined(content.style.penSize) && content.style.penSize !== null && typeof content.style.penSize === 'number') {\n                pen.width = content.style.penSize * 0.75;\n            }\n            pen.dashStyle = this.getDashStyle(content.style.dashStyle);\n        }\n        documentHeader.graphics.drawLine(pen, x1, y1, x2, y2);\n    };\n    /* tslint:disable-next-line:no-any */ /* tslint:disable-next-line:max-line-length */ /* tslint:disable-next-line:max-func-body-length */\n    PdfExport.prototype.processAggregates = function (sRows, pdfGrid, border, font, brush, backgroundBrush, isCaption, captionRow, groupIndex, isGroupedFooter) {\n        for (var _i = 0, sRows_1 = sRows; _i < sRows_1.length; _i++) {\n            var row = sRows_1[_i];\n            var startIndex = 0;\n            var leastCaptionSummaryIndex = -1;\n            var index = 0;\n            var isEmpty = true;\n            /* tslint:disable-next-line:no-any */\n            var value = [];\n            for (var i = 0; i < pdfGrid.columns.count; i++) {\n                var cell = row.cells[index];\n                if (cell.cellType === CellType.DetailFooterIntent) {\n                    i--;\n                    index++;\n                    continue;\n                }\n                if (!this.hideColumnInclude) {\n                    while (cell.visible === undefined) {\n                        if (cell.cellType === CellType.DetailFooterIntent) {\n                            continue;\n                        }\n                        if (!isNullOrUndefined(captionRow)) {\n                            if (!isNullOrUndefined(captionRow.cells.getCell(i).value)) {\n                                /* tslint:disable-next-line:max-line-length */\n                                var args = { row: row, type: 'GroupCaption', style: captionRow.cells };\n                                this.parent.trigger(events.pdfAggregateQueryCellInfo, args);\n                                value.push('');\n                                value.push(captionRow.cells.getCell(i).value);\n                                isEmpty = false;\n                                if (!isCaption) {\n                                    i += 1;\n                                }\n                            }\n                            else {\n                                value.push('');\n                            }\n                        }\n                        else {\n                            value.push('');\n                        }\n                        i += 1;\n                        index = index + 1;\n                        cell = row.cells[index];\n                    }\n                    while (!isNullOrUndefined(cell.visible) && !cell.visible) {\n                        index = index + 1;\n                        cell = row.cells[index];\n                    }\n                }\n                if (cell.isDataCell) {\n                    var templateFn = {};\n                    /* tslint:disable-next-line:max-line-length */\n                    if (!isNullOrUndefined(cell.column.footerTemplate) || !isNullOrUndefined(cell.column.groupCaptionTemplate) || !isNullOrUndefined(cell.column.groupFooterTemplate)) {\n                        /* tslint:disable-next-line:no-any */\n                        var result = this.getTemplateFunction(templateFn, i, leastCaptionSummaryIndex, cell);\n                        templateFn = result.templateFunction;\n                        leastCaptionSummaryIndex = result.leastCaptionSummaryIndex;\n                        var txt = void 0;\n                        var data = row.data[cell.column.field ? cell.column.field : cell.column.columnName];\n                        if (this.parent.isReact || this.parent.isVue) {\n                            txt = (templateFn[getEnumValue(CellType, cell.cellType)](data, this.parent));\n                            if (this.parent.isReact) {\n                                this.parent.renderTemplates();\n                            }\n                        }\n                        else {\n                            txt = (templateFn[getEnumValue(CellType, cell.cellType)](data));\n                        }\n                        value.push(txt[0].textContent);\n                        isEmpty = false;\n                    }\n                    else {\n                        /* tslint:disable-next-line:no-any */\n                        var result = this.getSummaryWithoutTemplate(row.data[cell.column.field]);\n                        if (!isNullOrUndefined(result)) {\n                            value.push(result);\n                        }\n                    }\n                }\n                else {\n                    value.push('');\n                }\n                if (isEmpty && value[i] !== '' && !isNullOrUndefined(value[i]) && value[i] !== null) {\n                    isEmpty = false;\n                }\n                index += 1;\n            }\n            if (isCaption) {\n                for (var i = (this.parent.groupSettings.columns.length) + 1; i < value.length - 1; i++) {\n                    value[i] = value[i + 1];\n                }\n            }\n            if (!isEmpty) {\n                if (!isCaption) {\n                    var gridRow = pdfGrid.rows.addRow();\n                    gridRow.style.setBorder(border);\n                    gridRow.style.setFont(font);\n                    gridRow.style.setTextBrush(brush);\n                    gridRow.style.setBackgroundBrush(backgroundBrush);\n                    /* tslint:disable-next-line:max-line-length */\n                    var args = { row: row, type: isGroupedFooter ? 'GroupFooter' : 'Footer', style: gridRow.cells };\n                    this.parent.trigger(events.pdfAggregateQueryCellInfo, args);\n                    for (var i = 0; i < pdfGrid.columns.count; i++) {\n                        gridRow.cells.getCell(i).value = value[i].toString();\n                    }\n                }\n                else {\n                    for (var i = 0; i < pdfGrid.columns.count; i++) {\n                        captionRow.cells.getCell(i).value = value[i].toString();\n                        if (i === (groupIndex + 1) && leastCaptionSummaryIndex !== -1 && leastCaptionSummaryIndex !== 1) {\n                            captionRow.cells.getCell(i).columnSpan = leastCaptionSummaryIndex - (groupIndex + 1);\n                        }\n                        else if (i === (groupIndex + 1) && leastCaptionSummaryIndex === -1) {\n                            captionRow.cells.getCell(i).columnSpan = pdfGrid.columns.count - (groupIndex + 1);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:no-any */\n    PdfExport.prototype.getTemplateFunction = function (templateFn, index, leastCaptionSummaryIndex, cell) {\n        if (!isNullOrUndefined(cell.column.footerTemplate) && cell.cellType === CellType.Summary) {\n            templateFn[getEnumValue(CellType, CellType.Summary)] = compile(cell.column.footerTemplate);\n        }\n        else if (!isNullOrUndefined(cell.column.groupCaptionTemplate)) {\n            if (leastCaptionSummaryIndex === -1) {\n                leastCaptionSummaryIndex = index;\n            }\n            templateFn[getEnumValue(CellType, CellType.CaptionSummary)] = compile(cell.column.groupCaptionTemplate);\n        }\n        else {\n            templateFn[getEnumValue(CellType, CellType.GroupSummary)] = compile(cell.column.groupFooterTemplate);\n        }\n        return { templateFunction: templateFn, leastCaptionSummaryIndex: leastCaptionSummaryIndex };\n    };\n    /* tslint:disable-next-line:no-any */\n    PdfExport.prototype.getSummaryWithoutTemplate = function (data) {\n        if (!isNullOrUndefined(data.Sum)) {\n            return data.Sum;\n        }\n        else if (!isNullOrUndefined(data.Average)) {\n            return data.Average;\n        }\n        else if (!isNullOrUndefined(data.Max)) {\n            return data.Max;\n        }\n        else if (!isNullOrUndefined(data.Min)) {\n            return data.Min;\n        }\n        else if (!isNullOrUndefined(data.Count)) {\n            return data.Count;\n        }\n        else if (!isNullOrUndefined(data.TrueCount)) {\n            return data.TrueCount;\n        }\n        else if (!isNullOrUndefined(data.FalseCount)) {\n            return data.FalseCount;\n        }\n        else if (!isNullOrUndefined(data.Custom)) {\n            return data.Custom;\n        }\n    };\n    /**\n     * Set alignment, width and type of the values of the column\n     */\n    PdfExport.prototype.setColumnProperties = function (gridColumns, pdfGrid, helper, gObj, allowHorizontalOverflow) {\n        var startIndex = gObj.groupSettings.columns.length;\n        for (var i = 0; i < startIndex; i++) {\n            pdfGrid.columns.getColumn(i).width = 20;\n        }\n        for (var i = 0; i < gridColumns.length; i++) {\n            if (!isNullOrUndefined(gridColumns[i].textAlign)) {\n                pdfGrid.columns.getColumn(i + startIndex).format = this.getHorizontalAlignment(gridColumns[i].textAlign);\n            }\n            // Need to add width consideration with % value\n            if (pdfGrid.style.allowHorizontalOverflow && !isNullOrUndefined(gridColumns[i].width) && allowHorizontalOverflow) {\n                pdfGrid.columns.getColumn(i + startIndex).width = typeof gridColumns[i].width === 'number' ?\n                    gridColumns[i].width * 0.75 : helper.getConvertedWidth(gridColumns[i].width) * 0.75;\n            }\n        }\n    };\n    /**\n     * set default style properties of each rows in exporting grid\n     * @private\n     */\n    PdfExport.prototype.setRecordThemeStyle = function (row, border) {\n        if (!isNullOrUndefined(this.gridTheme) && !isNullOrUndefined(this.gridTheme.record)) {\n            var fontFamily = !isNullOrUndefined(this.gridTheme.record.fontName) ?\n                this.getFontFamily(this.gridTheme.record.fontName) : PdfFontFamily.Helvetica;\n            var fontSize = !isNullOrUndefined(this.gridTheme.record.fontSize) ? this.gridTheme.record.fontSize : 9.75;\n            var fontStyle = this.getFontStyle(this.gridTheme.record);\n            var font = new PdfStandardFont(fontFamily, fontSize, fontStyle);\n            if (!isNullOrUndefined(this.gridTheme.record.font)) {\n                font = this.gridTheme.record.font;\n            }\n            row.style.setFont(font);\n            var pdfColor = new PdfColor();\n            if (!isNullOrUndefined(this.gridTheme.record.fontColor)) {\n                var penBrushColor = this.hexToRgb(this.gridTheme.record.fontColor);\n                pdfColor = new PdfColor(penBrushColor.r, penBrushColor.g, penBrushColor.b);\n            }\n            row.style.setTextBrush(new PdfSolidBrush(pdfColor));\n        }\n        else {\n            row.style.setTextBrush(new PdfSolidBrush(new PdfColor(0, 0, 0)));\n        }\n        var borderRecord = this.gridTheme && this.gridTheme.record &&\n            this.gridTheme.record.border ? this.getBorderStyle(this.gridTheme.record.border) : border;\n        row.style.setBorder(borderRecord);\n        return row;\n    };\n    /**\n     * generate the formatted cell values\n     * @private\n     */\n    PdfExport.prototype.processRecord = function (border, columns, gObj, dataSource, pdfGrid, startIndex, pdfExportProperties, helper, rowIndex) {\n        var rows = helper.getGridRowModel(columns, dataSource, gObj, rowIndex);\n        for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n            var row = rows_1[_i];\n            rowIndex++;\n            // create a new row and set default style properties\n            var gridRow = this.setRecordThemeStyle(pdfGrid.rows.addRow(), border);\n            var cellLength = row.cells.length;\n            for (var j = 0; j < cellLength; j++) {\n                var gridCell = row.cells[j];\n                if (gridCell.cellType !== CellType.Data) {\n                    continue;\n                }\n                var column = gridCell.column;\n                var field = column.field;\n                var cellValue = !isNullOrUndefined(field) ? column.valueAccessor(field, row.data, column) : '';\n                var value = !isNullOrUndefined(cellValue) ? cellValue : '';\n                var foreignKeyData = void 0;\n                if (column.isForeignColumn && column.isForeignColumn()) {\n                    foreignKeyData = helper.getFData(value, column);\n                    value = getValue(column.foreignKeyValue, foreignKeyData);\n                }\n                var data = row.data;\n                var cell = gridRow.cells.getCell(j);\n                var args = {\n                    data: data,\n                    value: value,\n                    column: column,\n                    style: undefined,\n                    colSpan: 1,\n                    cell: cell\n                };\n                args.value = this.exportValueFormatter.formatCellValue(args, gObj.isServerRendered);\n                this.parent.trigger(events.pdfQueryCellInfo, args);\n                cell.value = args.value;\n                if (!isNullOrUndefined(args.style)) {\n                    this.processCellStyle(cell, args);\n                }\n                if (args.colSpan > 1) {\n                    if ((j + 1 + args.colSpan) > gridRow.cells.count) {\n                        args.colSpan = gridRow.cells.count - (j + 1);\n                    }\n                    cell.columnSpan = args.colSpan;\n                    for (var i = 1; i < cell.columnSpan; i++) {\n                        var spanCell = gridRow.cells.getCell(j + i);\n                        spanCell.value = '';\n                    }\n                    j += (args.colSpan - 1);\n                }\n            }\n            if (row.isExpand) {\n                var gridRow_1 = this.setRecordThemeStyle(pdfGrid.rows.addRow(), border);\n                var cell = gridRow_1.cells.getCell(startIndex);\n                cell.columnSpan = gridRow_1.cells.count - (startIndex);\n                cell.style.cellPadding = new PdfPaddings(10, 10, 10, 10);\n                gObj.isPrinting = true;\n                var exportType = (!isNullOrUndefined(pdfExportProperties) && pdfExportProperties.exportType) ?\n                    pdfExportProperties.exportType : 'AllPages';\n                var returnValue = this.helper.createChildGrid(gObj, row, exportType, this.gridPool);\n                var childGridObj = returnValue.childGrid;\n                var element = returnValue.element;\n                childGridObj.actionFailure =\n                    helper.failureHandler(this.gridPool, childGridObj, this.globalResolve);\n                var args = { childGrid: childGridObj, row: row, cell: cell, exportProperties: pdfExportProperties };\n                this.parent.trigger(events.exportDetailDataBound, args);\n                childGridObj.beforeDataBound = this.childGridCell(cell, childGridObj, pdfExportProperties);\n                childGridObj.appendTo(element);\n            }\n            this.parent.notify(events.exportRowDataBound, { type: 'pdf', rowObj: row });\n        }\n        return rowIndex;\n    };\n    PdfExport.prototype.childGridCell = function (cell, childGridObj, pdfExportProperties) {\n        var _this = this;\n        return function (result) {\n            childGridObj.beforeDataBound = null;\n            result.cancel = true;\n            cell.value = _this.processGridExport(childGridObj, result, pdfExportProperties);\n            childGridObj.destroy();\n            detach(childGridObj.element);\n            _this.gridPool[childGridObj.id] = true;\n            _this.helper.checkAndExport(_this.gridPool, _this.globalResolve);\n            return cell;\n        };\n    };\n    PdfExport.prototype.processCellStyle = function (cell, args) {\n        if (!isNullOrUndefined(args.style.backgroundColor)) {\n            var backColor = this.hexToRgb(args.style.backgroundColor);\n            cell.style.backgroundBrush = new PdfSolidBrush(new PdfColor(backColor.r, backColor.g, backColor.b));\n        }\n        if (!isNullOrUndefined(args.style.textAlignment)) {\n            cell.style.stringFormat = this.getHorizontalAlignment(args.style.textAlignment);\n        }\n        if (!isNullOrUndefined(args.style.cellPadding)) {\n            cell.style.cellPadding = args.style.cellPadding;\n        }\n        if (!isNullOrUndefined(args.style.verticalAlignment)) {\n            cell.style.stringFormat = this.getVerticalAlignment(args.style.verticalAlignment, cell.style.stringFormat);\n        }\n        if (!isNullOrUndefined(args.style.textBrushColor)) {\n            var textBrushColor = this.hexToRgb(args.style.textBrushColor);\n            cell.style.textBrush = new PdfSolidBrush(new PdfColor(textBrushColor.r, textBrushColor.g, textBrushColor.b));\n        }\n        if (!isNullOrUndefined(args.style.textPenColor)) {\n            var textPenColor = this.hexToRgb(args.style.textPenColor);\n            cell.style.textPen = new PdfPen(new PdfColor(textPenColor.r, textPenColor.g, textPenColor.b));\n        }\n        if (!isNullOrUndefined(args.style.fontFamily) || !isNullOrUndefined(args.style.fontSize) || !isNullOrUndefined(args.style.bold) ||\n            !isNullOrUndefined(args.style.italic) || !isNullOrUndefined(args.style.underline) || !isNullOrUndefined(args.style.strikeout)) {\n            cell.style.font = this.getFont(args);\n        }\n        if (!isNullOrUndefined(args.style.border)) {\n            var border = new PdfBorders();\n            var borderWidth = args.style.border.width;\n            // set border width\n            var width = (!isNullOrUndefined(borderWidth) && typeof borderWidth === 'number') ? (borderWidth * 0.75) : (undefined);\n            // set border color\n            var color = new PdfColor(196, 196, 196);\n            if (!isNullOrUndefined(args.style.border.color)) {\n                var borderColor = this.hexToRgb(args.style.border.color);\n                color = new PdfColor(borderColor.r, borderColor.g, borderColor.b);\n            }\n            var pen = new PdfPen(color, width);\n            // set border dashStyle 'Solid <default>, Dash, Dot, DashDot, DashDotDot'\n            if (!isNullOrUndefined(args.style.border.dashStyle)) {\n                pen.dashStyle = this.getDashStyle(args.style.border.dashStyle);\n            }\n            border.all = pen;\n            cell.style.borders = border;\n        }\n        if (!isNullOrUndefined(args.style.paragraphIndent)) {\n            cell.style.stringFormat = new PdfStringFormat();\n            cell.style.stringFormat.paragraphIndent = args.style.paragraphIndent;\n        }\n    };\n    /**\n     * set text alignment of each columns in exporting grid\n     * @private\n     */\n    PdfExport.prototype.getHorizontalAlignment = function (textAlign, format) {\n        if (format === undefined) {\n            format = new PdfStringFormat();\n        }\n        switch (textAlign) {\n            case 'Right':\n                format.alignment = PdfTextAlignment.Right;\n                break;\n            case 'Center':\n                format.alignment = PdfTextAlignment.Center;\n                break;\n            case 'Justify':\n                format.alignment = PdfTextAlignment.Justify;\n                break;\n            case 'Left':\n                format.alignment = PdfTextAlignment.Left;\n                break;\n        }\n        return format;\n    };\n    /**\n     * set vertical alignment of each columns in exporting grid\n     * @private\n     */\n    PdfExport.prototype.getVerticalAlignment = function (verticalAlign, format, textAlign) {\n        if (format === undefined) {\n            format = new PdfStringFormat();\n            format = this.getHorizontalAlignment(textAlign, format);\n        }\n        switch (verticalAlign) {\n            case 'Bottom':\n                format.lineAlignment = PdfVerticalAlignment.Bottom;\n                break;\n            case 'Middle':\n                format.lineAlignment = PdfVerticalAlignment.Middle;\n                break;\n            case 'Top':\n                format.lineAlignment = PdfVerticalAlignment.Top;\n                break;\n        }\n        return format;\n    };\n    PdfExport.prototype.getFontFamily = function (fontFamily) {\n        switch (fontFamily) {\n            case 'TimesRoman':\n                return 2;\n            case 'Courier':\n                return 1;\n            case 'Symbol':\n                return 3;\n            case 'ZapfDingbats':\n                return 4;\n            default:\n                return 0;\n        }\n    };\n    /* tslint:disable-next-line:no-any */\n    PdfExport.prototype.getFont = function (content) {\n        if (content.font) {\n            return content.font;\n        }\n        var fontSize = (!isNullOrUndefined(content.style.fontSize)) ? (content.style.fontSize * 0.75) : 9.75;\n        var fontFamily = (!isNullOrUndefined(content.style.fontFamily)) ?\n            (this.getFontFamily(content.style.fontFamily)) : PdfFontFamily.TimesRoman;\n        var fontStyle = PdfFontStyle.Regular;\n        if (!isNullOrUndefined(content.style.bold) && content.style.bold) {\n            fontStyle |= PdfFontStyle.Bold;\n        }\n        if (!isNullOrUndefined(content.style.italic) && content.style.italic) {\n            fontStyle |= PdfFontStyle.Italic;\n        }\n        if (!isNullOrUndefined(content.style.underline) && content.style.underline) {\n            fontStyle |= PdfFontStyle.Underline;\n        }\n        if (!isNullOrUndefined(content.style.strikeout) && content.style.strikeout) {\n            fontStyle |= PdfFontStyle.Strikeout;\n        }\n        return new PdfStandardFont(fontFamily, fontSize, fontStyle);\n    };\n    PdfExport.prototype.getPageNumberStyle = function (pageNumberType) {\n        switch (pageNumberType) {\n            case 'LowerLatin':\n                return 2;\n            case 'LowerRoman':\n                return 3;\n            case 'UpperLatin':\n                return 4;\n            case 'UpperRoman':\n                return 5;\n            default:\n                return 1;\n        }\n    };\n    PdfExport.prototype.setContentFormat = function (content, format) {\n        if (!isNullOrUndefined(content.size)) {\n            var width = content.size.width * 0.75;\n            var height = content.size.height * 0.75;\n            format = new PdfStringFormat(PdfTextAlignment.Left, PdfVerticalAlignment.Middle);\n            if (!isNullOrUndefined(content.style.hAlign)) {\n                switch (content.style.hAlign) {\n                    case 'Right':\n                        format.alignment = PdfTextAlignment.Right;\n                        break;\n                    case 'Center':\n                        format.alignment = PdfTextAlignment.Center;\n                        break;\n                    case 'Justify':\n                        format.alignment = PdfTextAlignment.Justify;\n                        break;\n                    default:\n                        format.alignment = PdfTextAlignment.Left;\n                }\n            }\n            if (!isNullOrUndefined(content.style.vAlign)) {\n                format = this.getVerticalAlignment(content.style.vAlign, format);\n            }\n            return { format: format, size: new SizeF(width, height) };\n        }\n        return null;\n    };\n    PdfExport.prototype.getPageSize = function (pageSize) {\n        switch (pageSize) {\n            case 'Letter':\n                return new SizeF(612, 792);\n            case 'Note':\n                return new SizeF(540, 720);\n            case 'Legal':\n                return new SizeF(612, 1008);\n            case 'A0':\n                return new SizeF(2380, 3368);\n            case 'A1':\n                return new SizeF(1684, 2380);\n            case 'A2':\n                return new SizeF(1190, 1684);\n            case 'A3':\n                return new SizeF(842, 1190);\n            case 'A5':\n                return new SizeF(421, 595);\n            case 'A6':\n                return new SizeF(297, 421);\n            case 'A7':\n                return new SizeF(210, 297);\n            case 'A8':\n                return new SizeF(148, 210);\n            case 'A9':\n                return new SizeF(105, 148);\n            // case 'A10':\n            //     return new SizeF(74, 105);\n            case 'B0':\n                return new SizeF(2836, 4008);\n            case 'B1':\n                return new SizeF(2004, 2836);\n            case 'B2':\n                return new SizeF(1418, 2004);\n            case 'B3':\n                return new SizeF(1002, 1418);\n            case 'B4':\n                return new SizeF(709, 1002);\n            case 'B5':\n                return new SizeF(501, 709);\n            case 'Archa':\n                return new SizeF(648, 864);\n            case 'Archb':\n                return new SizeF(864, 1296);\n            case 'Archc':\n                return new SizeF(1296, 1728);\n            case 'Archd':\n                return new SizeF(1728, 2592);\n            case 'Arche':\n                return new SizeF(2592, 3456);\n            case 'Flsa':\n                return new SizeF(612, 936);\n            case 'HalfLetter':\n                return new SizeF(396, 612);\n            case 'Letter11x17':\n                return new SizeF(792, 1224);\n            case 'Ledger':\n                return new SizeF(1224, 792);\n            default:\n                return new SizeF(595, 842);\n        }\n    };\n    PdfExport.prototype.getDashStyle = function (dashStyle) {\n        switch (dashStyle) {\n            case 'Dash':\n                return 1;\n            case 'Dot':\n                return 2;\n            case 'DashDot':\n                return 3;\n            case 'DashDotDot':\n                return 4;\n            default:\n                return 0;\n        }\n    };\n    PdfExport.prototype.getPenFromContent = function (content) {\n        var pen = new PdfPen(new PdfColor(0, 0, 0));\n        if (!isNullOrUndefined(content.style) && content.style !== null && !isNullOrUndefined(content.style.penColor)) {\n            var penColor = this.hexToRgb(content.style.penColor);\n            pen = new PdfPen(new PdfColor(penColor.r, penColor.g, penColor.b));\n        }\n        return pen;\n    };\n    PdfExport.prototype.getBrushFromContent = function (content) {\n        var brush = null;\n        if (!isNullOrUndefined(content.style.textBrushColor)) {\n            /* tslint:disable-next-line:max-line-length */\n            var brushColor = this.hexToRgb(content.style.textBrushColor);\n            brush = new PdfSolidBrush(new PdfColor(brushColor.r, brushColor.g, brushColor.b));\n        }\n        return brush;\n    };\n    PdfExport.prototype.hexToRgb = function (hex) {\n        if (hex === null || hex === '' || hex.length !== 7) {\n            throw new Error('please set valid hex value for color...');\n        }\n        hex = hex.substring(1);\n        var bigint = parseInt(hex, 16);\n        var r = (bigint >> 16) & 255;\n        var g = (bigint >> 8) & 255;\n        var b = bigint & 255;\n        return { r: r, g: g, b: b };\n    };\n    PdfExport.prototype.getFontStyle = function (theme) {\n        var fontStyle = PdfFontStyle.Regular;\n        if (!isNullOrUndefined(theme) && theme.bold) {\n            fontStyle |= PdfFontStyle.Bold;\n        }\n        if (!isNullOrUndefined(theme) && theme.italic) {\n            fontStyle |= PdfFontStyle.Italic;\n        }\n        if (!isNullOrUndefined(theme) && theme.underline) {\n            fontStyle |= PdfFontStyle.Underline;\n        }\n        if (!isNullOrUndefined(theme) && theme.strikeout) {\n            fontStyle |= PdfFontStyle.Strikeout;\n        }\n        return fontStyle;\n    };\n    PdfExport.prototype.getBorderStyle = function (border) {\n        var borders = new PdfBorders();\n        if (!isNullOrUndefined(border)) {\n            var borderWidth = border.width;\n            // set border width\n            var width = (!isNullOrUndefined(borderWidth) && typeof borderWidth === 'number') ? borderWidth * 0.75 : undefined;\n            // set border color\n            var color = new PdfColor(196, 196, 196);\n            if (!isNullOrUndefined(border.color)) {\n                var borderColor = this.hexToRgb(border.color);\n                color = new PdfColor(borderColor.r, borderColor.g, borderColor.b);\n            }\n            var pen = new PdfPen(color, width);\n            // set border dashStyle 'Solid <default>, Dash, Dot, DashDot, DashDotDot'\n            if (!isNullOrUndefined(border.dashStyle)) {\n                pen.dashStyle = this.getDashStyle(border.dashStyle);\n            }\n            borders.all = pen;\n        }\n        else {\n            borders.all = new PdfPen(new PdfColor(234, 234, 234));\n        }\n        return borders;\n    };\n    /**\n     * To destroy the pdf export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        //destroy for exporting\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n"]},"metadata":{},"sourceType":"module"}