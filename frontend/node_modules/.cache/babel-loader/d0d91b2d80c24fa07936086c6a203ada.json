{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\appsk\\\\Documents\\\\Projects\\\\PredictiveMaintenance\\\\React PDM\\\\env\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { Component, useState } from 'react';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport XLSX from 'xlsx';\nimport { make_cols } from './MakeColumns';\nimport { SheetJSFT } from './types';\nimport { GridComponent, ColumnDirective, ColumnsDirective, Page, Inject, Filter, gridObserver } from '@syncfusion/ej2-react-grids';\nimport testData from './json.json';\n\nfunction App() {\n  _s();\n\n  const [equipmentItems, setEq] = useState([]);\n\n  function updateEquipmentItemsState(e) {\n    setEq(eq => (equipmentItems, e));\n  } // Table data\n\n\n  var graphLabel = [];\n  var xAxisData = [];\n  var yAxisData = [];\n  var pdmGraphCoordinates = [];\n  var file = {};\n  var data = [];\n  var cols = [];\n\n  const groupBy = require('json-groupby');\n\n  const selectionOptions = {\n    type: 'Multiple'\n  };\n  let grid = null;\n\n  const rowSelected = () => {\n    if (grid) {\n      const selectedRowIndexes = grid.getSelectedRecords();\n      console.log(selectedRowIndexes);\n    }\n  }; // Generate graph coordinates\n\n\n  function generateCrd(x, y) {\n    const coordinates = [];\n    var i;\n\n    for (i = 0; i < x.length; i++) {\n      const point = {\n        'x': x[i],\n        'y': y[i]\n      };\n      coordinates.push(point);\n    }\n\n    return coordinates;\n  }\n\n  function renderChart() {\n    var Chart = require('chart.js');\n\n    const ctx = document.getElementById('chart').getContext('2d');\n    const myChart = new Chart(ctx, {\n      type: 'scatter',\n      data: {\n        //labels: xAxisData,\n        datasets: [{\n          label: graphLabel[0],\n          data: pdmGraphCoordinates[0],\n          backgroundColor: \"#FF4136\",\n          borderColor: \"#FF4136\",\n          fill: false,\n          showLine: true,\n          borderWidth: 1\n        }, {\n          label: graphLabel[1],\n          data: pdmGraphCoordinates[1],\n          backgroundColor: \"#0074D9\",\n          borderColor: \"#0074D9\",\n          fill: false,\n          showLine: true,\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    });\n  }\n\n  function download(content, fileName, contentType) {\n    var a = document.createElement(\"a\");\n    var file = new Blob([content], {\n      type: contentType\n    });\n    a.href = URL.createObjectURL(file);\n    a.download = fileName;\n    a.click();\n  }\n\n  function handleChange(e) {\n    const files = e.target.files;\n    if (files && files[0]) file = files[0];\n  }\n\n  ;\n\n  function handleFile() {\n    /* Boilerplate to set up FileReader */\n    const reader = new FileReader();\n    const rABS = !!reader.readAsBinaryString;\n\n    reader.onload = e => {\n      const bstr = e.target.result;\n      const wb = XLSX.read(bstr, {\n        type: rABS ? 'binary' : 'array',\n        bookVBA: true\n      });\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      data = XLSX.utils.sheet_to_json(ws);\n      cols = make_cols(ws['!ref']); // Preprocess data\n\n      const strData = JSON.stringify(data, null, 2);\n      var jsonObject = JSON.parse(strData);\n      var i;\n\n      for (i = 0; i < jsonObject.length; i++) {\n        if (!(\"Part Number\" in jsonObject[i] && \"Code\" in jsonObject[i] && \"Date\" in jsonObject[i])) {\n          delete jsonObject[i];\n        } else {\n          if (typeof jsonObject[i].Code !== 'number') {\n            delete jsonObject[i];\n          } else if (typeof jsonObject[i][\"Date\"] !== 'number') {\n            delete jsonObject[i];\n          }\n        }\n      }\n\n      updateEquipmentItemsState(jsonObject);\n      const jsonRegrouped = groupBy(jsonObject, ['Equipment ID', 'Part Number']); // Random data selection\n\n      var i;\n\n      for (i = 0; i < 2; i++) {\n        yAxisData = [];\n        xAxisData = [];\n        var keys = Object.keys(jsonRegrouped);\n        var randIndex = Math.floor(Math.random() * keys.length);\n        var randKey = keys[randIndex];\n        const randomGroup = jsonRegrouped[randKey];\n        var label = randKey + \" => \";\n        keys = Object.keys(randomGroup);\n        randIndex = Math.floor(Math.random() * keys.length);\n        randKey = keys[randIndex];\n        const randomGroup2 = randomGroup[randKey];\n        label += randKey;\n        graphLabel.push(label);\n        randomGroup2.forEach(function (item) {\n          yAxisData.push(item[\"Code\"]);\n          xAxisData.push(item[\"Date\"]);\n        });\n        pdmGraphCoordinates.push(generateCrd(xAxisData, yAxisData));\n      }\n\n      console.log(jsonObject);\n      console.log(testData); //grid.refresh();\n\n      renderChart();\n    };\n\n    if (rABS) {\n      reader.readAsBinaryString(file);\n    } else {\n      reader.readAsArrayBuffer(file);\n    }\n\n    ;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"file\",\n      children: \"Upload your Excel File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      id: \"file\",\n      accept: SheetJSFT,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Update\",\n      onClick: handleFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"parent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"EqID\",\n        style: {\n          marginTop: '20%',\n          margin: '10%'\n        },\n        children: /*#__PURE__*/_jsxDEV(GridComponent, {\n          dataSource: equipmentItems,\n          allowPaging: true,\n          pageSettings: {\n            pageSize: 10\n          },\n          allowFiltering: true,\n          rowSelected: rowSelected,\n          ref: g => grid = g,\n          children: [/*#__PURE__*/_jsxDEV(ColumnsDirective, {\n            children: /*#__PURE__*/_jsxDEV(ColumnDirective, {\n              field: \"Equipment ID\",\n              headerText: \"Equipment List\",\n              textAlign: \"Center\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Inject, {\n            services: [Page, Filter]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 5\n      }, this), \",\", /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"PID\",\n        style: {\n          marginTop: '20%',\n          margin: '10%'\n        },\n        children: /*#__PURE__*/_jsxDEV(GridComponent, {\n          dataSource: data,\n          allowPaging: true,\n          pageSettings: {\n            pageSize: 10\n          },\n          allowFiltering: true //selectionSettings={selectionOptions}\n          ,\n          children: [/*#__PURE__*/_jsxDEV(ColumnsDirective, {\n            children: [/*#__PURE__*/_jsxDEV(ColumnDirective, {\n              type: \"checkbox\",\n              width: \"50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(ColumnDirective, {\n              field: \"id\",\n              headerText: \"Part Number\",\n              textAlign: \"Center\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(Inject, {\n            services: [Page, Filter]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"RC\",\n        style: {\n          marginTop: '20%',\n          margin: '10%'\n        },\n        children: /*#__PURE__*/_jsxDEV(GridComponent, {\n          dataSource: data,\n          allowPaging: true,\n          pageSettings: {\n            pageSize: 10\n          },\n          allowFiltering: true //selectionSettings={selectionOptions}\n          ,\n          children: [/*#__PURE__*/_jsxDEV(ColumnsDirective, {\n            children: [/*#__PURE__*/_jsxDEV(ColumnDirective, {\n              type: \"checkbox\",\n              width: \"50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(ColumnDirective, {\n              field: \"Code\",\n              headerText: \"Repair Code\",\n              textAlign: \"Center\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(Inject, {\n            services: [Page, Filter]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"chart\",\n        width: \"1000\",\n        height: \"1000\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"wn0v6cTaglUM3iSePsFIaxHmxfM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/appsk/Documents/Projects/PredictiveMaintenance/React PDM/env/frontend/src/App.js"],"names":["React","Component","useState","Fabric","DefaultButton","XLSX","make_cols","SheetJSFT","GridComponent","ColumnDirective","ColumnsDirective","Page","Inject","Filter","gridObserver","testData","App","equipmentItems","setEq","updateEquipmentItemsState","e","eq","graphLabel","xAxisData","yAxisData","pdmGraphCoordinates","file","data","cols","groupBy","require","selectionOptions","type","grid","rowSelected","selectedRowIndexes","getSelectedRecords","console","log","generateCrd","x","y","coordinates","i","length","point","push","renderChart","Chart","ctx","document","getElementById","getContext","myChart","datasets","label","backgroundColor","borderColor","fill","showLine","borderWidth","options","scales","yAxes","ticks","beginAtZero","download","content","fileName","contentType","a","createElement","Blob","href","URL","createObjectURL","click","handleChange","files","target","handleFile","reader","FileReader","rABS","readAsBinaryString","onload","bstr","result","wb","read","bookVBA","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","strData","JSON","stringify","jsonObject","parse","Code","jsonRegrouped","keys","Object","randIndex","Math","floor","random","randKey","randomGroup","randomGroup2","forEach","item","readAsArrayBuffer","marginTop","margin","pageSize","g"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { Component, useState } from 'react';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport XLSX from 'xlsx';\nimport { make_cols } from './MakeColumns';\nimport { SheetJSFT } from './types';\nimport {GridComponent, ColumnDirective, ColumnsDirective,\n  Page, Inject, Filter, gridObserver} from '@syncfusion/ej2-react-grids';\nimport testData from './json.json';\n \nfunction App() {\n\n  const [equipmentItems, setEq] = useState([]);\n  function updateEquipmentItemsState(e) {\n    setEq(eq => (equipmentItems, e));\n  }\n\n    // Table data\n    var graphLabel = [];\n    var xAxisData = [];\n    var yAxisData = [];\n    var pdmGraphCoordinates = [];\n    \n     var file = {};\n     var data = [];\n     var cols = [];\n    \n     const groupBy = require('json-groupby');\n\n     const selectionOptions = {\n      type: 'Multiple'\n    };\n  \n    let grid = null;\n    const rowSelected = () => { \n      if(grid){\n        const selectedRowIndexes = grid.getSelectedRecords();\n        console.log(selectedRowIndexes);\n      }\n    }\n\n    // Generate graph coordinates\n    function generateCrd(x, y) {\n      const coordinates = [];\n      var i;\n      for(i = 0; i < x.length; i++) {\n        const point = {'x': x[i], 'y':y[i]};\n        coordinates.push(point);\n      }\n      return coordinates;\n    }\n  \n  function renderChart() {\n    var Chart = require('chart.js');\n    const ctx = document.getElementById('chart').getContext('2d');\n    const myChart = new Chart(ctx, {\n    type: 'scatter',\n    data: {\n        //labels: xAxisData,\n        datasets: [{\n            label: graphLabel[0],\n            data: pdmGraphCoordinates[0],\n            backgroundColor: \"#FF4136\",\n            borderColor: \"#FF4136\",\n            fill: false,\n            showLine: true,\n            borderWidth: 1\n        },\n        {\n          label: graphLabel[1],\n          data: pdmGraphCoordinates[1],\n          backgroundColor: \"#0074D9\",\n          borderColor: \"#0074D9\",\n          fill: false,\n          showLine: true,\n          borderWidth: 1\n      }]\n    },\n    options: {\n        scales: {\n            yAxes: [{\n                ticks: {\n                    beginAtZero: true\n                }\n            }]\n        }\n    }\n});\n  }\n\n\n  function download(content, fileName, contentType) {\n    var a = document.createElement(\"a\");\n    var file = new Blob([content], {type: contentType});\n    a.href = URL.createObjectURL(file);\n    a.download = fileName;\n    a.click();\n}\n \n function handleChange(e) {\n    const files = e.target.files;\n    if (files && files[0]) file = files[0];\n  };\n \n function handleFile() {\n    /* Boilerplate to set up FileReader */\n    const reader = new FileReader();\n    const rABS = !!reader.readAsBinaryString;\n \n    reader.onload = (e) => {\n      const bstr = e.target.result;\n      const wb = XLSX.read(bstr, { type: rABS ? 'binary' : 'array', bookVBA : true });\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      data = XLSX.utils.sheet_to_json(ws);\n      cols = make_cols(ws['!ref'])\n\n        // Preprocess data\n        const strData = JSON.stringify(data, null, 2)\n        var jsonObject = JSON.parse(strData);\n        var i;\n        for(i = 0; i < jsonObject.length; i++){\n          if (!(\"Part Number\" in jsonObject[i] && \"Code\" in jsonObject[i] && \"Date\" in jsonObject[i])) {\n            delete jsonObject[i];\n          }\n          else {\n            if(typeof jsonObject[i].Code !== 'number') {\n              delete jsonObject[i];\n            }\n            else if(typeof jsonObject[i][\"Date\"] !== 'number') {\n              delete jsonObject[i];\n            }\n          }\n        }\n        updateEquipmentItemsState(jsonObject);\n        const jsonRegrouped = groupBy(jsonObject, ['Equipment ID', 'Part Number'])\n        \n        // Random data selection\n        var i;\n        for(i = 0; i < 2; i++) {\n          yAxisData = [];\n          xAxisData = [];\n        var keys = Object.keys(jsonRegrouped)\n        var randIndex = Math.floor(Math.random() * keys.length)\n        var randKey = keys[randIndex]\n        const randomGroup = jsonRegrouped[randKey]\n        var label = randKey + \" => \";\n        keys = Object.keys(randomGroup)\n        randIndex = Math.floor(Math.random() * keys.length)\n        randKey = keys[randIndex]\n        const randomGroup2 = randomGroup[randKey];\n        label += randKey;\n        graphLabel.push(label);\n\n        randomGroup2.forEach(function(item) {\n          yAxisData.push(item[\"Code\"]);\n          xAxisData.push(item[\"Date\"]);\n        })\n        pdmGraphCoordinates.push(generateCrd(xAxisData, yAxisData));\n      }\n\n      console.log(jsonObject);\n      console.log(testData);\n      //grid.refresh();\n\n        renderChart();\n\n    };\n    if (rABS) {\n      reader.readAsBinaryString(file);\n    } else {\n      reader.readAsArrayBuffer(file);\n    };\n  }\n\n \n    return (\n      <div>\n        <label htmlFor=\"file\">Upload your Excel File</label>\n        <br />\n        <input type=\"file\" className=\"form-control\" id=\"file\" accept={SheetJSFT} onChange={handleChange} />\n        <br />\n        <input type='submit' \n          value=\"Update\"\n          onClick={handleFile} />\n        \n    <div id=\"parent\">\n    <div id=\"EqID\" style={{ marginTop: '20%', margin:'10%'}}>\n      <GridComponent dataSource={equipmentItems}  \n        allowPaging={true}\n        pageSettings={{pageSize:10}}\n        allowFiltering={true}\n        rowSelected={rowSelected}\n        ref={g => grid = g}\n        >\n        <ColumnsDirective>\n      <ColumnDirective field='Equipment ID' headerText='Equipment List' textAlign='Center'/>\n      </ColumnsDirective>\n      <Inject services={[Page, Filter]}/>\n      </GridComponent>\n    </div>,\n\n<div id=\"PID\" style={{ marginTop: '20%', margin:'10%'}}>\n<GridComponent dataSource={data}\nallowPaging={true}\npageSettings={{pageSize:10}}\nallowFiltering={true}\n//selectionSettings={selectionOptions}\n>\n  <ColumnsDirective>\n  <ColumnDirective type='checkbox' width='50'/>\n<ColumnDirective field='id' headerText='Part Number' textAlign='Center'/>\n</ColumnsDirective>\n<Inject services={[Page, Filter]}/>\n</GridComponent>\n</div> \n\n<div id=\"RC\" style={{ marginTop: '20%', margin:'10%'}}>\n<GridComponent dataSource={data}\nallowPaging={true}\npageSettings={{pageSize:10}}\nallowFiltering={true}\n//selectionSettings={selectionOptions}\n>\n  <ColumnsDirective>\n  <ColumnDirective type='checkbox' width='50'/>\n<ColumnDirective field='Code' headerText='Repair Code' textAlign='Center'/>\n</ColumnsDirective>\n<Inject services={[Page, Filter]}/>\n</GridComponent>\n</div>\n\n  </div>\n\n        <div>\n          <canvas id=\"chart\" width=\"1000\" height=\"1000\"></canvas>\n        </div>\n      </div>       \n\n    )\n  }\n\n \nexport default App;"]},"metadata":{},"sourceType":"module"}