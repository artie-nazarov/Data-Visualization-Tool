{"ast":null,"code":"import { Browser } from '@syncfusion/ej2-base';\nimport { extend, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { closest, classList } from '@syncfusion/ej2-base';\nimport { setCssInGridPopUp, getActualPropFromColl, isActionPrevent, iterateExtend, parentsUntil } from '../base/util';\nimport * as events from '../base/constant';\nimport { AriaService } from '../services/aria-service';\n/**\n *\n * The `Sort` module is used to handle sorting action.\n */\n\nvar Sort =\n/** @class */\nfunction () {\n  /**\n   * Constructor for Grid sorting module\n   * @hidden\n   */\n  function Sort(parent, sortSettings, sortedColumns, locator) {\n    this.contentRefresh = true;\n    this.isModelChanged = true;\n    this.aria = new AriaService();\n    this.currentTarget = null;\n    this.parent = parent;\n    this.sortSettings = sortSettings;\n    this.sortedColumns = sortedColumns;\n    this.focus = locator.getService('focus');\n    this.addEventListener();\n  }\n  /**\n   * The function used to update sortSettings\n   * @return {void}\n   * @hidden\n   */\n\n\n  Sort.prototype.updateModel = function () {\n    var sortedColumn = {\n      field: this.columnName,\n      direction: this.direction\n    };\n    var index;\n    var gCols = this.parent.groupSettings.columns;\n    var flag = false;\n\n    if (!this.isMultiSort) {\n      if (!gCols.length) {\n        this.sortSettings.columns = [sortedColumn];\n      } else {\n        var sortedCols = [];\n\n        for (var i = 0, len = gCols.length; i < len; i++) {\n          index = this.getSortedColsIndexByField(gCols[i], sortedCols);\n\n          if (this.columnName === gCols[i]) {\n            flag = true;\n            sortedCols.push(sortedColumn);\n          } else {\n            var sCol = this.getSortColumnFromField(gCols[i]);\n            sortedCols.push({\n              field: sCol.field,\n              direction: sCol.direction,\n              isFromGroup: sCol.isFromGroup\n            });\n          }\n        }\n\n        if (!flag) {\n          sortedCols.push(sortedColumn);\n        }\n\n        this.sortSettings.columns = sortedCols;\n      }\n    } else {\n      index = this.getSortedColsIndexByField(this.columnName);\n\n      if (index > -1) {\n        this.sortSettings.columns.splice(index, 1);\n      }\n\n      this.sortSettings.columns.push(sortedColumn);\n      this.sortSettings.columns = this.sortSettings.columns;\n    }\n\n    this.parent.dataBind();\n    this.lastSortedCol = this.columnName;\n  };\n  /**\n   * The function used to trigger onActionComplete\n   * @return {void}\n   * @hidden\n   */\n\n\n  Sort.prototype.onActionComplete = function (e) {\n    if (isBlazor() && !this.parent.isJsComponent) {\n      e.rows = null;\n    }\n\n    var args = !this.isRemove ? {\n      columnName: this.columnName,\n      direction: this.direction,\n      requestType: 'sorting',\n      type: events.actionComplete\n    } : {\n      requestType: 'sorting',\n      type: events.actionComplete\n    };\n    this.isRemove = false;\n    this.parent.trigger(events.actionComplete, extend(e, args));\n  };\n  /**\n   * Sorts a column with the given options.\n   * @param {string} columnName - Defines the column name to sort.\n   * @param {SortDirection} direction - Defines the direction of sorting field.\n   * @param {boolean} isMultiSort - Specifies whether the previously sorted columns are to be maintained.\n   * @return {void}\n   */\n\n\n  Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n    var gObj = this.parent;\n\n    if (this.parent.getColumnByField(columnName).allowSorting === false || this.parent.isContextMenuOpen()) {\n      this.parent.log('action_disabled_column', {\n        moduleName: this.getModuleName(),\n        columnName: columnName\n      });\n      return;\n    }\n\n    if (!gObj.allowMultiSorting) {\n      isMultiSort = gObj.allowMultiSorting;\n    }\n\n    if (this.isActionPrevent()) {\n      gObj.notify(events.preventBatch, {\n        instance: this,\n        handler: this.sortColumn,\n        arg1: columnName,\n        arg2: direction,\n        arg3: isMultiSort\n      });\n      return;\n    }\n\n    this.backupSettings();\n    this.columnName = columnName;\n    this.direction = direction;\n    this.isMultiSort = isMultiSort;\n    this.removeSortIcons();\n    var column = gObj.getColumnHeaderByField(columnName);\n    this.updateSortedCols(columnName, isMultiSort);\n    this.updateModel();\n  };\n\n  Sort.prototype.backupSettings = function () {\n    this.lastSortedCols = iterateExtend(this.sortSettings.columns);\n    this.lastCols = this.sortedColumns;\n  };\n\n  Sort.prototype.restoreSettings = function () {\n    this.isModelChanged = false;\n    this.isMultiSort = true;\n    this.parent.setProperties({\n      sortSettings: {\n        columns: this.lastSortedCols\n      }\n    }, true); //this.parent.sortSettings.columns =  this.lastSortedCols;        \n\n    this.sortedColumns = this.lastCols;\n    this.isModelChanged = true;\n  };\n\n  Sort.prototype.updateSortedCols = function (columnName, isMultiSort) {\n    if (!isMultiSort) {\n      if (this.parent.allowGrouping) {\n        for (var i = 0, len = this.sortedColumns.length; i < len; i++) {\n          if (this.parent.groupSettings.columns.indexOf(this.sortedColumns[i]) < 0) {\n            this.sortedColumns.splice(i, 1);\n            len--;\n            i--;\n          }\n        }\n      } else {\n        this.sortedColumns.splice(0, this.sortedColumns.length);\n      }\n    }\n\n    if (this.sortedColumns.indexOf(columnName) < 0) {\n      this.sortedColumns.push(columnName);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Sort.prototype.onPropertyChanged = function (e) {\n    if (e.module !== this.getModuleName()) {\n      return;\n    }\n\n    if (this.contentRefresh) {\n      var args = this.sortSettings.columns.length ? {\n        columnName: this.columnName,\n        direction: this.direction,\n        requestType: 'sorting',\n        type: events.actionBegin,\n        target: this.currentTarget,\n        cancel: false\n      } : {\n        requestType: 'sorting',\n        type: events.actionBegin,\n        cancel: false,\n        target: this.currentTarget\n      };\n      this.parent.notify(events.modelChanged, args);\n    }\n\n    this.refreshSortSettings();\n    this.removeSortIcons();\n    this.addSortIcons();\n  };\n\n  Sort.prototype.refreshSortSettings = function () {\n    this.sortedColumns.length = 0;\n    var sortColumns = this.sortSettings.columns;\n\n    for (var i = 0; i < sortColumns.length; i++) {\n      if (!sortColumns[i].isFromGroup) {\n        this.sortedColumns.push(sortColumns[i].field);\n      }\n    }\n  };\n  /**\n   * Clears all the sorted columns of the Grid.\n   * @return {void}\n   */\n\n\n  Sort.prototype.clearSorting = function () {\n    var cols = getActualPropFromColl(this.sortSettings.columns);\n\n    if (this.isActionPrevent()) {\n      this.parent.notify(events.preventBatch, {\n        instance: this,\n        handler: this.clearSorting\n      });\n      return;\n    }\n\n    for (var i = 0, len = cols.length; i < len; i++) {\n      this.removeSortColumn(cols[i].field);\n    }\n\n    if (isBlazor() && !this.parent.isJsComponent) {\n      this.sortSettings.columns = this.sortSettings.columns;\n    }\n  };\n\n  Sort.prototype.isActionPrevent = function () {\n    return isActionPrevent(this.parent);\n  };\n  /**\n   * Remove sorted column by field name.\n   * @param {string} field - Defines the column field name to remove sort.\n   * @return {void}\n   * @hidden\n   */\n\n\n  Sort.prototype.removeSortColumn = function (field) {\n    var gObj = this.parent;\n    var cols = this.sortSettings.columns;\n\n    if (cols.length === 0 && this.sortedColumns.indexOf(field) < 0) {\n      return;\n    }\n\n    if (this.isActionPrevent()) {\n      this.parent.notify(events.preventBatch, {\n        instance: this,\n        handler: this.removeSortColumn,\n        arg1: field\n      });\n      return;\n    }\n\n    this.backupSettings();\n    this.removeSortIcons();\n\n    for (var i = 0, len = cols.length; i < len; i++) {\n      if (cols[i].field === field) {\n        if (gObj.allowGrouping && gObj.groupSettings.columns.indexOf(cols[i].field) > -1) {\n          continue;\n        }\n\n        this.sortedColumns.splice(this.sortedColumns.indexOf(cols[i].field), 1);\n        cols.splice(i, 1);\n        this.isRemove = true;\n\n        if (this.isModelChanged) {\n          this.parent.notify(events.modelChanged, {\n            requestType: 'sorting',\n            type: events.actionBegin,\n            target: this.currentTarget\n          });\n        }\n\n        break;\n      }\n    }\n\n    this.addSortIcons();\n  };\n\n  Sort.prototype.getSortedColsIndexByField = function (field, sortedColumns) {\n    var cols = sortedColumns ? sortedColumns : this.sortSettings.columns;\n\n    for (var i = 0, len = cols.length; i < len; i++) {\n      if (cols[i].field === field) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n  /**\n   * For internal use only - Get the module name.\n   * @private\n   */\n\n\n  Sort.prototype.getModuleName = function () {\n    return 'sort';\n  };\n\n  Sort.prototype.initialEnd = function () {\n    this.parent.off(events.contentReady, this.initialEnd);\n    var isServerRendered = 'isServerRendered';\n\n    if (isBlazor() && this.parent[isServerRendered]) {\n      return;\n    }\n\n    if (this.parent.getColumns().length && this.sortSettings.columns.length) {\n      var gObj = this.parent;\n      this.contentRefresh = false;\n      this.isMultiSort = this.sortSettings.columns.length > 1;\n\n      for (var _i = 0, _a = gObj.sortSettings.columns.slice(); _i < _a.length; _i++) {\n        var col = _a[_i];\n\n        if (this.sortedColumns.indexOf(col.field) > -1) {\n          this.sortColumn(col.field, col.direction, true);\n        }\n      }\n\n      this.isMultiSort = false;\n      this.contentRefresh = true;\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Sort.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.on(events.contentReady, this.initialEnd, this);\n    this.parent.on(events.sortComplete, this.onActionComplete, this);\n    this.parent.on(events.inBoundModelChanged, this.onPropertyChanged, this);\n    this.parent.on(events.click, this.clickHandler, this);\n    this.parent.on(events.headerRefreshed, this.refreshSortIcons, this);\n    this.parent.on(events.keyPressed, this.keyPressed, this);\n    this.parent.on(events.cancelBegin, this.cancelBeginEvent, this);\n  };\n  /**\n   * @hidden\n   */\n\n\n  Sort.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off(events.sortComplete, this.onActionComplete);\n    this.parent.off(events.inBoundModelChanged, this.onPropertyChanged);\n    this.parent.off(events.click, this.clickHandler);\n    this.parent.off(events.headerRefreshed, this.refreshSortIcons);\n    this.parent.off(events.keyPressed, this.keyPressed);\n    this.parent.off(events.cancelBegin, this.cancelBeginEvent);\n  };\n  /**\n   * To destroy the sorting\n   * @return {void}\n   * @hidden\n   */\n\n\n  Sort.prototype.destroy = function () {\n    this.isModelChanged = false;\n    var gridElement = this.parent.element;\n\n    if (!gridElement || !gridElement.querySelector('.e-gridheader') && !gridElement.querySelector('.e-gridcontent')) {\n      return;\n    }\n\n    if (this.parent.element.querySelector('.e-gridpopup').querySelectorAll('.e-sortdirect').length) {\n      this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n    } // tslint:disable-next-line:no-any\n\n\n    if (!this.parent.refreshing) {\n      this.clearSorting();\n    }\n\n    this.isModelChanged = true;\n    this.removeEventListener();\n  };\n\n  Sort.prototype.cancelBeginEvent = function (e) {\n    if (e.requestType === 'sorting') {\n      this.restoreSettings();\n      this.refreshSortIcons();\n      this.isMultiSort = true;\n    }\n  };\n\n  Sort.prototype.clickHandler = function (e) {\n    var gObj = this.parent;\n    this.currentTarget = null;\n    this.popUpClickHandler(e);\n    var target = closest(e.target, '.e-headercell');\n\n    if (target && !e.target.classList.contains('e-grptogglebtn') && !target.classList.contains('e-resized') && !e.target.classList.contains('e-rhandler') && !e.target.classList.contains('e-columnmenu') && !e.target.classList.contains('e-filtermenudiv') && !parentsUntil(e.target, 'e-stackedheadercell') && !(gObj.allowSelection && gObj.selectionSettings.allowColumnSelection && e.target.classList.contains('e-headercell'))) {\n      var gObj_1 = this.parent;\n      var colObj = gObj_1.getColumnByUid(target.querySelector('.e-headercelldiv').getAttribute('e-mappinguid'));\n      var direction = !target.querySelectorAll('.e-ascending').length ? 'Ascending' : 'Descending';\n\n      if (colObj.type !== 'checkbox') {\n        this.initiateSort(target, e, colObj);\n\n        if (Browser.isDevice) {\n          this.showPopUp(e);\n        }\n      }\n    }\n\n    if (target) {\n      target.classList.remove('e-resized');\n    }\n\n    if (parentsUntil(e.target, 'e-excel-ascending') || parentsUntil(e.target, 'e-excel-descending')) {\n      var colUid = closest(e.target, '.e-filter-popup').getAttribute('uid');\n      var direction = isNullOrUndefined(parentsUntil(e.target, 'e-excel-descending')) ? 'Ascending' : 'Descending';\n      this.sortColumn(gObj.getColumnByUid(colUid).field, direction, false);\n    }\n  };\n\n  Sort.prototype.keyPressed = function (e) {\n    var ele = e.target;\n\n    if (!this.parent.isEdit && (e.action === 'enter' || e.action === 'ctrlEnter' || e.action === 'shiftEnter') && closest(ele, '.e-headercell')) {\n      var target = this.focus.getFocusedElement();\n\n      if (isNullOrUndefined(target) || !target.classList.contains('e-headercell') || !target.querySelector('.e-headercelldiv')) {\n        return;\n      }\n\n      var col = this.parent.getColumnByUid(target.querySelector('.e-headercelldiv').getAttribute('e-mappinguid'));\n      this.initiateSort(target, e, col);\n    }\n  };\n\n  Sort.prototype.initiateSort = function (target, e, column) {\n    var gObj = this.parent;\n    var field = column.field;\n    this.currentTarget = e.target;\n    var direction = !target.querySelectorAll('.e-ascending').length ? 'Ascending' : 'Descending';\n\n    if (e.shiftKey || this.sortSettings.allowUnsort && target.querySelectorAll('.e-descending').length && !(gObj.groupSettings.columns.indexOf(field) > -1)) {\n      this.removeSortColumn(field);\n\n      if (isBlazor() && !this.parent.isJsComponent) {\n        this.sortSettings.columns = this.sortSettings.columns;\n      }\n    } else {\n      this.sortColumn(field, direction, e.ctrlKey || this.enableSortMultiTouch || navigator.userAgent.indexOf('Mac OS') !== -1 && e.metaKey);\n    }\n  };\n\n  Sort.prototype.showPopUp = function (e) {\n    var target = closest(e.target, '.e-headercell');\n\n    if (this.parent.allowMultiSorting && (!isNullOrUndefined(target) || this.parent.isContextMenuOpen())) {\n      setCssInGridPopUp(this.parent.element.querySelector('.e-gridpopup'), e, 'e-sortdirect e-icons e-icon-sortdirect' + (this.sortedColumns.length > 1 ? ' e-spanclicked' : ''));\n    }\n  };\n\n  Sort.prototype.popUpClickHandler = function (e) {\n    var target = e.target;\n\n    if (closest(target, '.e-headercell') || e.target.classList.contains('e-rowcell') || closest(target, '.e-gridpopup')) {\n      if (target.classList.contains('e-sortdirect')) {\n        if (!target.classList.contains('e-spanclicked')) {\n          target.classList.add('e-spanclicked');\n          this.enableSortMultiTouch = true;\n        } else {\n          target.classList.remove('e-spanclicked');\n          this.enableSortMultiTouch = false;\n          this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        }\n      }\n    } else {\n      this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n    }\n  };\n\n  Sort.prototype.addSortIcons = function () {\n    var gObj = this.parent;\n    var header;\n    var filterElement;\n    var cols = this.sortSettings.columns;\n    var fieldNames = this.parent.getColumns().map(function (c) {\n      return c.field;\n    });\n\n    for (var i = 0, len = cols.length; i < len; i++) {\n      header = gObj.getColumnHeaderByField(cols[i].field);\n\n      if (fieldNames.indexOf(cols[i].field) === -1 || isNullOrUndefined(header)) {\n        continue;\n      }\n\n      this.aria.setSort(header, cols[i].direction);\n\n      if (this.isMultiSort && cols.length > 1) {\n        header.querySelector('.e-headercelldiv').insertBefore(this.parent.createElement('span', {\n          className: 'e-sortnumber',\n          innerHTML: (i + 1).toString()\n        }), header.querySelector('.e-headertext'));\n      }\n\n      filterElement = header.querySelector('.e-sortfilterdiv');\n\n      if (cols[i].direction === 'Ascending') {\n        classList(filterElement, ['e-ascending', 'e-icon-ascending'], []);\n      } else {\n        classList(filterElement, ['e-descending', 'e-icon-descending'], []);\n      }\n    }\n  };\n\n  Sort.prototype.removeSortIcons = function (position) {\n    var gObj = this.parent;\n    var header;\n    var cols = this.sortSettings.columns;\n    var fieldNames = this.parent.getColumns().map(function (c) {\n      return c.field;\n    });\n\n    for (var i = position ? position : 0, len = !isNullOrUndefined(position) ? position + 1 : cols.length; i < len; i++) {\n      header = gObj.getColumnHeaderByField(cols[i].field);\n\n      if (isNullOrUndefined(header) || gObj.allowGrouping && gObj.groupSettings.columns.indexOf(cols[i].field) > -1 && !header.querySelector('.e-sortfilterdiv')) {\n        continue;\n      }\n\n      if (fieldNames.indexOf(cols[i].field) === -1) {\n        continue;\n      }\n\n      this.aria.setSort(header, 'none');\n      classList(header.querySelector('.e-sortfilterdiv'), [], ['e-descending', 'e-icon-descending', 'e-ascending', 'e-icon-ascending']);\n\n      if (header.querySelector('.e-sortnumber')) {\n        header.querySelector('.e-headercelldiv').removeChild(header.querySelector('.e-sortnumber'));\n      }\n    }\n  };\n\n  Sort.prototype.getSortColumnFromField = function (field) {\n    for (var i = 0, len = this.sortSettings.columns.length; i < len; i++) {\n      if (this.sortSettings.columns[i].field === field) {\n        return this.sortSettings.columns[i];\n      }\n    }\n\n    return false;\n  };\n\n  Sort.prototype.updateAriaAttr = function () {\n    var fieldNames = this.parent.getColumns().map(function (c) {\n      return c.field;\n    });\n\n    for (var _i = 0, _a = this.sortedColumns; _i < _a.length; _i++) {\n      var col = _a[_i];\n\n      if (fieldNames.indexOf(col) === -1) {\n        continue;\n      }\n\n      var header = this.parent.getColumnHeaderByField(col);\n      this.aria.setSort(header, this.getSortColumnFromField(col).direction);\n    }\n  };\n\n  Sort.prototype.refreshSortIcons = function (params) {\n    if (params === void 0) {\n      params = {\n        args: {\n          isFrozen: false\n        }\n      };\n    }\n\n    if (!params.args.isFrozen) {\n      this.removeSortIcons();\n      this.isMultiSort = true;\n      this.removeSortIcons();\n      this.addSortIcons();\n      this.isMultiSort = false;\n      this.updateAriaAttr();\n    }\n  };\n\n  return Sort;\n}();\n\nexport { Sort };","map":{"version":3,"sources":["C:/Users/appsk/Documents/Projects/PredictiveMaintenance/React PDM/env/frontend/node_modules/@syncfusion/ej2-grids/src/grid/actions/sort.js"],"names":["Browser","extend","isNullOrUndefined","isBlazor","closest","classList","setCssInGridPopUp","getActualPropFromColl","isActionPrevent","iterateExtend","parentsUntil","events","AriaService","Sort","parent","sortSettings","sortedColumns","locator","contentRefresh","isModelChanged","aria","currentTarget","focus","getService","addEventListener","prototype","updateModel","sortedColumn","field","columnName","direction","index","gCols","groupSettings","columns","flag","isMultiSort","length","sortedCols","i","len","getSortedColsIndexByField","push","sCol","getSortColumnFromField","isFromGroup","splice","dataBind","lastSortedCol","onActionComplete","e","isJsComponent","rows","args","isRemove","requestType","type","actionComplete","trigger","sortColumn","gObj","getColumnByField","allowSorting","isContextMenuOpen","log","moduleName","getModuleName","allowMultiSorting","notify","preventBatch","instance","handler","arg1","arg2","arg3","backupSettings","removeSortIcons","column","getColumnHeaderByField","updateSortedCols","lastSortedCols","lastCols","restoreSettings","setProperties","allowGrouping","indexOf","onPropertyChanged","module","actionBegin","target","cancel","modelChanged","refreshSortSettings","addSortIcons","sortColumns","clearSorting","cols","removeSortColumn","initialEnd","off","contentReady","isServerRendered","getColumns","_i","_a","slice","col","isDestroyed","on","sortComplete","inBoundModelChanged","click","clickHandler","headerRefreshed","refreshSortIcons","keyPressed","cancelBegin","cancelBeginEvent","removeEventListener","destroy","gridElement","element","querySelector","querySelectorAll","style","display","refreshing","popUpClickHandler","contains","allowSelection","selectionSettings","allowColumnSelection","gObj_1","colObj","getColumnByUid","getAttribute","initiateSort","isDevice","showPopUp","remove","colUid","ele","isEdit","action","getFocusedElement","shiftKey","allowUnsort","ctrlKey","enableSortMultiTouch","navigator","userAgent","metaKey","add","header","filterElement","fieldNames","map","c","setSort","insertBefore","createElement","className","innerHTML","toString","position","removeChild","updateAriaAttr","params","isFrozen"],"mappings":"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","sourcesContent":["import { Browser } from '@syncfusion/ej2-base';\nimport { extend, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { closest, classList } from '@syncfusion/ej2-base';\nimport { setCssInGridPopUp, getActualPropFromColl, isActionPrevent, iterateExtend, parentsUntil } from '../base/util';\nimport * as events from '../base/constant';\nimport { AriaService } from '../services/aria-service';\n/**\n *\n * The `Sort` module is used to handle sorting action.\n */\nvar Sort = /** @class */ (function () {\n    /**\n     * Constructor for Grid sorting module\n     * @hidden\n     */\n    function Sort(parent, sortSettings, sortedColumns, locator) {\n        this.contentRefresh = true;\n        this.isModelChanged = true;\n        this.aria = new AriaService();\n        this.currentTarget = null;\n        this.parent = parent;\n        this.sortSettings = sortSettings;\n        this.sortedColumns = sortedColumns;\n        this.focus = locator.getService('focus');\n        this.addEventListener();\n    }\n    /**\n     * The function used to update sortSettings\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        var sortedColumn = { field: this.columnName, direction: this.direction };\n        var index;\n        var gCols = this.parent.groupSettings.columns;\n        var flag = false;\n        if (!this.isMultiSort) {\n            if (!gCols.length) {\n                this.sortSettings.columns = [sortedColumn];\n            }\n            else {\n                var sortedCols = [];\n                for (var i = 0, len = gCols.length; i < len; i++) {\n                    index = this.getSortedColsIndexByField(gCols[i], sortedCols);\n                    if (this.columnName === gCols[i]) {\n                        flag = true;\n                        sortedCols.push(sortedColumn);\n                    }\n                    else {\n                        var sCol = this.getSortColumnFromField(gCols[i]);\n                        sortedCols.push({ field: sCol.field, direction: sCol.direction, isFromGroup: sCol.isFromGroup });\n                    }\n                }\n                if (!flag) {\n                    sortedCols.push(sortedColumn);\n                }\n                this.sortSettings.columns = sortedCols;\n            }\n        }\n        else {\n            index = this.getSortedColsIndexByField(this.columnName);\n            if (index > -1) {\n                this.sortSettings.columns.splice(index, 1);\n            }\n            this.sortSettings.columns.push(sortedColumn);\n            this.sortSettings.columns = this.sortSettings.columns;\n        }\n        this.parent.dataBind();\n        this.lastSortedCol = this.columnName;\n    };\n    /**\n     * The function used to trigger onActionComplete\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.onActionComplete = function (e) {\n        if (isBlazor() && !this.parent.isJsComponent) {\n            e.rows = null;\n        }\n        var args = !this.isRemove ? {\n            columnName: this.columnName, direction: this.direction, requestType: 'sorting', type: events.actionComplete\n        } : { requestType: 'sorting', type: events.actionComplete };\n        this.isRemove = false;\n        this.parent.trigger(events.actionComplete, extend(e, args));\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to sort.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previously sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        var gObj = this.parent;\n        if (this.parent.getColumnByField(columnName).allowSorting === false || this.parent.isContextMenuOpen()) {\n            this.parent.log('action_disabled_column', { moduleName: this.getModuleName(), columnName: columnName });\n            return;\n        }\n        if (!gObj.allowMultiSorting) {\n            isMultiSort = gObj.allowMultiSorting;\n        }\n        if (this.isActionPrevent()) {\n            gObj.notify(events.preventBatch, {\n                instance: this, handler: this.sortColumn,\n                arg1: columnName, arg2: direction, arg3: isMultiSort\n            });\n            return;\n        }\n        this.backupSettings();\n        this.columnName = columnName;\n        this.direction = direction;\n        this.isMultiSort = isMultiSort;\n        this.removeSortIcons();\n        var column = gObj.getColumnHeaderByField(columnName);\n        this.updateSortedCols(columnName, isMultiSort);\n        this.updateModel();\n    };\n    Sort.prototype.backupSettings = function () {\n        this.lastSortedCols = iterateExtend(this.sortSettings.columns);\n        this.lastCols = this.sortedColumns;\n    };\n    Sort.prototype.restoreSettings = function () {\n        this.isModelChanged = false;\n        this.isMultiSort = true;\n        this.parent.setProperties({ sortSettings: { columns: this.lastSortedCols } }, true);\n        //this.parent.sortSettings.columns =  this.lastSortedCols;        \n        this.sortedColumns = this.lastCols;\n        this.isModelChanged = true;\n    };\n    Sort.prototype.updateSortedCols = function (columnName, isMultiSort) {\n        if (!isMultiSort) {\n            if (this.parent.allowGrouping) {\n                for (var i = 0, len = this.sortedColumns.length; i < len; i++) {\n                    if (this.parent.groupSettings.columns.indexOf(this.sortedColumns[i]) < 0) {\n                        this.sortedColumns.splice(i, 1);\n                        len--;\n                        i--;\n                    }\n                }\n            }\n            else {\n                this.sortedColumns.splice(0, this.sortedColumns.length);\n            }\n        }\n        if (this.sortedColumns.indexOf(columnName) < 0) {\n            this.sortedColumns.push(columnName);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.onPropertyChanged = function (e) {\n        if (e.module !== this.getModuleName()) {\n            return;\n        }\n        if (this.contentRefresh) {\n            var args = this.sortSettings.columns.length ? {\n                columnName: this.columnName, direction: this.direction, requestType: 'sorting',\n                type: events.actionBegin, target: this.currentTarget, cancel: false\n            } : {\n                requestType: 'sorting', type: events.actionBegin, cancel: false,\n                target: this.currentTarget\n            };\n            this.parent.notify(events.modelChanged, args);\n        }\n        this.refreshSortSettings();\n        this.removeSortIcons();\n        this.addSortIcons();\n    };\n    Sort.prototype.refreshSortSettings = function () {\n        this.sortedColumns.length = 0;\n        var sortColumns = this.sortSettings.columns;\n        for (var i = 0; i < sortColumns.length; i++) {\n            if (!sortColumns[i].isFromGroup) {\n                this.sortedColumns.push(sortColumns[i].field);\n            }\n        }\n    };\n    /**\n     * Clears all the sorted columns of the Grid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        var cols = getActualPropFromColl(this.sortSettings.columns);\n        if (this.isActionPrevent()) {\n            this.parent.notify(events.preventBatch, { instance: this, handler: this.clearSorting });\n            return;\n        }\n        for (var i = 0, len = cols.length; i < len; i++) {\n            this.removeSortColumn(cols[i].field);\n        }\n        if (isBlazor() && !this.parent.isJsComponent) {\n            this.sortSettings.columns = this.sortSettings.columns;\n        }\n    };\n    Sort.prototype.isActionPrevent = function () {\n        return isActionPrevent(this.parent);\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.removeSortColumn = function (field) {\n        var gObj = this.parent;\n        var cols = this.sortSettings.columns;\n        if (cols.length === 0 && this.sortedColumns.indexOf(field) < 0) {\n            return;\n        }\n        if (this.isActionPrevent()) {\n            this.parent.notify(events.preventBatch, { instance: this, handler: this.removeSortColumn, arg1: field });\n            return;\n        }\n        this.backupSettings();\n        this.removeSortIcons();\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].field === field) {\n                if (gObj.allowGrouping && gObj.groupSettings.columns.indexOf(cols[i].field) > -1) {\n                    continue;\n                }\n                this.sortedColumns.splice(this.sortedColumns.indexOf(cols[i].field), 1);\n                cols.splice(i, 1);\n                this.isRemove = true;\n                if (this.isModelChanged) {\n                    this.parent.notify(events.modelChanged, {\n                        requestType: 'sorting', type: events.actionBegin, target: this.currentTarget\n                    });\n                }\n                break;\n            }\n        }\n        this.addSortIcons();\n    };\n    Sort.prototype.getSortedColsIndexByField = function (field, sortedColumns) {\n        var cols = sortedColumns ? sortedColumns : this.sortSettings.columns;\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].field === field) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    Sort.prototype.initialEnd = function () {\n        this.parent.off(events.contentReady, this.initialEnd);\n        var isServerRendered = 'isServerRendered';\n        if (isBlazor() && this.parent[isServerRendered]) {\n            return;\n        }\n        if (this.parent.getColumns().length && this.sortSettings.columns.length) {\n            var gObj = this.parent;\n            this.contentRefresh = false;\n            this.isMultiSort = this.sortSettings.columns.length > 1;\n            for (var _i = 0, _a = gObj.sortSettings.columns.slice(); _i < _a.length; _i++) {\n                var col = _a[_i];\n                if (this.sortedColumns.indexOf(col.field) > -1) {\n                    this.sortColumn(col.field, col.direction, true);\n                }\n            }\n            this.isMultiSort = false;\n            this.contentRefresh = true;\n        }\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.contentReady, this.initialEnd, this);\n        this.parent.on(events.sortComplete, this.onActionComplete, this);\n        this.parent.on(events.inBoundModelChanged, this.onPropertyChanged, this);\n        this.parent.on(events.click, this.clickHandler, this);\n        this.parent.on(events.headerRefreshed, this.refreshSortIcons, this);\n        this.parent.on(events.keyPressed, this.keyPressed, this);\n        this.parent.on(events.cancelBegin, this.cancelBeginEvent, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.sortComplete, this.onActionComplete);\n        this.parent.off(events.inBoundModelChanged, this.onPropertyChanged);\n        this.parent.off(events.click, this.clickHandler);\n        this.parent.off(events.headerRefreshed, this.refreshSortIcons);\n        this.parent.off(events.keyPressed, this.keyPressed);\n        this.parent.off(events.cancelBegin, this.cancelBeginEvent);\n    };\n    /**\n     * To destroy the sorting\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.destroy = function () {\n        this.isModelChanged = false;\n        var gridElement = this.parent.element;\n        if (!gridElement || (!gridElement.querySelector('.e-gridheader') && !gridElement.querySelector('.e-gridcontent'))) {\n            return;\n        }\n        if (this.parent.element.querySelector('.e-gridpopup').querySelectorAll('.e-sortdirect').length) {\n            this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        }\n        // tslint:disable-next-line:no-any\n        if (!this.parent.refreshing) {\n            this.clearSorting();\n        }\n        this.isModelChanged = true;\n        this.removeEventListener();\n    };\n    Sort.prototype.cancelBeginEvent = function (e) {\n        if (e.requestType === 'sorting') {\n            this.restoreSettings();\n            this.refreshSortIcons();\n            this.isMultiSort = true;\n        }\n    };\n    Sort.prototype.clickHandler = function (e) {\n        var gObj = this.parent;\n        this.currentTarget = null;\n        this.popUpClickHandler(e);\n        var target = closest(e.target, '.e-headercell');\n        if (target && !e.target.classList.contains('e-grptogglebtn') &&\n            !(target.classList.contains('e-resized')) &&\n            !e.target.classList.contains('e-rhandler') &&\n            !e.target.classList.contains('e-columnmenu') &&\n            !e.target.classList.contains('e-filtermenudiv') &&\n            !parentsUntil(e.target, 'e-stackedheadercell') &&\n            !(gObj.allowSelection && gObj.selectionSettings.allowColumnSelection &&\n                e.target.classList.contains('e-headercell'))) {\n            var gObj_1 = this.parent;\n            var colObj = gObj_1.getColumnByUid(target.querySelector('.e-headercelldiv').getAttribute('e-mappinguid'));\n            var direction = !target.querySelectorAll('.e-ascending').length ? 'Ascending' :\n                'Descending';\n            if (colObj.type !== 'checkbox') {\n                this.initiateSort(target, e, colObj);\n                if (Browser.isDevice) {\n                    this.showPopUp(e);\n                }\n            }\n        }\n        if (target) {\n            target.classList.remove('e-resized');\n        }\n        if (parentsUntil(e.target, 'e-excel-ascending') ||\n            parentsUntil(e.target, 'e-excel-descending')) {\n            var colUid = closest(e.target, '.e-filter-popup').getAttribute('uid');\n            var direction = isNullOrUndefined(parentsUntil(e.target, 'e-excel-descending')) ?\n                'Ascending' : 'Descending';\n            this.sortColumn(gObj.getColumnByUid(colUid).field, direction, false);\n        }\n    };\n    Sort.prototype.keyPressed = function (e) {\n        var ele = e.target;\n        if (!this.parent.isEdit && (e.action === 'enter' || e.action === 'ctrlEnter' || e.action === 'shiftEnter')\n            && closest(ele, '.e-headercell')) {\n            var target = this.focus.getFocusedElement();\n            if (isNullOrUndefined(target) || !target.classList.contains('e-headercell')\n                || !target.querySelector('.e-headercelldiv')) {\n                return;\n            }\n            var col = this.parent.getColumnByUid(target.querySelector('.e-headercelldiv').getAttribute('e-mappinguid'));\n            this.initiateSort(target, e, col);\n        }\n    };\n    Sort.prototype.initiateSort = function (target, e, column) {\n        var gObj = this.parent;\n        var field = column.field;\n        this.currentTarget = e.target;\n        var direction = !target.querySelectorAll('.e-ascending').length ? 'Ascending' :\n            'Descending';\n        if (e.shiftKey || (this.sortSettings.allowUnsort && target.querySelectorAll('.e-descending').length)\n            && !(gObj.groupSettings.columns.indexOf(field) > -1)) {\n            this.removeSortColumn(field);\n            if (isBlazor() && !this.parent.isJsComponent) {\n                this.sortSettings.columns = this.sortSettings.columns;\n            }\n        }\n        else {\n            this.sortColumn(field, direction, e.ctrlKey || this.enableSortMultiTouch ||\n                (navigator.userAgent.indexOf('Mac OS') !== -1 && e.metaKey));\n        }\n    };\n    Sort.prototype.showPopUp = function (e) {\n        var target = closest(e.target, '.e-headercell');\n        if (this.parent.allowMultiSorting && (!isNullOrUndefined(target) || this.parent.isContextMenuOpen())) {\n            setCssInGridPopUp(this.parent.element.querySelector('.e-gridpopup'), e, 'e-sortdirect e-icons e-icon-sortdirect' + (this.sortedColumns.length > 1 ? ' e-spanclicked' : ''));\n        }\n    };\n    Sort.prototype.popUpClickHandler = function (e) {\n        var target = e.target;\n        if (closest(target, '.e-headercell') || e.target.classList.contains('e-rowcell') ||\n            closest(target, '.e-gridpopup')) {\n            if (target.classList.contains('e-sortdirect')) {\n                if (!target.classList.contains('e-spanclicked')) {\n                    target.classList.add('e-spanclicked');\n                    this.enableSortMultiTouch = true;\n                }\n                else {\n                    target.classList.remove('e-spanclicked');\n                    this.enableSortMultiTouch = false;\n                    this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n                }\n            }\n        }\n        else {\n            this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        }\n    };\n    Sort.prototype.addSortIcons = function () {\n        var gObj = this.parent;\n        var header;\n        var filterElement;\n        var cols = this.sortSettings.columns;\n        var fieldNames = this.parent.getColumns().map(function (c) { return c.field; });\n        for (var i = 0, len = cols.length; i < len; i++) {\n            header = gObj.getColumnHeaderByField(cols[i].field);\n            if (fieldNames.indexOf(cols[i].field) === -1 || isNullOrUndefined(header)) {\n                continue;\n            }\n            this.aria.setSort(header, cols[i].direction);\n            if (this.isMultiSort && cols.length > 1) {\n                header.querySelector('.e-headercelldiv').insertBefore(this.parent.createElement('span', { className: 'e-sortnumber', innerHTML: (i + 1).toString() }), header.querySelector('.e-headertext'));\n            }\n            filterElement = header.querySelector('.e-sortfilterdiv');\n            if (cols[i].direction === 'Ascending') {\n                classList(filterElement, ['e-ascending', 'e-icon-ascending'], []);\n            }\n            else {\n                classList(filterElement, ['e-descending', 'e-icon-descending'], []);\n            }\n        }\n    };\n    Sort.prototype.removeSortIcons = function (position) {\n        var gObj = this.parent;\n        var header;\n        var cols = this.sortSettings.columns;\n        var fieldNames = this.parent.getColumns().map(function (c) { return c.field; });\n        for (var i = position ? position : 0, len = !isNullOrUndefined(position) ? position + 1 : cols.length; i < len; i++) {\n            header = gObj.getColumnHeaderByField(cols[i].field);\n            if (isNullOrUndefined(header) || (gObj.allowGrouping && gObj.groupSettings.columns.indexOf(cols[i].field) > -1 &&\n                !header.querySelector('.e-sortfilterdiv'))) {\n                continue;\n            }\n            if (fieldNames.indexOf(cols[i].field) === -1) {\n                continue;\n            }\n            this.aria.setSort(header, 'none');\n            classList(header.querySelector('.e-sortfilterdiv'), [], ['e-descending', 'e-icon-descending', 'e-ascending', 'e-icon-ascending']);\n            if (header.querySelector('.e-sortnumber')) {\n                header.querySelector('.e-headercelldiv').removeChild(header.querySelector('.e-sortnumber'));\n            }\n        }\n    };\n    Sort.prototype.getSortColumnFromField = function (field) {\n        for (var i = 0, len = this.sortSettings.columns.length; i < len; i++) {\n            if (this.sortSettings.columns[i].field === field) {\n                return this.sortSettings.columns[i];\n            }\n        }\n        return false;\n    };\n    Sort.prototype.updateAriaAttr = function () {\n        var fieldNames = this.parent.getColumns().map(function (c) { return c.field; });\n        for (var _i = 0, _a = this.sortedColumns; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (fieldNames.indexOf(col) === -1) {\n                continue;\n            }\n            var header = this.parent.getColumnHeaderByField(col);\n            this.aria.setSort(header, this.getSortColumnFromField(col).direction);\n        }\n    };\n    Sort.prototype.refreshSortIcons = function (params) {\n        if (params === void 0) { params = { args: { isFrozen: false } }; }\n        if (!params.args.isFrozen) {\n            this.removeSortIcons();\n            this.isMultiSort = true;\n            this.removeSortIcons();\n            this.addSortIcons();\n            this.isMultiSort = false;\n            this.updateAriaAttr();\n        }\n    };\n    return Sort;\n}());\nexport { Sort };\n"]},"metadata":{},"sourceType":"module"}