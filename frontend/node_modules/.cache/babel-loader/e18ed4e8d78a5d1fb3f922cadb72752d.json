{"ast":null,"code":"import { closest, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { click, keyPressed, commandClick, initialEnd } from '../base/constant';\nimport { CellType } from '../base/enum';\nimport { CommandColumnRenderer } from '../renderer/command-column-renderer';\nimport { getUid } from '../base/util';\n/**\n * `CommandColumn` used to handle the command column actions.\n * @hidden\n */\n\nvar CommandColumn =\n/** @class */\nfunction () {\n  function CommandColumn(parent, locator) {\n    this.parent = parent;\n    this.locator = locator;\n    this.initiateRender();\n    this.addEventListener();\n  }\n\n  CommandColumn.prototype.initiateRender = function () {\n    var cellFac = this.locator.getService('cellRendererFactory');\n    cellFac.addCellRenderer(CellType.CommandColumn, new CommandColumnRenderer(this.parent, this.locator));\n  };\n\n  CommandColumn.prototype.commandClickHandler = function (e) {\n    var gObj = this.parent;\n    var gID = gObj.element.id;\n    var target = closest(e.target, 'button');\n\n    if (!target || !closest(e.target, '.e-unboundcell')) {\n      return;\n    }\n\n    var buttonObj = target.ej2_instances[0];\n    var type = buttonObj.commandType;\n    var uid = target.getAttribute('data-uid');\n    var commandColumn;\n    var row = gObj.getRowObjectFromUID(closest(target, '.e-row').getAttribute('data-uid'));\n    var cols = this.parent.columnModel;\n\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[i].commands) {\n        var commandCols = cols[i].commands;\n\n        for (var j = 0; j < commandCols.length; j++) {\n          var idInString = 'uid';\n          var typeInString = 'type';\n\n          if (isBlazor() && !gObj.isJsComponent && commandCols[j][idInString] === uid) {\n            commandColumn = commandCols[j];\n            type = commandCols[j][typeInString];\n          } else if (commandCols[j][idInString] === uid && commandCols[j][typeInString] === type) {\n            commandColumn = commandCols[j];\n          }\n        }\n      }\n    }\n\n    var args = {\n      cancel: false,\n      target: target,\n      commandColumn: commandColumn,\n      rowData: isNullOrUndefined(row) ? undefined : row.data\n    };\n    this.parent.trigger(commandClick, args, function (commandclickargs) {\n      if (buttonObj.disabled || !gObj.editModule || commandclickargs.cancel) {\n        return;\n      }\n\n      switch (type) {\n        case 'Edit':\n          gObj.editModule.endEdit();\n          gObj.editModule.startEdit(closest(target, 'tr'));\n          break;\n\n        case 'Cancel':\n          gObj.editModule.closeEdit();\n          break;\n\n        case 'Save':\n          gObj.editModule.endEdit();\n          break;\n\n        case 'Delete':\n          if (gObj.editSettings.mode !== 'Batch') {\n            gObj.editModule.endEdit();\n          }\n\n          gObj.commandDelIndex = parseInt(closest(target, 'tr').getAttribute('aria-rowindex'), 10);\n          gObj.clearSelection(); //for toogle issue when dbl click\n\n          gObj.selectRow(gObj.commandDelIndex, false);\n          gObj.editModule.deleteRecord();\n          gObj.commandDelIndex = undefined;\n          break;\n      }\n    });\n  };\n  /**\n   * For internal use only - Get the module name.\n   */\n\n\n  CommandColumn.prototype.getModuleName = function () {\n    return 'commandColumn';\n  };\n  /**\n   * To destroy CommandColumn.\n   * @method destroy\n   * @return {void}\n   */\n\n\n  CommandColumn.prototype.destroy = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.removeEventListener();\n  };\n\n  CommandColumn.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off(click, this.commandClickHandler);\n    this.parent.off(keyPressed, this.keyPressHandler);\n    this.parent.off(initialEnd, this.load);\n  };\n\n  CommandColumn.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.on(click, this.commandClickHandler, this);\n    this.parent.on(keyPressed, this.keyPressHandler, this);\n    this.parent.on(initialEnd, this.load, this);\n  };\n\n  CommandColumn.prototype.keyPressHandler = function (e) {\n    if (e.action === 'enter' && closest(e.target, '.e-unboundcelldiv')) {\n      this.commandClickHandler(e);\n      e.preventDefault();\n    }\n  };\n\n  CommandColumn.prototype.load = function () {\n    if (isBlazor() && !this.parent.isJsComponent) {\n      return;\n    }\n\n    var uid = 'uid';\n    var col = this.parent.columnModel;\n\n    for (var i = 0; i < col.length; i++) {\n      if (col[i].commands) {\n        var commandCol = col[i].commands;\n\n        for (var j = 0; j < commandCol.length; j++) {\n          commandCol[j][uid] = getUid('gridcommand');\n        }\n      }\n    }\n  };\n\n  return CommandColumn;\n}();\n\nexport { CommandColumn };","map":{"version":3,"sources":["C:/Users/appsk/Documents/Projects/PredictiveMaintenance/React PDM/env/frontend/node_modules/@syncfusion/ej2-grids/src/grid/actions/command-column.js"],"names":["closest","isNullOrUndefined","isBlazor","click","keyPressed","commandClick","initialEnd","CellType","CommandColumnRenderer","getUid","CommandColumn","parent","locator","initiateRender","addEventListener","prototype","cellFac","getService","addCellRenderer","commandClickHandler","e","gObj","gID","element","id","target","buttonObj","ej2_instances","type","commandType","uid","getAttribute","commandColumn","row","getRowObjectFromUID","cols","columnModel","i","length","commands","commandCols","j","idInString","typeInString","isJsComponent","args","cancel","rowData","undefined","data","trigger","commandclickargs","disabled","editModule","endEdit","startEdit","closeEdit","editSettings","mode","commandDelIndex","parseInt","clearSelection","selectRow","deleteRecord","getModuleName","destroy","isDestroyed","removeEventListener","off","keyPressHandler","load","on","action","preventDefault","col","commandCol"],"mappings":"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","sourcesContent":["import { closest, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { click, keyPressed, commandClick, initialEnd } from '../base/constant';\nimport { CellType } from '../base/enum';\nimport { CommandColumnRenderer } from '../renderer/command-column-renderer';\nimport { getUid } from '../base/util';\n/**\n * `CommandColumn` used to handle the command column actions.\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent, locator) {\n        this.parent = parent;\n        this.locator = locator;\n        this.initiateRender();\n        this.addEventListener();\n    }\n    CommandColumn.prototype.initiateRender = function () {\n        var cellFac = this.locator.getService('cellRendererFactory');\n        cellFac.addCellRenderer(CellType.CommandColumn, new CommandColumnRenderer(this.parent, this.locator));\n    };\n    CommandColumn.prototype.commandClickHandler = function (e) {\n        var gObj = this.parent;\n        var gID = gObj.element.id;\n        var target = closest(e.target, 'button');\n        if (!target || !closest(e.target, '.e-unboundcell')) {\n            return;\n        }\n        var buttonObj = target.ej2_instances[0];\n        var type = buttonObj.commandType;\n        var uid = target.getAttribute('data-uid');\n        var commandColumn;\n        var row = gObj.getRowObjectFromUID(closest(target, '.e-row').getAttribute('data-uid'));\n        var cols = this.parent.columnModel;\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[i].commands) {\n                var commandCols = cols[i].commands;\n                for (var j = 0; j < commandCols.length; j++) {\n                    var idInString = 'uid';\n                    var typeInString = 'type';\n                    if (isBlazor() && !gObj.isJsComponent && commandCols[j][idInString] === uid) {\n                        commandColumn = commandCols[j];\n                        type = commandCols[j][typeInString];\n                    }\n                    else if (commandCols[j][idInString] === uid && commandCols[j][typeInString] === type) {\n                        commandColumn = commandCols[j];\n                    }\n                }\n            }\n        }\n        var args = {\n            cancel: false,\n            target: target,\n            commandColumn: commandColumn,\n            rowData: isNullOrUndefined(row) ? undefined : row.data\n        };\n        this.parent.trigger(commandClick, args, function (commandclickargs) {\n            if (buttonObj.disabled || !gObj.editModule || commandclickargs.cancel) {\n                return;\n            }\n            switch (type) {\n                case 'Edit':\n                    gObj.editModule.endEdit();\n                    gObj.editModule.startEdit(closest(target, 'tr'));\n                    break;\n                case 'Cancel':\n                    gObj.editModule.closeEdit();\n                    break;\n                case 'Save':\n                    gObj.editModule.endEdit();\n                    break;\n                case 'Delete':\n                    if (gObj.editSettings.mode !== 'Batch') {\n                        gObj.editModule.endEdit();\n                    }\n                    gObj.commandDelIndex = parseInt(closest(target, 'tr').getAttribute('aria-rowindex'), 10);\n                    gObj.clearSelection();\n                    //for toogle issue when dbl click\n                    gObj.selectRow(gObj.commandDelIndex, false);\n                    gObj.editModule.deleteRecord();\n                    gObj.commandDelIndex = undefined;\n                    break;\n            }\n        });\n    };\n    /**\n     * For internal use only - Get the module name.\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * To destroy CommandColumn.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.removeEventListener();\n    };\n    CommandColumn.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(click, this.commandClickHandler);\n        this.parent.off(keyPressed, this.keyPressHandler);\n        this.parent.off(initialEnd, this.load);\n    };\n    CommandColumn.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(click, this.commandClickHandler, this);\n        this.parent.on(keyPressed, this.keyPressHandler, this);\n        this.parent.on(initialEnd, this.load, this);\n    };\n    CommandColumn.prototype.keyPressHandler = function (e) {\n        if (e.action === 'enter' && closest(e.target, '.e-unboundcelldiv')) {\n            this.commandClickHandler(e);\n            e.preventDefault();\n        }\n    };\n    CommandColumn.prototype.load = function () {\n        if (isBlazor() && !this.parent.isJsComponent) {\n            return;\n        }\n        var uid = 'uid';\n        var col = this.parent.columnModel;\n        for (var i = 0; i < col.length; i++) {\n            if (col[i].commands) {\n                var commandCol = col[i].commands;\n                for (var j = 0; j < commandCol.length; j++) {\n                    commandCol[j][uid] = getUid('gridcommand');\n                }\n            }\n        }\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n"]},"metadata":{},"sourceType":"module"}